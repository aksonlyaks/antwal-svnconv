<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="30:uAgriC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40ffd3e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40381188"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40381188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40457418"/></to>
    </wire>
    <wire loc="31:uAgriC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x40ffb0a0"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x4049be50"/></to>
    </wire>
    <wire loc="34:DozerC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x4049be50"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x4050d0f0"/></to>
    </wire>
    <wire loc="32:uAgriC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40ffb450"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x404a4010"/></to>
    </wire>
    <wire loc="102:DozerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x404a4010"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40f43a90"/></to>
    </wire>
    <wire loc="33:uAgriC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ffb888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire loc="36:uAgriC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40ffd7c8"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40fcf418"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40fcf418"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x41022260"/></to>
    </wire>
    <wire loc="37:uAgriC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40ffdc10"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40fcf860"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40fcf860"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x410226c8"/></to>
    </wire>
    <wire loc="38:uAgriC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40ff6418"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40fcfe58"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40fcfe58"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x41022ce0"/></to>
    </wire>
    <wire loc="41:uAgriC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40ff6e20"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x410258a0"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x410258a0"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x4105b780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418d10a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418939b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4182c030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417d3350"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40e108d8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40e0c3e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40db5398"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ce1010"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bdbb48"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bc5da0"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bd1288"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b07040"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a84928"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a06758"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406aa010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41660120"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d9168"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40651010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404577b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40358118"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40457d78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4037cef0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4037cef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40388168"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40474240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410bc440"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e9da30"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40785db8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40463a88"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40388950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404636d8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c4b7c0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4038bba0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40394218"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403def28"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40394c08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403b1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40430bd0"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f6010"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403af2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41558228"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403b44b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41570c08"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41464010"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403b50a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415737f8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41485de8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414e0d70"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40400988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40400988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f1010"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415520b0"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40399670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403df250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403df250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4146da88"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4147dc08"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414dbc08"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403a8a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ec010"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403b22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156ba88"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403b9830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40440d00"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403a7ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40404790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40404790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4155cde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403def28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414689e8"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403a1b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41478a88"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403ba3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40439228"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414e3938"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403ab750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f59e8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41556c08"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403b4ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156e6c0"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4039d2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414629e8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414807f8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414de7f8"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403a9670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f09e8"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40409170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40409170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41551a88"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4146b538"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4039a670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4147b6c0"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d86c0"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403b2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41569538"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f8538"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403b08e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40403170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40403170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4155a7f8"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403b5a98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41571228"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403b82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4043d260"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41466538"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414c2538"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403ac670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40406518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40406518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41578de8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414e13b0"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403aa210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40400030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40400030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f3538"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415546c0"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403b38e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156c0b0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4146e080"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4147e228"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414dc228"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ee538"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403badc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40437788"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403a74b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4155d418"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d60b0"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40398a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41469010"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403a1120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414790b0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40358950"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4035d5f0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40366010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4036a370"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406ea7b8"/></to>
    </wire>
    <wire loc="35:DataManagerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40f43a90"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40f692f8"/></to>
    </wire>
    <wire loc="35:DozerC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404aba30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4057cca0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4057cca0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405922e8"/></to>
    </wire>
    <wire loc="36:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404e33b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058f060"/></to>
    </wire>
    <wire loc="45:DozerC.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x404ef3c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c49168"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c49168"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:DozerC.nc">
      <from><interface-ref name="BeaconWaitTimer" scoped="" ref="0x404ee778"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c45010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c45010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:DozerC.nc">
      <from><interface-ref name="ConnReqListenTimer" scoped="" ref="0x404fabd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c6ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c6ee48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:DozerC.nc">
      <from><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x404f6010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c6bc70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c6bc70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x40501428"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c67b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c67b20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x404ff8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c63a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c63a78"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:DozerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x404e8418"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c9f428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40c9f428"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4175c700"/></to>
    </wire>
    <wire loc="55:DozerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x404e6608"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c9ca48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40c9ca48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40578010"/>
      <arguments>
        <value cst="I:50">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:DozerC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404a1188"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cc33a0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cc33a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ce13a8"/></to>
    </wire>
    <wire loc="61:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40507920"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b05b40"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b05b40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b8a970"/></to>
    </wire>
    <wire loc="63:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4050c7e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd5618"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bd5618"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd00a0"/></to>
    </wire>
    <wire loc="64:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4050bad0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bd8d40"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40bd8d40"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bd17a8"/></to>
    </wire>
    <wire loc="65:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405123f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c33520"/></to>
    </wire>
    <wire loc="69:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40508010"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40eba4a0"/></to>
    </wire>
    <wire loc="77:DozerC.nc">
      <from><interface-ref name="PPBListenTimer0" scoped="" ref="0x40eb7930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40eb8e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40eb8e98"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:DozerC.nc">
      <from><interface-ref name="PPBListenTimer1" scoped="" ref="0x40eb4d58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f25c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f25c68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:DozerC.nc">
      <from><interface-ref name="PPBListenTimer2" scoped="" ref="0x40ee6140"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f21af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f21af0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:DozerC.nc">
      <from><interface-ref name="PPBListenTimer3" scoped="" ref="0x40ee44c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f559a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f559a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:DozerC.nc">
      <from><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40ee18a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f517b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f517b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:DozerC.nc">
      <from><interface-ref name="TDMASlotTimer" scoped="" ref="0x40edfc18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f4d658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f4d658"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40edb010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b05b40"/></to>
    </wire>
    <wire loc="86:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40eb7610"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x4050d6e0"/></to>
    </wire>
    <wire loc="87:DozerC.nc">
      <from><interface-ref name="SchedulerInit" scoped="" ref="0x404fb2f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eb7010"/></to>
    </wire>
    <wire loc="89:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40edb8a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd5618"/></to>
    </wire>
    <wire loc="90:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40edbe88"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bd8d40"/></to>
    </wire>
    <wire loc="91:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40eda740"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></to>
    </wire>
    <wire loc="104:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40f449f0"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40eba4a0"/></to>
    </wire>
    <wire loc="105:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40f43868"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x4050d6e0"/></to>
    </wire>
    <wire loc="107:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f48aa8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="108:DozerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f483b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405805e8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405805e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058fc78"/></to>
    </wire>
    <wire loc="111:DozerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40f45eb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fb7b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fb7b00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417c22b8"/></to>
    </wire>
    <wire loc="115:DozerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40f45750"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fe0df8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fe0df8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417f21f0"/></to>
    </wire>
    <wire loc="116:DozerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40f44658"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fdcda0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40fdcda0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40578010"/>
      <arguments>
        <value cst="I:51">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:TreeP.nc">
      <from><interface-ref name="send_beacon" scoped="" ref="0x4051c610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="369:TreeP.nc">
      <from><interface-ref name="sendReply" scoped="" ref="0x40548400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="357:TreeP.nc">
      <from><interface-ref name="sendRequest" scoped="" ref="0x4054ce38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405922e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c09a80"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40579630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40592bc0"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40592bc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405a8aa0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405786a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40591cd0"/></to>
    </wire>
    <wire loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40591cd0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405b5b10"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4058fc78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405b4ab0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40589920"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1c10"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1c10"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ac83a0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40578010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40591638"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40591638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405b5478"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40576010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059aac8"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059aac8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ad4b10"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4058f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405b5e80"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405862e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40acf5e0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40acf5e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ac7d68"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c09a80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c07508"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405a4ab8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405b3b30"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405a6788"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405b34b8"/></to>
    </wire>
    <wire loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4059a430"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40accb28"/></to>
    </wire>
    <wire loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4059ecc8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bf0ef0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40bf0ef0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c041f0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40ad4b10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ac9280"/></to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405a7bf8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c21458"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c21458"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c20920"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4059c010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad15b8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad15b8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ac9cb0"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405b9180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c07508"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40602ee8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40602ee8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40612010"/></to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x405bc450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bc6090"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bc6090"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bc56d8"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bc6800"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c0bc80"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c0bc80"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c21bc8"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c21bc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bf0448"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bf0448"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c08968"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c08968"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bf3658"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bf3658"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bef550"/></to>
    </wire>
    <wire loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bf2530"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40601510"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40601510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40612618"/></to>
    </wire>
    <wire loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x405bcbb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bf0b28"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bf0b28"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c070e8"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c070e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bc8d70"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bc8d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bdb3d8"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bde688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bf3d38"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bf3d38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40befc30"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bf2180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40601c10"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40601c10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a85818"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405c11f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e7ae0"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405b1010"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405baf10"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ac9800"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x405c58c0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40646d48"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40646d48"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40651ad8"/></to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405c1938"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40600010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40600010"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40612d50"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a85818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a81738"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4060c850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40646610"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40646610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406513a0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x4061a9c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40657ce8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40657ce8"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40650b20"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x406183b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409fb7d0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x406183b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a88da0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a88da0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a84cc8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409fb7d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a06af8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x406149e0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x409fbc58"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x409fbc58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a04010"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x4061c278"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409f8390"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x409f8390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40a04748"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40619b60"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40625218"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4061ca50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd5618"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x406209a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bd7260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40bd7260"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dd100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4061ce98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire loc="77:CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x4061fe80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x4061f670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x40623af8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40653ba8"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4064f680"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x4065c610"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406aa5d8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x406aa5d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407f2e78"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4065b030"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406ace98"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x406ace98"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4065ba38"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40806cd0"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40806cd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4065a4c0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40803128"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40803128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4066a600"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x40817198"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40817198"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40866b88"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40663998"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409b4988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409b4988"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40880d90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x406648c8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x409b2010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409b2010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40664ce0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x409b2a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409b2a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40663578"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x409b38d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409b38d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40663158"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x409b2d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409b2d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40665ae0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x409addb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409addb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4066b0a0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x409abf18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409abf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4066b5a8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x409cc368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409cc368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4066bac8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x409afe50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409afe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40669010"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409ae2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409ae2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40667388"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x409ca5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409ca5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40669520"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x409ad880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409ad880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40669a18"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x409ae6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409ae6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40662a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409c4918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409c4918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40880d90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40662168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409d5908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409d5908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40880d90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066aca8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e7ae0"/></to>
    </wire>
    <wire loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x40670cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x406704e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406aa010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406bb7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x406bb7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407f3bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x407f2e78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415e06a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x415e06a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415dadd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41630b60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415dd448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x415dd448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4162a210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x41631918"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b8740"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407b8740"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b7e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41629c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d1260"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406d1260"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40724410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41626e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406d5b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406c9208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40721770"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406cf010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40737508"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406d5b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40734450"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406d5b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407320b8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406d5b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40730cb0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x4072e888"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406e0678"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406e0678"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406ec360"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406f1c90"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406eac18"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406e3010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406eccc0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406d4e90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406ef030"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40795220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d1260"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407e20e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b6170"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407b6170"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b48e8"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c3a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d1260"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x408078d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x408062e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x406ac4c0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40805730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40815a80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40824f00"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x408178a8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40821608"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x408145a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406cf010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40821c00"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4082c4f8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4082c4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40851840"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x40863258"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406ac4c0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4082f890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4085dd60"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4082d338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40856408"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4082cd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4086ba08"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4082e168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4085a010"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4082dbb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408535e8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4082f010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40828bf8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4082e9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40858228"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4084d430"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40827988"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4085c5f0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40827e00"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4085a7c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x408262b0"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x408589e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40826728"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40856bc0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40826ba0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40853da0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40841030"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40850010"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x408414a8"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4086a270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40841920"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x40862ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409c9988"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409b3c28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409ab6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409abae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409b26c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409cae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409ad010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409cb468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409b3060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4088e480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409b04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409b0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409b0c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409aeb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409cb8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409caa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409cc7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409b3578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409afa18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409ad448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409c92b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409ab270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409af010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409af6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409ca190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409b0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409cbcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409b2368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409af368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409ccbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409cb030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40893e18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4088d788"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40892880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088b208"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x40891100"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4088b9b0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40880d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4088ec90"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x408918d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4088a178"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x408a1ef8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dfe40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x408dfe40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dd100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4088a5b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408eaa90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x408eaa90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40993378"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408a35b0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40994170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40994170"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408e8d50"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408a1a28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x409944a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x409944a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408e50f8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408896b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x4089d520"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x408dd100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408d9798"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408e50f8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408e1060"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408e8d50"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408e4cd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x408ea758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e89d0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408e89d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e4970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x40993b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408e5848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x409922c8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408e5848"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408e1790"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x408fc540"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40998010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40998010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4165e448"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40909c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40998b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40998b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4165d010"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x4090c8f0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x408e2b40"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x408e2b40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x4091df18"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4090a0e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x409191e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40934598"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40935d00"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40937730"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40936128"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40936b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40998750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4165eb88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4165d4d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40997030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4165d8f8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41660458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4165def0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409bc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409d8988"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409c3bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409dd6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409ddae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409c16c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409dae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409be6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409bc010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409ddf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409db468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409c3010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409c04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409c0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409c0c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409c1d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409beb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409be2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409c3880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409db8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409daa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409dc7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409c3528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409bfa18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409bc448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409d82b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409dc368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409bcdb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409c1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409dd270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409bf010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409bf6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409da5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409da190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409c0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409dbcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409c1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409c1a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409bf368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409dcbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409db030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409ce880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409ea988"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409d4bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409cd6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409cdae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409d36c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409ebe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409cf6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409ce010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409cdf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409ed468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409d4010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409d24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409d2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409d2c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409d3d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409cfb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409cf2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409d4880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409ed8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409eba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409ee7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409d4528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409d1a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409ce448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409ea2b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409ee368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409cedb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409d3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409cd270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409d1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409d16c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409eb5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409eb190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409d2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409edcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409d3368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409d3a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409d1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409eebd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409ed030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x409f5468"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40a030c8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x409f58d0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40a03550"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40a03b18"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406aa5d8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40a19eb8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406ac4c0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a1f9a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406ace98"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40a1e3d0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40805730"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40a19840"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x40815a80"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a1ee10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a75518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a75518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40880d90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a1a588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a75bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a75bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a18d28"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a74190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40a74190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a17168"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a74ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40a74ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a17598"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a73260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a73260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a179c8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a72010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a72010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a18840"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a6fae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a6fae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a1ab48"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a8c550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a8c550"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a18338"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a8da00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a8da00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a17e08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a70d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a70d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a12c48"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a852d8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a852d8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a811f8"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a01590"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a01c10"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a212b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1c10"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a19170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aced30"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aced30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aea4d8"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a151a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a6e368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a74840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a70920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a6d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a6d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40a6f270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a6da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40a6a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40a72368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a72740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a73910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a6f6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a744e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40a6a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a8d5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a6c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40a704e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a6ff18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a8de38"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a6de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a6e8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40a74b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a6ecd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a72a98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40a70190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40a8d190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a6acb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a73c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a6a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a735b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40a72df0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a6c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a6cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a85cb0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a81bd0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a9c288"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a80010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406ace98"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a80a18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x408078d0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a7f4c8"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x408062e8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a7e010"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x408178a8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a7e6d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ba02d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ba02d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40880d90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a7ee50"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40bbdcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bbdcb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a7ca30"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40b9ea18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b9ea18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a7c600"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40b9c190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b9c190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a7ce68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a9f4f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a9eb40"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1c10"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40a9f990"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40646d48"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40a95178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aeab00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058fc78"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b10010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b8740"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae9430"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40aeb5d8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ae9e88"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b05b40"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b077f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b66ea8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b07040"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b00240"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b00240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b20d50"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b8e220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b590a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b6a398"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40b00808"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40b00808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b5e198"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b89360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40afe4f0"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40afe4f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5dbe8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40b5dbe8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4170f228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40b20d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416b9358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b5e198"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x416b9790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4170e400"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d4e90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4170b640"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406e0678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x4170be68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406e3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41709890"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406f1c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40b69d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b8c4b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40bae458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b077f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bc2190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40bbc430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40893e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b9f598"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bc47a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bc1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bc1448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b9e010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bbd880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40bc3030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bc38a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bc1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40bbfe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40ba0988"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b9ed70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b9c568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b9e6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bc3468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bc4bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b9f240"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40bbe2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40bbd448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40bbf190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40ba0ea0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40bc4368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bc3cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bc1cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bc26c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b9f8f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bc2b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b9c8c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40bc4010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40bbd010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40bbeb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40892880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bbe6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b9fc48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b9e368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b9cc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408918d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40bbf5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bbfa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bd8820"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bd1288"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bec228"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bc6800"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40bec8f8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bee6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40bee6a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dd100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40beb190"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd5618"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40beb630"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40bde260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40bdb800"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bda010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bde688"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bda3d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c187f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bf2530"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c17010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bf2180"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c173d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40c08118"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c23cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c23cf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dd100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c1d140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40576010"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c4b7c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c331d8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c32240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c4d978"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c32c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40c4c3e0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c4c3e0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40399670"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c31660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40c4cde8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c4cde8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40c9fac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405805e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c9e230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40c9ee28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40576010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4175cdc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c799f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4175b4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c799f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c74908"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ca50a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40579630"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ca5750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ca43f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405805e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40ca4ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40ca4f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40c9cd60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405805e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cc84d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ce13a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d072d0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40cc3c78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cba278"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40cbfa70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cb9930"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cbf718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cba9b8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cbde60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ce5010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cbd1a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbace0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ce1010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d0df20"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d09e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40cbc3b0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ce5538"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ce0288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ce5bf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ce1c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d09978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40ec1338"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ce0288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d83988"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ce1c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d835c8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40da9138"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d09978"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d027b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d09e80"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40da8150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d09e80"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40da2260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d09e80"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40da9620"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d01bd8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40da9af8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40d03a80"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40cfdf10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40da6678"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40cff500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40dbe010"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40dbe010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40db9cb8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dcd990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40dbe490"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dbe490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40dba648"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40d2a1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40d1aa18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40d2b010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d28e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40da8d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40da7270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40db92b0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40dba1c8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40dba1c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40db5ae8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dba648"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40db5f00"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40db9cb8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40db56d0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40db80d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e3b618"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e3b618"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec8170"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40df2c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40db80d0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40de67b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e13560"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40e13560"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e10d28"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40de6be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e13a70"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40e13a70"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e0d288"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40df2050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e12010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40e12010"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e0d7a0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40e11670"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40e0a350"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40e12c20"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40e0c830"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40e11178"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0cd60"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e0af00"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40e09658"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ec73b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e33088"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e33088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e9e0c0"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ecc2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e32a60"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e32a60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e58010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e61d78"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e55370"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40e60b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e54078"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5ed50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e51010"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5ed50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e50c08"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5ed50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e4d830"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e9de18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e32a60"/></to>
    </wire>
    <wire loc="37:DataManagerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40f423f8"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40f449f0"/></to>
    </wire>
    <wire loc="38:DataManagerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40f3f1c8"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x40f43868"/></to>
    </wire>
    <wire loc="40:DataManagerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f3f378"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f483b8"/></to>
    </wire>
    <wire loc="41:DataManagerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f3fa68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f48aa8"/></to>
    </wire>
    <wire loc="42:DataManagerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40f3d748"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x40f45750"/></to>
    </wire>
    <wire loc="43:DataManagerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40f3dea8"/></from>
      <to><interface-ref name="SerialSend" scoped="" ref="0x40f45eb0"/></to>
    </wire>
    <wire loc="44:DataManagerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40f3c658"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x40f44658"/></to>
    </wire>
    <wire loc="46:DataManagerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f6c580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></to>
    </wire>
    <wire loc="51:DataManagerC.nc">
      <from><interface-ref name="DataMessagePool" scoped="" ref="0x40f6d0c8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40faaeb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40faaeb0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x417d36f8"/></to>
    </wire>
    <wire loc="52:DataManagerC.nc">
      <from><interface-ref name="DataQueue" scoped="" ref="0x40f6edb8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40f93ae8"/></to>
    </wire>
    <wire loc="151:DataManagerP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40f8ecc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:DataManagerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40f570d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:DataManagerP.nc">
      <from><interface-ref name="sendAvailableData" scoped="" ref="0x40f69c30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fe2230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cbfa70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fe28c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbd1a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40fe14f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cbde60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417c2980"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fb2a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417c1030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbd1a8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40fb2a98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fae180"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fae8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cc3c78"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fad010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbd1a8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fadbe8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cbfa70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40fac350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40fac788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fde4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405805e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fdeb68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40fdd790"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40576010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417f28b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c799f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417f1010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fdb150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405805e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fdb7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerTimer" scoped="" ref="0x4105a758"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410a15d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x410a15d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4105b940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Battery" scoped="" ref="0x4104c968"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x411a9ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x411a9ef8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41836430"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="TempHumControl" scoped="" ref="0x4104b680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411a4520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x411a4520"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411bf2c8"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x4104bda0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x411a4ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x411a4ba8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x4185fba8"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Hum" scoped="" ref="0x4104aa68"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x412487f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x412487f0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x4185db48"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioInit" scoped="" ref="0x41049690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41245ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x41245ed8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41240158"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioControl" scoped="" ref="0x41049ab0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41360220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x41360220"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41240510"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio0" scoped="" ref="0x41044e78"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41360890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio1" scoped="" ref="0x41047680"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41360890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio2" scoped="" ref="0x41047e68"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41360890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio3" scoped="" ref="0x41046660"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41360890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio4" scoped="" ref="0x41046e48"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41360890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio5" scoped="" ref="0x41043660"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41360890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCinit" scoped="" ref="0x410589c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4135d600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4135d600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413596b0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCcontrol" scoped="" ref="0x41058e00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4135d918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4135d918"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41359a48"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x41053360"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x41053808"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x41053cb0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x41055200"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x410556a8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x41055bd0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x41054090"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x41054538"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC8" scoped="" ref="0x410549e0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC9" scoped="" ref="0x41054e88"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC10" scoped="" ref="0x41052348"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC11" scoped="" ref="0x410527f8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC12" scoped="" ref="0x41052ca8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC13" scoped="" ref="0x41051208"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam0" scoped="" ref="0x41050010"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam1" scoped="" ref="0x41050400"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam2" scoped="" ref="0x410507f0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam3" scoped="" ref="0x41050ce0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam4" scoped="" ref="0x4104f0e0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam5" scoped="" ref="0x4104f4d0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam6" scoped="" ref="0x4104f8c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam7" scoped="" ref="0x4104fcb0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam8" scoped="" ref="0x4104d0c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam9" scoped="" ref="0x4104d4b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam10" scoped="" ref="0x4104d8a8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam11" scoped="" ref="0x4104dca0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam12" scoped="" ref="0x4104c0c8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam13" scoped="" ref="0x4104c4c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x41043ea8"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x4141f988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterInit" scoped="" ref="0x4141f988"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x4141ce10"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x41042578"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x4141fce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterControl" scoped="" ref="0x4141fce0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x414192a0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41042bb8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4141e350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4141e350"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41419900"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x41041670"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x4141eb30"/></to>
    </wire>
    <wire>
      <from><function-ref name="Plugged" scoped="" ref="0x4141eb30"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x414183f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41836430"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410d2820"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41835010"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411aa468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410ccbd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41835010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410cb4b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410c6498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410c47f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x418354e8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x410d2820"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4117d560"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x410cac48"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x41153178"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4117cea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410cb4b0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411526b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410ccbd8"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x4117c280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x411541d8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41153de8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410c2e10"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410c2e10"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410bcc80"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410c4010"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410bb2e0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410c6498"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4110d910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4110d910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4182a4e0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41168010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410c47f0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x410f0bc0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41110278"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x41110278"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110feb0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x410b90f8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x411679f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x410bc7f0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41166150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41169470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41169470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41829040"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4110b3b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41169068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4182ac20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41169b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x418296d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41829b98"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41168010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41828010"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x4182c368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41827270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41868708"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x411679f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41868b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x41167de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41868e18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41166150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x418674d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411667e8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x41189e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x411bf2c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412049c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x4185c750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411bfc00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Temp" scoped="" ref="0x4185b550"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x411be6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x4185ce28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411bfc00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Hum" scoped="" ref="0x4185bd08"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x411be6c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412049c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41222e48"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SensirionSht15" scoped="" ref="0x411be6c8"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x411bbc20"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411bfc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412012f0"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x412012f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41255760"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x4120b430"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x41201a58"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x41201a58"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x411f6be8"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x4120bda8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x412004b0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x412004b0"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x411ffc30"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x4120a7b0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x411ff010"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x411ff010"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x41225790"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4120ae18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41250878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41250878"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41206030"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x41206c48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x411ffc30"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x411f6be8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41255760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41891d38"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x41225d88"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x4082cd78"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4121f558"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41220c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41220c30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x4121d7d8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4121c210"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x411f5ec8"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x412335c0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x411fba28"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x411f9850"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x411f4b20"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x41230208"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x412352d8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x412309a8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x411f7740"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x411fc650"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x411fa490"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x411f4380"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x41233990"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x411f82d0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x412356a8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x41230d78"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x411f6200"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x411fb050"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x411fae68"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x411f4750"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x41233d60"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x411f8cb8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x411f4ef0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x412305d8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x41235a78"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x4122f208"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x4121b040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41255ea0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41890490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412542e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41890898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41890d58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41254790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4188e250"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41893cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4188e848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41240510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4123a0e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Dio" scoped="" ref="0x41360890"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240e18"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Dio" scoped="" ref="0x41240e18"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x4123a9c8"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41240158"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4123fcd8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41272e40"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x412bbef0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x412bbef0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x4082d338"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41273c70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412b57f8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412b57f8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412b0200"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x41237bf8"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x412b37c8"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x412b37c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412b1a38"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x412723d0"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x412bb480"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x412bb480"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x41236418"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x412bc840"/></to>
    </wire>
    <wire loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="read_io" scoped="" ref="0x4128fba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="init_io" scoped="" ref="0x4126c1d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_low" scoped="" ref="0x4125e430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_toggle" scoped="" ref="0x41259730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_high" scoped="" ref="0x412631e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412b1a38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a7470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412b0200"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a6010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x412a7470"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412d5010"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412a6010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412d5800"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x412fb7a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a1418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412a1418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x418d0548"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x412fbf20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412f6e90"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x412f8dd8"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x41305d50"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x412d8d90"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x412f69e8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d7548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d9010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d9010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x418cf150"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x413040b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x413469b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x413469b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x41342a88"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x4134a7b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x41348430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409aad20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x412a1b58"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x418d0c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412d96a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x418cf7e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x418cfca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x412d9b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x418cd170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x418d13d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x418cc358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x4133e240"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x4133ec40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41364c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41359a48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413d46c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION33" scoped="" ref="0x413ddc10"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x413533c8"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION33" scoped="" ref="0x413533c8"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x4134e718"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x413596b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413d4330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413543b8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="ADConvert" scoped="" ref="0x413543b8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41351708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x41354b00"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SetParam" scoped="" ref="0x41354b00"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x41351e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION50" scoped="" ref="0x413dc050"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x41353888"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION50" scoped="" ref="0x41353888"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x4134ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION25" scoped="" ref="0x413dd7f8"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x41354ee0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION25" scoped="" ref="0x41354ee0"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x4134e258"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413d46c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413f33c8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x413d4330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413f3010"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x413876a8"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x413db608"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x413db608"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x413d6cf0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41387e70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x4134d150"/></from>
      <to><interface-ref name="Exitation50" scoped="" ref="0x413d4d70"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x413d4d70"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x411fae68"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x4134db98"/></from>
      <to><interface-ref name="Exitation33" scoped="" ref="0x413be860"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x413be860"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x411fba28"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x4134c6d8"/></from>
      <to><interface-ref name="VoltageBuffer" scoped="" ref="0x413bd338"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x413bd338"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x411fb050"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x4134b170"/></from>
      <to><interface-ref name="VoltageBooster" scoped="" ref="0x413bdd80"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x413bdd80"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x411fc650"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x4134bba8"/></from>
      <to><interface-ref name="Amplifier" scoped="" ref="0x413bb850"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x413bb850"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x411f9850"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41392748"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413ba3a8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413ba3a8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413fd778"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x41390708"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x413b8340"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x413b8340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413fd030"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138f010"/></from>
      <to><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x413b8bd8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x413b8bd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x413fa1e8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x41400ef0"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413db010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413db010"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413d66f8"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <from><interface-ref name="adc_get_data" scoped="" ref="0x41371bd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413d3e18"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413dac68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413dac68"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a6010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x413d35e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413da520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413da520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a7470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x413fa1e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413fd030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a7470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413fd778"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a6010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413ef998"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x41400ef0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x413f3a90"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x411fae68"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x413f2500"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x411fba28"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x413f1010"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x411fb050"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x413f1a78"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x411fc650"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x413f04f0"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x411f9850"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x413f0f00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x411fa490"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x4141ce10"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x41418c78"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41419900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41415730"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x414192a0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x414150f0"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x414183f0"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x41414138"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41414308"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41410010"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x41444528"/></to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41444528"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x4082dbb8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x41413b70"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x41445010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x41445010"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x41411588"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x41445a00"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x41445a00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x411fa490"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x41413128"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x412bc840"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <from><interface-ref name="count_ready" scoped="" ref="0x41402c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41443b10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a7470"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x414422e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a6010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.9 2008/06/26 03:38:27 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DozerC" loc="19:DozerC.nc">
      <configuration/>
    </component>
    <component qname="TreeP" loc="13:TreeP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.12 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.18 $ $Date: 2008/06/24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:CC2420CsmaP.nc" safe="">
      <documentation loc="32:CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40354ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.15 $ $Date: 2008/07/10 21:46:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1f010"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <value cst="I:18">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconTimerC" loc="36(DozerC.BeaconTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconWaitTimerC" loc="36(DozerC.BeaconWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnReqListenTimerC" loc="36(DozerC.ConnReqListenTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnRepWaitTimerC" loc="36(DozerC.ConnRepWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateTimerC" loc="36(DozerC.NeighbourUpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateStopTimerC" loc="36(DozerC.NeighbourUpdateStopTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC" loc="39(DozerC.BeaconSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC.AMQueueEntryP" loc="35(DozerC.BeaconSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.BeaconReceiverC" loc="35(DozerC.BeaconReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403521d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SchedulerP" loc="14:SchedulerP.nc">
      <module/>
    </component>
    <component qname="DozerC.PPBListenTimer0C" loc="36(DozerC.PPBListenTimer0C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer1C" loc="36(DozerC.PPBListenTimer1C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer2C" loc="36(DozerC.PPBListenTimer2C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer3C" loc="36(DozerC.PPBListenTimer3C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMAScheduleTimerC" loc="36(DozerC.TDMAScheduleTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMASlotTimerC" loc="36(DozerC.TDMASlotTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC" loc="12:DataManagerC.nc">
      <configuration/>
    </component>
    <component qname="DataManagerP" loc="10:DataManagerP.nc">
      <module/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP" loc="41(DataManagerC.DataMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP.PoolP" loc="53(DataManagerC.DataMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f738a8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DataManagerC.DataQueueP" loc="42(DataManagerC.DataQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.SerialAMSenderC" loc="39(DozerC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.SerialAMSenderC.AMQueueEntryP" loc="35(DozerC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataSenderC" loc="39(DozerC.DataSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.DataSenderC.AMQueueEntryP" loc="35(DozerC.DataSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataReceiverC" loc="35(DozerC.DataReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriP" loc="39:uAgriP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <configuration/>
    </component>
    <component qname="SamplerM" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TimerMilliC" loc="36(SamplerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC" loc="29(SamplerC.VoltageC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC.AdcReadClientC" loc="21(SamplerC.VoltageC.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TempHumC" loc="15(SamplerC.TempHumC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.TempHumC.SensirionSht15ReaderP" loc="16(SamplerC.TempHumC.SensirionSht15ReaderP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht15ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
        <short>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board.</short>
        <long>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board. This component provides the SensirionSht15&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht15C.SensirionSht15LogicP" loc="24(HalSensirionSht15C.SensirionSht15LogicP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/mda300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; Revision: $Revision: 1.0 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Int" loc="6(HplSensirionSht15C.Int):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15P" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <documentation loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
        <short>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; </short>
        <long>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.TimerMilliC" loc="36(HplSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter" loc="73(HplSensirionSht15C.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht15.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Queue" loc="32(HplSensirionSht15C.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Arbiter" loc="49(HplSensirionSht15C.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C.TimerMilliC" loc="36(HalSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.DioC" loc="10(SamplerC.DioC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300DigitalC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300DigitalLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300DigitalC.I2C" loc="43(HplMDA300DigitalC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC.WarmupTimer" loc="36(HplMDA300DigitalC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.IBADC" loc="10(SamplerC.IBADC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300IBADCC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCLogicP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MDA300IBADCSwitchC" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchC.I2C" loc="43(MDA300IBADCSwitchC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.I2C" loc="43(HplMDA300IBADCC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.WarmupTimer" loc="36(HplMDA300IBADCC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.CounterC" loc="10(SamplerC.CounterC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300CounterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300CounterLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300CounterC.I2C" loc="43(HplMDA300CounterC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403bd0e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403bd300" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403bd518" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403c14f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403c1718" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403c1940" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403c1b30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40412878" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40412aa0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40412cc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40412eb8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40783478" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40783478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40783698" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40791428" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40791428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40791870" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40791870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40791a30" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x407b2010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x407b2010"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x407b2458" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407b2458"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407d7488" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407d7488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407d78e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407d78e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407d7b50" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407d7b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407d6010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407d6010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407d6278" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x407d6700" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x407d6700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407de158" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407de158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407de5b8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407de5b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407de820" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407de820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407dec90" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407dec90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407deef8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40829b28" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40829d50" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4084c010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4084c200" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4094e870" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40968688" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40aec590" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aec590"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b1f010" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1f010"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b1f1d0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b182f8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b182f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b184b8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b02b60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b02b60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b650b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b650b0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b65290" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c5fd18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c5a808" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40c73010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40cc7260" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40f738a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f738a8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40f73ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40fa7d98" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fa7d98"/></type-var>
        </typedef>
        <constant name="size" ref="0x40fa3010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40f95e60" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40f95e60"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40f910f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40fb94f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4112b5f0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41128858" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x41151528" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x41156940" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x41156940"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht15ReaderP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15LogicP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x412a04e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40381db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40381188" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40381188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40381360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40382ec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4037cef0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4037cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40382760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40382938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40382a18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40382af8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40382bd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40382cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40388548" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40388168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40388168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40388950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40388950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4038b010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4038cc18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40394c08" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40394c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40394de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40394218" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40394218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403943f0"/>
        <function-ref name="isInput" scoped="" ref="0x403944d0"/>
        <function-ref name="toggle" scoped="" ref="0x403945b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40394690"/>
        <function-ref name="get" scoped="" ref="0x40394770"/>
        <function-ref name="makeOutput" scoped="" ref="0x40394850"/>
        <function-ref name="set" scoped="" ref="0x40394930"/>
        <function-ref name="clr" scoped="" ref="0x40394a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4038bba0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038bd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403b1750" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403b1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b1b28"/>
        <function-ref name="isInput" scoped="" ref="0x403b1c08"/>
        <function-ref name="toggle" scoped="" ref="0x403b1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b1dc8"/>
        <function-ref name="get" scoped="" ref="0x403b1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba010"/>
        <function-ref name="set" scoped="" ref="0x403ba0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ba1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403a2d08" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403ab010"/>
        <function-ref name="toggle" scoped="" ref="0x403ab0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ab1d0"/>
        <function-ref name="get" scoped="" ref="0x403ab2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ab390"/>
        <function-ref name="set" scoped="" ref="0x403ab470"/>
        <function-ref name="clr" scoped="" ref="0x403ab550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403af2f0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403af4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403af5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403af688"/>
        <function-ref name="isOutput" scoped="" ref="0x403af768"/>
        <function-ref name="get" scoped="" ref="0x403af848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af928"/>
        <function-ref name="set" scoped="" ref="0x403afa08"/>
        <function-ref name="clr" scoped="" ref="0x403afae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403b44b0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403b44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4688"/>
        <function-ref name="isInput" scoped="" ref="0x403b4768"/>
        <function-ref name="toggle" scoped="" ref="0x403b4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4928"/>
        <function-ref name="get" scoped="" ref="0x403b4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4ae8"/>
        <function-ref name="set" scoped="" ref="0x403b4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403968e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40396ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40396b98"/>
        <function-ref name="toggle" scoped="" ref="0x40396c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40396d58"/>
        <function-ref name="get" scoped="" ref="0x40396e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40396f18"/>
        <function-ref name="set" scoped="" ref="0x4039d010"/>
        <function-ref name="clr" scoped="" ref="0x4039d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403b50a0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5278"/>
        <function-ref name="isInput" scoped="" ref="0x403b5358"/>
        <function-ref name="toggle" scoped="" ref="0x403b5438"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5518"/>
        <function-ref name="get" scoped="" ref="0x403b55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b56d8"/>
        <function-ref name="set" scoped="" ref="0x403b57b8"/>
        <function-ref name="clr" scoped="" ref="0x403b5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4039dce8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4039c010"/>
        <function-ref name="toggle" scoped="" ref="0x4039c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039c1d0"/>
        <function-ref name="get" scoped="" ref="0x4039c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039c390"/>
        <function-ref name="set" scoped="" ref="0x4039c470"/>
        <function-ref name="clr" scoped="" ref="0x4039c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4039e4b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039e688"/>
        <function-ref name="isInput" scoped="" ref="0x4039e768"/>
        <function-ref name="toggle" scoped="" ref="0x4039e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4039e928"/>
        <function-ref name="get" scoped="" ref="0x4039ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039eae8"/>
        <function-ref name="set" scoped="" ref="0x4039ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4039eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403aac08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aade0"/>
        <function-ref name="isInput" scoped="" ref="0x403aaec0"/>
        <function-ref name="toggle" scoped="" ref="0x403a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403a90f0"/>
        <function-ref name="get" scoped="" ref="0x403a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a92b0"/>
        <function-ref name="set" scoped="" ref="0x403a9390"/>
        <function-ref name="clr" scoped="" ref="0x403a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403ad210" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ad3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ad4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ad5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ad688"/>
        <function-ref name="get" scoped="" ref="0x403ad768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ad848"/>
        <function-ref name="set" scoped="" ref="0x403ad928"/>
        <function-ref name="clr" scoped="" ref="0x403ada08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40399670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40399848"/>
        <function-ref name="isInput" scoped="" ref="0x40399928"/>
        <function-ref name="toggle" scoped="" ref="0x40399a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40399ae8"/>
        <function-ref name="get" scoped="" ref="0x40399bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40399ca8"/>
        <function-ref name="set" scoped="" ref="0x40399d88"/>
        <function-ref name="clr" scoped="" ref="0x40399e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4039bc08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4039bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4039a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4039a0f0"/>
        <function-ref name="get" scoped="" ref="0x4039a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039a2b0"/>
        <function-ref name="set" scoped="" ref="0x4039a390"/>
        <function-ref name="clr" scoped="" ref="0x4039a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403a42f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a44c8"/>
        <function-ref name="isInput" scoped="" ref="0x403a45a8"/>
        <function-ref name="toggle" scoped="" ref="0x403a4688"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4768"/>
        <function-ref name="get" scoped="" ref="0x403a4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a4928"/>
        <function-ref name="set" scoped="" ref="0x403a4a08"/>
        <function-ref name="clr" scoped="" ref="0x403a4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403a8a98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403a8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8c70"/>
        <function-ref name="isInput" scoped="" ref="0x403a8d50"/>
        <function-ref name="toggle" scoped="" ref="0x403a8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8f10"/>
        <function-ref name="get" scoped="" ref="0x403a7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a70f0"/>
        <function-ref name="set" scoped="" ref="0x403a71d0"/>
        <function-ref name="clr" scoped="" ref="0x403a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403b22f0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b2768"/>
        <function-ref name="get" scoped="" ref="0x403b2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2928"/>
        <function-ref name="set" scoped="" ref="0x403b2a08"/>
        <function-ref name="clr" scoped="" ref="0x403b2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403b9830" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403b9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9a08"/>
        <function-ref name="isInput" scoped="" ref="0x403b9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403b9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9ca8"/>
        <function-ref name="get" scoped="" ref="0x403b9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9e68"/>
        <function-ref name="set" scoped="" ref="0x403b8010"/>
        <function-ref name="clr" scoped="" ref="0x403b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403a7ea8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403a7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b00c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b01a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b0280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0360"/>
        <function-ref name="get" scoped="" ref="0x403b0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0520"/>
        <function-ref name="set" scoped="" ref="0x403b0600"/>
        <function-ref name="clr" scoped="" ref="0x403b06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403974b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40397688"/>
        <function-ref name="isInput" scoped="" ref="0x40397768"/>
        <function-ref name="toggle" scoped="" ref="0x40397848"/>
        <function-ref name="isOutput" scoped="" ref="0x40397928"/>
        <function-ref name="get" scoped="" ref="0x40397a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40397ae8"/>
        <function-ref name="set" scoped="" ref="0x40397bc8"/>
        <function-ref name="clr" scoped="" ref="0x40397ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403a1b18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403a1b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a1cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403a1dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403a1eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a0010"/>
        <function-ref name="get" scoped="" ref="0x403a00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a01d0"/>
        <function-ref name="set" scoped="" ref="0x403a02b0"/>
        <function-ref name="clr" scoped="" ref="0x403a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403ba3d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403ba3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba5a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ba688"/>
        <function-ref name="toggle" scoped="" ref="0x403ba768"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba848"/>
        <function-ref name="get" scoped="" ref="0x403ba928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403baa08"/>
        <function-ref name="set" scoped="" ref="0x403baae8"/>
        <function-ref name="clr" scoped="" ref="0x403babc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4039f010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039f488"/>
        <function-ref name="get" scoped="" ref="0x4039f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039f648"/>
        <function-ref name="set" scoped="" ref="0x4039f728"/>
        <function-ref name="clr" scoped="" ref="0x4039f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403ab750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403ab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ab928"/>
        <function-ref name="isInput" scoped="" ref="0x403aba08"/>
        <function-ref name="toggle" scoped="" ref="0x403abae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403abbc8"/>
        <function-ref name="get" scoped="" ref="0x403abca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403abd88"/>
        <function-ref name="set" scoped="" ref="0x403abe68"/>
        <function-ref name="clr" scoped="" ref="0x403aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403afce8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403afec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ae010"/>
        <function-ref name="toggle" scoped="" ref="0x403ae0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ae1d0"/>
        <function-ref name="get" scoped="" ref="0x403ae2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ae390"/>
        <function-ref name="set" scoped="" ref="0x403ae470"/>
        <function-ref name="clr" scoped="" ref="0x403ae550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403b4ea8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403b4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3360"/>
        <function-ref name="get" scoped="" ref="0x403b3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3520"/>
        <function-ref name="set" scoped="" ref="0x403b3600"/>
        <function-ref name="clr" scoped="" ref="0x403b36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4039d2f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4039d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4039d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4039d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4039d768"/>
        <function-ref name="get" scoped="" ref="0x4039d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039d928"/>
        <function-ref name="set" scoped="" ref="0x4039da08"/>
        <function-ref name="clr" scoped="" ref="0x4039dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4039c750" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039c928"/>
        <function-ref name="isInput" scoped="" ref="0x4039ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4039cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039cbc8"/>
        <function-ref name="get" scoped="" ref="0x4039cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039cd88"/>
        <function-ref name="set" scoped="" ref="0x4039ce68"/>
        <function-ref name="clr" scoped="" ref="0x4039b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4039eea8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a50c0"/>
        <function-ref name="isInput" scoped="" ref="0x403a51a0"/>
        <function-ref name="toggle" scoped="" ref="0x403a5280"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5360"/>
        <function-ref name="get" scoped="" ref="0x403a5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5520"/>
        <function-ref name="set" scoped="" ref="0x403a5600"/>
        <function-ref name="clr" scoped="" ref="0x403a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403a9670" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9848"/>
        <function-ref name="isInput" scoped="" ref="0x403a9928"/>
        <function-ref name="toggle" scoped="" ref="0x403a9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403a9ae8"/>
        <function-ref name="get" scoped="" ref="0x403a9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9ca8"/>
        <function-ref name="set" scoped="" ref="0x403a9d88"/>
        <function-ref name="clr" scoped="" ref="0x403a9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403adc08" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403adde0"/>
        <function-ref name="isInput" scoped="" ref="0x403adec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ac010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ac0f0"/>
        <function-ref name="get" scoped="" ref="0x403ac1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ac2b0"/>
        <function-ref name="set" scoped="" ref="0x403ac390"/>
        <function-ref name="clr" scoped="" ref="0x403ac470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403980a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40398278"/>
        <function-ref name="isInput" scoped="" ref="0x40398358"/>
        <function-ref name="toggle" scoped="" ref="0x40398438"/>
        <function-ref name="isOutput" scoped="" ref="0x40398518"/>
        <function-ref name="get" scoped="" ref="0x403985f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403986d8"/>
        <function-ref name="set" scoped="" ref="0x403987b8"/>
        <function-ref name="clr" scoped="" ref="0x40398898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4039a670" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4039a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039a8c8"/>
        <function-ref name="isInput" scoped="" ref="0x4039a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x4039aa88"/>
        <function-ref name="isOutput" scoped="" ref="0x4039ab68"/>
        <function-ref name="get" scoped="" ref="0x4039ac48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039ad28"/>
        <function-ref name="set" scoped="" ref="0x4039ae08"/>
        <function-ref name="clr" scoped="" ref="0x4039aee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403a4ce8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403a3010"/>
        <function-ref name="toggle" scoped="" ref="0x403a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a31d0"/>
        <function-ref name="get" scoped="" ref="0x403a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3390"/>
        <function-ref name="set" scoped="" ref="0x403a3470"/>
        <function-ref name="clr" scoped="" ref="0x403a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403b2ce8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403b2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403b1010"/>
        <function-ref name="toggle" scoped="" ref="0x403b10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b11d0"/>
        <function-ref name="get" scoped="" ref="0x403b12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b1390"/>
        <function-ref name="set" scoped="" ref="0x403b1470"/>
        <function-ref name="clr" scoped="" ref="0x403b1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403a2210" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a24e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a25c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a26a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a2788"/>
        <function-ref name="get" scoped="" ref="0x403a2868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2948"/>
        <function-ref name="set" scoped="" ref="0x403a2a28"/>
        <function-ref name="clr" scoped="" ref="0x403a2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403b08e0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403b08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0d58"/>
        <function-ref name="get" scoped="" ref="0x403b0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0f18"/>
        <function-ref name="set" scoped="" ref="0x403af010"/>
        <function-ref name="clr" scoped="" ref="0x403af0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403b5a98" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403b5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5c70"/>
        <function-ref name="isInput" scoped="" ref="0x403b5d50"/>
        <function-ref name="toggle" scoped="" ref="0x403b5e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5f10"/>
        <function-ref name="get" scoped="" ref="0x403b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b40f0"/>
        <function-ref name="set" scoped="" ref="0x403b41d0"/>
        <function-ref name="clr" scoped="" ref="0x403b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403b82f0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8768"/>
        <function-ref name="get" scoped="" ref="0x403b8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8928"/>
        <function-ref name="set" scoped="" ref="0x403b8a08"/>
        <function-ref name="clr" scoped="" ref="0x403b8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40397ea8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403960c0"/>
        <function-ref name="isInput" scoped="" ref="0x403961a0"/>
        <function-ref name="toggle" scoped="" ref="0x40396280"/>
        <function-ref name="isOutput" scoped="" ref="0x40396360"/>
        <function-ref name="get" scoped="" ref="0x40396440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40396520"/>
        <function-ref name="set" scoped="" ref="0x40396600"/>
        <function-ref name="clr" scoped="" ref="0x403966e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403a0590" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a0768"/>
        <function-ref name="isInput" scoped="" ref="0x403a0848"/>
        <function-ref name="toggle" scoped="" ref="0x403a0928"/>
        <function-ref name="isOutput" scoped="" ref="0x403a0a08"/>
        <function-ref name="get" scoped="" ref="0x403a0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a0bc8"/>
        <function-ref name="set" scoped="" ref="0x403a0ca8"/>
        <function-ref name="clr" scoped="" ref="0x403a0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403ac670" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ac848"/>
        <function-ref name="isInput" scoped="" ref="0x403ac928"/>
        <function-ref name="toggle" scoped="" ref="0x403aca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403acae8"/>
        <function-ref name="get" scoped="" ref="0x403acbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403acca8"/>
        <function-ref name="set" scoped="" ref="0x403acd88"/>
        <function-ref name="clr" scoped="" ref="0x403ace68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4039fa08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4039fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4039fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039fe80"/>
        <function-ref name="get" scoped="" ref="0x4039e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039e0f0"/>
        <function-ref name="set" scoped="" ref="0x4039e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4039e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403aa210" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403aa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aa3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403aa4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403aa5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aa688"/>
        <function-ref name="get" scoped="" ref="0x403aa768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aa848"/>
        <function-ref name="set" scoped="" ref="0x403aa928"/>
        <function-ref name="clr" scoped="" ref="0x403aaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403ae750" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae928"/>
        <function-ref name="isInput" scoped="" ref="0x403aea08"/>
        <function-ref name="toggle" scoped="" ref="0x403aeae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aebc8"/>
        <function-ref name="get" scoped="" ref="0x403aeca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aed88"/>
        <function-ref name="set" scoped="" ref="0x403aee68"/>
        <function-ref name="clr" scoped="" ref="0x403ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403b38e0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403b38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3d58"/>
        <function-ref name="get" scoped="" ref="0x403b3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3f18"/>
        <function-ref name="set" scoped="" ref="0x403b2010"/>
        <function-ref name="clr" scoped="" ref="0x403b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4038ac20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4038adf8"/>
        <function-ref name="isInput" scoped="" ref="0x4038aed8"/>
        <function-ref name="toggle" scoped="" ref="0x40399010"/>
        <function-ref name="isOutput" scoped="" ref="0x403990f0"/>
        <function-ref name="get" scoped="" ref="0x403991d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403992b0"/>
        <function-ref name="set" scoped="" ref="0x40399390"/>
        <function-ref name="clr" scoped="" ref="0x40399470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4039b210" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039b688"/>
        <function-ref name="get" scoped="" ref="0x4039b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039b848"/>
        <function-ref name="set" scoped="" ref="0x4039b928"/>
        <function-ref name="clr" scoped="" ref="0x4039ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403a58e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403a5b98"/>
        <function-ref name="toggle" scoped="" ref="0x403a5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5d58"/>
        <function-ref name="get" scoped="" ref="0x403a5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5f18"/>
        <function-ref name="set" scoped="" ref="0x403a4010"/>
        <function-ref name="clr" scoped="" ref="0x403a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403a80a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8278"/>
        <function-ref name="isInput" scoped="" ref="0x403a8358"/>
        <function-ref name="toggle" scoped="" ref="0x403a8438"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8518"/>
        <function-ref name="get" scoped="" ref="0x403a85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a86d8"/>
        <function-ref name="set" scoped="" ref="0x403a87b8"/>
        <function-ref name="clr" scoped="" ref="0x403a8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403badc8" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403badc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9010"/>
        <function-ref name="isInput" scoped="" ref="0x403b90f0"/>
        <function-ref name="toggle" scoped="" ref="0x403b91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b92b0"/>
        <function-ref name="get" scoped="" ref="0x403b9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9470"/>
        <function-ref name="set" scoped="" ref="0x403b9550"/>
        <function-ref name="clr" scoped="" ref="0x403b9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403a74b0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403a74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a7688"/>
        <function-ref name="isInput" scoped="" ref="0x403a7768"/>
        <function-ref name="toggle" scoped="" ref="0x403a7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403a7928"/>
        <function-ref name="get" scoped="" ref="0x403a7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7ae8"/>
        <function-ref name="set" scoped="" ref="0x403a7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403a7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403a3750" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3928"/>
        <function-ref name="isInput" scoped="" ref="0x403a3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403a3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3bc8"/>
        <function-ref name="get" scoped="" ref="0x403a3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3d88"/>
        <function-ref name="set" scoped="" ref="0x403a3e68"/>
        <function-ref name="clr" scoped="" ref="0x403a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40398a98" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40398a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40398c70"/>
        <function-ref name="isInput" scoped="" ref="0x40398d50"/>
        <function-ref name="toggle" scoped="" ref="0x40398e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40398f10"/>
        <function-ref name="get" scoped="" ref="0x40397010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403970f0"/>
        <function-ref name="set" scoped="" ref="0x403971d0"/>
        <function-ref name="clr" scoped="" ref="0x403972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403a1120" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403a1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a12f8"/>
        <function-ref name="isInput" scoped="" ref="0x403a13d8"/>
        <function-ref name="toggle" scoped="" ref="0x403a14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a1598"/>
        <function-ref name="get" scoped="" ref="0x403a1678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a1758"/>
        <function-ref name="set" scoped="" ref="0x403a1838"/>
        <function-ref name="clr" scoped="" ref="0x403a1918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403dfba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfd80"/>
        <function-ref name="isInput" scoped="" ref="0x403dfe60"/>
        <function-ref name="toggle" scoped="" ref="0x403de010"/>
        <function-ref name="isOutput" scoped="" ref="0x403de0f0"/>
        <function-ref name="get" scoped="" ref="0x403de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de2b0"/>
        <function-ref name="set" scoped="" ref="0x403de390"/>
        <function-ref name="clr" scoped="" ref="0x403de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e6890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6a68"/>
        <function-ref name="isInput" scoped="" ref="0x403e6b48"/>
        <function-ref name="toggle" scoped="" ref="0x403e6c28"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6d08"/>
        <function-ref name="get" scoped="" ref="0x403e6de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6ec8"/>
        <function-ref name="set" scoped="" ref="0x403e5010"/>
        <function-ref name="clr" scoped="" ref="0x403e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403e08e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0d58"/>
        <function-ref name="get" scoped="" ref="0x403e0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0f18"/>
        <function-ref name="set" scoped="" ref="0x403df010"/>
        <function-ref name="clr" scoped="" ref="0x403df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403de5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de7a8"/>
        <function-ref name="isInput" scoped="" ref="0x403de888"/>
        <function-ref name="toggle" scoped="" ref="0x403de968"/>
        <function-ref name="isOutput" scoped="" ref="0x403dea48"/>
        <function-ref name="get" scoped="" ref="0x403deb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dec08"/>
        <function-ref name="set" scoped="" ref="0x403dece8"/>
        <function-ref name="clr" scoped="" ref="0x403dedc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e5250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5428"/>
        <function-ref name="isInput" scoped="" ref="0x403e5508"/>
        <function-ref name="toggle" scoped="" ref="0x403e55e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e56c8"/>
        <function-ref name="get" scoped="" ref="0x403e57a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5888"/>
        <function-ref name="set" scoped="" ref="0x403e5968"/>
        <function-ref name="clr" scoped="" ref="0x403e5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403df250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403df250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df428"/>
        <function-ref name="isInput" scoped="" ref="0x403df508"/>
        <function-ref name="toggle" scoped="" ref="0x403df5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403df6c8"/>
        <function-ref name="get" scoped="" ref="0x403df7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df888"/>
        <function-ref name="set" scoped="" ref="0x403df968"/>
        <function-ref name="clr" scoped="" ref="0x403dfa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403def28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403def28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6110"/>
        <function-ref name="isInput" scoped="" ref="0x403e61f0"/>
        <function-ref name="toggle" scoped="" ref="0x403e62d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e63b0"/>
        <function-ref name="get" scoped="" ref="0x403e6490"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6570"/>
        <function-ref name="set" scoped="" ref="0x403e6650"/>
        <function-ref name="clr" scoped="" ref="0x403e6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403e5ba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5d80"/>
        <function-ref name="isInput" scoped="" ref="0x403e5e60"/>
        <function-ref name="toggle" scoped="" ref="0x403e4010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e40f0"/>
        <function-ref name="get" scoped="" ref="0x403e41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e42b0"/>
        <function-ref name="set" scoped="" ref="0x403e4390"/>
        <function-ref name="clr" scoped="" ref="0x403e4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4146e080" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4146e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4146e258"/>
        <function-ref name="isInput" scoped="" ref="0x4146e338"/>
        <function-ref name="toggle" scoped="" ref="0x4146e418"/>
        <function-ref name="isOutput" scoped="" ref="0x4146e4f8"/>
        <function-ref name="get" scoped="" ref="0x4146e5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4146e6b8"/>
        <function-ref name="set" scoped="" ref="0x4146e798"/>
        <function-ref name="clr" scoped="" ref="0x4146e878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4146da88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4146da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4146dc60"/>
        <function-ref name="isInput" scoped="" ref="0x4146dd40"/>
        <function-ref name="toggle" scoped="" ref="0x4146de20"/>
        <function-ref name="isOutput" scoped="" ref="0x4146df00"/>
        <function-ref name="get" scoped="" ref="0x4146c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4146c0f0"/>
        <function-ref name="set" scoped="" ref="0x4146c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4146c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4146b538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4146b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4146b710"/>
        <function-ref name="isInput" scoped="" ref="0x4146b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4146b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4146b9b0"/>
        <function-ref name="get" scoped="" ref="0x4146ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4146bb70"/>
        <function-ref name="set" scoped="" ref="0x4146bc50"/>
        <function-ref name="clr" scoped="" ref="0x4146bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41469010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41469010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414691e8"/>
        <function-ref name="isInput" scoped="" ref="0x414692c8"/>
        <function-ref name="toggle" scoped="" ref="0x414693a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41469488"/>
        <function-ref name="get" scoped="" ref="0x41469568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41469648"/>
        <function-ref name="set" scoped="" ref="0x41469728"/>
        <function-ref name="clr" scoped="" ref="0x41469808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414689e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414689e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41468bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41468ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41468d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41468e60"/>
        <function-ref name="get" scoped="" ref="0x41467010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414670f0"/>
        <function-ref name="set" scoped="" ref="0x414671d0"/>
        <function-ref name="clr" scoped="" ref="0x414672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41466538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41466538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41466710"/>
        <function-ref name="isInput" scoped="" ref="0x414667f0"/>
        <function-ref name="toggle" scoped="" ref="0x414668d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414669b0"/>
        <function-ref name="get" scoped="" ref="0x41466a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41466b70"/>
        <function-ref name="set" scoped="" ref="0x41466c50"/>
        <function-ref name="clr" scoped="" ref="0x41466d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41464010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41464010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414641e8"/>
        <function-ref name="isInput" scoped="" ref="0x414642c8"/>
        <function-ref name="toggle" scoped="" ref="0x414643a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41464488"/>
        <function-ref name="get" scoped="" ref="0x41464568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41464648"/>
        <function-ref name="set" scoped="" ref="0x41464728"/>
        <function-ref name="clr" scoped="" ref="0x41464808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414629e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414629e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41462bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41462ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41462d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41462e60"/>
        <function-ref name="get" scoped="" ref="0x41461010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414610f0"/>
        <function-ref name="set" scoped="" ref="0x414611d0"/>
        <function-ref name="clr" scoped="" ref="0x414612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403ea4f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ea7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea888"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea968"/>
        <function-ref name="get" scoped="" ref="0x403eaa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eab28"/>
        <function-ref name="set" scoped="" ref="0x403eac08"/>
        <function-ref name="clr" scoped="" ref="0x403eace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e8170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8348"/>
        <function-ref name="isInput" scoped="" ref="0x403e8428"/>
        <function-ref name="toggle" scoped="" ref="0x403e8508"/>
        <function-ref name="isOutput" scoped="" ref="0x403e85e8"/>
        <function-ref name="get" scoped="" ref="0x403e86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e87a8"/>
        <function-ref name="set" scoped="" ref="0x403e8888"/>
        <function-ref name="clr" scoped="" ref="0x403e8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403eb228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb400"/>
        <function-ref name="isInput" scoped="" ref="0x403eb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x403eb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb6a0"/>
        <function-ref name="get" scoped="" ref="0x403eb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb860"/>
        <function-ref name="set" scoped="" ref="0x403eb940"/>
        <function-ref name="clr" scoped="" ref="0x403eba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403eae48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9050"/>
        <function-ref name="isInput" scoped="" ref="0x403e9130"/>
        <function-ref name="toggle" scoped="" ref="0x403e9210"/>
        <function-ref name="isOutput" scoped="" ref="0x403e92f0"/>
        <function-ref name="get" scoped="" ref="0x403e93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e94b0"/>
        <function-ref name="set" scoped="" ref="0x403e9590"/>
        <function-ref name="clr" scoped="" ref="0x403e9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e8ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403e8d80"/>
        <function-ref name="toggle" scoped="" ref="0x403e8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1010"/>
        <function-ref name="get" scoped="" ref="0x403f10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f11d0"/>
        <function-ref name="set" scoped="" ref="0x403f12b0"/>
        <function-ref name="clr" scoped="" ref="0x403f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403ebb80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ebd58"/>
        <function-ref name="isInput" scoped="" ref="0x403ebe38"/>
        <function-ref name="toggle" scoped="" ref="0x403ebf18"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea010"/>
        <function-ref name="get" scoped="" ref="0x403ea0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea1d0"/>
        <function-ref name="set" scoped="" ref="0x403ea2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ea390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403e97d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e99a8"/>
        <function-ref name="isInput" scoped="" ref="0x403e9a88"/>
        <function-ref name="toggle" scoped="" ref="0x403e9b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9c48"/>
        <function-ref name="get" scoped="" ref="0x403e9d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9e08"/>
        <function-ref name="set" scoped="" ref="0x403e9ee8"/>
        <function-ref name="clr" scoped="" ref="0x403e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f14f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f16c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f17a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f1888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1968"/>
        <function-ref name="get" scoped="" ref="0x403f1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1b28"/>
        <function-ref name="set" scoped="" ref="0x403f1c08"/>
        <function-ref name="clr" scoped="" ref="0x403f1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41485de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41485de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41481010"/>
        <function-ref name="isInput" scoped="" ref="0x414810f0"/>
        <function-ref name="toggle" scoped="" ref="0x414811d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414812b0"/>
        <function-ref name="get" scoped="" ref="0x41481390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41481470"/>
        <function-ref name="set" scoped="" ref="0x41481550"/>
        <function-ref name="clr" scoped="" ref="0x41481630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414807f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414807f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414809d0"/>
        <function-ref name="isInput" scoped="" ref="0x41480ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41480b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41480c70"/>
        <function-ref name="get" scoped="" ref="0x41480d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41480e30"/>
        <function-ref name="set" scoped="" ref="0x41480f10"/>
        <function-ref name="clr" scoped="" ref="0x4147f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4147e228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4147e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147e400"/>
        <function-ref name="isInput" scoped="" ref="0x4147e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4147e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4147e6a0"/>
        <function-ref name="get" scoped="" ref="0x4147e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4147e860"/>
        <function-ref name="set" scoped="" ref="0x4147e940"/>
        <function-ref name="clr" scoped="" ref="0x4147ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4147dc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4147dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4147dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4147c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4147c0f0"/>
        <function-ref name="get" scoped="" ref="0x4147c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4147c2b0"/>
        <function-ref name="set" scoped="" ref="0x4147c390"/>
        <function-ref name="clr" scoped="" ref="0x4147c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4147b6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4147b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147b898"/>
        <function-ref name="isInput" scoped="" ref="0x4147b978"/>
        <function-ref name="toggle" scoped="" ref="0x4147ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x4147bb38"/>
        <function-ref name="get" scoped="" ref="0x4147bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4147bcf8"/>
        <function-ref name="set" scoped="" ref="0x4147bdd8"/>
        <function-ref name="clr" scoped="" ref="0x4147beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414790b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414790b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41479288"/>
        <function-ref name="isInput" scoped="" ref="0x41479368"/>
        <function-ref name="toggle" scoped="" ref="0x41479448"/>
        <function-ref name="isOutput" scoped="" ref="0x41479528"/>
        <function-ref name="get" scoped="" ref="0x41479608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414796e8"/>
        <function-ref name="set" scoped="" ref="0x414797c8"/>
        <function-ref name="clr" scoped="" ref="0x414798a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41478a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41478a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41478c60"/>
        <function-ref name="isInput" scoped="" ref="0x41478d40"/>
        <function-ref name="toggle" scoped="" ref="0x41478e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41478f00"/>
        <function-ref name="get" scoped="" ref="0x41477010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414770f0"/>
        <function-ref name="set" scoped="" ref="0x414771d0"/>
        <function-ref name="clr" scoped="" ref="0x414772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414c2538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414c2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414c2710"/>
        <function-ref name="isInput" scoped="" ref="0x414c27f0"/>
        <function-ref name="toggle" scoped="" ref="0x414c28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414c29b0"/>
        <function-ref name="get" scoped="" ref="0x414c2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414c2b70"/>
        <function-ref name="set" scoped="" ref="0x414c2c50"/>
        <function-ref name="clr" scoped="" ref="0x414c2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f6e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f5050"/>
        <function-ref name="isInput" scoped="" ref="0x403f5130"/>
        <function-ref name="toggle" scoped="" ref="0x403f5210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f52f0"/>
        <function-ref name="get" scoped="" ref="0x403f53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f54b0"/>
        <function-ref name="set" scoped="" ref="0x403f5590"/>
        <function-ref name="clr" scoped="" ref="0x403f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403f4ac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403f4d80"/>
        <function-ref name="toggle" scoped="" ref="0x403f4e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3010"/>
        <function-ref name="get" scoped="" ref="0x403f30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f31d0"/>
        <function-ref name="set" scoped="" ref="0x403f32b0"/>
        <function-ref name="clr" scoped="" ref="0x403f3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403edb00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403edcd8"/>
        <function-ref name="isInput" scoped="" ref="0x403eddb8"/>
        <function-ref name="toggle" scoped="" ref="0x403ede98"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6010"/>
        <function-ref name="get" scoped="" ref="0x403f60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f61d0"/>
        <function-ref name="set" scoped="" ref="0x403f62b0"/>
        <function-ref name="clr" scoped="" ref="0x403f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403f57d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f59a8"/>
        <function-ref name="isInput" scoped="" ref="0x403f5a88"/>
        <function-ref name="toggle" scoped="" ref="0x403f5b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403f5c48"/>
        <function-ref name="get" scoped="" ref="0x403f5d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f5e08"/>
        <function-ref name="set" scoped="" ref="0x403f5ee8"/>
        <function-ref name="clr" scoped="" ref="0x403f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403f34f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f36c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f37a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f3888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3968"/>
        <function-ref name="get" scoped="" ref="0x403f3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f3b28"/>
        <function-ref name="set" scoped="" ref="0x403f3c08"/>
        <function-ref name="clr" scoped="" ref="0x403f3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f64f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f66c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f67a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f6888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6968"/>
        <function-ref name="get" scoped="" ref="0x403f6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6b28"/>
        <function-ref name="set" scoped="" ref="0x403f6c08"/>
        <function-ref name="clr" scoped="" ref="0x403f6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403f4170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4348"/>
        <function-ref name="isInput" scoped="" ref="0x403f4428"/>
        <function-ref name="toggle" scoped="" ref="0x403f4508"/>
        <function-ref name="isOutput" scoped="" ref="0x403f45e8"/>
        <function-ref name="get" scoped="" ref="0x403f46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f47a8"/>
        <function-ref name="set" scoped="" ref="0x403f4888"/>
        <function-ref name="clr" scoped="" ref="0x403f4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f3e48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2050"/>
        <function-ref name="isInput" scoped="" ref="0x403f2130"/>
        <function-ref name="toggle" scoped="" ref="0x403f2210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f22f0"/>
        <function-ref name="get" scoped="" ref="0x403f23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f24b0"/>
        <function-ref name="set" scoped="" ref="0x403f2590"/>
        <function-ref name="clr" scoped="" ref="0x403f2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414e3938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414e3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414e3b10"/>
        <function-ref name="isInput" scoped="" ref="0x414e3bf0"/>
        <function-ref name="toggle" scoped="" ref="0x414e3cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x414e3db0"/>
        <function-ref name="get" scoped="" ref="0x414e3e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414e2010"/>
        <function-ref name="set" scoped="" ref="0x414e20f0"/>
        <function-ref name="clr" scoped="" ref="0x414e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414e13b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414e13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414e1588"/>
        <function-ref name="isInput" scoped="" ref="0x414e1668"/>
        <function-ref name="toggle" scoped="" ref="0x414e1748"/>
        <function-ref name="isOutput" scoped="" ref="0x414e1828"/>
        <function-ref name="get" scoped="" ref="0x414e1908"/>
        <function-ref name="makeOutput" scoped="" ref="0x414e19e8"/>
        <function-ref name="set" scoped="" ref="0x414e1ac8"/>
        <function-ref name="clr" scoped="" ref="0x414e1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414e0d70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414e0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414df010"/>
        <function-ref name="isInput" scoped="" ref="0x414df0f0"/>
        <function-ref name="toggle" scoped="" ref="0x414df1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414df2b0"/>
        <function-ref name="get" scoped="" ref="0x414df390"/>
        <function-ref name="makeOutput" scoped="" ref="0x414df470"/>
        <function-ref name="set" scoped="" ref="0x414df550"/>
        <function-ref name="clr" scoped="" ref="0x414df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414de7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414de7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414de9d0"/>
        <function-ref name="isInput" scoped="" ref="0x414deab0"/>
        <function-ref name="toggle" scoped="" ref="0x414deb90"/>
        <function-ref name="isOutput" scoped="" ref="0x414dec70"/>
        <function-ref name="get" scoped="" ref="0x414ded50"/>
        <function-ref name="makeOutput" scoped="" ref="0x414dee30"/>
        <function-ref name="set" scoped="" ref="0x414def10"/>
        <function-ref name="clr" scoped="" ref="0x414dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414dc228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414dc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414dc400"/>
        <function-ref name="isInput" scoped="" ref="0x414dc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x414dc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414dc6a0"/>
        <function-ref name="get" scoped="" ref="0x414dc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x414dc860"/>
        <function-ref name="set" scoped="" ref="0x414dc940"/>
        <function-ref name="clr" scoped="" ref="0x414dca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414dbc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414dbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414dbde0"/>
        <function-ref name="isInput" scoped="" ref="0x414dbec0"/>
        <function-ref name="toggle" scoped="" ref="0x414d9010"/>
        <function-ref name="isOutput" scoped="" ref="0x414d90f0"/>
        <function-ref name="get" scoped="" ref="0x414d91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d92b0"/>
        <function-ref name="set" scoped="" ref="0x414d9390"/>
        <function-ref name="clr" scoped="" ref="0x414d9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d86c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d8898"/>
        <function-ref name="isInput" scoped="" ref="0x414d8978"/>
        <function-ref name="toggle" scoped="" ref="0x414d8a58"/>
        <function-ref name="isOutput" scoped="" ref="0x414d8b38"/>
        <function-ref name="get" scoped="" ref="0x414d8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d8cf8"/>
        <function-ref name="set" scoped="" ref="0x414d8dd8"/>
        <function-ref name="clr" scoped="" ref="0x414d8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d60b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d6288"/>
        <function-ref name="isInput" scoped="" ref="0x414d6368"/>
        <function-ref name="toggle" scoped="" ref="0x414d6448"/>
        <function-ref name="isOutput" scoped="" ref="0x414d6528"/>
        <function-ref name="get" scoped="" ref="0x414d6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d66e8"/>
        <function-ref name="set" scoped="" ref="0x414d67c8"/>
        <function-ref name="clr" scoped="" ref="0x414d68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f76b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f7888"/>
        <function-ref name="isInput" scoped="" ref="0x403f7968"/>
        <function-ref name="toggle" scoped="" ref="0x403f7a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f7b28"/>
        <function-ref name="get" scoped="" ref="0x403f7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7ce8"/>
        <function-ref name="set" scoped="" ref="0x403f7dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403ff330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff508"/>
        <function-ref name="isInput" scoped="" ref="0x403ff5e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ff6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff7a8"/>
        <function-ref name="get" scoped="" ref="0x403ff888"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff968"/>
        <function-ref name="set" scoped="" ref="0x403ffa48"/>
        <function-ref name="clr" scoped="" ref="0x403ffb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f83d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f85b0"/>
        <function-ref name="isInput" scoped="" ref="0x403f8690"/>
        <function-ref name="toggle" scoped="" ref="0x403f8770"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8850"/>
        <function-ref name="get" scoped="" ref="0x403f8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8a10"/>
        <function-ref name="set" scoped="" ref="0x403f8af0"/>
        <function-ref name="clr" scoped="" ref="0x403f8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40400030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40400030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400208"/>
        <function-ref name="isInput" scoped="" ref="0x404002e8"/>
        <function-ref name="toggle" scoped="" ref="0x404003c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404004a8"/>
        <function-ref name="get" scoped="" ref="0x40400588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400668"/>
        <function-ref name="set" scoped="" ref="0x40400748"/>
        <function-ref name="clr" scoped="" ref="0x40400828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403ffc88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffe60"/>
        <function-ref name="isInput" scoped="" ref="0x403fe010"/>
        <function-ref name="toggle" scoped="" ref="0x403fe0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe1d0"/>
        <function-ref name="get" scoped="" ref="0x403fe2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe390"/>
        <function-ref name="set" scoped="" ref="0x403fe470"/>
        <function-ref name="clr" scoped="" ref="0x403fe550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f8d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8f08"/>
        <function-ref name="isInput" scoped="" ref="0x403f7010"/>
        <function-ref name="toggle" scoped="" ref="0x403f70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f71d0"/>
        <function-ref name="get" scoped="" ref="0x403f72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7390"/>
        <function-ref name="set" scoped="" ref="0x403f7470"/>
        <function-ref name="clr" scoped="" ref="0x403f7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40400988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40400988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400b60"/>
        <function-ref name="isInput" scoped="" ref="0x40400c40"/>
        <function-ref name="toggle" scoped="" ref="0x40400d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40400e00"/>
        <function-ref name="get" scoped="" ref="0x40400ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff010"/>
        <function-ref name="set" scoped="" ref="0x403ff0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403fe6b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe888"/>
        <function-ref name="isInput" scoped="" ref="0x403fe968"/>
        <function-ref name="toggle" scoped="" ref="0x403fea48"/>
        <function-ref name="isOutput" scoped="" ref="0x403feb28"/>
        <function-ref name="get" scoped="" ref="0x403fec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fece8"/>
        <function-ref name="set" scoped="" ref="0x403fedc8"/>
        <function-ref name="clr" scoped="" ref="0x403feea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f8538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f8710"/>
        <function-ref name="isInput" scoped="" ref="0x414f87f0"/>
        <function-ref name="toggle" scoped="" ref="0x414f88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414f89b0"/>
        <function-ref name="get" scoped="" ref="0x414f8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f8b70"/>
        <function-ref name="set" scoped="" ref="0x414f8c50"/>
        <function-ref name="clr" scoped="" ref="0x414f8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f6010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f61e8"/>
        <function-ref name="isInput" scoped="" ref="0x414f62c8"/>
        <function-ref name="toggle" scoped="" ref="0x414f63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414f6488"/>
        <function-ref name="get" scoped="" ref="0x414f6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f6648"/>
        <function-ref name="set" scoped="" ref="0x414f6728"/>
        <function-ref name="clr" scoped="" ref="0x414f6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f59e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x414f5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x414f5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x414f5e60"/>
        <function-ref name="get" scoped="" ref="0x414f4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f40f0"/>
        <function-ref name="set" scoped="" ref="0x414f41d0"/>
        <function-ref name="clr" scoped="" ref="0x414f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f3538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f3710"/>
        <function-ref name="isInput" scoped="" ref="0x414f37f0"/>
        <function-ref name="toggle" scoped="" ref="0x414f38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414f39b0"/>
        <function-ref name="get" scoped="" ref="0x414f3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f3b70"/>
        <function-ref name="set" scoped="" ref="0x414f3c50"/>
        <function-ref name="clr" scoped="" ref="0x414f3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f1010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f11e8"/>
        <function-ref name="isInput" scoped="" ref="0x414f12c8"/>
        <function-ref name="toggle" scoped="" ref="0x414f13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414f1488"/>
        <function-ref name="get" scoped="" ref="0x414f1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f1648"/>
        <function-ref name="set" scoped="" ref="0x414f1728"/>
        <function-ref name="clr" scoped="" ref="0x414f1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f09e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x414f0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x414f0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x414f0e60"/>
        <function-ref name="get" scoped="" ref="0x414ef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414ef0f0"/>
        <function-ref name="set" scoped="" ref="0x414ef1d0"/>
        <function-ref name="clr" scoped="" ref="0x414ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ee538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ee538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ee710"/>
        <function-ref name="isInput" scoped="" ref="0x414ee7f0"/>
        <function-ref name="toggle" scoped="" ref="0x414ee8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414ee9b0"/>
        <function-ref name="get" scoped="" ref="0x414eea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414eeb70"/>
        <function-ref name="set" scoped="" ref="0x414eec50"/>
        <function-ref name="clr" scoped="" ref="0x414eed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ec010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ec1e8"/>
        <function-ref name="isInput" scoped="" ref="0x414ec2c8"/>
        <function-ref name="toggle" scoped="" ref="0x414ec3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414ec488"/>
        <function-ref name="get" scoped="" ref="0x414ec568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414ec648"/>
        <function-ref name="set" scoped="" ref="0x414ec728"/>
        <function-ref name="clr" scoped="" ref="0x414ec808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40403170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40403170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403348"/>
        <function-ref name="isInput" scoped="" ref="0x40403428"/>
        <function-ref name="toggle" scoped="" ref="0x40403508"/>
        <function-ref name="isOutput" scoped="" ref="0x404035e8"/>
        <function-ref name="get" scoped="" ref="0x404036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404037a8"/>
        <function-ref name="set" scoped="" ref="0x40403888"/>
        <function-ref name="clr" scoped="" ref="0x40403968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40401e48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a050"/>
        <function-ref name="isInput" scoped="" ref="0x4040a130"/>
        <function-ref name="toggle" scoped="" ref="0x4040a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a2f0"/>
        <function-ref name="get" scoped="" ref="0x4040a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a4b0"/>
        <function-ref name="set" scoped="" ref="0x4040a590"/>
        <function-ref name="clr" scoped="" ref="0x4040a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40405dc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404010"/>
        <function-ref name="isInput" scoped="" ref="0x404040f0"/>
        <function-ref name="toggle" scoped="" ref="0x404041d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404042b0"/>
        <function-ref name="get" scoped="" ref="0x40404390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404470"/>
        <function-ref name="set" scoped="" ref="0x40404550"/>
        <function-ref name="clr" scoped="" ref="0x40404630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40403ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40403d80"/>
        <function-ref name="toggle" scoped="" ref="0x40403e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40401010"/>
        <function-ref name="get" scoped="" ref="0x404010f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404011d0"/>
        <function-ref name="set" scoped="" ref="0x404012b0"/>
        <function-ref name="clr" scoped="" ref="0x40401390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040a7d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4040ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ac48"/>
        <function-ref name="get" scoped="" ref="0x4040ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ae08"/>
        <function-ref name="set" scoped="" ref="0x4040aee8"/>
        <function-ref name="clr" scoped="" ref="0x40409010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40404790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40404790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404968"/>
        <function-ref name="isInput" scoped="" ref="0x40404a48"/>
        <function-ref name="toggle" scoped="" ref="0x40404b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40404c08"/>
        <function-ref name="get" scoped="" ref="0x40404ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404dc8"/>
        <function-ref name="set" scoped="" ref="0x40404ea8"/>
        <function-ref name="clr" scoped="" ref="0x40403010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404014f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404016c8"/>
        <function-ref name="isInput" scoped="" ref="0x404017a8"/>
        <function-ref name="toggle" scoped="" ref="0x40401888"/>
        <function-ref name="isOutput" scoped="" ref="0x40401968"/>
        <function-ref name="get" scoped="" ref="0x40401a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401b28"/>
        <function-ref name="set" scoped="" ref="0x40401c08"/>
        <function-ref name="clr" scoped="" ref="0x40401ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40409170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40409170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409348"/>
        <function-ref name="isInput" scoped="" ref="0x40409428"/>
        <function-ref name="toggle" scoped="" ref="0x40409508"/>
        <function-ref name="isOutput" scoped="" ref="0x404095e8"/>
        <function-ref name="get" scoped="" ref="0x404096c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404097a8"/>
        <function-ref name="set" scoped="" ref="0x40409888"/>
        <function-ref name="clr" scoped="" ref="0x40409968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4155d418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4155d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4155d5f0"/>
        <function-ref name="isInput" scoped="" ref="0x4155d6d0"/>
        <function-ref name="toggle" scoped="" ref="0x4155d7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4155d890"/>
        <function-ref name="get" scoped="" ref="0x4155d970"/>
        <function-ref name="makeOutput" scoped="" ref="0x4155da50"/>
        <function-ref name="set" scoped="" ref="0x4155db30"/>
        <function-ref name="clr" scoped="" ref="0x4155dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4155cde0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4155cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4155b010"/>
        <function-ref name="isInput" scoped="" ref="0x4155b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4155b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4155b2b0"/>
        <function-ref name="get" scoped="" ref="0x4155b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4155b470"/>
        <function-ref name="set" scoped="" ref="0x4155b550"/>
        <function-ref name="clr" scoped="" ref="0x4155b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4155a7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4155a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4155a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4155aab0"/>
        <function-ref name="toggle" scoped="" ref="0x4155ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x4155ac70"/>
        <function-ref name="get" scoped="" ref="0x4155ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4155ae30"/>
        <function-ref name="set" scoped="" ref="0x4155af10"/>
        <function-ref name="clr" scoped="" ref="0x41559010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41558228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41558228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41558400"/>
        <function-ref name="isInput" scoped="" ref="0x415584e0"/>
        <function-ref name="toggle" scoped="" ref="0x415585c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415586a0"/>
        <function-ref name="get" scoped="" ref="0x41558780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41558860"/>
        <function-ref name="set" scoped="" ref="0x41558940"/>
        <function-ref name="clr" scoped="" ref="0x41558a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41556c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41556c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41556de0"/>
        <function-ref name="isInput" scoped="" ref="0x41556ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41555010"/>
        <function-ref name="isOutput" scoped="" ref="0x415550f0"/>
        <function-ref name="get" scoped="" ref="0x415551d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415552b0"/>
        <function-ref name="set" scoped="" ref="0x41555390"/>
        <function-ref name="clr" scoped="" ref="0x41555470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415546c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41554898"/>
        <function-ref name="isInput" scoped="" ref="0x41554978"/>
        <function-ref name="toggle" scoped="" ref="0x41554a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41554b38"/>
        <function-ref name="get" scoped="" ref="0x41554c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41554cf8"/>
        <function-ref name="set" scoped="" ref="0x41554dd8"/>
        <function-ref name="clr" scoped="" ref="0x41554eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415520b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415520b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41552288"/>
        <function-ref name="isInput" scoped="" ref="0x41552368"/>
        <function-ref name="toggle" scoped="" ref="0x41552448"/>
        <function-ref name="isOutput" scoped="" ref="0x41552528"/>
        <function-ref name="get" scoped="" ref="0x41552608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415526e8"/>
        <function-ref name="set" scoped="" ref="0x415527c8"/>
        <function-ref name="clr" scoped="" ref="0x415528a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41551a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41551a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41551c60"/>
        <function-ref name="isInput" scoped="" ref="0x41551d40"/>
        <function-ref name="toggle" scoped="" ref="0x41551e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41551f00"/>
        <function-ref name="get" scoped="" ref="0x41550010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415500f0"/>
        <function-ref name="set" scoped="" ref="0x415501d0"/>
        <function-ref name="clr" scoped="" ref="0x415502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040f7f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f9c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040faa8"/>
        <function-ref name="toggle" scoped="" ref="0x4040fb88"/>
        <function-ref name="isOutput" scoped="" ref="0x4040fc68"/>
        <function-ref name="get" scoped="" ref="0x4040fd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fe28"/>
        <function-ref name="set" scoped="" ref="0x4040ff08"/>
        <function-ref name="clr" scoped="" ref="0x4040e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040d4f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d968"/>
        <function-ref name="get" scoped="" ref="0x4040da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040db28"/>
        <function-ref name="set" scoped="" ref="0x4040dc08"/>
        <function-ref name="clr" scoped="" ref="0x4040dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40406518" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40406518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404066f0"/>
        <function-ref name="isInput" scoped="" ref="0x404067d0"/>
        <function-ref name="toggle" scoped="" ref="0x404068b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40406990"/>
        <function-ref name="get" scoped="" ref="0x40406a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406b50"/>
        <function-ref name="set" scoped="" ref="0x40406c30"/>
        <function-ref name="clr" scoped="" ref="0x40406d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040e170" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e348"/>
        <function-ref name="isInput" scoped="" ref="0x4040e428"/>
        <function-ref name="toggle" scoped="" ref="0x4040e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e5e8"/>
        <function-ref name="get" scoped="" ref="0x4040e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e7a8"/>
        <function-ref name="set" scoped="" ref="0x4040e888"/>
        <function-ref name="clr" scoped="" ref="0x4040e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040de48" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c050"/>
        <function-ref name="isInput" scoped="" ref="0x4040c130"/>
        <function-ref name="toggle" scoped="" ref="0x4040c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c2f0"/>
        <function-ref name="get" scoped="" ref="0x4040c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c4b0"/>
        <function-ref name="set" scoped="" ref="0x4040c590"/>
        <function-ref name="clr" scoped="" ref="0x4040c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40406e70" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f070"/>
        <function-ref name="isInput" scoped="" ref="0x4040f150"/>
        <function-ref name="toggle" scoped="" ref="0x4040f230"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f310"/>
        <function-ref name="get" scoped="" ref="0x4040f3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f4d0"/>
        <function-ref name="set" scoped="" ref="0x4040f5b0"/>
        <function-ref name="clr" scoped="" ref="0x4040f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040eac8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4040ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4040ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d010"/>
        <function-ref name="get" scoped="" ref="0x4040d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d1d0"/>
        <function-ref name="set" scoped="" ref="0x4040d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040c7d0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4040cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040cc48"/>
        <function-ref name="get" scoped="" ref="0x4040cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ce08"/>
        <function-ref name="set" scoped="" ref="0x4040cee8"/>
        <function-ref name="clr" scoped="" ref="0x4040b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41578de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41578de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41574010"/>
        <function-ref name="isInput" scoped="" ref="0x415740f0"/>
        <function-ref name="toggle" scoped="" ref="0x415741d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415742b0"/>
        <function-ref name="get" scoped="" ref="0x41574390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41574470"/>
        <function-ref name="set" scoped="" ref="0x41574550"/>
        <function-ref name="clr" scoped="" ref="0x41574630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415737f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415737f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415739d0"/>
        <function-ref name="isInput" scoped="" ref="0x41573ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41573b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41573c70"/>
        <function-ref name="get" scoped="" ref="0x41573d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41573e30"/>
        <function-ref name="set" scoped="" ref="0x41573f10"/>
        <function-ref name="clr" scoped="" ref="0x41572010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41571228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41571228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41571400"/>
        <function-ref name="isInput" scoped="" ref="0x415714e0"/>
        <function-ref name="toggle" scoped="" ref="0x415715c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415716a0"/>
        <function-ref name="get" scoped="" ref="0x41571780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41571860"/>
        <function-ref name="set" scoped="" ref="0x41571940"/>
        <function-ref name="clr" scoped="" ref="0x41571a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41570c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41570c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41570de0"/>
        <function-ref name="isInput" scoped="" ref="0x41570ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4156f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4156f0f0"/>
        <function-ref name="get" scoped="" ref="0x4156f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156f2b0"/>
        <function-ref name="set" scoped="" ref="0x4156f390"/>
        <function-ref name="clr" scoped="" ref="0x4156f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156e6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156e898"/>
        <function-ref name="isInput" scoped="" ref="0x4156e978"/>
        <function-ref name="toggle" scoped="" ref="0x4156ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x4156eb38"/>
        <function-ref name="get" scoped="" ref="0x4156ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156ecf8"/>
        <function-ref name="set" scoped="" ref="0x4156edd8"/>
        <function-ref name="clr" scoped="" ref="0x4156eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156c0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156c288"/>
        <function-ref name="isInput" scoped="" ref="0x4156c368"/>
        <function-ref name="toggle" scoped="" ref="0x4156c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4156c528"/>
        <function-ref name="get" scoped="" ref="0x4156c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156c6e8"/>
        <function-ref name="set" scoped="" ref="0x4156c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4156c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156ba88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156bc60"/>
        <function-ref name="isInput" scoped="" ref="0x4156bd40"/>
        <function-ref name="toggle" scoped="" ref="0x4156be20"/>
        <function-ref name="isOutput" scoped="" ref="0x4156bf00"/>
        <function-ref name="get" scoped="" ref="0x4156a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156a0f0"/>
        <function-ref name="set" scoped="" ref="0x4156a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4156a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41569538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41569538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41569710"/>
        <function-ref name="isInput" scoped="" ref="0x415697f0"/>
        <function-ref name="toggle" scoped="" ref="0x415698d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415699b0"/>
        <function-ref name="get" scoped="" ref="0x41569a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41569b70"/>
        <function-ref name="set" scoped="" ref="0x41569c50"/>
        <function-ref name="clr" scoped="" ref="0x41569d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40411818" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40411818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404119f0"/>
        <function-ref name="isInput" scoped="" ref="0x40411ad0"/>
        <function-ref name="toggle" scoped="" ref="0x40411bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40411c90"/>
        <function-ref name="get" scoped="" ref="0x40411d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411e50"/>
        <function-ref name="set" scoped="" ref="0x40410010"/>
        <function-ref name="clr" scoped="" ref="0x404100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40421ec0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40421ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404200c0"/>
        <function-ref name="isInput" scoped="" ref="0x404201a0"/>
        <function-ref name="toggle" scoped="" ref="0x40420280"/>
        <function-ref name="isOutput" scoped="" ref="0x40420360"/>
        <function-ref name="get" scoped="" ref="0x40420440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420520"/>
        <function-ref name="set" scoped="" ref="0x40420600"/>
        <function-ref name="clr" scoped="" ref="0x404206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40429538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40429538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429710"/>
        <function-ref name="isInput" scoped="" ref="0x404297f0"/>
        <function-ref name="toggle" scoped="" ref="0x404298d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404299b0"/>
        <function-ref name="get" scoped="" ref="0x40429a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429b70"/>
        <function-ref name="set" scoped="" ref="0x40429c50"/>
        <function-ref name="clr" scoped="" ref="0x40429d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40426b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40426b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426d40"/>
        <function-ref name="isInput" scoped="" ref="0x40426e20"/>
        <function-ref name="toggle" scoped="" ref="0x40426f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40425010"/>
        <function-ref name="get" scoped="" ref="0x404250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404251d0"/>
        <function-ref name="set" scoped="" ref="0x404252b0"/>
        <function-ref name="clr" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042f228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f400"/>
        <function-ref name="isInput" scoped="" ref="0x4042f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4042f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f6a0"/>
        <function-ref name="get" scoped="" ref="0x4042f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f860"/>
        <function-ref name="set" scoped="" ref="0x4042f940"/>
        <function-ref name="clr" scoped="" ref="0x4042fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042d880" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042da58"/>
        <function-ref name="isInput" scoped="" ref="0x4042db38"/>
        <function-ref name="toggle" scoped="" ref="0x4042dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dcf8"/>
        <function-ref name="get" scoped="" ref="0x4042ddd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042deb8"/>
        <function-ref name="set" scoped="" ref="0x4042b010"/>
        <function-ref name="clr" scoped="" ref="0x4042b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40435010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40435010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404351e8"/>
        <function-ref name="isInput" scoped="" ref="0x404352c8"/>
        <function-ref name="toggle" scoped="" ref="0x404353a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40435488"/>
        <function-ref name="get" scoped="" ref="0x40435568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435648"/>
        <function-ref name="set" scoped="" ref="0x40435728"/>
        <function-ref name="clr" scoped="" ref="0x40435808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404335e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404335e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404337c0"/>
        <function-ref name="isInput" scoped="" ref="0x404338a0"/>
        <function-ref name="toggle" scoped="" ref="0x40433980"/>
        <function-ref name="isOutput" scoped="" ref="0x40433a60"/>
        <function-ref name="get" scoped="" ref="0x40433b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433c20"/>
        <function-ref name="set" scoped="" ref="0x40433d00"/>
        <function-ref name="clr" scoped="" ref="0x40433de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40430bd0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40430bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430da8"/>
        <function-ref name="isInput" scoped="" ref="0x40430e88"/>
        <function-ref name="toggle" scoped="" ref="0x4043b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b0f0"/>
        <function-ref name="get" scoped="" ref="0x4043b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b2b0"/>
        <function-ref name="set" scoped="" ref="0x4043b390"/>
        <function-ref name="clr" scoped="" ref="0x4043b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40439228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40439228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439400"/>
        <function-ref name="isInput" scoped="" ref="0x404394e0"/>
        <function-ref name="toggle" scoped="" ref="0x404395c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404396a0"/>
        <function-ref name="get" scoped="" ref="0x40439780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439860"/>
        <function-ref name="set" scoped="" ref="0x40439940"/>
        <function-ref name="clr" scoped="" ref="0x40439a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40437788" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40437788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437960"/>
        <function-ref name="isInput" scoped="" ref="0x40437a40"/>
        <function-ref name="toggle" scoped="" ref="0x40437b20"/>
        <function-ref name="isOutput" scoped="" ref="0x40437c00"/>
        <function-ref name="get" scoped="" ref="0x40437ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437dc0"/>
        <function-ref name="set" scoped="" ref="0x40437ea0"/>
        <function-ref name="clr" scoped="" ref="0x40436010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40440d00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40440d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440ed8"/>
        <function-ref name="isInput" scoped="" ref="0x4043f010"/>
        <function-ref name="toggle" scoped="" ref="0x4043f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f1d0"/>
        <function-ref name="get" scoped="" ref="0x4043f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f390"/>
        <function-ref name="set" scoped="" ref="0x4043f470"/>
        <function-ref name="clr" scoped="" ref="0x4043f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043d260" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d438"/>
        <function-ref name="isInput" scoped="" ref="0x4043d518"/>
        <function-ref name="toggle" scoped="" ref="0x4043d5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d6d8"/>
        <function-ref name="get" scoped="" ref="0x4043d7b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d898"/>
        <function-ref name="set" scoped="" ref="0x4043d978"/>
        <function-ref name="clr" scoped="" ref="0x4043da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404636d8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404636d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404638b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40463a88" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40463a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40463c60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40463d40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40463e20"/>
        <function-ref name="actualMicro" scoped="" ref="0x40463f00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40462010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40474240" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40474240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40474418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40457418" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40457418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404575f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40457d78" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40457d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404577b0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40457988"/>
        <function-ref name="taskLoop" scoped="" ref="0x40457a68"/>
        <function-ref name="runNextTask" scoped="" ref="0x40457b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f2bc0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f2d98"/>
        <function-ref name="runTask" scoped="" ref="0x402f2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402eb408" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402eb5e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402eb6c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402eb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40358950" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40358950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40358b28"/>
        <function-ref name="runTask" scoped="" ref="0x40358c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4035d5f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40358118" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40358118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403582f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403583d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403584b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4036a370" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4036a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4036a548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40366010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40366010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403661e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40366cc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40366ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x404a4010" loc="21:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x404a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x404a41e8"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x404a42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x4049be50" loc="20:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x4049be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404a1188" loc="16:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404a1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404a1360"/>
        <function-ref name="stopDone" scoped="" ref="0x404a1440"/>
        <function-ref name="start" scoped="" ref="0x404a1520"/>
        <function-ref name="stop" scoped="" ref="0x404a1600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_beacon" ref="0x4051c610" loc="75:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send_beacon" scoped="" ref="0x4051c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4051c7e8"/>
        <function-ref name="runTask" scoped="" ref="0x4051c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40507920" loc="29:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40507920"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404fb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404aba30" loc="15:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404aba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404abc08"/>
        <function-ref name="stopDone" scoped="" ref="0x404abce8"/>
        <function-ref name="start" scoped="" ref="0x404abdc8"/>
        <function-ref name="stop" scoped="" ref="0x404abea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnReqListenTimer" ref="0x404fabd0" loc="24:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnReqListenTimer" scoped="" ref="0x404fabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f76d8"/>
        <function-ref name="fired" scoped="" ref="0x404f8970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404f7098"/>
        <function-ref name="isOneShot" scoped="" ref="0x404f8e20"/>
        <function-ref name="getdt" scoped="" ref="0x404f7b88"/>
        <function-ref name="gett0" scoped="" ref="0x404f7930"/>
        <function-ref name="isRunning" scoped="" ref="0x404f8bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404f8218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f73b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404f8498"/>
        <function-ref name="stop" scoped="" ref="0x404f8718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SchedulerInit" ref="0x404fb2f8" loc="31:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SchedulerInit" scoped="" ref="0x404fb2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconWaitTimer" ref="0x404ee778" loc="23:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconWaitTimer" scoped="" ref="0x404ee778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404fa330"/>
        <function-ref name="fired" scoped="" ref="0x404ed520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404edc28"/>
        <function-ref name="isOneShot" scoped="" ref="0x404ed9d0"/>
        <function-ref name="getdt" scoped="" ref="0x404fa7e0"/>
        <function-ref name="gett0" scoped="" ref="0x404fa588"/>
        <function-ref name="isRunning" scoped="" ref="0x404ed778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404eeda0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404fa010"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ed048"/>
        <function-ref name="stop" scoped="" ref="0x404ed2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnRepWaitTimer" ref="0x404f6010" loc="25:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x404f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f4b00"/>
        <function-ref name="fired" scoped="" ref="0x404f6d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404f44c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404f4268"/>
        <function-ref name="getdt" scoped="" ref="0x40501010"/>
        <function-ref name="gett0" scoped="" ref="0x404f4d58"/>
        <function-ref name="isRunning" scoped="" ref="0x404f4010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404f6638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f47e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x404f68b8"/>
        <function-ref name="stop" scoped="" ref="0x404f6b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4050c7e0" loc="36:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4050c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4050c9b8"/>
        <function-ref name="rand32" scoped="" ref="0x4050ca98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x404e8418" loc="19:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x404e8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e85f0"/>
        <function-ref name="getPayload" scoped="" ref="0x404e86d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404e87b0"/>
        <function-ref name="cancel" scoped="" ref="0x404e8890"/>
        <function-ref name="sendDone" scoped="" ref="0x404e8970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x4050bad0" loc="37:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4050bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40506108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x4050d0f0" loc="41:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x4050d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4050d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x404ef3c0" loc="22:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x404ef3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404e1ec8"/>
        <function-ref name="fired" scoped="" ref="0x404e1180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404e1888"/>
        <function-ref name="isOneShot" scoped="" ref="0x404e1630"/>
        <function-ref name="getdt" scoped="" ref="0x404ee3a8"/>
        <function-ref name="gett0" scoped="" ref="0x404ee150"/>
        <function-ref name="isRunning" scoped="" ref="0x404e13d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404ef9e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404e1ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404efc68"/>
        <function-ref name="stop" scoped="" ref="0x404efee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateStopTimer" ref="0x404ff8f0" loc="27:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x404ff8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404fc3f8"/>
        <function-ref name="fired" scoped="" ref="0x404fd688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404fdd90"/>
        <function-ref name="isOneShot" scoped="" ref="0x404fdb38"/>
        <function-ref name="getdt" scoped="" ref="0x404fc8a8"/>
        <function-ref name="gett0" scoped="" ref="0x404fc650"/>
        <function-ref name="isRunning" scoped="" ref="0x404fd8e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404fff18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404fc0d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404fd1b0"/>
        <function-ref name="stop" scoped="" ref="0x404fd430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40508010" loc="32:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40508010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x405089c8"/>
        <function-ref name="getPPB" scoped="" ref="0x405082c8"/>
        <function-ref name="radioWakeup" scoped="" ref="0x405083a8"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40508488"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40508568"/>
        <function-ref name="setPPB" scoped="" ref="0x40508648"/>
        <function-ref name="stopTimers" scoped="" ref="0x40508728"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40508808"/>
        <function-ref name="startTimers" scoped="" ref="0x405088e8"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x405081e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405123f8" loc="38:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405123f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405125d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405126b0"/>
        <function-ref name="led1On" scoped="" ref="0x40512790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40512870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40512950"/>
        <function-ref name="get" scoped="" ref="0x40512a30"/>
        <function-ref name="led1Off" scoped="" ref="0x40512b10"/>
        <function-ref name="led2Off" scoped="" ref="0x40512e90"/>
        <function-ref name="set" scoped="" ref="0x40512bf0"/>
        <function-ref name="led0On" scoped="" ref="0x40512cd0"/>
        <function-ref name="led2On" scoped="" ref="0x40512db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReply" ref="0x40548400" loc="369:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReply" scoped="" ref="0x40548400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405485d8"/>
        <function-ref name="runTask" scoped="" ref="0x405486b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x404e6608" loc="20:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x404e6608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404e67e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x404e33b8" loc="18:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404e33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404e3590"/>
        <function-ref name="source" scoped="" ref="0x404e3670"/>
        <function-ref name="address" scoped="" ref="0x404e3750"/>
        <function-ref name="destination" scoped="" ref="0x404e3830"/>
        <function-ref name="setSource" scoped="" ref="0x404e3910"/>
        <function-ref name="setDestination" scoped="" ref="0x404e39f0"/>
        <function-ref name="type" scoped="" ref="0x404e3ad0"/>
        <function-ref name="setType" scoped="" ref="0x404e3bb0"/>
        <function-ref name="isForMe" scoped="" ref="0x404e3c90"/>
        <function-ref name="setGroup" scoped="" ref="0x404e3d70"/>
        <function-ref name="localGroup" scoped="" ref="0x404e3e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateTimer" ref="0x40501428" loc="26:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x40501428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404ff010"/>
        <function-ref name="fired" scoped="" ref="0x40500268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40500970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40500718"/>
        <function-ref name="getdt" scoped="" ref="0x404ff4c0"/>
        <function-ref name="gett0" scoped="" ref="0x404ff268"/>
        <function-ref name="isRunning" scoped="" ref="0x405004c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40501a50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40500c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40501cd0"/>
        <function-ref name="stop" scoped="" ref="0x40500010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendRequest" ref="0x4054ce38" loc="357:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendRequest" scoped="" ref="0x4054ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4054b050"/>
        <function-ref name="runTask" scoped="" ref="0x4054b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4057cca0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4057cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4057ce78"/>
        <function-ref name="stopDone" scoped="" ref="0x40579010"/>
        <function-ref name="start" scoped="" ref="0x405790f0"/>
        <function-ref name="stop" scoped="" ref="0x405791d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40579630" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40579630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40579808"/>
        <function-ref name="getPayload" scoped="" ref="0x405798e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405799c8"/>
        <function-ref name="cancel" scoped="" ref="0x40579aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x40579b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405786a8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405786a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40578880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405805e8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405805e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405807c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x405808a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40580980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40580a60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40580b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40589920" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40589920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40581438"/>
        <function-ref name="clear" scoped="" ref="0x405817e8"/>
        <function-ref name="isValid" scoped="" ref="0x40581088"/>
        <function-ref name="set" scoped="" ref="0x40581b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40578010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40578010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405781e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40576010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40576010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405761e8"/>
        <function-ref name="noAck" scoped="" ref="0x405762c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405763a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40580cd8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40580cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40580eb0"/>
        <function-ref name="source" scoped="" ref="0x40577010"/>
        <function-ref name="address" scoped="" ref="0x405770f0"/>
        <function-ref name="destination" scoped="" ref="0x405771d0"/>
        <function-ref name="setSource" scoped="" ref="0x405772b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40577390"/>
        <function-ref name="type" scoped="" ref="0x40577470"/>
        <function-ref name="setType" scoped="" ref="0x40577550"/>
        <function-ref name="isForMe" scoped="" ref="0x40577630"/>
        <function-ref name="setGroup" scoped="" ref="0x40577710"/>
        <function-ref name="localGroup" scoped="" ref="0x405777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405862e8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405862e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40586de8"/>
        <function-ref name="clear" scoped="" ref="0x405851b8"/>
        <function-ref name="isValid" scoped="" ref="0x40586a38"/>
        <function-ref name="set" scoped="" ref="0x40585568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405922e8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405922e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405924c0"/>
        <function-ref name="stopDone" scoped="" ref="0x405925a0"/>
        <function-ref name="start" scoped="" ref="0x40592680"/>
        <function-ref name="stop" scoped="" ref="0x40592760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405a4ab8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405a4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405a4c90"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405a4d70"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405a4e50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40599010"/>
        <function-ref name="setCca" scoped="" ref="0x405990f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405a6788" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405a6788"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405a69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058fc78" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058fe50"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4058e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058e1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40592bc0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40592bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40592d98"/>
        <function-ref name="getPayload" scoped="" ref="0x40592e78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40591010"/>
        <function-ref name="cancel" scoped="" ref="0x405910f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405911d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40591cd0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40591cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40591ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x4059a430" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4059a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4059a608"/>
        <function-ref name="getRssi" scoped="" ref="0x4059a6e8"/>
        <function-ref name="getPower" scoped="" ref="0x4059a7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x4059a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4059ecc8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4059ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4059eea0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40598010"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x405980f0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x405981d0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x405982b0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40598390"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40598470"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40598550"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40598630"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40598710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40591638" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40591638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40591810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4059aac8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4059aca0"/>
        <function-ref name="noAck" scoped="" ref="0x4059ad80"/>
        <function-ref name="wasAcked" scoped="" ref="0x4059ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405a7bf8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405a7bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405a7dd0"/>
        <function-ref name="setRetries" scoped="" ref="0x405a7eb0"/>
        <function-ref name="getRetries" scoped="" ref="0x405a3010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405a30f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405a31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4058f060" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4058f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4058f238"/>
        <function-ref name="source" scoped="" ref="0x4058f318"/>
        <function-ref name="address" scoped="" ref="0x4058f3f8"/>
        <function-ref name="destination" scoped="" ref="0x4058f4d8"/>
        <function-ref name="setSource" scoped="" ref="0x4058f5b8"/>
        <function-ref name="setDestination" scoped="" ref="0x4058f698"/>
        <function-ref name="type" scoped="" ref="0x4058f778"/>
        <function-ref name="setType" scoped="" ref="0x4058f858"/>
        <function-ref name="isForMe" scoped="" ref="0x4058f938"/>
        <function-ref name="setGroup" scoped="" ref="0x4058fa18"/>
        <function-ref name="localGroup" scoped="" ref="0x4058faf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4059c010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4059c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4059c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x405bcbb8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x405bcbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405bcd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x405bc450" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x405bc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405bc628"/>
        <function-ref name="getPayload" scoped="" ref="0x405bc708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bc7e8"/>
        <function-ref name="cancel" scoped="" ref="0x405bc8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x405bc9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x405c58c0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x405c58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x405c5a98"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x405c5b78"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x405c5c58"/>
        <function-ref name="syncDone" scoped="" ref="0x405c5d38"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x405c5e18"/>
        <function-ref name="setShortAddr" scoped="" ref="0x405c5ef8"/>
        <function-ref name="setChannel" scoped="" ref="0x405bd010"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x405bd0f0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x405bd1d0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x405bd2b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x405bd390"/>
        <function-ref name="sync" scoped="" ref="0x405bd470"/>
        <function-ref name="getChannel" scoped="" ref="0x405bd550"/>
        <function-ref name="getPanAddr" scoped="" ref="0x405bd6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405b3b30" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405b3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405b3d08"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405b3de8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405b3ec8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405b2010"/>
        <function-ref name="setCca" scoped="" ref="0x405b20f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405b21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405b34b8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405b34b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405b3690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405c1938" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405c1938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c1b10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405c1bf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405c1cd0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405c1db0"/>
        <function-ref name="setCca" scoped="" ref="0x405c1e90"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405b4ab0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405b4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b4c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b4d68"/>
        <function-ref name="getPayload" scoped="" ref="0x405b4e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b4f28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405a8aa0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405a8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405a8c78"/>
        <function-ref name="getPayload" scoped="" ref="0x405a8d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a8e38"/>
        <function-ref name="cancel" scoped="" ref="0x405a8f18"/>
        <function-ref name="sendDone" scoped="" ref="0x405b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405b5b10" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405b5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x405b1010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405b11e8"/>
        <function-ref name="getRssi" scoped="" ref="0x405b12c8"/>
        <function-ref name="getPower" scoped="" ref="0x405b13a8"/>
        <function-ref name="getLqi" scoped="" ref="0x405b1488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x405c11f8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405c11f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x405c1450"/>
        <function-ref name="changed" scoped="" ref="0x405c1530"/>
        <function-ref name="amGroup" scoped="" ref="0x405c1610"/>
        <function-ref name="setAddress" scoped="" ref="0x405c16f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405baf10" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405baf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x405b0108"/>
        <function-ref name="getMetadata" scoped="" ref="0x405b01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405b5478" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405b5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b5650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405b9180" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405b9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405b9358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405b9438"/>
        <function-ref name="led1On" scoped="" ref="0x405b9518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405b95f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405b96d8"/>
        <function-ref name="get" scoped="" ref="0x405b97b8"/>
        <function-ref name="led1Off" scoped="" ref="0x405b9898"/>
        <function-ref name="led2Off" scoped="" ref="0x405b9c18"/>
        <function-ref name="set" scoped="" ref="0x405b9978"/>
        <function-ref name="led0On" scoped="" ref="0x405b9a58"/>
        <function-ref name="led2On" scoped="" ref="0x405b9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405b5e80" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405b5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b4070"/>
        <function-ref name="source" scoped="" ref="0x405b4150"/>
        <function-ref name="address" scoped="" ref="0x405b4230"/>
        <function-ref name="destination" scoped="" ref="0x405b4310"/>
        <function-ref name="setSource" scoped="" ref="0x405b43f0"/>
        <function-ref name="setDestination" scoped="" ref="0x405b44d0"/>
        <function-ref name="type" scoped="" ref="0x405b45b0"/>
        <function-ref name="setType" scoped="" ref="0x405b4690"/>
        <function-ref name="isForMe" scoped="" ref="0x405b4770"/>
        <function-ref name="setGroup" scoped="" ref="0x405b4850"/>
        <function-ref name="localGroup" scoped="" ref="0x405b4930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40602ee8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40602ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406010e0"/>
        <function-ref name="stopDone" scoped="" ref="0x406011c0"/>
        <function-ref name="start" scoped="" ref="0x406012a0"/>
        <function-ref name="stop" scoped="" ref="0x40601380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40600010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40600010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x406001e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x406002c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x406003a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40600488"/>
        <function-ref name="setCca" scoped="" ref="0x40600568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40600648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40601510" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40601510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406016e8"/>
        <function-ref name="getPayload" scoped="" ref="0x406017c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406018a8"/>
        <function-ref name="cancel" scoped="" ref="0x40601988"/>
        <function-ref name="sendDone" scoped="" ref="0x40601a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40601c10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40601c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40601de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40612010" loc="39:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40612010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406121e8"/>
        <function-ref name="stopDone" scoped="" ref="0x406122c8"/>
        <function-ref name="start" scoped="" ref="0x406123a8"/>
        <function-ref name="stop" scoped="" ref="0x40612488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40612d50" loc="41:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40612d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40612f28"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40611018"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x406110f8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x406111d8"/>
        <function-ref name="setCca" scoped="" ref="0x406112b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40611398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x4061c278" loc="47:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x4061c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4061c450"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4061c530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4061c610"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4061c6f0"/>
        <function-ref name="setCca" scoped="" ref="0x4061c7d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4061c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40619b60" loc="50:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40619b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40619d38"/>
        <function-ref name="getRssi" scoped="" ref="0x40619e18"/>
        <function-ref name="getPower" scoped="" ref="0x40619ef8"/>
        <function-ref name="getLqi" scoped="" ref="0x40625010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x406149e0" loc="46:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x406149e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40614bb8"/>
        <function-ref name="cancel" scoped="" ref="0x40614c98"/>
        <function-ref name="modify" scoped="" ref="0x40614d78"/>
        <function-ref name="sendDone" scoped="" ref="0x40614e58"/>
        <function-ref name="resend" scoped="" ref="0x4061c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40612618" loc="40:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40612618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406127f0"/>
        <function-ref name="getPayload" scoped="" ref="0x406128d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406129b0"/>
        <function-ref name="cancel" scoped="" ref="0x40612a90"/>
        <function-ref name="sendDone" scoped="" ref="0x40612b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4061ca50" loc="48:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4061ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4061cc28"/>
        <function-ref name="rand32" scoped="" ref="0x4061cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x406183b8" loc="45:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x406183b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40618590"/>
        <function-ref name="stop" scoped="" ref="0x40618670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40625218" loc="51:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40625218"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x406253f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x406254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x4061a9c0" loc="44:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4061a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4061ab98"/>
        <function-ref name="rfOff" scoped="" ref="0x4061ac78"/>
        <function-ref name="rxOn" scoped="" ref="0x4061ad58"/>
        <function-ref name="startVReg" scoped="" ref="0x4061ae38"/>
        <function-ref name="stopVReg" scoped="" ref="0x4061af18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4060f010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4060f0f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4060f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4061ce98" loc="49:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4061ce98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406190c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406191a0"/>
        <function-ref name="led1On" scoped="" ref="0x40619280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40619360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40619440"/>
        <function-ref name="get" scoped="" ref="0x40619520"/>
        <function-ref name="led1Off" scoped="" ref="0x40619600"/>
        <function-ref name="led2Off" scoped="" ref="0x40619980"/>
        <function-ref name="set" scoped="" ref="0x406196e0"/>
        <function-ref name="led0On" scoped="" ref="0x406197c0"/>
        <function-ref name="led2On" scoped="" ref="0x406198a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4060c850" loc="43:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4060c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4060ca28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4060cb08"/>
        <function-ref name="request" scoped="" ref="0x4060cbe8"/>
        <function-ref name="granted" scoped="" ref="0x4060ccc8"/>
        <function-ref name="isOwner" scoped="" ref="0x4060cda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x406209a0" loc="52:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x406209a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40620bf8"/>
        <function-ref name="toIdle" scoped="" ref="0x40620cd8"/>
        <function-ref name="isState" scoped="" ref="0x40620db8"/>
        <function-ref name="isIdle" scoped="" ref="0x40620e98"/>
        <function-ref name="requestState" scoped="" ref="0x40624010"/>
        <function-ref name="forceState" scoped="" ref="0x406240f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x4061fe80" loc="77:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x4061fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4061d070"/>
        <function-ref name="runTask" scoped="" ref="0x4061d150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x4061f670" loc="76:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x4061f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4061f848"/>
        <function-ref name="runTask" scoped="" ref="0x4061f928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x40623af8" loc="74:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x40623af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40623cd0"/>
        <function-ref name="runTask" scoped="" ref="0x40623db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40646d48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40646d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40646f20"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40657018"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x406570f8"/>
        <function-ref name="syncDone" scoped="" ref="0x406571d8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406572b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40657398"/>
        <function-ref name="setChannel" scoped="" ref="0x40657478"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40657558"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40657638"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40657718"/>
        <function-ref name="getShortAddr" scoped="" ref="0x406577f8"/>
        <function-ref name="sync" scoped="" ref="0x406578d8"/>
        <function-ref name="getChannel" scoped="" ref="0x406579b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40657b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40653ba8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40653ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406551f0"/>
        <function-ref name="readDone" scoped="" ref="0x40655448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40657ce8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40657ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40657ec0"/>
        <function-ref name="rfOff" scoped="" ref="0x40656010"/>
        <function-ref name="rxOn" scoped="" ref="0x406560f0"/>
        <function-ref name="startVReg" scoped="" ref="0x406561d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x406562b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40656390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40656470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40656550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40646610" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40646610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406467e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406468c8"/>
        <function-ref name="request" scoped="" ref="0x406469a8"/>
        <function-ref name="granted" scoped="" ref="0x40646a88"/>
        <function-ref name="isOwner" scoped="" ref="0x40646b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40651ad8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40651ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40651cb0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40651d90"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40651e70"/>
        <function-ref name="syncDone" scoped="" ref="0x40650010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406500f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406501d0"/>
        <function-ref name="setChannel" scoped="" ref="0x406502b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40650390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40650470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40650550"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40650630"/>
        <function-ref name="sync" scoped="" ref="0x40650710"/>
        <function-ref name="getChannel" scoped="" ref="0x406507f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40650950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40669520" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40669520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406696f8"/>
        <function-ref name="write" scoped="" ref="0x406697d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x4065c610" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x4065c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40661ab8"/>
        <function-ref name="fired" scoped="" ref="0x40661288"/>
        <function-ref name="startAt" scoped="" ref="0x40661778"/>
        <function-ref name="isRunning" scoped="" ref="0x40661500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40661d30"/>
        <function-ref name="start" scoped="" ref="0x4065cd60"/>
        <function-ref name="stop" scoped="" ref="0x40661010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4066bac8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4066bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066bca0"/>
        <function-ref name="write" scoped="" ref="0x4066bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4065ba38" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4065ba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065bc10"/>
        <function-ref name="isInput" scoped="" ref="0x4065bcf0"/>
        <function-ref name="toggle" scoped="" ref="0x4065bdd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4065beb0"/>
        <function-ref name="get" scoped="" ref="0x4065a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065a0f0"/>
        <function-ref name="set" scoped="" ref="0x4065a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4065a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4064f680" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4064f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4064fca8"/>
        <function-ref name="readDone" scoped="" ref="0x4064ff00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x40670cc8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x40670cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40670ea0"/>
        <function-ref name="runTask" scoped="" ref="0x4066f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40669a18" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40669a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40669bf0"/>
        <function-ref name="write" scoped="" ref="0x40669cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x4066b0a0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4066b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066b278"/>
        <function-ref name="write" scoped="" ref="0x4066b358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4066aca8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066aca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4066ae80"/>
        <function-ref name="changed" scoped="" ref="0x40658010"/>
        <function-ref name="amGroup" scoped="" ref="0x406580f0"/>
        <function-ref name="setAddress" scoped="" ref="0x406581d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4065b030" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4065b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065b208"/>
        <function-ref name="isInput" scoped="" ref="0x4065b2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4065b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4065b4a8"/>
        <function-ref name="get" scoped="" ref="0x4065b588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065b668"/>
        <function-ref name="set" scoped="" ref="0x4065b748"/>
        <function-ref name="clr" scoped="" ref="0x4065b828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40663158" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40663158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40663330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4065a4c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4065a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065a698"/>
        <function-ref name="isInput" scoped="" ref="0x4065a778"/>
        <function-ref name="toggle" scoped="" ref="0x4065a858"/>
        <function-ref name="isOutput" scoped="" ref="0x4065a938"/>
        <function-ref name="get" scoped="" ref="0x4065aa18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065aaf8"/>
        <function-ref name="set" scoped="" ref="0x4065abd8"/>
        <function-ref name="clr" scoped="" ref="0x4065acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40651010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40651010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406511e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40669010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40669010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406691e8"/>
        <function-ref name="write" scoped="" ref="0x406692c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40663578" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40663578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40663750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40663998" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40663998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40663b70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40663c50"/>
        <function-ref name="request" scoped="" ref="0x40663d30"/>
        <function-ref name="granted" scoped="" ref="0x40663e10"/>
        <function-ref name="isOwner" scoped="" ref="0x40663ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40662a18" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40662a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40662bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40662cd0"/>
        <function-ref name="request" scoped="" ref="0x40662db0"/>
        <function-ref name="granted" scoped="" ref="0x40662e90"/>
        <function-ref name="isOwner" scoped="" ref="0x40675010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40650b20" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40650b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40650cf8"/>
        <function-ref name="rfOff" scoped="" ref="0x40650dd8"/>
        <function-ref name="rxOn" scoped="" ref="0x40650eb8"/>
        <function-ref name="startVReg" scoped="" ref="0x4064f010"/>
        <function-ref name="stopVReg" scoped="" ref="0x4064f0f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4064f1d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4064f2b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4064f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4066b5a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4066b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066b780"/>
        <function-ref name="write" scoped="" ref="0x4066b860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40665ae0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40665ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40665d38"/>
        <function-ref name="write" scoped="" ref="0x40665e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x406648c8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x406648c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40664aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406751a0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406751a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40675378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40675458"/>
        <function-ref name="led1On" scoped="" ref="0x40675538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40675618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406756f8"/>
        <function-ref name="get" scoped="" ref="0x406757d8"/>
        <function-ref name="led1Off" scoped="" ref="0x406758b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40675c38"/>
        <function-ref name="set" scoped="" ref="0x40675998"/>
        <function-ref name="led0On" scoped="" ref="0x40675a78"/>
        <function-ref name="led2On" scoped="" ref="0x40675b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x406704e8" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x406704e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406706c0"/>
        <function-ref name="runTask" scoped="" ref="0x406707a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406513a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406513a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40651578"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40651658"/>
        <function-ref name="request" scoped="" ref="0x40651738"/>
        <function-ref name="granted" scoped="" ref="0x40651818"/>
        <function-ref name="isOwner" scoped="" ref="0x406518f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40667388" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40667388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40667560"/>
        <function-ref name="write" scoped="" ref="0x40667640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x4066a600" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4066a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066a7d8"/>
        <function-ref name="disable" scoped="" ref="0x4066a8b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4066a998"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4066aa78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40662168" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40662168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40662440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40662520"/>
        <function-ref name="request" scoped="" ref="0x40662600"/>
        <function-ref name="granted" scoped="" ref="0x406626e0"/>
        <function-ref name="isOwner" scoped="" ref="0x406627c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40664ce0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40664ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40664eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406aa010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406aa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x406aa5d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x406aa5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406a9ab8"/>
        <function-ref name="fired" scoped="" ref="0x406a9288"/>
        <function-ref name="startAt" scoped="" ref="0x406a9778"/>
        <function-ref name="isRunning" scoped="" ref="0x406a9500"/>
        <function-ref name="getAlarm" scoped="" ref="0x406a9d30"/>
        <function-ref name="start" scoped="" ref="0x406aad28"/>
        <function-ref name="stop" scoped="" ref="0x406a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407f2e78" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407f2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bb350"/>
        <function-ref name="fired" scoped="" ref="0x406bcaf8"/>
        <function-ref name="startAt" scoped="" ref="0x406bb010"/>
        <function-ref name="isRunning" scoped="" ref="0x406bcd70"/>
        <function-ref name="getAlarm" scoped="" ref="0x406bb5c8"/>
        <function-ref name="start" scoped="" ref="0x406bc5e0"/>
        <function-ref name="stop" scoped="" ref="0x406bc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406bb7f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406bb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406bb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415e06a8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415e06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415dfb60"/>
        <function-ref name="fired" scoped="" ref="0x415df330"/>
        <function-ref name="startAt" scoped="" ref="0x415df820"/>
        <function-ref name="isRunning" scoped="" ref="0x415df5a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x415dfdd8"/>
        <function-ref name="start" scoped="" ref="0x415e0df8"/>
        <function-ref name="stop" scoped="" ref="0x415df0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415dd448" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415dd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415dc908"/>
        <function-ref name="fired" scoped="" ref="0x415dc0d8"/>
        <function-ref name="startAt" scoped="" ref="0x415dc5c8"/>
        <function-ref name="isRunning" scoped="" ref="0x415dc350"/>
        <function-ref name="getAlarm" scoped="" ref="0x415dcb80"/>
        <function-ref name="start" scoped="" ref="0x415ddb98"/>
        <function-ref name="stop" scoped="" ref="0x415dde38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406c9208" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406c9208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406c93e0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406c94c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406c95a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406c9680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406c9760"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406c9840"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406c9920"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406c9a00"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406c9ae0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406c9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406cf010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406cea88"/>
        <function-ref name="test" scoped="" ref="0x406ce598"/>
        <function-ref name="get" scoped="" ref="0x406cf658"/>
        <function-ref name="captured" scoped="" ref="0x406cfb70"/>
        <function-ref name="reset" scoped="" ref="0x406cfe10"/>
        <function-ref name="isOn" scoped="" ref="0x406ce810"/>
        <function-ref name="set" scoped="" ref="0x406cf8d0"/>
        <function-ref name="start" scoped="" ref="0x406ce0a8"/>
        <function-ref name="stop" scoped="" ref="0x406ce320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406d5b08" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406d5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406d4110"/>
        <function-ref name="fired" scoped="" ref="0x406d9718"/>
        <function-ref name="get" scoped="" ref="0x406d9200"/>
        <function-ref name="reset" scoped="" ref="0x406d9990"/>
        <function-ref name="isOn" scoped="" ref="0x406d4388"/>
        <function-ref name="set" scoped="" ref="0x406d9478"/>
        <function-ref name="start" scoped="" ref="0x406d9c08"/>
        <function-ref name="stop" scoped="" ref="0x406d9e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d1260" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406bfca0"/>
        <function-ref name="test" scoped="" ref="0x406bf7b0"/>
        <function-ref name="get" scoped="" ref="0x406d18a8"/>
        <function-ref name="setScale" scoped="" ref="0x406bff18"/>
        <function-ref name="getScale" scoped="" ref="0x406d01d0"/>
        <function-ref name="reset" scoped="" ref="0x406bf048"/>
        <function-ref name="overflow" scoped="" ref="0x406d1dc0"/>
        <function-ref name="isOn" scoped="" ref="0x406bfa28"/>
        <function-ref name="set" scoped="" ref="0x406d1b20"/>
        <function-ref name="start" scoped="" ref="0x406bf2c0"/>
        <function-ref name="stop" scoped="" ref="0x406bf538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406e0678" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406e0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406e0850"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406e0930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406e0a10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406e0af0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406e0bd0"/>
        <function-ref name="setControl" scoped="" ref="0x406e0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406f1c90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406f1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406f1e68"/>
        <function-ref name="compareBusy" scoped="" ref="0x406f4010"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406f40f0"/>
        <function-ref name="countBusy" scoped="" ref="0x406f41d0"/>
        <function-ref name="getAssr" scoped="" ref="0x406f42b0"/>
        <function-ref name="setAssr" scoped="" ref="0x406f4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406e3010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406df578"/>
        <function-ref name="fired" scoped="" ref="0x406e3b70"/>
        <function-ref name="get" scoped="" ref="0x406e3658"/>
        <function-ref name="reset" scoped="" ref="0x406e3de8"/>
        <function-ref name="isOn" scoped="" ref="0x406df7f0"/>
        <function-ref name="set" scoped="" ref="0x406e38d0"/>
        <function-ref name="start" scoped="" ref="0x406df088"/>
        <function-ref name="stop" scoped="" ref="0x406df300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d4e90" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d4e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406e6908"/>
        <function-ref name="test" scoped="" ref="0x406e6418"/>
        <function-ref name="get" scoped="" ref="0x406e74f8"/>
        <function-ref name="setScale" scoped="" ref="0x406e6b80"/>
        <function-ref name="getScale" scoped="" ref="0x406e6e20"/>
        <function-ref name="reset" scoped="" ref="0x406e7c88"/>
        <function-ref name="overflow" scoped="" ref="0x406e7a10"/>
        <function-ref name="isOn" scoped="" ref="0x406e6690"/>
        <function-ref name="set" scoped="" ref="0x406e7770"/>
        <function-ref name="start" scoped="" ref="0x406e7f00"/>
        <function-ref name="stop" scoped="" ref="0x406e61a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406ec360" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406ec360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406ec538"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406ec618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406ec6f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406ec7d8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406ec8b8"/>
        <function-ref name="setControl" scoped="" ref="0x406ec998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406ea7b8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406ea7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406ea990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406eac18" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406eac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406eadf0"/>
        <function-ref name="compareBusy" scoped="" ref="0x406eaed0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406fe010"/>
        <function-ref name="countBusy" scoped="" ref="0x406fe0f0"/>
        <function-ref name="getAssr" scoped="" ref="0x406fe1d0"/>
        <function-ref name="setAssr" scoped="" ref="0x406fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406eccc0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406eccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406ea288"/>
        <function-ref name="fired" scoped="" ref="0x406eb830"/>
        <function-ref name="get" scoped="" ref="0x406eb318"/>
        <function-ref name="reset" scoped="" ref="0x406ebaa8"/>
        <function-ref name="isOn" scoped="" ref="0x406ea500"/>
        <function-ref name="set" scoped="" ref="0x406eb590"/>
        <function-ref name="start" scoped="" ref="0x406ebd20"/>
        <function-ref name="stop" scoped="" ref="0x406ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406ef030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406ef030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406eda88"/>
        <function-ref name="test" scoped="" ref="0x406ed598"/>
        <function-ref name="get" scoped="" ref="0x406ef678"/>
        <function-ref name="setScale" scoped="" ref="0x406edd00"/>
        <function-ref name="getScale" scoped="" ref="0x406ec010"/>
        <function-ref name="reset" scoped="" ref="0x406efe08"/>
        <function-ref name="overflow" scoped="" ref="0x406efb90"/>
        <function-ref name="isOn" scoped="" ref="0x406ed810"/>
        <function-ref name="set" scoped="" ref="0x406ef8f0"/>
        <function-ref name="start" scoped="" ref="0x406ed0a8"/>
        <function-ref name="stop" scoped="" ref="0x406ed320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40721770" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40721770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40721948"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40721a28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40721b08"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40721be8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40721cc8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40721da8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40721e88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40737010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x407370f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x407371d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x4072e888" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x4072e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4072ea60"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4072eb40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4072ec20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4072ed00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4072ede0"/>
        <function-ref name="setControl" scoped="" ref="0x4072eec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40734450" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40734450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407339f0"/>
        <function-ref name="fired" scoped="" ref="0x40733010"/>
        <function-ref name="get" scoped="" ref="0x40734a98"/>
        <function-ref name="reset" scoped="" ref="0x40733288"/>
        <function-ref name="isOn" scoped="" ref="0x40733c68"/>
        <function-ref name="set" scoped="" ref="0x40734d10"/>
        <function-ref name="start" scoped="" ref="0x40733500"/>
        <function-ref name="stop" scoped="" ref="0x40733778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40737508" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40737508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40734010"/>
        <function-ref name="test" scoped="" ref="0x40736a90"/>
        <function-ref name="get" scoped="" ref="0x40737b50"/>
        <function-ref name="captured" scoped="" ref="0x40736088"/>
        <function-ref name="reset" scoped="" ref="0x40736328"/>
        <function-ref name="isOn" scoped="" ref="0x40736d08"/>
        <function-ref name="set" scoped="" ref="0x40737dc8"/>
        <function-ref name="start" scoped="" ref="0x407365a0"/>
        <function-ref name="stop" scoped="" ref="0x40736818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407320b8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407320b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40730620"/>
        <function-ref name="fired" scoped="" ref="0x40732c18"/>
        <function-ref name="get" scoped="" ref="0x40732700"/>
        <function-ref name="reset" scoped="" ref="0x40732e90"/>
        <function-ref name="isOn" scoped="" ref="0x40730898"/>
        <function-ref name="set" scoped="" ref="0x40732978"/>
        <function-ref name="start" scoped="" ref="0x40730130"/>
        <function-ref name="stop" scoped="" ref="0x407303a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40730cb0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40730cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4072e288"/>
        <function-ref name="fired" scoped="" ref="0x4072f820"/>
        <function-ref name="get" scoped="" ref="0x4072f308"/>
        <function-ref name="reset" scoped="" ref="0x4072fa98"/>
        <function-ref name="isOn" scoped="" ref="0x4072e500"/>
        <function-ref name="set" scoped="" ref="0x4072f580"/>
        <function-ref name="start" scoped="" ref="0x4072fd10"/>
        <function-ref name="stop" scoped="" ref="0x4072e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40724410" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40724410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40722ee0"/>
        <function-ref name="test" scoped="" ref="0x407229f0"/>
        <function-ref name="get" scoped="" ref="0x40724a58"/>
        <function-ref name="setScale" scoped="" ref="0x40721170"/>
        <function-ref name="getScale" scoped="" ref="0x40721410"/>
        <function-ref name="reset" scoped="" ref="0x40722288"/>
        <function-ref name="overflow" scoped="" ref="0x40722010"/>
        <function-ref name="isOn" scoped="" ref="0x40722c68"/>
        <function-ref name="set" scoped="" ref="0x40724cd0"/>
        <function-ref name="start" scoped="" ref="0x40722500"/>
        <function-ref name="stop" scoped="" ref="0x40722778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40785db8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40785db8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40795010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40795220" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40795220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40794c68"/>
        <function-ref name="test" scoped="" ref="0x40794778"/>
        <function-ref name="get" scoped="" ref="0x40795868"/>
        <function-ref name="setScale" scoped="" ref="0x40794ee0"/>
        <function-ref name="getScale" scoped="" ref="0x407931c0"/>
        <function-ref name="reset" scoped="" ref="0x40794010"/>
        <function-ref name="overflow" scoped="" ref="0x40795d80"/>
        <function-ref name="isOn" scoped="" ref="0x407949f0"/>
        <function-ref name="set" scoped="" ref="0x40795ae0"/>
        <function-ref name="start" scoped="" ref="0x40794288"/>
        <function-ref name="stop" scoped="" ref="0x40794500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4162a210" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4162a210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402e48e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402e48e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416296c8"/>
        <function-ref name="fired" scoped="" ref="0x4162ae78"/>
        <function-ref name="startAt" scoped="" ref="0x41629388"/>
        <function-ref name="isRunning" scoped="" ref="0x41629110"/>
        <function-ref name="getAlarm" scoped="" ref="0x41629940"/>
        <function-ref name="start" scoped="" ref="0x4162a960"/>
        <function-ref name="stop" scoped="" ref="0x4162ac00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41626e68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41626e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x416243e8"/>
        <function-ref name="fired" scoped="" ref="0x416259f0"/>
        <function-ref name="get" scoped="" ref="0x416254d8"/>
        <function-ref name="reset" scoped="" ref="0x41625c68"/>
        <function-ref name="isOn" scoped="" ref="0x41624660"/>
        <function-ref name="set" scoped="" ref="0x41625750"/>
        <function-ref name="start" scoped="" ref="0x41625ee0"/>
        <function-ref name="stop" scoped="" ref="0x41624170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41629c00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41629c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41626690"/>
        <function-ref name="test" scoped="" ref="0x416261a0"/>
        <function-ref name="get" scoped="" ref="0x41627278"/>
        <function-ref name="setScale" scoped="" ref="0x41626908"/>
        <function-ref name="getScale" scoped="" ref="0x41626ba8"/>
        <function-ref name="reset" scoped="" ref="0x41627a08"/>
        <function-ref name="overflow" scoped="" ref="0x41627790"/>
        <function-ref name="isOn" scoped="" ref="0x41626418"/>
        <function-ref name="set" scoped="" ref="0x416274f0"/>
        <function-ref name="start" scoped="" ref="0x41627c80"/>
        <function-ref name="stop" scoped="" ref="0x41627ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407b8740" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b8e90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bc3a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bc130"/>
        <function-ref name="overflow" scoped="" ref="0x407bc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407b6170" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b68c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b6db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b6b38"/>
        <function-ref name="overflow" scoped="" ref="0x407b5048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407b48e8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407c3048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c3538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c32c0"/>
        <function-ref name="overflow" scoped="" ref="0x407c37b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407c3a90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407c3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407c1500"/>
        <function-ref name="test" scoped="" ref="0x407c1010"/>
        <function-ref name="get" scoped="" ref="0x407c20f8"/>
        <function-ref name="setScale" scoped="" ref="0x407c1778"/>
        <function-ref name="getScale" scoped="" ref="0x407c1a18"/>
        <function-ref name="reset" scoped="" ref="0x407c2888"/>
        <function-ref name="overflow" scoped="" ref="0x407c2610"/>
        <function-ref name="isOn" scoped="" ref="0x407c1288"/>
        <function-ref name="set" scoped="" ref="0x407c2370"/>
        <function-ref name="start" scoped="" ref="0x407c2b00"/>
        <function-ref name="stop" scoped="" ref="0x407c2d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407e20e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407e20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407e2830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407e2d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407e2aa8"/>
        <function-ref name="overflow" scoped="" ref="0x407e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407b7e60" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407be5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bead0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407be858"/>
        <function-ref name="overflow" scoped="" ref="0x407bed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415dadd0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415dadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41631350"/>
        <function-ref name="fired" scoped="" ref="0x415d9a88"/>
        <function-ref name="startAt" scoped="" ref="0x41631010"/>
        <function-ref name="isRunning" scoped="" ref="0x415d9d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x416315c8"/>
        <function-ref name="start" scoped="" ref="0x415d9570"/>
        <function-ref name="stop" scoped="" ref="0x415d9810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41630b60" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41630b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4162d068"/>
        <function-ref name="fired" scoped="" ref="0x4162f820"/>
        <function-ref name="startAt" scoped="" ref="0x4162fd10"/>
        <function-ref name="isRunning" scoped="" ref="0x4162fa98"/>
        <function-ref name="getAlarm" scoped="" ref="0x4162d2e0"/>
        <function-ref name="start" scoped="" ref="0x4162f308"/>
        <function-ref name="stop" scoped="" ref="0x4162f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41631918" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41631918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41630088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41630578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41630300"/>
        <function-ref name="overflow" scoped="" ref="0x416307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407f3bb8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407f3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407f3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x408078d0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x408078d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40807aa8"/>
        <function-ref name="isInput" scoped="" ref="0x40807b88"/>
        <function-ref name="toggle" scoped="" ref="0x40807c68"/>
        <function-ref name="isOutput" scoped="" ref="0x40807d48"/>
        <function-ref name="get" scoped="" ref="0x40807e28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807f08"/>
        <function-ref name="set" scoped="" ref="0x40806010"/>
        <function-ref name="clr" scoped="" ref="0x408060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x408062e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x408062e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408064c0"/>
        <function-ref name="isInput" scoped="" ref="0x408065a0"/>
        <function-ref name="toggle" scoped="" ref="0x40806680"/>
        <function-ref name="isOutput" scoped="" ref="0x40806760"/>
        <function-ref name="get" scoped="" ref="0x40806840"/>
        <function-ref name="makeOutput" scoped="" ref="0x40806920"/>
        <function-ref name="set" scoped="" ref="0x40806a00"/>
        <function-ref name="clr" scoped="" ref="0x40806ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40806cd0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40806cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40806ea8"/>
        <function-ref name="isInput" scoped="" ref="0x40805010"/>
        <function-ref name="toggle" scoped="" ref="0x408050f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408051d0"/>
        <function-ref name="get" scoped="" ref="0x408052b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805390"/>
        <function-ref name="set" scoped="" ref="0x40805470"/>
        <function-ref name="clr" scoped="" ref="0x40805550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x406ace98" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x406ace98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408070c0"/>
        <function-ref name="isInput" scoped="" ref="0x408071a0"/>
        <function-ref name="toggle" scoped="" ref="0x40807280"/>
        <function-ref name="isOutput" scoped="" ref="0x40807360"/>
        <function-ref name="get" scoped="" ref="0x40807440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807520"/>
        <function-ref name="set" scoped="" ref="0x40807600"/>
        <function-ref name="clr" scoped="" ref="0x408076e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40803128" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40803128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40803300"/>
        <function-ref name="isInput" scoped="" ref="0x408033e0"/>
        <function-ref name="toggle" scoped="" ref="0x408034c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408035a0"/>
        <function-ref name="get" scoped="" ref="0x40803680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40803760"/>
        <function-ref name="set" scoped="" ref="0x40803840"/>
        <function-ref name="clr" scoped="" ref="0x40803920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x406ac4c0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x406ac4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ac698"/>
        <function-ref name="isInput" scoped="" ref="0x406ac778"/>
        <function-ref name="toggle" scoped="" ref="0x406ac858"/>
        <function-ref name="isOutput" scoped="" ref="0x406ac938"/>
        <function-ref name="get" scoped="" ref="0x406aca18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406acaf8"/>
        <function-ref name="set" scoped="" ref="0x406acbd8"/>
        <function-ref name="clr" scoped="" ref="0x406accb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40805730" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40805730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40805908"/>
        <function-ref name="isInput" scoped="" ref="0x408059e8"/>
        <function-ref name="toggle" scoped="" ref="0x40805ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40805ba8"/>
        <function-ref name="get" scoped="" ref="0x40805c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805d68"/>
        <function-ref name="set" scoped="" ref="0x40805e48"/>
        <function-ref name="clr" scoped="" ref="0x40805f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x40815a80" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40815a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40815c58"/>
        <function-ref name="disable" scoped="" ref="0x40815d38"/>
        <function-ref name="captured" scoped="" ref="0x40815e18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40815ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x40817198" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40817198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40817370"/>
        <function-ref name="disable" scoped="" ref="0x40817450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40817530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40817610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x408178a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x408178a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40817a80"/>
        <function-ref name="disable" scoped="" ref="0x40817b60"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40817c40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40817d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40824f00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40824f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x408140f0"/>
        <function-ref name="disable" scoped="" ref="0x408141d0"/>
        <function-ref name="captured" scoped="" ref="0x408142b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40814390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x408145a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x408145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40823048"/>
        <function-ref name="test" scoped="" ref="0x40813b38"/>
        <function-ref name="get" scoped="" ref="0x40814be8"/>
        <function-ref name="captured" scoped="" ref="0x40813130"/>
        <function-ref name="reset" scoped="" ref="0x408133d0"/>
        <function-ref name="isOn" scoped="" ref="0x40813db0"/>
        <function-ref name="set" scoped="" ref="0x40814e60"/>
        <function-ref name="start" scoped="" ref="0x40813648"/>
        <function-ref name="stop" scoped="" ref="0x408138c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40821c00" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40821c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40821dd8"/>
        <function-ref name="fired" scoped="" ref="0x40821eb8"/>
        <function-ref name="disable" scoped="" ref="0x40820010"/>
        <function-ref name="edge" scoped="" ref="0x408200f0"/>
        <function-ref name="enable" scoped="" ref="0x408201d0"/>
        <function-ref name="getValue" scoped="" ref="0x408202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40821608" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40821608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408217e0"/>
        <function-ref name="disable" scoped="" ref="0x408218c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408219a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40821a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4082c4f8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4082c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082c6d0"/>
        <function-ref name="fired" scoped="" ref="0x4082c7b0"/>
        <function-ref name="disable" scoped="" ref="0x4082c890"/>
        <function-ref name="edge" scoped="" ref="0x4082c970"/>
        <function-ref name="enable" scoped="" ref="0x4082ca50"/>
        <function-ref name="getValue" scoped="" ref="0x4082cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4082f890" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4082f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082fa68"/>
        <function-ref name="fired" scoped="" ref="0x4082fb48"/>
        <function-ref name="disable" scoped="" ref="0x4082fc28"/>
        <function-ref name="edge" scoped="" ref="0x4082fd08"/>
        <function-ref name="enable" scoped="" ref="0x4082fde8"/>
        <function-ref name="getValue" scoped="" ref="0x4082fec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4082d338" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4082d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082d510"/>
        <function-ref name="fired" scoped="" ref="0x4082d5f0"/>
        <function-ref name="disable" scoped="" ref="0x4082d6d0"/>
        <function-ref name="edge" scoped="" ref="0x4082d7b0"/>
        <function-ref name="enable" scoped="" ref="0x4082d890"/>
        <function-ref name="getValue" scoped="" ref="0x4082d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4082cd78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4082cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082a010"/>
        <function-ref name="fired" scoped="" ref="0x4082a0f0"/>
        <function-ref name="disable" scoped="" ref="0x4082a1d0"/>
        <function-ref name="edge" scoped="" ref="0x4082a2b0"/>
        <function-ref name="enable" scoped="" ref="0x4082a390"/>
        <function-ref name="getValue" scoped="" ref="0x4082a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4082e168" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4082e168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082e340"/>
        <function-ref name="fired" scoped="" ref="0x4082e420"/>
        <function-ref name="disable" scoped="" ref="0x4082e500"/>
        <function-ref name="edge" scoped="" ref="0x4082e5e0"/>
        <function-ref name="enable" scoped="" ref="0x4082e6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4082e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4082dbb8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4082dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082dd90"/>
        <function-ref name="fired" scoped="" ref="0x4082de70"/>
        <function-ref name="disable" scoped="" ref="0x4082c010"/>
        <function-ref name="edge" scoped="" ref="0x4082c0f0"/>
        <function-ref name="enable" scoped="" ref="0x4082c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4082c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4082f010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4082f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082f1e8"/>
        <function-ref name="fired" scoped="" ref="0x4082f2c8"/>
        <function-ref name="disable" scoped="" ref="0x4082f3a8"/>
        <function-ref name="edge" scoped="" ref="0x4082f488"/>
        <function-ref name="enable" scoped="" ref="0x4082f568"/>
        <function-ref name="getValue" scoped="" ref="0x4082f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4082e9e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4082e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082ebc0"/>
        <function-ref name="fired" scoped="" ref="0x4082eca0"/>
        <function-ref name="disable" scoped="" ref="0x4082ed80"/>
        <function-ref name="edge" scoped="" ref="0x4082ee60"/>
        <function-ref name="enable" scoped="" ref="0x4082d010"/>
        <function-ref name="getValue" scoped="" ref="0x4082d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x408414a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x408414a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40827e00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40827e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40826ba0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40826ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40841920" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40841920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x408262b0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x408262b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40841030" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40841030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40827988" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40827988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40827b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40826728" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40826728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40828bf8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40828bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40828dd0"/>
        <function-ref name="fired" scoped="" ref="0x40828eb0"/>
        <function-ref name="disable" scoped="" ref="0x4084d010"/>
        <function-ref name="edge" scoped="" ref="0x4084d0f0"/>
        <function-ref name="enable" scoped="" ref="0x4084d1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4084d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4084d430" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4084d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4084d608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4085dd60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4085dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085c010"/>
        <function-ref name="fired" scoped="" ref="0x4085c0f0"/>
        <function-ref name="disable" scoped="" ref="0x4085c1d0"/>
        <function-ref name="edge" scoped="" ref="0x4085c2b0"/>
        <function-ref name="enable" scoped="" ref="0x4085c390"/>
        <function-ref name="getValue" scoped="" ref="0x4085c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4085c5f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4085c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4085c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4085a010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4085a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085a1e8"/>
        <function-ref name="fired" scoped="" ref="0x4085a2c8"/>
        <function-ref name="disable" scoped="" ref="0x4085a3a8"/>
        <function-ref name="edge" scoped="" ref="0x4085a488"/>
        <function-ref name="enable" scoped="" ref="0x4085a568"/>
        <function-ref name="getValue" scoped="" ref="0x4085a648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4085a7c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4085a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4085a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40858228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40858228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40858400"/>
        <function-ref name="fired" scoped="" ref="0x408584e0"/>
        <function-ref name="disable" scoped="" ref="0x408585c0"/>
        <function-ref name="edge" scoped="" ref="0x408586a0"/>
        <function-ref name="enable" scoped="" ref="0x40858780"/>
        <function-ref name="getValue" scoped="" ref="0x40858860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x408589e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x408589e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40858bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40856408" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40856408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408565e0"/>
        <function-ref name="fired" scoped="" ref="0x408566c0"/>
        <function-ref name="disable" scoped="" ref="0x408567a0"/>
        <function-ref name="edge" scoped="" ref="0x40856880"/>
        <function-ref name="enable" scoped="" ref="0x40856960"/>
        <function-ref name="getValue" scoped="" ref="0x40856a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40856bc0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40856bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40856d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408535e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408535e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408537c0"/>
        <function-ref name="fired" scoped="" ref="0x408538a0"/>
        <function-ref name="disable" scoped="" ref="0x40853980"/>
        <function-ref name="edge" scoped="" ref="0x40853a60"/>
        <function-ref name="enable" scoped="" ref="0x40853b40"/>
        <function-ref name="getValue" scoped="" ref="0x40853c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40853da0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40853da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40852010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40851840" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40851840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40851a18"/>
        <function-ref name="fired" scoped="" ref="0x40851af8"/>
        <function-ref name="disable" scoped="" ref="0x40851bd8"/>
        <function-ref name="edge" scoped="" ref="0x40851cb8"/>
        <function-ref name="enable" scoped="" ref="0x40851d98"/>
        <function-ref name="getValue" scoped="" ref="0x40851e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40850010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40850010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408501e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4086ba08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4086ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4086bbe0"/>
        <function-ref name="fired" scoped="" ref="0x4086bcc0"/>
        <function-ref name="disable" scoped="" ref="0x4086bda0"/>
        <function-ref name="edge" scoped="" ref="0x4086be80"/>
        <function-ref name="enable" scoped="" ref="0x4086a010"/>
        <function-ref name="getValue" scoped="" ref="0x4086a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4086a270" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4086a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4086a448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x40863258" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x40863258"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40863430"/>
        <function-ref name="isInput" scoped="" ref="0x40863510"/>
        <function-ref name="toggle" scoped="" ref="0x408635f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408636d0"/>
        <function-ref name="get" scoped="" ref="0x408637b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40863890"/>
        <function-ref name="set" scoped="" ref="0x40863970"/>
        <function-ref name="clr" scoped="" ref="0x40863a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40866b88" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40866b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40866d60"/>
        <function-ref name="disable" scoped="" ref="0x40866e40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40866f20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40863018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x40862ac0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x40862ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40862c98"/>
        <function-ref name="runTask" scoped="" ref="0x40862d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409ad880" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409ad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409adb58"/>
        <function-ref name="write" scoped="" ref="0x409adc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409c9988" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409c9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409c9b60"/>
        <function-ref name="writeDone" scoped="" ref="0x409c9c40"/>
        <function-ref name="write" scoped="" ref="0x409c9d20"/>
        <function-ref name="beginRead" scoped="" ref="0x409c9e00"/>
        <function-ref name="readDone" scoped="" ref="0x409c9ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409b3c28" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409b3c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409afe50" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409afe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae050"/>
        <function-ref name="write" scoped="" ref="0x409ae130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409ab6a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409ab6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab880"/>
        <function-ref name="write" scoped="" ref="0x409ab960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409abae0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409abae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409abcb8"/>
        <function-ref name="write" scoped="" ref="0x409abd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409b26c0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409b26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409cae38" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409cae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c9050"/>
        <function-ref name="write" scoped="" ref="0x409c9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409ae6e8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409ae6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae8c0"/>
        <function-ref name="write" scoped="" ref="0x409ae9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409ad010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad1e8"/>
        <function-ref name="write" scoped="" ref="0x409ad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409abf18" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409abf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc108"/>
        <function-ref name="write" scoped="" ref="0x409cc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409cb468" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409cb468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cb640"/>
        <function-ref name="write" scoped="" ref="0x409cb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409b3060" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409b3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409b3238"/>
        <function-ref name="abortRelease" scoped="" ref="0x409b3318"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409b33f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409b04e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409b04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409b0840" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409b0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409b0c18" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409b0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409b2d70" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409b2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409aeb20" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409aeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aecf8"/>
        <function-ref name="write" scoped="" ref="0x409aedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409ae2b0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae488"/>
        <function-ref name="write" scoped="" ref="0x409ae568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409b38d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409b38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409cb8a0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409cb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cba78"/>
        <function-ref name="write" scoped="" ref="0x409cbb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409caa00" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409caa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cabd8"/>
        <function-ref name="write" scoped="" ref="0x409cacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409cc7a0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409cc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc978"/>
        <function-ref name="write" scoped="" ref="0x409cca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409b3578" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409b3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409afa18" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409afa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409afbf0"/>
        <function-ref name="write" scoped="" ref="0x409afcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409ad448" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409ad448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad620"/>
        <function-ref name="write" scoped="" ref="0x409ad700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409c92b0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409c92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409c9488"/>
        <function-ref name="writeDone" scoped="" ref="0x409c9568"/>
        <function-ref name="write" scoped="" ref="0x409c9648"/>
        <function-ref name="beginRead" scoped="" ref="0x409c9728"/>
        <function-ref name="readDone" scoped="" ref="0x409c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409cc368" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409cc368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc540"/>
        <function-ref name="write" scoped="" ref="0x409cc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409addb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409addb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab010"/>
        <function-ref name="write" scoped="" ref="0x409ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409b2010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409ab270" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409ab270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab448"/>
        <function-ref name="write" scoped="" ref="0x409ab528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409b4988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409b4988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409b4b60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409b4c40"/>
        <function-ref name="request" scoped="" ref="0x409b4d20"/>
        <function-ref name="granted" scoped="" ref="0x409b4e00"/>
        <function-ref name="isOwner" scoped="" ref="0x409b4ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409af010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409af6c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409af6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409ca5c8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409ca5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ca7a0"/>
        <function-ref name="write" scoped="" ref="0x409ca880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409ca190" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409ca190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ca368"/>
        <function-ref name="write" scoped="" ref="0x409ca448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409b0190" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409b0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409cbcd8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409cbcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cbeb0"/>
        <function-ref name="write" scoped="" ref="0x409ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409b2368" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409b2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b2540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409b2a18" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409b2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409af368" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409af368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409ccbd8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409ccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ccdb0"/>
        <function-ref name="write" scoped="" ref="0x409cce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409cb030" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409cb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cb208"/>
        <function-ref name="write" scoped="" ref="0x409cb2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40893e18" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40893e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40892010"/>
        <function-ref name="writeDone" scoped="" ref="0x408920f0"/>
        <function-ref name="write" scoped="" ref="0x408921d0"/>
        <function-ref name="beginRead" scoped="" ref="0x408922b0"/>
        <function-ref name="readDone" scoped="" ref="0x40892390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40893588" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40893588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40893760"/>
        <function-ref name="abortRelease" scoped="" ref="0x40893840"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40893920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40892880" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40892880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40892a58"/>
        <function-ref name="write" scoped="" ref="0x40892b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40891100" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40891100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408912d8"/>
        <function-ref name="write" scoped="" ref="0x408913b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40880d90" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40880d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40893010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408930f0"/>
        <function-ref name="request" scoped="" ref="0x408931d0"/>
        <function-ref name="granted" scoped="" ref="0x408932b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40893390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x408918d8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x408918d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40891ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x408a1a28" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408a1a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a1c00"/>
        <function-ref name="sendDone" scoped="" ref="0x408a1ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4088d788" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4088d788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4088d960"/>
        <function-ref name="writeDone" scoped="" ref="0x4088da40"/>
        <function-ref name="write" scoped="" ref="0x4088db20"/>
        <function-ref name="beginRead" scoped="" ref="0x4088dc00"/>
        <function-ref name="readDone" scoped="" ref="0x4088dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4088e480" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4088e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4088e658"/>
        <function-ref name="abortRelease" scoped="" ref="0x4088e738"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4088e818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x408a35b0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408a35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408a3788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x408a1ef8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x408a1ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408890e0"/>
        <function-ref name="toIdle" scoped="" ref="0x408891c0"/>
        <function-ref name="isState" scoped="" ref="0x408892a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40889380"/>
        <function-ref name="requestState" scoped="" ref="0x40889460"/>
        <function-ref name="forceState" scoped="" ref="0x40889540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4088a5b8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4088a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4088a790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4088a870"/>
        <function-ref name="request" scoped="" ref="0x4088a950"/>
        <function-ref name="granted" scoped="" ref="0x4088aa30"/>
        <function-ref name="isOwner" scoped="" ref="0x4088ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4088b208" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4088b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088b3e0"/>
        <function-ref name="write" scoped="" ref="0x4088b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4088b9b0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4088b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088bb88"/>
        <function-ref name="write" scoped="" ref="0x4088bc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408896b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408896b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40889888"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40889968"/>
        <function-ref name="led1On" scoped="" ref="0x40889a48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40889b28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40889c08"/>
        <function-ref name="get" scoped="" ref="0x40889ce8"/>
        <function-ref name="led1Off" scoped="" ref="0x40889dc8"/>
        <function-ref name="led2Off" scoped="" ref="0x408881d0"/>
        <function-ref name="set" scoped="" ref="0x40889ea8"/>
        <function-ref name="led0On" scoped="" ref="0x40888010"/>
        <function-ref name="led2On" scoped="" ref="0x408880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4088ec90" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4088ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4088ee68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4088d010"/>
        <function-ref name="request" scoped="" ref="0x4088d0f0"/>
        <function-ref name="granted" scoped="" ref="0x4088d1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4088d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x4089d520" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x4089d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4089d6f8"/>
        <function-ref name="runTask" scoped="" ref="0x4089d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4088a178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4088a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4088a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408dfe40" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408dfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408c3050"/>
        <function-ref name="toIdle" scoped="" ref="0x408c3130"/>
        <function-ref name="isState" scoped="" ref="0x408c3210"/>
        <function-ref name="isIdle" scoped="" ref="0x408c32f0"/>
        <function-ref name="requestState" scoped="" ref="0x408c33d0"/>
        <function-ref name="forceState" scoped="" ref="0x408c34b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408dd100" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408dd2d8"/>
        <function-ref name="toIdle" scoped="" ref="0x408dd3b8"/>
        <function-ref name="isState" scoped="" ref="0x408dd498"/>
        <function-ref name="isIdle" scoped="" ref="0x408dd578"/>
        <function-ref name="requestState" scoped="" ref="0x408dd658"/>
        <function-ref name="forceState" scoped="" ref="0x408dd738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d9168" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d9168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408d9798" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408d9798"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408d9970"/>
        <function-ref name="toIdle" scoped="" ref="0x408d9a50"/>
        <function-ref name="isState" scoped="" ref="0x408d9b30"/>
        <function-ref name="isIdle" scoped="" ref="0x408d9c10"/>
        <function-ref name="requestState" scoped="" ref="0x408d9cf0"/>
        <function-ref name="forceState" scoped="" ref="0x408d9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x409944a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x409944a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40994680"/>
        <function-ref name="sendDone" scoped="" ref="0x40994760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40994170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40994170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40994348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408ea758" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408ea758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ea930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408eaa90" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408eaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408eac68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ead48"/>
        <function-ref name="request" scoped="" ref="0x408eae28"/>
        <function-ref name="granted" scoped="" ref="0x408eaf08"/>
        <function-ref name="isOwner" scoped="" ref="0x40994010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408e50f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408e50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e52d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408e53b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408e8d50" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408e8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408e8f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e89d0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408e5848" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408e5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408e5a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408e5b00"/>
        <function-ref name="request" scoped="" ref="0x408e5be0"/>
        <function-ref name="granted" scoped="" ref="0x408e5cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x408e5da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x409191e0" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x409191e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409193b8"/>
        <function-ref name="runTask" scoped="" ref="0x40919498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408e1060" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408e1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e1238"/>
        <function-ref name="sendDone" scoped="" ref="0x408e1318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x408fc540" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x408fc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408fc718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408fc7f8"/>
        <function-ref name="request" scoped="" ref="0x408fc8d8"/>
        <function-ref name="granted" scoped="" ref="0x408fc9b8"/>
        <function-ref name="isOwner" scoped="" ref="0x408fca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408e4cd0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408e4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408e4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e4970" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e4b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x4090c8f0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x4090c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4090cac8"/>
        <function-ref name="sleep" scoped="" ref="0x408fde98"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4090cc88"/>
        <function-ref name="dataReady" scoped="" ref="0x408fc010"/>
        <function-ref name="initMaster" scoped="" ref="0x4090ce48"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4090cf28"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408fd018"/>
        <function-ref name="read" scoped="" ref="0x408fd0f8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408fd1d8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408fd2b8"/>
        <function-ref name="setClock" scoped="" ref="0x408fd398"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408fd478"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408fd558"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408fd6b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408fd798"/>
        <function-ref name="write" scoped="" ref="0x408fd878"/>
        <function-ref name="enableSpi" scoped="" ref="0x408fd958"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408fda38"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408fdb18"/>
        <function-ref name="getClock" scoped="" ref="0x408fdbf8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408fdcd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4090cba8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4090cd68"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408fddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408e1790" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408e1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408e1968"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408e1a48"/>
        <function-ref name="request" scoped="" ref="0x408e1b28"/>
        <function-ref name="granted" scoped="" ref="0x408e1c08"/>
        <function-ref name="isOwner" scoped="" ref="0x408e1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4090a0e8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4090a0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4090a2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40909c30" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40909c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40909e08"/>
        <function-ref name="userId" scoped="" ref="0x40909ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x408e2b40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x408e2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408e2d18"/>
        <function-ref name="sleep" scoped="" ref="0x4091d1d0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408e2ed8"/>
        <function-ref name="dataReady" scoped="" ref="0x4091d2b0"/>
        <function-ref name="initMaster" scoped="" ref="0x4091e0f0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4091e1d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4091e2b0"/>
        <function-ref name="read" scoped="" ref="0x4091e390"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4091e470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4091e550"/>
        <function-ref name="setClock" scoped="" ref="0x4091e630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4091e710"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4091e7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4091e950"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4091ea30"/>
        <function-ref name="write" scoped="" ref="0x4091eb10"/>
        <function-ref name="enableSpi" scoped="" ref="0x4091ebf0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4091ecd0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4091edb0"/>
        <function-ref name="getClock" scoped="" ref="0x4091ee90"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4091d010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408e2df8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4091e010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4091d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40936b10" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40936b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40936ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40936dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40936ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40934010"/>
        <function-ref name="get" scoped="" ref="0x409340f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409341d0"/>
        <function-ref name="set" scoped="" ref="0x409342b0"/>
        <function-ref name="clr" scoped="" ref="0x40934390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40937730" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40937730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40937908"/>
        <function-ref name="isInput" scoped="" ref="0x409379e8"/>
        <function-ref name="toggle" scoped="" ref="0x40937ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40937ba8"/>
        <function-ref name="get" scoped="" ref="0x40937c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40937d68"/>
        <function-ref name="set" scoped="" ref="0x40937e48"/>
        <function-ref name="clr" scoped="" ref="0x40937f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40935d00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40935d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40935ed8"/>
        <function-ref name="isInput" scoped="" ref="0x40937010"/>
        <function-ref name="toggle" scoped="" ref="0x409370f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409371d0"/>
        <function-ref name="get" scoped="" ref="0x409372b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40937390"/>
        <function-ref name="set" scoped="" ref="0x40937470"/>
        <function-ref name="clr" scoped="" ref="0x40937550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40935840" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40935840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40935a18"/>
        <function-ref name="stop" scoped="" ref="0x40935af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40934598" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40934598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40934770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x4091df18" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x4091df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40939108"/>
        <function-ref name="sleep" scoped="" ref="0x40938550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x409392c8"/>
        <function-ref name="dataReady" scoped="" ref="0x40938630"/>
        <function-ref name="initMaster" scoped="" ref="0x40939488"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40939568"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40939648"/>
        <function-ref name="read" scoped="" ref="0x40939728"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40939808"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x409398e8"/>
        <function-ref name="setClock" scoped="" ref="0x409399c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40939aa8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40939b88"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40939ce8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40939dc8"/>
        <function-ref name="write" scoped="" ref="0x40939ea8"/>
        <function-ref name="enableSpi" scoped="" ref="0x40938010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x409380f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x409381d0"/>
        <function-ref name="getClock" scoped="" ref="0x409382b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40938390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x409391e8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x409393a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40938470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40936128" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40936128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40936300"/>
        <function-ref name="isInput" scoped="" ref="0x409363e0"/>
        <function-ref name="toggle" scoped="" ref="0x409364c0"/>
        <function-ref name="isOutput" scoped="" ref="0x409365a0"/>
        <function-ref name="get" scoped="" ref="0x40936680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40936760"/>
        <function-ref name="set" scoped="" ref="0x40936840"/>
        <function-ref name="clr" scoped="" ref="0x40936920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40998750" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40998750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40998938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40998a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40997030" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40997030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40997218"/>
        <function-ref name="configure" scoped="" ref="0x409972f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40998010" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40998010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409981f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409982d8"/>
        <function-ref name="request" scoped="" ref="0x409983b8"/>
        <function-ref name="granted" scoped="" ref="0x40998498"/>
        <function-ref name="isOwner" scoped="" ref="0x40998578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40998b58" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40998b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40998d30"/>
        <function-ref name="userId" scoped="" ref="0x40998e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41660120" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41660120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416602f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41660458" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41660458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41660630"/>
        <function-ref name="isEmpty" scoped="" ref="0x41660710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x416607f0"/>
        <function-ref name="dequeue" scoped="" ref="0x416608d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4165eb88" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4165eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4165ed70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4165ee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4165d4d0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4165d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4165d6b8"/>
        <function-ref name="configure" scoped="" ref="0x4165d798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4165d8f8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4165d8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4165dad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4165dbb0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4165dc90"/>
        <function-ref name="dequeue" scoped="" ref="0x4165dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4165e448" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4165e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4165e630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4165e710"/>
        <function-ref name="request" scoped="" ref="0x4165e7f0"/>
        <function-ref name="granted" scoped="" ref="0x4165e8d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4165e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4165d010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4165d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4165d1e8"/>
        <function-ref name="userId" scoped="" ref="0x4165d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4165def0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4165def0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4165c0e0"/>
        <function-ref name="runTask" scoped="" ref="0x4165c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x409922c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x409922c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409924a0"/>
        <function-ref name="isInput" scoped="" ref="0x40992580"/>
        <function-ref name="toggle" scoped="" ref="0x40992660"/>
        <function-ref name="isOutput" scoped="" ref="0x40992740"/>
        <function-ref name="get" scoped="" ref="0x40992820"/>
        <function-ref name="makeOutput" scoped="" ref="0x40992900"/>
        <function-ref name="set" scoped="" ref="0x409929e0"/>
        <function-ref name="clr" scoped="" ref="0x40992ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40993378" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40993378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40993550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40993630"/>
        <function-ref name="request" scoped="" ref="0x40993710"/>
        <function-ref name="granted" scoped="" ref="0x409937f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409938d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40993b38" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40993b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40993d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40993df0"/>
        <function-ref name="request" scoped="" ref="0x40993ed0"/>
        <function-ref name="granted" scoped="" ref="0x40992010"/>
        <function-ref name="isOwner" scoped="" ref="0x409920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409aa9b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409aa9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409aab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x409aad20" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409aad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409aaef8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409a7010"/>
        <function-ref name="led1On" scoped="" ref="0x409a70f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409a71d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409a72b0"/>
        <function-ref name="get" scoped="" ref="0x409a7390"/>
        <function-ref name="led1Off" scoped="" ref="0x409a7470"/>
        <function-ref name="led2Off" scoped="" ref="0x409a77f0"/>
        <function-ref name="set" scoped="" ref="0x409a7550"/>
        <function-ref name="led0On" scoped="" ref="0x409a7630"/>
        <function-ref name="led2On" scoped="" ref="0x409a7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409bc880" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409bc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bcb58"/>
        <function-ref name="write" scoped="" ref="0x409bcc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409d8988" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409d8988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d8b60"/>
        <function-ref name="writeDone" scoped="" ref="0x409d8c40"/>
        <function-ref name="write" scoped="" ref="0x409d8d20"/>
        <function-ref name="beginRead" scoped="" ref="0x409d8e00"/>
        <function-ref name="readDone" scoped="" ref="0x409d8ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409c3bd8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409c3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409bfe50" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409be050"/>
        <function-ref name="write" scoped="" ref="0x409be130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409dd6a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409dd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd880"/>
        <function-ref name="write" scoped="" ref="0x409dd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409ddae0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409ddae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ddcb8"/>
        <function-ref name="write" scoped="" ref="0x409ddd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409c16c0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409c16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409dae38" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409dae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d8050"/>
        <function-ref name="write" scoped="" ref="0x409d8130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409be6e8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409be6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409be8c0"/>
        <function-ref name="write" scoped="" ref="0x409be9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409bc010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bc1e8"/>
        <function-ref name="write" scoped="" ref="0x409bc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409ddf18" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409ddf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc108"/>
        <function-ref name="write" scoped="" ref="0x409dc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409db468" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409db468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db640"/>
        <function-ref name="write" scoped="" ref="0x409db720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409c3010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409c31e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409c32c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409c33a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409c04e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409c04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409c0840" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409c0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409c0c18" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409c0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409c1d70" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409beb20" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409beb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409becf8"/>
        <function-ref name="write" scoped="" ref="0x409bedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409be2b0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409be2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409be488"/>
        <function-ref name="write" scoped="" ref="0x409be568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409c3880" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409c3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409db8a0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409db8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dba78"/>
        <function-ref name="write" scoped="" ref="0x409dbb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409daa00" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409daa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dabd8"/>
        <function-ref name="write" scoped="" ref="0x409dacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409dc7a0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409dc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc978"/>
        <function-ref name="write" scoped="" ref="0x409dca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409c3528" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409c3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409bfa18" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409bfa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bfbf0"/>
        <function-ref name="write" scoped="" ref="0x409bfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409bc448" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409bc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bc620"/>
        <function-ref name="write" scoped="" ref="0x409bc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409d82b0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409d82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d8488"/>
        <function-ref name="writeDone" scoped="" ref="0x409d8568"/>
        <function-ref name="write" scoped="" ref="0x409d8648"/>
        <function-ref name="beginRead" scoped="" ref="0x409d8728"/>
        <function-ref name="readDone" scoped="" ref="0x409d8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409dc368" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409dc368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc540"/>
        <function-ref name="write" scoped="" ref="0x409dc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409bcdb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409bcdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd010"/>
        <function-ref name="write" scoped="" ref="0x409dd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409c1010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409dd270" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409dd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd448"/>
        <function-ref name="write" scoped="" ref="0x409dd528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409c4918" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409c4918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409c4af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409c4bd0"/>
        <function-ref name="request" scoped="" ref="0x409c4cb0"/>
        <function-ref name="granted" scoped="" ref="0x409c4d90"/>
        <function-ref name="isOwner" scoped="" ref="0x409c4e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409bf010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409bf6c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409bf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bf898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409da5c8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409da5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da7a0"/>
        <function-ref name="write" scoped="" ref="0x409da880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409da190" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409da190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da368"/>
        <function-ref name="write" scoped="" ref="0x409da448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409c0190" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409c0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409dbcd8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409dbcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dbeb0"/>
        <function-ref name="write" scoped="" ref="0x409da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409c1368" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409c1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c1540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409c1a18" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409c1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409bf368" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409bf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bf540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409dcbd8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409dcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dcdb0"/>
        <function-ref name="write" scoped="" ref="0x409dce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409db030" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409db030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db208"/>
        <function-ref name="write" scoped="" ref="0x409db2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409ce880" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409ce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ceb58"/>
        <function-ref name="write" scoped="" ref="0x409cec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409ea988" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409ea988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409eab60"/>
        <function-ref name="writeDone" scoped="" ref="0x409eac40"/>
        <function-ref name="write" scoped="" ref="0x409ead20"/>
        <function-ref name="beginRead" scoped="" ref="0x409eae00"/>
        <function-ref name="readDone" scoped="" ref="0x409eaee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409d4bd8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409d4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409d1e50" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf050"/>
        <function-ref name="write" scoped="" ref="0x409cf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409cd6a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409cd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd880"/>
        <function-ref name="write" scoped="" ref="0x409cd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409cdae0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409cdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cdcb8"/>
        <function-ref name="write" scoped="" ref="0x409cdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409d36c0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409d36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409ebe38" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409ebe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ea050"/>
        <function-ref name="write" scoped="" ref="0x409ea130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409cf6e8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409cf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf8c0"/>
        <function-ref name="write" scoped="" ref="0x409cf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409ce010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce1e8"/>
        <function-ref name="write" scoped="" ref="0x409ce2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409cdf18" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409cdf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee108"/>
        <function-ref name="write" scoped="" ref="0x409ee1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409ed468" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409ed468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed640"/>
        <function-ref name="write" scoped="" ref="0x409ed720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409d4010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409d41e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409d42c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409d43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409d24e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409d24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409d2840" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409d2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409d2c18" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409d2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409d3d70" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409d3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409cfb20" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409cfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cfcf8"/>
        <function-ref name="write" scoped="" ref="0x409cfdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409cf2b0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409cf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf488"/>
        <function-ref name="write" scoped="" ref="0x409cf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409d4880" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409d4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409ed8a0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409ed8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eda78"/>
        <function-ref name="write" scoped="" ref="0x409edb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409eba00" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409eba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ebbd8"/>
        <function-ref name="write" scoped="" ref="0x409ebcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409ee7a0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409ee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee978"/>
        <function-ref name="write" scoped="" ref="0x409eea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409d4528" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409d4528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409d1a18" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409d1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d1bf0"/>
        <function-ref name="write" scoped="" ref="0x409d1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409ce448" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409ce448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce620"/>
        <function-ref name="write" scoped="" ref="0x409ce700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409ea2b0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409ea2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409ea488"/>
        <function-ref name="writeDone" scoped="" ref="0x409ea568"/>
        <function-ref name="write" scoped="" ref="0x409ea648"/>
        <function-ref name="beginRead" scoped="" ref="0x409ea728"/>
        <function-ref name="readDone" scoped="" ref="0x409ea808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409ee368" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409ee368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee540"/>
        <function-ref name="write" scoped="" ref="0x409ee620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409cedb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409cedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd010"/>
        <function-ref name="write" scoped="" ref="0x409cd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409d3010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409cd270" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409cd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd448"/>
        <function-ref name="write" scoped="" ref="0x409cd528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409d5908" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409d5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d5ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409d5bc0"/>
        <function-ref name="request" scoped="" ref="0x409d5ca0"/>
        <function-ref name="granted" scoped="" ref="0x409d5d80"/>
        <function-ref name="isOwner" scoped="" ref="0x409d5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409d1010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409d16c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409d16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409eb5c8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409eb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb7a0"/>
        <function-ref name="write" scoped="" ref="0x409eb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409eb190" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409eb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb368"/>
        <function-ref name="write" scoped="" ref="0x409eb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409d2190" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409d2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409edcd8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409edcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409edeb0"/>
        <function-ref name="write" scoped="" ref="0x409eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409d3368" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409d3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409d3a18" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409d3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409d1368" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409d1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d1540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409eebd8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409eebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eedb0"/>
        <function-ref name="write" scoped="" ref="0x409eee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409ed030" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409ed030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed208"/>
        <function-ref name="write" scoped="" ref="0x409ed2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409e7ae0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409e7cb8"/>
        <function-ref name="changed" scoped="" ref="0x409e7d98"/>
        <function-ref name="amGroup" scoped="" ref="0x409e7e78"/>
        <function-ref name="setAddress" scoped="" ref="0x409e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409f8390" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409f8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409f8568"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409f8648"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409f8728"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409f8808"/>
        <function-ref name="setCca" scoped="" ref="0x409f88e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409f89c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409f5468" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409f5468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x409fbc58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x409fbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fbe30"/>
        <function-ref name="cancel" scoped="" ref="0x409fbf10"/>
        <function-ref name="modify" scoped="" ref="0x409f8010"/>
        <function-ref name="sendDone" scoped="" ref="0x409f80f0"/>
        <function-ref name="resend" scoped="" ref="0x409f81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409fb7d0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409fb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409fb9a8"/>
        <function-ref name="stop" scoped="" ref="0x409fba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409f58d0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409f58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40a04748" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40a04748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40a04920"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40a04a00"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40a04ae0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40a04bc0"/>
        <function-ref name="setCca" scoped="" ref="0x40a04ca0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40a04d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a212b0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a212b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a21db0"/>
        <function-ref name="clear" scoped="" ref="0x40a20170"/>
        <function-ref name="isValid" scoped="" ref="0x40a21a00"/>
        <function-ref name="set" scoped="" ref="0x40a20520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40a030c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40a030c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a032a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40a17598" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a17598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a17770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40a19840" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40a19840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a19a18"/>
        <function-ref name="disable" scoped="" ref="0x40a19af8"/>
        <function-ref name="captured" scoped="" ref="0x40a19bd8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a19cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40a03b18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40a03b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a01068"/>
        <function-ref name="fired" scoped="" ref="0x40a02820"/>
        <function-ref name="startAt" scoped="" ref="0x40a02d10"/>
        <function-ref name="isRunning" scoped="" ref="0x40a02a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a012e0"/>
        <function-ref name="start" scoped="" ref="0x40a02308"/>
        <function-ref name="stop" scoped="" ref="0x40a025a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a01590" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a01590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a01768"/>
        <function-ref name="getRssi" scoped="" ref="0x40a01848"/>
        <function-ref name="getPower" scoped="" ref="0x40a01928"/>
        <function-ref name="getLqi" scoped="" ref="0x40a01a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40a18338" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a18338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a18510"/>
        <function-ref name="write" scoped="" ref="0x40a185f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40a18840" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a18840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a18a18"/>
        <function-ref name="write" scoped="" ref="0x40a18af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40a12c48" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a12c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a12e20"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a12f00"/>
        <function-ref name="sfd" scoped="" ref="0x40a15010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a04010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a041e8"/>
        <function-ref name="cancel" scoped="" ref="0x40a042c8"/>
        <function-ref name="modify" scoped="" ref="0x40a043a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a04488"/>
        <function-ref name="resend" scoped="" ref="0x40a04568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40a1a588" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a1a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a1a760"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a1a840"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a1a920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40a179c8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a179c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a17ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a1f9a8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a1f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a1fb80"/>
        <function-ref name="isInput" scoped="" ref="0x40a1fc60"/>
        <function-ref name="toggle" scoped="" ref="0x40a1fd40"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1fe20"/>
        <function-ref name="get" scoped="" ref="0x40a1ff00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a1e010"/>
        <function-ref name="set" scoped="" ref="0x40a1e0f0"/>
        <function-ref name="clr" scoped="" ref="0x40a1e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a06758" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a06758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a06930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a01c10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a01c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a01de8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a01ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40a19170" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a19170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a19348"/>
        <function-ref name="isSet" scoped="" ref="0x40a19428"/>
        <function-ref name="cancel" scoped="" ref="0x40a19508"/>
        <function-ref name="set" scoped="" ref="0x40a195e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40a17e08" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a17e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a160f0"/>
        <function-ref name="write" scoped="" ref="0x40a161d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a1ee10" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a1ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a1a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a1a0f0"/>
        <function-ref name="request" scoped="" ref="0x40a1a1d0"/>
        <function-ref name="granted" scoped="" ref="0x40a1a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a1a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40a19eb8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40a19eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a1f188"/>
        <function-ref name="isInput" scoped="" ref="0x40a1f268"/>
        <function-ref name="toggle" scoped="" ref="0x40a1f348"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1f428"/>
        <function-ref name="get" scoped="" ref="0x40a1f508"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a1f5e8"/>
        <function-ref name="set" scoped="" ref="0x40a1f6c8"/>
        <function-ref name="clr" scoped="" ref="0x40a1f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a18d28" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a18d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a18f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40a1e3d0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40a1e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a1e5a8"/>
        <function-ref name="isInput" scoped="" ref="0x40a1e688"/>
        <function-ref name="toggle" scoped="" ref="0x40a1e768"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1e848"/>
        <function-ref name="get" scoped="" ref="0x40a1e928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a1ea08"/>
        <function-ref name="set" scoped="" ref="0x40a1eae8"/>
        <function-ref name="clr" scoped="" ref="0x40a1ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a151a0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a151a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a15378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a15458"/>
        <function-ref name="led1On" scoped="" ref="0x40a15538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a15618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a156f8"/>
        <function-ref name="get" scoped="" ref="0x40a157d8"/>
        <function-ref name="led1Off" scoped="" ref="0x40a158b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40a15c38"/>
        <function-ref name="set" scoped="" ref="0x40a15998"/>
        <function-ref name="led0On" scoped="" ref="0x40a15a78"/>
        <function-ref name="led2On" scoped="" ref="0x40a15b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a06af8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a06af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a06cd0"/>
        <function-ref name="stop" scoped="" ref="0x40a06db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40a1ab48" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a1ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a1ad20"/>
        <function-ref name="writeDone" scoped="" ref="0x40a1ae00"/>
        <function-ref name="write" scoped="" ref="0x40a1aee0"/>
        <function-ref name="beginRead" scoped="" ref="0x40a18010"/>
        <function-ref name="readDone" scoped="" ref="0x40a180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40a17168" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a17168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40a03550" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40a03550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a03728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a6e368" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a6e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6e640"/>
        <function-ref name="write" scoped="" ref="0x40a6e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a8c550" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a8c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a8c728"/>
        <function-ref name="writeDone" scoped="" ref="0x40a8c808"/>
        <function-ref name="write" scoped="" ref="0x40a8c8e8"/>
        <function-ref name="beginRead" scoped="" ref="0x40a8c9c8"/>
        <function-ref name="readDone" scoped="" ref="0x40a8caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a74840" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a74840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a74a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a70920" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a70920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a70af8"/>
        <function-ref name="write" scoped="" ref="0x40a70bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a6d190" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a6d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6d368"/>
        <function-ref name="write" scoped="" ref="0x40a6d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a6d5c8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a6d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6d7a0"/>
        <function-ref name="write" scoped="" ref="0x40a6d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a73260" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a73260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a8da00" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a8da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8dbd8"/>
        <function-ref name="write" scoped="" ref="0x40a8dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a6f270" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a6f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6f448"/>
        <function-ref name="write" scoped="" ref="0x40a6f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a6fae0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a6fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6fcb8"/>
        <function-ref name="write" scoped="" ref="0x40a6fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a6da00" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a6da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6dbd8"/>
        <function-ref name="write" scoped="" ref="0x40a6dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a6a010" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6a1e8"/>
        <function-ref name="write" scoped="" ref="0x40a6a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a75bd0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a75bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a75da8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a75e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a72010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a721e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a72368" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a72368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a725c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a72740" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a72918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a73910" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a73910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a6f6a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a6f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6f880"/>
        <function-ref name="write" scoped="" ref="0x40a6f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a70d58" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a70d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6f010"/>
        <function-ref name="write" scoped="" ref="0x40a6f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a744e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a744e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a746c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a6a448" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a6a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6a620"/>
        <function-ref name="write" scoped="" ref="0x40a6a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a8d5c8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a8d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8d7a0"/>
        <function-ref name="write" scoped="" ref="0x40a8d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a6c2b0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a6c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6c488"/>
        <function-ref name="write" scoped="" ref="0x40a6c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a74190" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a74190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a74368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a704e8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a704e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a706c0"/>
        <function-ref name="write" scoped="" ref="0x40a707a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a6ff18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a6ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6e108"/>
        <function-ref name="write" scoped="" ref="0x40a6e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a8de38" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a8de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a8c050"/>
        <function-ref name="writeDone" scoped="" ref="0x40a8c130"/>
        <function-ref name="write" scoped="" ref="0x40a8c210"/>
        <function-ref name="beginRead" scoped="" ref="0x40a8c2f0"/>
        <function-ref name="readDone" scoped="" ref="0x40a8c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a6de38" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a6de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6c050"/>
        <function-ref name="write" scoped="" ref="0x40a6c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a6e8a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a6e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6ea78"/>
        <function-ref name="write" scoped="" ref="0x40a6eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a74b98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a74b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a74d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a6ecd8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a6ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6eeb0"/>
        <function-ref name="write" scoped="" ref="0x40a6d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a75518" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a75518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a756f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a757d0"/>
        <function-ref name="request" scoped="" ref="0x40a758b0"/>
        <function-ref name="granted" scoped="" ref="0x40a75990"/>
        <function-ref name="isOwner" scoped="" ref="0x40a75a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a72a98" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a72a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a72c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a70190" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a70368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a8d190" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a8d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8d368"/>
        <function-ref name="write" scoped="" ref="0x40a8d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a6acb8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a6acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6ae90"/>
        <function-ref name="write" scoped="" ref="0x40a8d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a73c68" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a73c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a6a880" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a6a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6aa58"/>
        <function-ref name="write" scoped="" ref="0x40a6ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a74ef0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a74ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a730e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a735b8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a735b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a72df0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a72df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a6c6e8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a6c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6c8c0"/>
        <function-ref name="write" scoped="" ref="0x40a6c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a6cb20" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a6cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6ccf8"/>
        <function-ref name="write" scoped="" ref="0x40a6cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a852d8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a852d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a854b0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a85590"/>
        <function-ref name="sfd" scoped="" ref="0x40a85670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a85818" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a85818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a859f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a85cb0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a85cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a85e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a88da0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a88da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a85010"/>
        <function-ref name="stop" scoped="" ref="0x40a850f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a80a18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a80a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a80bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40a80cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40a80db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a80e90"/>
        <function-ref name="get" scoped="" ref="0x40a7f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7f0f0"/>
        <function-ref name="set" scoped="" ref="0x40a7f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40a7f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40a9f990" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40a9f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40a9fb68"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40a9fc48"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40a9fd28"/>
        <function-ref name="syncDone" scoped="" ref="0x40a9fe08"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40a9fee8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40a9e010"/>
        <function-ref name="setChannel" scoped="" ref="0x40a9e0f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40a9e1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40a9e2b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40a9e390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40a9e470"/>
        <function-ref name="sync" scoped="" ref="0x40a9e550"/>
        <function-ref name="getChannel" scoped="" ref="0x40a9e630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40a9e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40a95178" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40a95178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a95350"/>
        <function-ref name="runTask" scoped="" ref="0x40a95430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a7f4c8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a7f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7f6a0"/>
        <function-ref name="isInput" scoped="" ref="0x40a7f780"/>
        <function-ref name="toggle" scoped="" ref="0x40a7f860"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7f940"/>
        <function-ref name="get" scoped="" ref="0x40a7fa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7fb00"/>
        <function-ref name="set" scoped="" ref="0x40a7fbe0"/>
        <function-ref name="clr" scoped="" ref="0x40a7fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a9eb40" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a9eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a9d6b8"/>
        <function-ref name="clear" scoped="" ref="0x40a9da68"/>
        <function-ref name="isValid" scoped="" ref="0x40a9d308"/>
        <function-ref name="set" scoped="" ref="0x40a9de18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a7ce68" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a7ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a9f050"/>
        <function-ref name="getRssi" scoped="" ref="0x40a9f130"/>
        <function-ref name="getPower" scoped="" ref="0x40a9f210"/>
        <function-ref name="getLqi" scoped="" ref="0x40a9f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a811f8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a811f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a813d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a814b0"/>
        <function-ref name="sfd" scoped="" ref="0x40a81590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40a7c600" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a7c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a7c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a80010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a801e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a802c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a803a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a80488"/>
        <function-ref name="get" scoped="" ref="0x40a80568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a80648"/>
        <function-ref name="set" scoped="" ref="0x40a80728"/>
        <function-ref name="clr" scoped="" ref="0x40a80808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a84928" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a84928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a84b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a9f4f8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a9f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a9f6d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a9f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a81738" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a81738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a81910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a7e6d0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a7e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a7e8a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a7e988"/>
        <function-ref name="request" scoped="" ref="0x40a7ea68"/>
        <function-ref name="granted" scoped="" ref="0x40a7eb48"/>
        <function-ref name="isOwner" scoped="" ref="0x40a7ec28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40a7ee50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a7ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a7c050"/>
        <function-ref name="writeDone" scoped="" ref="0x40a7c130"/>
        <function-ref name="write" scoped="" ref="0x40a7c210"/>
        <function-ref name="beginRead" scoped="" ref="0x40a7c2f0"/>
        <function-ref name="readDone" scoped="" ref="0x40a7c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a81bd0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a81bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a81da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a9c288" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a9c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a9c460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a9c540"/>
        <function-ref name="led1On" scoped="" ref="0x40a9c620"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a9c700"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a9c7e0"/>
        <function-ref name="get" scoped="" ref="0x40a9c8c0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a9c9a0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a9cd20"/>
        <function-ref name="set" scoped="" ref="0x40a9ca80"/>
        <function-ref name="led0On" scoped="" ref="0x40a9cb60"/>
        <function-ref name="led2On" scoped="" ref="0x40a9cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a7e010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a7e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a7e1e8"/>
        <function-ref name="disable" scoped="" ref="0x40a7e2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a7e3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a7e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40a7ca30" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a7ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a7cc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a84cc8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a84cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a84ea0"/>
        <function-ref name="stop" scoped="" ref="0x40a81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ad15b8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ad1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ad4428" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ad4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ad4600"/>
        <function-ref name="getRssi" scoped="" ref="0x40ad46e0"/>
        <function-ref name="getPower" scoped="" ref="0x40ad47c0"/>
        <function-ref name="getLqi" scoped="" ref="0x40ad48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ad1c10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ad0730"/>
        <function-ref name="clear" scoped="" ref="0x40ad0ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40ad0380"/>
        <function-ref name="set" scoped="" ref="0x40ad0e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ad1108" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad1108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40ad12e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ad13c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40aced30" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aced30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40acef08"/>
        <function-ref name="isSet" scoped="" ref="0x40acc010"/>
        <function-ref name="cancel" scoped="" ref="0x40acc0f0"/>
        <function-ref name="set" scoped="" ref="0x40acc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40acf5e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40acf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ace108"/>
        <function-ref name="clear" scoped="" ref="0x40ace4b8"/>
        <function-ref name="isValid" scoped="" ref="0x40acfd30"/>
        <function-ref name="set" scoped="" ref="0x40ace868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ad4b10" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ad4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ad4ce8"/>
        <function-ref name="noAck" scoped="" ref="0x40ad4dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ad4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ac9cb0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ac9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ac9e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40accb28" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40accb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40accd00"/>
        <function-ref name="getRssi" scoped="" ref="0x40accde0"/>
        <function-ref name="getPower" scoped="" ref="0x40accec0"/>
        <function-ref name="getLqi" scoped="" ref="0x40ac9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aeab00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aeab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aeacd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aeadb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40aeae98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ae9010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ae90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ac83a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ac83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ac8ea0"/>
        <function-ref name="clear" scoped="" ref="0x40ac7280"/>
        <function-ref name="isValid" scoped="" ref="0x40ac8af0"/>
        <function-ref name="set" scoped="" ref="0x40ac7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ac9800" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ac9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40ac99d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ac9ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40aea4d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aea4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aea6b0"/>
        <function-ref name="isSet" scoped="" ref="0x40aea790"/>
        <function-ref name="cancel" scoped="" ref="0x40aea870"/>
        <function-ref name="set" scoped="" ref="0x40aea950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40ae9430" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae9a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40ae9e88" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ae9e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ac7d68" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ac7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ac5898"/>
        <function-ref name="clear" scoped="" ref="0x40ac5c48"/>
        <function-ref name="isValid" scoped="" ref="0x40ac54e8"/>
        <function-ref name="set" scoped="" ref="0x40aea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ac9280" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ac9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ac9458"/>
        <function-ref name="noAck" scoped="" ref="0x40ac9538"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ac9618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40aeb5d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40aeb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aebc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b10010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b10010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b10760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b10c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b109d8"/>
        <function-ref name="overflow" scoped="" ref="0x40b10ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b077f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b077f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b05330"/>
        <function-ref name="fired" scoped="" ref="0x40b06590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b06c98"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b06a40"/>
        <function-ref name="getdt" scoped="" ref="0x40b057e0"/>
        <function-ref name="gett0" scoped="" ref="0x40b05588"/>
        <function-ref name="isRunning" scoped="" ref="0x40b067e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b07e18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b05010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b060b8"/>
        <function-ref name="stop" scoped="" ref="0x40b06338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b05b40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b05b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b03200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b07040" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b07040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b07218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40afe4f0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40afe4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40afec40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b22150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40afeeb8"/>
        <function-ref name="overflow" scoped="" ref="0x40b223c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b00240" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b00240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b00418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40b00808" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40b00808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40affd58"/>
        <function-ref name="fired" scoped="" ref="0x40aff528"/>
        <function-ref name="startAt" scoped="" ref="0x40affa18"/>
        <function-ref name="isRunning" scoped="" ref="0x40aff7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40afe010"/>
        <function-ref name="start" scoped="" ref="0x40aff010"/>
        <function-ref name="stop" scoped="" ref="0x40aff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b5e198" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b5e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b5d640"/>
        <function-ref name="fired" scoped="" ref="0x40b5ee00"/>
        <function-ref name="startAt" scoped="" ref="0x40b5d300"/>
        <function-ref name="isRunning" scoped="" ref="0x40b5d088"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b5d8b8"/>
        <function-ref name="start" scoped="" ref="0x40b5e8e8"/>
        <function-ref name="stop" scoped="" ref="0x40b5eb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b20d50" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b20d50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b20f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b5dbe8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b5dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b5b380"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b5b870"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b5b5f8"/>
        <function-ref name="overflow" scoped="" ref="0x40b5bae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4170b640" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4170b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4170b818"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4170b8f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4170b9d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4170bab8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4170bb98"/>
        <function-ref name="setControl" scoped="" ref="0x4170bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x416b9790" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x416b9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41710c68"/>
        <function-ref name="fired" scoped="" ref="0x41710438"/>
        <function-ref name="startAt" scoped="" ref="0x41710928"/>
        <function-ref name="isRunning" scoped="" ref="0x417106b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41710ee0"/>
        <function-ref name="start" scoped="" ref="0x416b9ee0"/>
        <function-ref name="stop" scoped="" ref="0x417101c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416b9358" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416b9358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416b9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4170f228" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4170f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4170f978"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4170fe68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4170fbf0"/>
        <function-ref name="overflow" scoped="" ref="0x4170e110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41709890" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41709890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x41709a68"/>
        <function-ref name="compareBusy" scoped="" ref="0x41709b48"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x41709c28"/>
        <function-ref name="countBusy" scoped="" ref="0x41709d08"/>
        <function-ref name="getAssr" scoped="" ref="0x41709de8"/>
        <function-ref name="setAssr" scoped="" ref="0x41709ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x4170be68" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4170be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x417093e8"/>
        <function-ref name="fired" scoped="" ref="0x4170a9f0"/>
        <function-ref name="get" scoped="" ref="0x4170a4d8"/>
        <function-ref name="reset" scoped="" ref="0x4170ac68"/>
        <function-ref name="isOn" scoped="" ref="0x41709660"/>
        <function-ref name="set" scoped="" ref="0x4170a750"/>
        <function-ref name="start" scoped="" ref="0x4170aee0"/>
        <function-ref name="stop" scoped="" ref="0x41709170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4170e400" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4170e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4170dee0"/>
        <function-ref name="test" scoped="" ref="0x4170d9f0"/>
        <function-ref name="get" scoped="" ref="0x4170ea48"/>
        <function-ref name="setScale" scoped="" ref="0x4170b170"/>
        <function-ref name="getScale" scoped="" ref="0x4170b410"/>
        <function-ref name="reset" scoped="" ref="0x4170d288"/>
        <function-ref name="overflow" scoped="" ref="0x4170d010"/>
        <function-ref name="isOn" scoped="" ref="0x4170dc68"/>
        <function-ref name="set" scoped="" ref="0x4170ecc0"/>
        <function-ref name="start" scoped="" ref="0x4170d500"/>
        <function-ref name="stop" scoped="" ref="0x4170d778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b69d08" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b69d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b69ee0"/>
        <function-ref name="runTask" scoped="" ref="0x40b68010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b6a398" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b6a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b69840"/>
        <function-ref name="fired" scoped="" ref="0x40b69010"/>
        <function-ref name="startAt" scoped="" ref="0x40b69500"/>
        <function-ref name="isRunning" scoped="" ref="0x40b69288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b69ab8"/>
        <function-ref name="start" scoped="" ref="0x40b6aae8"/>
        <function-ref name="stop" scoped="" ref="0x40b6ad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b590a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b6cb88"/>
        <function-ref name="fired" scoped="" ref="0x40b59e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b6c548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b6c2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40b6a048"/>
        <function-ref name="gett0" scoped="" ref="0x40b6cde0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b6c098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b596c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b6c868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b59948"/>
        <function-ref name="stop" scoped="" ref="0x40b59bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b8c4b8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b8c4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b8c690"/>
        <function-ref name="runTask" scoped="" ref="0x40b8c770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b8e220" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b8e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b8dd58"/>
        <function-ref name="fired" scoped="" ref="0x40b8d010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b8d718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b8d4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40b8c268"/>
        <function-ref name="gett0" scoped="" ref="0x40b8c010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b8d268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b8e848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b8da38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b8eac8"/>
        <function-ref name="stop" scoped="" ref="0x40b8ed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b66ea8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b66ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b90a48"/>
        <function-ref name="fired" scoped="" ref="0x40b91c88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b903e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b90180"/>
        <function-ref name="getdt" scoped="" ref="0x40b90f18"/>
        <function-ref name="gett0" scoped="" ref="0x40b90cb0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b91ef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b91500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b90718"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b91790"/>
        <function-ref name="stop" scoped="" ref="0x40b91a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b8a970" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b8a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b89010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b89360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b89360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b89ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b88010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b89d28"/>
        <function-ref name="overflow" scoped="" ref="0x40b88288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bae458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bae458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba1010"/>
        <function-ref name="fired" scoped="" ref="0x40bad268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bad970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bad718"/>
        <function-ref name="getdt" scoped="" ref="0x40ba14c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ba1268"/>
        <function-ref name="isRunning" scoped="" ref="0x40bad4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40baea80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40badc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40baed00"/>
        <function-ref name="stop" scoped="" ref="0x40bad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40ba6670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40ba6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba4170"/>
        <function-ref name="fired" scoped="" ref="0x40ba5408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ba5b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ba58b8"/>
        <function-ref name="getdt" scoped="" ref="0x40ba4620"/>
        <function-ref name="gett0" scoped="" ref="0x40ba43c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ba5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ba6c98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ba5e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ba6f18"/>
        <function-ref name="stop" scoped="" ref="0x40ba51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bc2190" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bc2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc2468"/>
        <function-ref name="write" scoped="" ref="0x40bc2548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40bbc430" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40bbc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bbc608"/>
        <function-ref name="writeDone" scoped="" ref="0x40bbc6e8"/>
        <function-ref name="write" scoped="" ref="0x40bbc7c8"/>
        <function-ref name="beginRead" scoped="" ref="0x40bbc8a8"/>
        <function-ref name="readDone" scoped="" ref="0x40bbc988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b9f598" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b9f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bc47a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bc47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc4978"/>
        <function-ref name="write" scoped="" ref="0x40bc4a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bc1010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bc1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc11e8"/>
        <function-ref name="write" scoped="" ref="0x40bc12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bc1448" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bc1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1620"/>
        <function-ref name="write" scoped="" ref="0x40bc1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b9e010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b9e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40bbd880" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bbd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbda58"/>
        <function-ref name="write" scoped="" ref="0x40bbdb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bc3030" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bc3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3208"/>
        <function-ref name="write" scoped="" ref="0x40bc32e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bc38a0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bc38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3a78"/>
        <function-ref name="write" scoped="" ref="0x40bc3b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bc1880" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bc1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1a58"/>
        <function-ref name="write" scoped="" ref="0x40bc1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bbfe38" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bbfe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe050"/>
        <function-ref name="write" scoped="" ref="0x40bbe130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ba0988" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ba0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ba0b60"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ba0c40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40ba0d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b9ed70" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b9ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b9c190" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b9c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9c3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b9c568" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b9c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b9e6c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b9e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bc3468" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bc3468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3640"/>
        <function-ref name="write" scoped="" ref="0x40bc3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bc4bd8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bc4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc4db0"/>
        <function-ref name="write" scoped="" ref="0x40bc4e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b9f240" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b9f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9f418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bbe2b0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bbe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe488"/>
        <function-ref name="write" scoped="" ref="0x40bbe568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40bbd448" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40bbd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbd620"/>
        <function-ref name="write" scoped="" ref="0x40bbd700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40bbf190" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40bbf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf368"/>
        <function-ref name="write" scoped="" ref="0x40bbf448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40ba0ea0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40ba0ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bc4368" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bc4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc4540"/>
        <function-ref name="write" scoped="" ref="0x40bc4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bc3cd8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bc3cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3eb0"/>
        <function-ref name="write" scoped="" ref="0x40bc2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40bbdcb8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bbdcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bbde90"/>
        <function-ref name="writeDone" scoped="" ref="0x40bbc010"/>
        <function-ref name="write" scoped="" ref="0x40bbc0f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40bbc1d0"/>
        <function-ref name="readDone" scoped="" ref="0x40bbc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bc1cb8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bc1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1e90"/>
        <function-ref name="write" scoped="" ref="0x40bbf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bc26c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bc26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc28a0"/>
        <function-ref name="write" scoped="" ref="0x40bc2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b9f8f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b9f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9fac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bc2b00" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bc2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc2cd8"/>
        <function-ref name="write" scoped="" ref="0x40bc2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ba02d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ba02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ba04a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ba0588"/>
        <function-ref name="request" scoped="" ref="0x40ba0668"/>
        <function-ref name="granted" scoped="" ref="0x40ba0748"/>
        <function-ref name="isOwner" scoped="" ref="0x40ba0828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b9c8c0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b9c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bc4010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bc41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bbd010" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbd1e8"/>
        <function-ref name="write" scoped="" ref="0x40bbd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40bbeb20" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40bbeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbecf8"/>
        <function-ref name="write" scoped="" ref="0x40bbedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b9ea18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b9ea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bbe6e8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bbe6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe8c0"/>
        <function-ref name="write" scoped="" ref="0x40bbe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b9fc48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b9fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b9e368" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b9e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b9cc18" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b9cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40bbf5c8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40bbf5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf7a0"/>
        <function-ref name="write" scoped="" ref="0x40bbf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bbfa00" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bbfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbfbd8"/>
        <function-ref name="write" scoped="" ref="0x40bbfcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bd5618" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bd5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bd57f0"/>
        <function-ref name="rand32" scoped="" ref="0x40bd58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bd8d40" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bd8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd5380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bd8820" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bd8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd89f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bd00a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bd00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bd0278"/>
        <function-ref name="rand32" scoped="" ref="0x40bd0358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bd17a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bd17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bd1288" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bd1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd1460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bd7260" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bd7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bd7438"/>
        <function-ref name="toIdle" scoped="" ref="0x40bd7518"/>
        <function-ref name="isState" scoped="" ref="0x40bd75f8"/>
        <function-ref name="isIdle" scoped="" ref="0x40bd76d8"/>
        <function-ref name="requestState" scoped="" ref="0x40bd77b8"/>
        <function-ref name="forceState" scoped="" ref="0x40bd7898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bc6800" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bc6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc69d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc6ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc6b98"/>
        <function-ref name="cancel" scoped="" ref="0x40bc6c78"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bc6090" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bc6090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc6268"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc6348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc6428"/>
        <function-ref name="cancel" scoped="" ref="0x40bc6508"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc65e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bec228" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bec228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bec400"/>
        <function-ref name="getPayload" scoped="" ref="0x40bec4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bec5c0"/>
        <function-ref name="cancel" scoped="" ref="0x40bec6a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bec780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bc56d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bc56d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc58b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc5990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc5a70"/>
        <function-ref name="cancel" scoped="" ref="0x40bc5b50"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40beb190" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40beb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40beb368"/>
        <function-ref name="rand32" scoped="" ref="0x40beb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bc5da0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bc5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bec010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40beb630" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40beb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40beb808"/>
        <function-ref name="getMetadata" scoped="" ref="0x40beb8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40bec8f8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bec8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40becad0"/>
        <function-ref name="toIdle" scoped="" ref="0x40becbb0"/>
        <function-ref name="isState" scoped="" ref="0x40becc90"/>
        <function-ref name="isIdle" scoped="" ref="0x40becd70"/>
        <function-ref name="requestState" scoped="" ref="0x40bece50"/>
        <function-ref name="forceState" scoped="" ref="0x40beb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bee6a8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bee6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bee880"/>
        <function-ref name="toIdle" scoped="" ref="0x40bee960"/>
        <function-ref name="isState" scoped="" ref="0x40beea40"/>
        <function-ref name="isIdle" scoped="" ref="0x40beeb20"/>
        <function-ref name="requestState" scoped="" ref="0x40beec00"/>
        <function-ref name="forceState" scoped="" ref="0x40beece0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bde688" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bde688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bde860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bc8d70" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bc8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bde010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bde260" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bde260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bde438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bda010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bda010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bda1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bdbb48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bdbb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bdbd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bdb3d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bdb3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bda3d0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bda3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bda5a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bda688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bdb800" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bdb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdb9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bf2180" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bf2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf2358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bf2530" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bf2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf2708"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf27e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf28c8"/>
        <function-ref name="cancel" scoped="" ref="0x40bf29a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf2a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bf3658" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bf3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf3830"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf3910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf39f0"/>
        <function-ref name="cancel" scoped="" ref="0x40bf3ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bf3d38" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bf3d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf3f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c187f0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c187f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c189c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c18aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c18b88"/>
        <function-ref name="cancel" scoped="" ref="0x40c18c68"/>
        <function-ref name="sendDone" scoped="" ref="0x40c18d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c17010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c171e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bef550" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bef550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bef728"/>
        <function-ref name="getPayload" scoped="" ref="0x40bef808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bef8e8"/>
        <function-ref name="cancel" scoped="" ref="0x40bef9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40befaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40c18400" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40c18400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c185d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c173d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c173d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c175a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c17688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40befc30" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40befc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40befe08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c09a80" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c09a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c09c58"/>
        <function-ref name="stopDone" scoped="" ref="0x40c09d38"/>
        <function-ref name="start" scoped="" ref="0x40c09e18"/>
        <function-ref name="stop" scoped="" ref="0x40c09ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c08968" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c08968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c08b40"/>
        <function-ref name="getPayload" scoped="" ref="0x40c08c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c08d00"/>
        <function-ref name="cancel" scoped="" ref="0x40c08de0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c08ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c070e8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c070e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c072c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bf0448" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bf0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf0620"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf0700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf07e0"/>
        <function-ref name="cancel" scoped="" ref="0x40bf08c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bf0ef0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bf0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40c090e0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40c091c0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40c092a0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40c09380"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40c09460"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40c09540"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40c09620"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40c09700"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40c097e0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40c098c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40c08118" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40c08118"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c082f0"/>
        <function-ref name="toIdle" scoped="" ref="0x40c083d0"/>
        <function-ref name="isState" scoped="" ref="0x40c084b0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c08590"/>
        <function-ref name="requestState" scoped="" ref="0x40c08670"/>
        <function-ref name="forceState" scoped="" ref="0x40c08750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c07508" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c07508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c076e0"/>
        <function-ref name="stopDone" scoped="" ref="0x40c077c0"/>
        <function-ref name="start" scoped="" ref="0x40c078a0"/>
        <function-ref name="stop" scoped="" ref="0x40c07980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bf0b28" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bf0b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c041f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c041f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40c043c8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40c044a8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40c04588"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40c04668"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40c04748"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40c04828"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40c04908"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40c049e8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40c04ac8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40c04ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c23cf0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c23cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c23ec8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c06010"/>
        <function-ref name="isState" scoped="" ref="0x40c060f0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c061d0"/>
        <function-ref name="requestState" scoped="" ref="0x40c062b0"/>
        <function-ref name="forceState" scoped="" ref="0x40c06390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c21bc8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c21bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c21da0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c21e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c20010"/>
        <function-ref name="cancel" scoped="" ref="0x40c200f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c0bc80" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c0bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0be58"/>
        <function-ref name="getPayload" scoped="" ref="0x40c21010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c210f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c211d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c21458" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c21458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c21630"/>
        <function-ref name="setRetries" scoped="" ref="0x40c21710"/>
        <function-ref name="getRetries" scoped="" ref="0x40c217f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c218d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c219b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c1d140" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c1d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c1d318"/>
        <function-ref name="noAck" scoped="" ref="0x40c1d3f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c1d4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c20920" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c20920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c20af8"/>
        <function-ref name="setRetries" scoped="" ref="0x40c20bd8"/>
        <function-ref name="getRetries" scoped="" ref="0x40c20cb8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c20d98"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c20e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c39e30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c39e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c36050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c36130"/>
        <function-ref name="led1On" scoped="" ref="0x40c36210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c362f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c363d0"/>
        <function-ref name="get" scoped="" ref="0x40c364b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c36590"/>
        <function-ref name="led2Off" scoped="" ref="0x40c36910"/>
        <function-ref name="set" scoped="" ref="0x40c36670"/>
        <function-ref name="led0On" scoped="" ref="0x40c36750"/>
        <function-ref name="led2On" scoped="" ref="0x40c36830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40c32240" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c32240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c32418"/>
        <function-ref name="isInput" scoped="" ref="0x40c324f8"/>
        <function-ref name="toggle" scoped="" ref="0x40c325d8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c326b8"/>
        <function-ref name="get" scoped="" ref="0x40c32798"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c32878"/>
        <function-ref name="set" scoped="" ref="0x40c32958"/>
        <function-ref name="clr" scoped="" ref="0x40c32a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c331d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c331d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c333b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40c32c28" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c32c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c32e00"/>
        <function-ref name="isInput" scoped="" ref="0x40c32ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40c31010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c310f0"/>
        <function-ref name="get" scoped="" ref="0x40c311d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c312b0"/>
        <function-ref name="set" scoped="" ref="0x40c31390"/>
        <function-ref name="clr" scoped="" ref="0x40c31470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c33520" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c33520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c336f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c337d8"/>
        <function-ref name="led1On" scoped="" ref="0x40c338b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c33998"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c33a78"/>
        <function-ref name="get" scoped="" ref="0x40c33b58"/>
        <function-ref name="led1Off" scoped="" ref="0x40c33c38"/>
        <function-ref name="led2Off" scoped="" ref="0x40c32010"/>
        <function-ref name="set" scoped="" ref="0x40c33d18"/>
        <function-ref name="led0On" scoped="" ref="0x40c33df8"/>
        <function-ref name="led2On" scoped="" ref="0x40c33ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40c31660" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c31660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c31838"/>
        <function-ref name="isInput" scoped="" ref="0x40c31918"/>
        <function-ref name="toggle" scoped="" ref="0x40c319f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c31ad8"/>
        <function-ref name="get" scoped="" ref="0x40c31bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c31c98"/>
        <function-ref name="set" scoped="" ref="0x40c31d78"/>
        <function-ref name="clr" scoped="" ref="0x40c31e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40c4d978" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c4d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4db50"/>
        <function-ref name="isInput" scoped="" ref="0x40c4dc30"/>
        <function-ref name="toggle" scoped="" ref="0x40c4dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4ddf0"/>
        <function-ref name="get" scoped="" ref="0x40c4ded0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4c010"/>
        <function-ref name="set" scoped="" ref="0x40c4c0f0"/>
        <function-ref name="clr" scoped="" ref="0x40c4c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40c4c3e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c4c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4c5b8"/>
        <function-ref name="isInput" scoped="" ref="0x40c4c698"/>
        <function-ref name="toggle" scoped="" ref="0x40c4c778"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4c858"/>
        <function-ref name="get" scoped="" ref="0x40c4c938"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4ca18"/>
        <function-ref name="set" scoped="" ref="0x40c4caf8"/>
        <function-ref name="clr" scoped="" ref="0x40c4cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40c4b7c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c4b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c4b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40c4cde8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c4cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4b010"/>
        <function-ref name="isInput" scoped="" ref="0x40c4b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4b2b0"/>
        <function-ref name="get" scoped="" ref="0x40c4b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4b470"/>
        <function-ref name="set" scoped="" ref="0x40c4b550"/>
        <function-ref name="clr" scoped="" ref="0x40c4b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c49168" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c49168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c47c70"/>
        <function-ref name="fired" scoped="" ref="0x40c49ee8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c47630"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c473d8"/>
        <function-ref name="getdt" scoped="" ref="0x40c46150"/>
        <function-ref name="gett0" scoped="" ref="0x40c47ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c47180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c49790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c47950"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c49a10"/>
        <function-ref name="stop" scoped="" ref="0x40c49c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c45010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c45010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c44b00"/>
        <function-ref name="fired" scoped="" ref="0x40c45d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c444c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c44268"/>
        <function-ref name="getdt" scoped="" ref="0x40c6e010"/>
        <function-ref name="gett0" scoped="" ref="0x40c44d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40c44010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c45638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c447e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c458b8"/>
        <function-ref name="stop" scoped="" ref="0x40c45b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c6ee48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnReqListenTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c6ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c6c988"/>
        <function-ref name="fired" scoped="" ref="0x40c6dc10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c6c348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c6c0f0"/>
        <function-ref name="getdt" scoped="" ref="0x40c6ce38"/>
        <function-ref name="gett0" scoped="" ref="0x40c6cbe0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c6de68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c6d4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c6c668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c6d738"/>
        <function-ref name="stop" scoped="" ref="0x40c6d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c6bc70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnRepWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c6bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c68790"/>
        <function-ref name="fired" scoped="" ref="0x40c6aa20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c68150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c6aed0"/>
        <function-ref name="getdt" scoped="" ref="0x40c68c40"/>
        <function-ref name="gett0" scoped="" ref="0x40c689e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c6ac78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c6a2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c68470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c6a548"/>
        <function-ref name="stop" scoped="" ref="0x40c6a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c67b20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c67b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c656a8"/>
        <function-ref name="fired" scoped="" ref="0x40c66938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c65068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c66de8"/>
        <function-ref name="getdt" scoped="" ref="0x40c65b58"/>
        <function-ref name="gett0" scoped="" ref="0x40c65900"/>
        <function-ref name="isRunning" scoped="" ref="0x40c66b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c661e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c65388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c66460"/>
        <function-ref name="stop" scoped="" ref="0x40c666e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c63a78" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateStopTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c63a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c61570"/>
        <function-ref name="fired" scoped="" ref="0x40c62810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c62f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c62cc0"/>
        <function-ref name="getdt" scoped="" ref="0x40c61a20"/>
        <function-ref name="gett0" scoped="" ref="0x40c617c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c62a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c620b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c61250"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c62338"/>
        <function-ref name="stop" scoped="" ref="0x40c625b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c9f428" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c9f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c9f600"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9f6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9f7c0"/>
        <function-ref name="cancel" scoped="" ref="0x40c9f8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c9f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c9fac0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c9fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c9fc98"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c9fd78"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9fe58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9e010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c9e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c9e230" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c9e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c9e408"/>
        <function-ref name="source" scoped="" ref="0x40c9e4e8"/>
        <function-ref name="address" scoped="" ref="0x40c9e5c8"/>
        <function-ref name="destination" scoped="" ref="0x40c9e6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40c9e788"/>
        <function-ref name="setDestination" scoped="" ref="0x40c9e868"/>
        <function-ref name="type" scoped="" ref="0x40c9e948"/>
        <function-ref name="setType" scoped="" ref="0x40c9ea28"/>
        <function-ref name="isForMe" scoped="" ref="0x40c9eb08"/>
        <function-ref name="setGroup" scoped="" ref="0x40c9ebe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40c9ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c9ee28" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c9ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c9d050"/>
        <function-ref name="noAck" scoped="" ref="0x40c9d130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c9d210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4175c700" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4175c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4175c8d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4175c9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175ca98"/>
        <function-ref name="cancel" scoped="" ref="0x4175cb78"/>
        <function-ref name="sendDone" scoped="" ref="0x4175cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4175cdc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4175cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4175b010"/>
        <function-ref name="getPayload" scoped="" ref="0x4175b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175b1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4175b2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4175b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4175b4d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4175b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4175b6a8"/>
        <function-ref name="source" scoped="" ref="0x4175b788"/>
        <function-ref name="address" scoped="" ref="0x4175b868"/>
        <function-ref name="destination" scoped="" ref="0x4175b948"/>
        <function-ref name="setSource" scoped="" ref="0x4175ba28"/>
        <function-ref name="setDestination" scoped="" ref="0x4175bb08"/>
        <function-ref name="type" scoped="" ref="0x4175bbe8"/>
        <function-ref name="setType" scoped="" ref="0x4175bcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4175bda8"/>
        <function-ref name="setGroup" scoped="" ref="0x4175be88"/>
        <function-ref name="localGroup" scoped="" ref="0x4175a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c799f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c799f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c79bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c79cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c79d90"/>
        <function-ref name="cancel" scoped="" ref="0x40c79e70"/>
        <function-ref name="sendDone" scoped="" ref="0x40c76010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40ca50a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ca50a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca5290"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca5370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca5450"/>
        <function-ref name="cancel" scoped="" ref="0x40ca5530"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c74908" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c74908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c74af0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c74bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c74cb0"/>
        <function-ref name="cancel" scoped="" ref="0x40c74d90"/>
        <function-ref name="sendDone" scoped="" ref="0x40c74e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40ca43f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ca43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca45c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca46a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca4788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca4868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca4948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40ca4ac8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40ca4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ca4ca0"/>
        <function-ref name="runTask" scoped="" ref="0x40ca4d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40ca4f00" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40ca4f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ca20f0"/>
        <function-ref name="runTask" scoped="" ref="0x40ca21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40ca5750" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ca5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ca5928"/>
        <function-ref name="source" scoped="" ref="0x40ca5a08"/>
        <function-ref name="address" scoped="" ref="0x40ca5ae8"/>
        <function-ref name="destination" scoped="" ref="0x40ca5bc8"/>
        <function-ref name="setSource" scoped="" ref="0x40ca5ca8"/>
        <function-ref name="setDestination" scoped="" ref="0x40ca5d88"/>
        <function-ref name="type" scoped="" ref="0x40ca5e68"/>
        <function-ref name="setType" scoped="" ref="0x40ca4010"/>
        <function-ref name="isForMe" scoped="" ref="0x40ca40f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40ca41d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ca42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c9cd60" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c9cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cc8010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cc80f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc81d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc82b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cc8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c9ca48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c9ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c9cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cc84d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cc84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cc86a8"/>
        <function-ref name="source" scoped="" ref="0x40cc8788"/>
        <function-ref name="address" scoped="" ref="0x40cc8868"/>
        <function-ref name="destination" scoped="" ref="0x40cc8948"/>
        <function-ref name="setSource" scoped="" ref="0x40cc8a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40cc8b08"/>
        <function-ref name="type" scoped="" ref="0x40cc8be8"/>
        <function-ref name="setType" scoped="" ref="0x40cc8cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40cc8da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40cc8e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40cc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cc33a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cc33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cc3578"/>
        <function-ref name="stopDone" scoped="" ref="0x40cc3658"/>
        <function-ref name="start" scoped="" ref="0x40cc3738"/>
        <function-ref name="stop" scoped="" ref="0x40cc3818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cc3c78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cc3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc3e50"/>
        <function-ref name="getPayload" scoped="" ref="0x40cbf010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cbf0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40cbf1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cbfa70" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cbfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cbfc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cbfd28"/>
        <function-ref name="getPayload" scoped="" ref="0x40cbfe08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cbfee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cbd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cbf718" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cbf718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cbf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cbc3b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cbc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cbc588"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cbc668"/>
        <function-ref name="led1On" scoped="" ref="0x40cbc748"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cbc828"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cbc908"/>
        <function-ref name="get" scoped="" ref="0x40cbc9e8"/>
        <function-ref name="led1Off" scoped="" ref="0x40cbcac8"/>
        <function-ref name="led2Off" scoped="" ref="0x40cbce48"/>
        <function-ref name="set" scoped="" ref="0x40cbcba8"/>
        <function-ref name="led0On" scoped="" ref="0x40cbcc88"/>
        <function-ref name="led2On" scoped="" ref="0x40cbcd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40cbde60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cbde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cbc050"/>
        <function-ref name="noAck" scoped="" ref="0x40cbc130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cbc210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cbd1a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cbd1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cbd380"/>
        <function-ref name="source" scoped="" ref="0x40cbd460"/>
        <function-ref name="address" scoped="" ref="0x40cbd540"/>
        <function-ref name="destination" scoped="" ref="0x40cbd620"/>
        <function-ref name="setSource" scoped="" ref="0x40cbd700"/>
        <function-ref name="setDestination" scoped="" ref="0x40cbd7e0"/>
        <function-ref name="type" scoped="" ref="0x40cbd8c0"/>
        <function-ref name="setType" scoped="" ref="0x40cbd9a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40cbda80"/>
        <function-ref name="setGroup" scoped="" ref="0x40cbdb60"/>
        <function-ref name="localGroup" scoped="" ref="0x40cbdc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ce5538" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ce5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce5710"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce57f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce58d0"/>
        <function-ref name="cancel" scoped="" ref="0x40ce59b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce5a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ce5bf0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ce5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce5dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cba278" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cba278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cba460"/>
        <function-ref name="getPayload" scoped="" ref="0x40cba540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cba620"/>
        <function-ref name="cancel" scoped="" ref="0x40cba700"/>
        <function-ref name="sendDone" scoped="" ref="0x40cba7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cb9930" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cb9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cb9b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cb9be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40cb9cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb9da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cb9e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cba9b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cba9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cbaba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40ce5010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ce5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ce51e8"/>
        <function-ref name="noAck" scoped="" ref="0x40ce52c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ce53a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cbace0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cbace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cbaeb8"/>
        <function-ref name="source" scoped="" ref="0x40cb9010"/>
        <function-ref name="address" scoped="" ref="0x40cb90f0"/>
        <function-ref name="destination" scoped="" ref="0x40cb91d0"/>
        <function-ref name="setSource" scoped="" ref="0x40cb92b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40cb9390"/>
        <function-ref name="type" scoped="" ref="0x40cb9470"/>
        <function-ref name="setType" scoped="" ref="0x40cb9550"/>
        <function-ref name="isForMe" scoped="" ref="0x40cb9630"/>
        <function-ref name="setGroup" scoped="" ref="0x40cb9710"/>
        <function-ref name="localGroup" scoped="" ref="0x40cb97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ce13a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ce13a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ce1580"/>
        <function-ref name="stopDone" scoped="" ref="0x40ce1660"/>
        <function-ref name="start" scoped="" ref="0x40ce1740"/>
        <function-ref name="stop" scoped="" ref="0x40ce1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ce0288" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ce0288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce0460"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce0540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce0620"/>
        <function-ref name="cancel" scoped="" ref="0x40ce0700"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ce1010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ce1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ce1c68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ce1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce1e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d09e80" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d09e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d0d070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d0d150"/>
        <function-ref name="led1On" scoped="" ref="0x40d0d230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d0d310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d0d3f0"/>
        <function-ref name="get" scoped="" ref="0x40d0d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d0d5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40d0d930"/>
        <function-ref name="set" scoped="" ref="0x40d0d690"/>
        <function-ref name="led0On" scoped="" ref="0x40d0d770"/>
        <function-ref name="led2On" scoped="" ref="0x40d0d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40d09978" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d09978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d09b50"/>
        <function-ref name="offset" scoped="" ref="0x40d09c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d09d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d072d0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d072d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d074a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d07588"/>
        <function-ref name="start" scoped="" ref="0x40d07668"/>
        <function-ref name="stop" scoped="" ref="0x40d07748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40d2a1e0" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40d2a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d2a3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40d2a498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40cff500" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40cff500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cff6d8"/>
        <function-ref name="stop" scoped="" ref="0x40cff7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40d1aa18" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40d1aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d1abf0"/>
        <function-ref name="runTask" scoped="" ref="0x40d1acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d0df20" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d0df20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d07110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40cfa560" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40cfa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40cfa738"/>
        <function-ref name="flush" scoped="" ref="0x40cfa818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40d2b010" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40d2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d2b1e8"/>
        <function-ref name="runTask" scoped="" ref="0x40d2b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40cfdf10" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40cfdf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d02108"/>
        <function-ref name="resetSend" scoped="" ref="0x40d021e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d022c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d023a8"/>
        <function-ref name="putData" scoped="" ref="0x40d02488"/>
        <function-ref name="putDone" scoped="" ref="0x40d02568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d02648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d027b8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d027b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d02990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d02a70"/>
        <function-ref name="led1On" scoped="" ref="0x40d02b50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d02c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d02d10"/>
        <function-ref name="get" scoped="" ref="0x40d02df0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d02ed0"/>
        <function-ref name="led2Off" scoped="" ref="0x40cff2b0"/>
        <function-ref name="set" scoped="" ref="0x40cff010"/>
        <function-ref name="led0On" scoped="" ref="0x40cff0f0"/>
        <function-ref name="led2On" scoped="" ref="0x40cff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40d28e08" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d28e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d27010"/>
        <function-ref name="runTask" scoped="" ref="0x40d270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40d03a80" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d03a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d03c58"/>
        <function-ref name="nextByte" scoped="" ref="0x40d03d38"/>
        <function-ref name="startSend" scoped="" ref="0x40d03e18"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d03ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40d01bd8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d01bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d01db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d01e90"/>
        <function-ref name="endPacket" scoped="" ref="0x40d05010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40da8d68" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40da8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40da7010"/>
        <function-ref name="runTask" scoped="" ref="0x40da70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d83988" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d83988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d83b70"/>
        <function-ref name="getPayload" scoped="" ref="0x40d83c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d83d30"/>
        <function-ref name="cancel" scoped="" ref="0x40d83e10"/>
        <function-ref name="sendDone" scoped="" ref="0x40d83ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40da7270" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40da7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40da7448"/>
        <function-ref name="runTask" scoped="" ref="0x40da7528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d835c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d835c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d837b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40da9138" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40da9138"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40da9320"/>
        <function-ref name="offset" scoped="" ref="0x40da9400"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40da94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40da8150" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40da8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40da8328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40da8408"/>
        <function-ref name="led1On" scoped="" ref="0x40da84e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40da85c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40da86a8"/>
        <function-ref name="get" scoped="" ref="0x40da8788"/>
        <function-ref name="led1Off" scoped="" ref="0x40da8868"/>
        <function-ref name="led2On" scoped="" ref="0x40da8be8"/>
        <function-ref name="set" scoped="" ref="0x40da8a28"/>
        <function-ref name="led2Off" scoped="" ref="0x40da8948"/>
        <function-ref name="led0On" scoped="" ref="0x40da8b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40da9af8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40da9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40da9cd0"/>
        <function-ref name="nextByte" scoped="" ref="0x40da9db0"/>
        <function-ref name="startSend" scoped="" ref="0x40da9e90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40da8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40da9620" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40da9620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40da97f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40da98d8"/>
        <function-ref name="endPacket" scoped="" ref="0x40da99b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40dcd990" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dcd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dcdb68"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dcdc48"/>
        <function-ref name="receive" scoped="" ref="0x40dcdd28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dcde08"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dcdee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40da2010"/>
        <function-ref name="sendDone" scoped="" ref="0x40da20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40da6678" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40da6678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40da6850"/>
        <function-ref name="resetSend" scoped="" ref="0x40da6930"/>
        <function-ref name="dataReceived" scoped="" ref="0x40da6a10"/>
        <function-ref name="resetReceive" scoped="" ref="0x40da6af0"/>
        <function-ref name="putData" scoped="" ref="0x40da6bd0"/>
        <function-ref name="putDone" scoped="" ref="0x40da6cb0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40da6d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40da2260" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40da2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40da2438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40da2518"/>
        <function-ref name="led1On" scoped="" ref="0x40da25f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40da26d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40da27b8"/>
        <function-ref name="get" scoped="" ref="0x40da2898"/>
        <function-ref name="led1Off" scoped="" ref="0x40da2978"/>
        <function-ref name="led2Off" scoped="" ref="0x40da2cf8"/>
        <function-ref name="set" scoped="" ref="0x40da2a58"/>
        <function-ref name="led0On" scoped="" ref="0x40da2b38"/>
        <function-ref name="led2On" scoped="" ref="0x40da2c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40db92b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40db92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db9488"/>
        <function-ref name="receive" scoped="" ref="0x40db9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40dbe490" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dbe490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dbe668"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dbe748"/>
        <function-ref name="receive" scoped="" ref="0x40dbe828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dbe908"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dbe9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40dbeac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40dbeba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40dbe010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40dbe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbe1e8"/>
        <function-ref name="stop" scoped="" ref="0x40dbe2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40dba1c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40dba1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dba3a0"/>
        <function-ref name="receive" scoped="" ref="0x40dba480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40dba648" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dba648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dba820"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dba900"/>
        <function-ref name="receive" scoped="" ref="0x40dba9e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dbaac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dbaba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40dbac80"/>
        <function-ref name="sendDone" scoped="" ref="0x40dbad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40db80d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40db80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db8820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40db8d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40db8a98"/>
        <function-ref name="overflow" scoped="" ref="0x40db6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40db9cb8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40db9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db9e90"/>
        <function-ref name="stop" scoped="" ref="0x40dba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40db5ae8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40db5ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db5cc0"/>
        <function-ref name="receive" scoped="" ref="0x40db5da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40de67b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40de67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de6988"/>
        <function-ref name="stop" scoped="" ref="0x40de6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40db5398" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40db5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40db5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40db5f00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40db5f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de60f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40de61d0"/>
        <function-ref name="receive" scoped="" ref="0x40de62b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40de6390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40de6470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40de6550"/>
        <function-ref name="sendDone" scoped="" ref="0x40de6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40df2c88" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40df2c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df13f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40df18e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40df1668"/>
        <function-ref name="overflow" scoped="" ref="0x40df1b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40df2050" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40df2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40df2228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40df2308"/>
        <function-ref name="rxDone" scoped="" ref="0x40df23e8"/>
        <function-ref name="txDone" scoped="" ref="0x40df24c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40df25a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40df2688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40df2768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40df2848"/>
        <function-ref name="tx" scoped="" ref="0x40df2928"/>
        <function-ref name="rx" scoped="" ref="0x40df2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40db56d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40db56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db58a8"/>
        <function-ref name="stop" scoped="" ref="0x40db5988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40de6be8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40de6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de6dc0"/>
        <function-ref name="stop" scoped="" ref="0x40de6ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e12010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e12010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e121e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e122c8"/>
        <function-ref name="rxDone" scoped="" ref="0x40e123a8"/>
        <function-ref name="txDone" scoped="" ref="0x40e12488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e12568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e12648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e12728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e12808"/>
        <function-ref name="tx" scoped="" ref="0x40e128e8"/>
        <function-ref name="rx" scoped="" ref="0x40e129c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e11670" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e11848"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e11928"/>
        <function-ref name="rxDone" scoped="" ref="0x40e11a08"/>
        <function-ref name="txDone" scoped="" ref="0x40e11ae8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e11bc8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e11ca8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e11d88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e11e68"/>
        <function-ref name="tx" scoped="" ref="0x40e10010"/>
        <function-ref name="rx" scoped="" ref="0x40e100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e13a70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e13a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e13c48"/>
        <function-ref name="stop" scoped="" ref="0x40e13d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e12c20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e12c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e12df8"/>
        <function-ref name="stop" scoped="" ref="0x40e12ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e11178" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e11178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e11350"/>
        <function-ref name="stop" scoped="" ref="0x40e11430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e13560" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e13560"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e13738"/>
        <function-ref name="stop" scoped="" ref="0x40e13818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40e108d8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40e108d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e10ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e0d7a0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e0d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0d978"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0da58"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0db38"/>
        <function-ref name="txDone" scoped="" ref="0x40e0dc18"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0dcf8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0ddd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e0deb8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e0c010"/>
        <function-ref name="tx" scoped="" ref="0x40e0c0f0"/>
        <function-ref name="rx" scoped="" ref="0x40e0c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40e0c3e0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40e0c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e0a350" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e0a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0a528"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0a608"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0a6e8"/>
        <function-ref name="txDone" scoped="" ref="0x40e0a7c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0a8a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0a988"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e0aa68"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e0ab48"/>
        <function-ref name="tx" scoped="" ref="0x40e0ac28"/>
        <function-ref name="rx" scoped="" ref="0x40e0ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e0d288" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e0d288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0d460"/>
        <function-ref name="stop" scoped="" ref="0x40e0d540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e0c830" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e0c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0ca08"/>
        <function-ref name="stop" scoped="" ref="0x40e0cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e0cd60" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0a010"/>
        <function-ref name="stop" scoped="" ref="0x40e0a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40e0af00" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e0af00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40e090f0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40e091d0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40e092b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40e09390"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40e09470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40e09658" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40e09658"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40e09830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e10d28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e10d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e10f00"/>
        <function-ref name="stop" scoped="" ref="0x40e0d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e3b618" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e3b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e3bd68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e36288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e36010"/>
        <function-ref name="overflow" scoped="" ref="0x40e36500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e33088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e33088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e337d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e33cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e33a50"/>
        <function-ref name="overflow" scoped="" ref="0x40e32010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e61d78" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e61d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e60010"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e600f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e601d0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e602b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e60390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e60470"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e60550"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e60630"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e60710"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e607f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e60b28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e60b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e5e640"/>
        <function-ref name="test" scoped="" ref="0x40e5e150"/>
        <function-ref name="get" scoped="" ref="0x40e5f200"/>
        <function-ref name="captured" scoped="" ref="0x40e5f718"/>
        <function-ref name="reset" scoped="" ref="0x40e5f9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40e5e3c8"/>
        <function-ref name="set" scoped="" ref="0x40e5f478"/>
        <function-ref name="start" scoped="" ref="0x40e5fc30"/>
        <function-ref name="stop" scoped="" ref="0x40e5fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e5ed50" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e5ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e5b300"/>
        <function-ref name="fired" scoped="" ref="0x40e5c8f8"/>
        <function-ref name="get" scoped="" ref="0x40e5c3e0"/>
        <function-ref name="reset" scoped="" ref="0x40e5cb70"/>
        <function-ref name="isOn" scoped="" ref="0x40e5b578"/>
        <function-ref name="set" scoped="" ref="0x40e5c658"/>
        <function-ref name="start" scoped="" ref="0x40e5cde8"/>
        <function-ref name="stop" scoped="" ref="0x40e5b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e32a60" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e32a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e61500"/>
        <function-ref name="test" scoped="" ref="0x40e61010"/>
        <function-ref name="get" scoped="" ref="0x40e630d8"/>
        <function-ref name="setScale" scoped="" ref="0x40e61778"/>
        <function-ref name="getScale" scoped="" ref="0x40e61a18"/>
        <function-ref name="reset" scoped="" ref="0x40e63868"/>
        <function-ref name="overflow" scoped="" ref="0x40e635f0"/>
        <function-ref name="isOn" scoped="" ref="0x40e61288"/>
        <function-ref name="set" scoped="" ref="0x40e63350"/>
        <function-ref name="start" scoped="" ref="0x40e63ae0"/>
        <function-ref name="stop" scoped="" ref="0x40e63d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e55370" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e55370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e55548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e55628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e55708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e557e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e558c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e559a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e55a88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e55b68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e55c48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e55d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e51010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e51010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e50578"/>
        <function-ref name="fired" scoped="" ref="0x40e51b70"/>
        <function-ref name="get" scoped="" ref="0x40e51658"/>
        <function-ref name="reset" scoped="" ref="0x40e51de8"/>
        <function-ref name="isOn" scoped="" ref="0x40e507f0"/>
        <function-ref name="set" scoped="" ref="0x40e518d0"/>
        <function-ref name="start" scoped="" ref="0x40e50088"/>
        <function-ref name="stop" scoped="" ref="0x40e50300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e54078" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e54078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e53af0"/>
        <function-ref name="test" scoped="" ref="0x40e53600"/>
        <function-ref name="get" scoped="" ref="0x40e546c0"/>
        <function-ref name="captured" scoped="" ref="0x40e54bd8"/>
        <function-ref name="reset" scoped="" ref="0x40e54e78"/>
        <function-ref name="isOn" scoped="" ref="0x40e53878"/>
        <function-ref name="set" scoped="" ref="0x40e54938"/>
        <function-ref name="start" scoped="" ref="0x40e53110"/>
        <function-ref name="stop" scoped="" ref="0x40e53388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e50c08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e50c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e4d1a0"/>
        <function-ref name="fired" scoped="" ref="0x40e4f790"/>
        <function-ref name="get" scoped="" ref="0x40e4f278"/>
        <function-ref name="reset" scoped="" ref="0x40e4fa08"/>
        <function-ref name="isOn" scoped="" ref="0x40e4d418"/>
        <function-ref name="set" scoped="" ref="0x40e4f4f0"/>
        <function-ref name="start" scoped="" ref="0x40e4fc80"/>
        <function-ref name="stop" scoped="" ref="0x40e4fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e4d830" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e4d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e4cd90"/>
        <function-ref name="fired" scoped="" ref="0x40e4c3b0"/>
        <function-ref name="get" scoped="" ref="0x40e4de78"/>
        <function-ref name="reset" scoped="" ref="0x40e4c628"/>
        <function-ref name="isOn" scoped="" ref="0x40e7f048"/>
        <function-ref name="set" scoped="" ref="0x40e4c110"/>
        <function-ref name="start" scoped="" ref="0x40e4c8a0"/>
        <function-ref name="stop" scoped="" ref="0x40e4cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e58010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e58010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e56a68"/>
        <function-ref name="test" scoped="" ref="0x40e56578"/>
        <function-ref name="get" scoped="" ref="0x40e58658"/>
        <function-ref name="setScale" scoped="" ref="0x40e56ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40e55010"/>
        <function-ref name="reset" scoped="" ref="0x40e58de8"/>
        <function-ref name="overflow" scoped="" ref="0x40e58b70"/>
        <function-ref name="isOn" scoped="" ref="0x40e567f0"/>
        <function-ref name="set" scoped="" ref="0x40e588d0"/>
        <function-ref name="start" scoped="" ref="0x40e56088"/>
        <function-ref name="stop" scoped="" ref="0x40e56300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e9da30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e9da30"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e9dc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e9de18" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e9de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e9a898"/>
        <function-ref name="test" scoped="" ref="0x40e9a3a8"/>
        <function-ref name="get" scoped="" ref="0x40e9b488"/>
        <function-ref name="setScale" scoped="" ref="0x40e9ab10"/>
        <function-ref name="getScale" scoped="" ref="0x40e9adb0"/>
        <function-ref name="reset" scoped="" ref="0x40e9bc18"/>
        <function-ref name="overflow" scoped="" ref="0x40e9b9a0"/>
        <function-ref name="isOn" scoped="" ref="0x40e9a620"/>
        <function-ref name="set" scoped="" ref="0x40e9b700"/>
        <function-ref name="start" scoped="" ref="0x40e9be90"/>
        <function-ref name="stop" scoped="" ref="0x40e9a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e9e0c0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e9e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e9e810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e9ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e9ea88"/>
        <function-ref name="overflow" scoped="" ref="0x40ecc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ecc2f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ecc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ecbd30"/>
        <function-ref name="test" scoped="" ref="0x40ecb840"/>
        <function-ref name="get" scoped="" ref="0x40ecc938"/>
        <function-ref name="setScale" scoped="" ref="0x40eca010"/>
        <function-ref name="getScale" scoped="" ref="0x40eca2b0"/>
        <function-ref name="reset" scoped="" ref="0x40ecb0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40ecce50"/>
        <function-ref name="isOn" scoped="" ref="0x40ecbab8"/>
        <function-ref name="set" scoped="" ref="0x40eccbb0"/>
        <function-ref name="start" scoped="" ref="0x40ecb350"/>
        <function-ref name="stop" scoped="" ref="0x40ecb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ec73b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ec73b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec7b08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec5010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec7d80"/>
        <function-ref name="overflow" scoped="" ref="0x40ec5288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ec8170" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec88c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec8db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec8b38"/>
        <function-ref name="overflow" scoped="" ref="0x40ec7048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40ec1338" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40ec1338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40ec1510"/>
        <function-ref name="offset" scoped="" ref="0x40ec15f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40ec16d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer3" ref="0x40ee44c0" loc="24:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer3" scoped="" ref="0x40ee44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee1010"/>
        <function-ref name="fired" scoped="" ref="0x40ee3268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee3970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee3718"/>
        <function-ref name="getdt" scoped="" ref="0x40ee14c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ee1268"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee34c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee4ae8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee3c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee4d68"/>
        <function-ref name="stop" scoped="" ref="0x40ee3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMAScheduleTimer" ref="0x40ee18a8" loc="25:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40ee18a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40edf3a8"/>
        <function-ref name="fired" scoped="" ref="0x40ee0648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee0d50"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee0af8"/>
        <function-ref name="getdt" scoped="" ref="0x40edf858"/>
        <function-ref name="gett0" scoped="" ref="0x40edf600"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee08a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee1ed0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40edf088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee0170"/>
        <function-ref name="stop" scoped="" ref="0x40ee03f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40edb010" loc="28:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40edb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40edb658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASlotTimer" ref="0x40edfc18" loc="26:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASlotTimer" scoped="" ref="0x40edfc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40edc730"/>
        <function-ref name="fired" scoped="" ref="0x40ede9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40edc0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40edee60"/>
        <function-ref name="getdt" scoped="" ref="0x40edcbe0"/>
        <function-ref name="gett0" scoped="" ref="0x40edc988"/>
        <function-ref name="isRunning" scoped="" ref="0x40edec08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ede258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40edc410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ede4d8"/>
        <function-ref name="stop" scoped="" ref="0x40ede758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40edb8a8" loc="30:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40edb8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40edba80"/>
        <function-ref name="rand32" scoped="" ref="0x40edbb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer1" ref="0x40eb4d58" loc="22:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer1" scoped="" ref="0x40eb4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee88a8"/>
        <function-ref name="fired" scoped="" ref="0x40ee9b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee8268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee8010"/>
        <function-ref name="getdt" scoped="" ref="0x40ee8d58"/>
        <function-ref name="gett0" scoped="" ref="0x40ee8b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee9d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee93c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee8588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee9640"/>
        <function-ref name="stop" scoped="" ref="0x40ee98c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40edbe88" loc="31:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40edbe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eda4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eb7010" loc="16:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eb71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TDMASchedule" ref="0x40eba4a0" loc="15:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40eba4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40ebae58"/>
        <function-ref name="getPPB" scoped="" ref="0x40eba758"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40eba838"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40eba918"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40eba9f8"/>
        <function-ref name="setPPB" scoped="" ref="0x40ebaad8"/>
        <function-ref name="stopTimers" scoped="" ref="0x40ebabb8"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40ebac98"/>
        <function-ref name="startTimers" scoped="" ref="0x40ebad78"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40eba678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40eda740" loc="32:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40eda740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40eda998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40edaa78"/>
        <function-ref name="led1On" scoped="" ref="0x40edab58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40edac38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40edad18"/>
        <function-ref name="get" scoped="" ref="0x40edadf8"/>
        <function-ref name="led1Off" scoped="" ref="0x40edaed8"/>
        <function-ref name="led2Off" scoped="" ref="0x40ed92b0"/>
        <function-ref name="set" scoped="" ref="0x40ed9010"/>
        <function-ref name="led0On" scoped="" ref="0x40ed90f0"/>
        <function-ref name="led2On" scoped="" ref="0x40ed91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer2" ref="0x40ee6140" loc="23:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer2" scoped="" ref="0x40ee6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee5c20"/>
        <function-ref name="fired" scoped="" ref="0x40ee6ec0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee55e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee5388"/>
        <function-ref name="getdt" scoped="" ref="0x40ee40f0"/>
        <function-ref name="gett0" scoped="" ref="0x40ee5e78"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee5130"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee6768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee5900"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee69e8"/>
        <function-ref name="stop" scoped="" ref="0x40ee6c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer0" ref="0x40eb7930" loc="21:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer0" scoped="" ref="0x40eb7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eb44c8"/>
        <function-ref name="fired" scoped="" ref="0x40eb6768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eb6e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eb6c18"/>
        <function-ref name="getdt" scoped="" ref="0x40eb4978"/>
        <function-ref name="gett0" scoped="" ref="0x40eb4720"/>
        <function-ref name="isRunning" scoped="" ref="0x40eb69c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eb6010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eb41a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eb6290"/>
        <function-ref name="stop" scoped="" ref="0x40eb6510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40eb8e98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eb8e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f26988"/>
        <function-ref name="fired" scoped="" ref="0x40f28c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f26348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f260f0"/>
        <function-ref name="getdt" scoped="" ref="0x40f26e38"/>
        <function-ref name="gett0" scoped="" ref="0x40f26be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f28e88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f284d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f26668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f28758"/>
        <function-ref name="stop" scoped="" ref="0x40f289d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f25c68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f25c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f23790"/>
        <function-ref name="fired" scoped="" ref="0x40f24a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f23150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f24ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40f23c40"/>
        <function-ref name="gett0" scoped="" ref="0x40f239e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f24c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f242c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f23470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f24548"/>
        <function-ref name="stop" scoped="" ref="0x40f247c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f21af0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f21af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f566a8"/>
        <function-ref name="fired" scoped="" ref="0x40f20938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f56068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f20de8"/>
        <function-ref name="getdt" scoped="" ref="0x40f56b58"/>
        <function-ref name="gett0" scoped="" ref="0x40f56900"/>
        <function-ref name="isRunning" scoped="" ref="0x40f20b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f201e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f56388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f20460"/>
        <function-ref name="stop" scoped="" ref="0x40f206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f559a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f524c8"/>
        <function-ref name="fired" scoped="" ref="0x40f54768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f54e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f54c18"/>
        <function-ref name="getdt" scoped="" ref="0x40f52978"/>
        <function-ref name="gett0" scoped="" ref="0x40f52720"/>
        <function-ref name="isRunning" scoped="" ref="0x40f549c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f54010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f521a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f54290"/>
        <function-ref name="stop" scoped="" ref="0x40f54510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f517b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMAScheduleTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f517b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f4f330"/>
        <function-ref name="fired" scoped="" ref="0x40f50560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f50c68"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f50a10"/>
        <function-ref name="getdt" scoped="" ref="0x40f4f7e0"/>
        <function-ref name="gett0" scoped="" ref="0x40f4f588"/>
        <function-ref name="isRunning" scoped="" ref="0x40f507b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f51de0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f4f010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f50088"/>
        <function-ref name="stop" scoped="" ref="0x40f50308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f4d658" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMASlotTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f4d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f4b170"/>
        <function-ref name="fired" scoped="" ref="0x40f4c3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f4cb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f4c8a8"/>
        <function-ref name="getdt" scoped="" ref="0x40f4b620"/>
        <function-ref name="gett0" scoped="" ref="0x40f4b3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f4c650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f4dc80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f4ce20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f4df00"/>
        <function-ref name="stop" scoped="" ref="0x40f4c1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40f45750" loc="16:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40f45750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f45928"/>
        <function-ref name="getPayload" scoped="" ref="0x40f45a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f45ae8"/>
        <function-ref name="cancel" scoped="" ref="0x40f45bc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f45ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f483b8" loc="14:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f483b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f48590"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f48670"/>
        <function-ref name="getPayload" scoped="" ref="0x40f48750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f48830"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f48910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40f43a90" loc="23:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40f43a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40f43c68"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40f43d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40f45eb0" loc="17:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40f45eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f440c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f441a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f44280"/>
        <function-ref name="cancel" scoped="" ref="0x40f44360"/>
        <function-ref name="sendDone" scoped="" ref="0x40f44440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40f449f0" loc="19:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40f449f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40f43470"/>
        <function-ref name="getPPB" scoped="" ref="0x40f44ca8"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40f44d88"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40f44e68"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40f43010"/>
        <function-ref name="setPPB" scoped="" ref="0x40f430f0"/>
        <function-ref name="stopTimers" scoped="" ref="0x40f431d0"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40f432b0"/>
        <function-ref name="startTimers" scoped="" ref="0x40f43390"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40f44bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40f44658" loc="18:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40f44658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f44830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f48aa8" loc="15:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f48aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f48c80"/>
        <function-ref name="source" scoped="" ref="0x40f48d60"/>
        <function-ref name="address" scoped="" ref="0x40f48e40"/>
        <function-ref name="destination" scoped="" ref="0x40f48f20"/>
        <function-ref name="setSource" scoped="" ref="0x40f45018"/>
        <function-ref name="setDestination" scoped="" ref="0x40f450f8"/>
        <function-ref name="type" scoped="" ref="0x40f451d8"/>
        <function-ref name="setType" scoped="" ref="0x40f452b8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f45398"/>
        <function-ref name="setGroup" scoped="" ref="0x40f45478"/>
        <function-ref name="localGroup" scoped="" ref="0x40f45558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40f3d748" loc="18:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40f3d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f3d920"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3da00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3dae0"/>
        <function-ref name="cancel" scoped="" ref="0x40f3dbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f3dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40f8ecc0" loc="151:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40f8ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f8ee98"/>
        <function-ref name="runTask" scoped="" ref="0x40f8d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f3f378" loc="16:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f3f378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3f550"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f3f630"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3f710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3f7f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f3f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40f692f8" loc="29:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40f692f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40f694d0"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40f695b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40f570d0" loc="142:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40f570d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f57328"/>
        <function-ref name="runTask" scoped="" ref="0x40f57408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40f3dea8" loc="19:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40f3dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f3c0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3c1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3c280"/>
        <function-ref name="cancel" scoped="" ref="0x40f3c360"/>
        <function-ref name="sendDone" scoped="" ref="0x40f3c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueue" ref="0x40f6edb8" loc="22:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueue" scoped="" ref="0x40f6edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f72af8"/>
        <function-ref name="enqueue" scoped="" ref="0x40f6f208"/>
        <function-ref name="element" scoped="" ref="0x40f6f558"/>
        <function-ref name="maxSize" scoped="" ref="0x40f728a0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f72e68"/>
        <function-ref name="empty" scoped="" ref="0x40f723f0"/>
        <function-ref name="size" scoped="" ref="0x40f72648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40f423f8" loc="12:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40f423f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40f42db0"/>
        <function-ref name="getPPB" scoped="" ref="0x40f426b0"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40f42790"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40f42870"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40f42950"/>
        <function-ref name="setPPB" scoped="" ref="0x40f42a30"/>
        <function-ref name="stopTimers" scoped="" ref="0x40f42b10"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40f42bf0"/>
        <function-ref name="startTimers" scoped="" ref="0x40f42cd0"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40f425d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataMessagePool" ref="0x40f6d0c8" loc="23:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataMessagePool" scoped="" ref="0x40f6d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f6c1b8"/>
        <function-ref name="maxSize" scoped="" ref="0x40f6dba0"/>
        <function-ref name="empty" scoped="" ref="0x40f6d6f0"/>
        <function-ref name="put" scoped="" ref="0x40f6ddf8"/>
        <function-ref name="size" scoped="" ref="0x40f6d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f6c580" loc="26:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f6c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f6c758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f6c838"/>
        <function-ref name="led1On" scoped="" ref="0x40f6c918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f6c9f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f6cad8"/>
        <function-ref name="get" scoped="" ref="0x40f6cbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f6cc98"/>
        <function-ref name="led2Off" scoped="" ref="0x40f690f0"/>
        <function-ref name="set" scoped="" ref="0x40f6cd78"/>
        <function-ref name="led0On" scoped="" ref="0x40f6ce58"/>
        <function-ref name="led2On" scoped="" ref="0x40f69010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAvailableData" ref="0x40f69c30" loc="34:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAvailableData" scoped="" ref="0x40f69c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f69e08"/>
        <function-ref name="runTask" scoped="" ref="0x40f69ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40f3c658" loc="20:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40f3c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f3c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f3fa68" loc="17:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f3fa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f3fc40"/>
        <function-ref name="source" scoped="" ref="0x40f3fd20"/>
        <function-ref name="address" scoped="" ref="0x40f3fe00"/>
        <function-ref name="destination" scoped="" ref="0x40f3fee0"/>
        <function-ref name="setSource" scoped="" ref="0x40f3d010"/>
        <function-ref name="setDestination" scoped="" ref="0x40f3d0f0"/>
        <function-ref name="type" scoped="" ref="0x40f3d1d0"/>
        <function-ref name="setType" scoped="" ref="0x40f3d2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f3d390"/>
        <function-ref name="setGroup" scoped="" ref="0x40f3d470"/>
        <function-ref name="localGroup" scoped="" ref="0x40f3d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40faaeb0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40faaeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f95010"/>
        <function-ref name="maxSize" scoped="" ref="0x40fa9998"/>
        <function-ref name="empty" scoped="" ref="0x40fa94e8"/>
        <function-ref name="put" scoped="" ref="0x40fa9bf0"/>
        <function-ref name="size" scoped="" ref="0x40fa9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x417d36f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x417d36f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417d2850"/>
        <function-ref name="maxSize" scoped="" ref="0x417d2268"/>
        <function-ref name="empty" scoped="" ref="0x417d3d20"/>
        <function-ref name="put" scoped="" ref="0x417d24c0"/>
        <function-ref name="size" scoped="" ref="0x417d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417d3350" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417d3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417d3528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40f93ae8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="DataManagerC.DataQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f93ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f928e8"/>
        <function-ref name="enqueue" scoped="" ref="0x40fbd010"/>
        <function-ref name="element" scoped="" ref="0x40fbd360"/>
        <function-ref name="maxSize" scoped="" ref="0x40f92690"/>
        <function-ref name="dequeue" scoped="" ref="0x40f92c58"/>
        <function-ref name="empty" scoped="" ref="0x40f921e0"/>
        <function-ref name="size" scoped="" ref="0x40f92438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fb7b00" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fb7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb7cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb7db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb7e98"/>
        <function-ref name="cancel" scoped="" ref="0x40fe2010"/>
        <function-ref name="sendDone" scoped="" ref="0x40fe20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fe2230" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fe2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fe2408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fe24e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe25c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe26a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fe2788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fe28c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fe28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fe2aa0"/>
        <function-ref name="source" scoped="" ref="0x40fe2b80"/>
        <function-ref name="address" scoped="" ref="0x40fe2c60"/>
        <function-ref name="destination" scoped="" ref="0x40fe2d40"/>
        <function-ref name="setSource" scoped="" ref="0x40fe2e20"/>
        <function-ref name="setDestination" scoped="" ref="0x40fe2f00"/>
        <function-ref name="type" scoped="" ref="0x40fe1010"/>
        <function-ref name="setType" scoped="" ref="0x40fe10f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fe11d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40fe12b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40fe1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fe14f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fe14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fe16c8"/>
        <function-ref name="noAck" scoped="" ref="0x40fe17a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fe1888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417c22b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417c22b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417c2490"/>
        <function-ref name="getPayload" scoped="" ref="0x417c2570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417c2650"/>
        <function-ref name="cancel" scoped="" ref="0x417c2730"/>
        <function-ref name="sendDone" scoped="" ref="0x417c2810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417c2980" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417c2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417c2b58"/>
        <function-ref name="getPayload" scoped="" ref="0x417c2c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417c2d18"/>
        <function-ref name="cancel" scoped="" ref="0x417c2df8"/>
        <function-ref name="sendDone" scoped="" ref="0x417c2ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417c1030" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417c1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417c1208"/>
        <function-ref name="source" scoped="" ref="0x417c12e8"/>
        <function-ref name="address" scoped="" ref="0x417c13c8"/>
        <function-ref name="destination" scoped="" ref="0x417c14a8"/>
        <function-ref name="setSource" scoped="" ref="0x417c1588"/>
        <function-ref name="setDestination" scoped="" ref="0x417c1668"/>
        <function-ref name="type" scoped="" ref="0x417c1748"/>
        <function-ref name="setType" scoped="" ref="0x417c1828"/>
        <function-ref name="isForMe" scoped="" ref="0x417c1908"/>
        <function-ref name="setGroup" scoped="" ref="0x417c19e8"/>
        <function-ref name="localGroup" scoped="" ref="0x417c1ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fb2a98" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fb2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb2c70"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb2d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb2e30"/>
        <function-ref name="cancel" scoped="" ref="0x40fb2f10"/>
        <function-ref name="sendDone" scoped="" ref="0x40faf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40fae8f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fae8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40faead8"/>
        <function-ref name="getPayload" scoped="" ref="0x40faebb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40faec98"/>
        <function-ref name="cancel" scoped="" ref="0x40faed78"/>
        <function-ref name="sendDone" scoped="" ref="0x40faee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fae180" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fae180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fae368"/>
        <function-ref name="getPayload" scoped="" ref="0x40fae448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fae528"/>
        <function-ref name="cancel" scoped="" ref="0x40fae608"/>
        <function-ref name="sendDone" scoped="" ref="0x40fae6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40fadbe8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fadbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40faddc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fadea0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fac010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fac0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40fac350" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40fac350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fac528"/>
        <function-ref name="runTask" scoped="" ref="0x40fac608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40fac788" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40fac788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fac960"/>
        <function-ref name="runTask" scoped="" ref="0x40faca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40fad010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fad1e8"/>
        <function-ref name="source" scoped="" ref="0x40fad2c8"/>
        <function-ref name="address" scoped="" ref="0x40fad3a8"/>
        <function-ref name="destination" scoped="" ref="0x40fad488"/>
        <function-ref name="setSource" scoped="" ref="0x40fad568"/>
        <function-ref name="setDestination" scoped="" ref="0x40fad648"/>
        <function-ref name="type" scoped="" ref="0x40fad728"/>
        <function-ref name="setType" scoped="" ref="0x40fad808"/>
        <function-ref name="isForMe" scoped="" ref="0x40fad8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40fad9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40fadaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fe0df8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fe0df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fde010"/>
        <function-ref name="getPayload" scoped="" ref="0x40fde0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fde1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40fde2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fde390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fde4d0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fde4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fde6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fde788"/>
        <function-ref name="getPayload" scoped="" ref="0x40fde868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fde948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fdea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fdeb68" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fdeb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fded40"/>
        <function-ref name="source" scoped="" ref="0x40fdee20"/>
        <function-ref name="address" scoped="" ref="0x40fdef00"/>
        <function-ref name="destination" scoped="" ref="0x40fdd010"/>
        <function-ref name="setSource" scoped="" ref="0x40fdd0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40fdd1d0"/>
        <function-ref name="type" scoped="" ref="0x40fdd2b0"/>
        <function-ref name="setType" scoped="" ref="0x40fdd390"/>
        <function-ref name="isForMe" scoped="" ref="0x40fdd470"/>
        <function-ref name="setGroup" scoped="" ref="0x40fdd550"/>
        <function-ref name="localGroup" scoped="" ref="0x40fdd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fdd790" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fdd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fdd968"/>
        <function-ref name="noAck" scoped="" ref="0x40fdda48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fddb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417f21f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417f21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417f23c8"/>
        <function-ref name="getPayload" scoped="" ref="0x417f24a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417f2588"/>
        <function-ref name="cancel" scoped="" ref="0x417f2668"/>
        <function-ref name="sendDone" scoped="" ref="0x417f2748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417f28b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417f28b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417f2a90"/>
        <function-ref name="getPayload" scoped="" ref="0x417f2b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417f2c50"/>
        <function-ref name="cancel" scoped="" ref="0x417f2d30"/>
        <function-ref name="sendDone" scoped="" ref="0x417f2e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417f1010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417f11e8"/>
        <function-ref name="source" scoped="" ref="0x417f12c8"/>
        <function-ref name="address" scoped="" ref="0x417f13a8"/>
        <function-ref name="destination" scoped="" ref="0x417f1488"/>
        <function-ref name="setSource" scoped="" ref="0x417f1568"/>
        <function-ref name="setDestination" scoped="" ref="0x417f1648"/>
        <function-ref name="type" scoped="" ref="0x417f1728"/>
        <function-ref name="setType" scoped="" ref="0x417f1808"/>
        <function-ref name="isForMe" scoped="" ref="0x417f18e8"/>
        <function-ref name="setGroup" scoped="" ref="0x417f19c8"/>
        <function-ref name="localGroup" scoped="" ref="0x417f1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fdb150" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fdb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fdb328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fdb408"/>
        <function-ref name="getPayload" scoped="" ref="0x40fdb4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fdb5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fdb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fdcda0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fdcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fdb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fdb7e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fdb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fdb9c0"/>
        <function-ref name="source" scoped="" ref="0x40fdbaa0"/>
        <function-ref name="address" scoped="" ref="0x40fdbb80"/>
        <function-ref name="destination" scoped="" ref="0x40fdbc60"/>
        <function-ref name="setSource" scoped="" ref="0x40fdbd40"/>
        <function-ref name="setDestination" scoped="" ref="0x40fdbe20"/>
        <function-ref name="type" scoped="" ref="0x40fdbf00"/>
        <function-ref name="setType" scoped="" ref="0x40fda010"/>
        <function-ref name="isForMe" scoped="" ref="0x40fda0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40fda1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40fda2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40ffd3e0" loc="41:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40ffd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40ffd5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueueManage" ref="0x40ffb450" loc="51:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40ffb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40ffb628"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40ffb708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sample" ref="0x40ff6418" loc="46:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40ff6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x40ff6a50"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40ff66d0"/>
        <function-ref name="getSample" scoped="" ref="0x40ff67b0"/>
        <function-ref name="reTask" scoped="" ref="0x40ff6890"/>
        <function-ref name="start" scoped="" ref="0x40ff6970"/>
        <function-ref name="stop" scoped="" ref="0x40ff65f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerInit" ref="0x40ffd7c8" loc="44:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40ffd7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ffd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerControl" ref="0x40ffdc10" loc="45:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40ffdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ffdde8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ffdec8"/>
        <function-ref name="start" scoped="" ref="0x40ffc010"/>
        <function-ref name="stop" scoped="" ref="0x40ffc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingInit" ref="0x40ffb0a0" loc="50:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x40ffb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ffb278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ffb888" loc="54:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ffb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ffba60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ffbb40"/>
        <function-ref name="led1On" scoped="" ref="0x40ffbc20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ffbd00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ffbde0"/>
        <function-ref name="get" scoped="" ref="0x40ffbec0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ffa010"/>
        <function-ref name="led2Off" scoped="" ref="0x40ffa390"/>
        <function-ref name="set" scoped="" ref="0x40ffa0f0"/>
        <function-ref name="led0On" scoped="" ref="0x40ffa1d0"/>
        <function-ref name="led2On" scoped="" ref="0x40ffa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40fcfe58" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40fcfe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x410254b0"/>
        <function-ref name="set_digital_output" scoped="" ref="0x41025130"/>
        <function-ref name="getSample" scoped="" ref="0x41025210"/>
        <function-ref name="reTask" scoped="" ref="0x410252f0"/>
        <function-ref name="start" scoped="" ref="0x410253d0"/>
        <function-ref name="stop" scoped="" ref="0x41025050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40fcf418" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40fcf418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fcf5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40fcf860" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40fcf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fcfa38"/>
        <function-ref name="stopDone" scoped="" ref="0x40fcfb18"/>
        <function-ref name="start" scoped="" ref="0x40fcfbf8"/>
        <function-ref name="stop" scoped="" ref="0x40fcfcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam8" ref="0x4104d0c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam8" scoped="" ref="0x4104d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104d298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam11" ref="0x4104dca0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam11" scoped="" ref="0x4104dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC6" ref="0x41054090" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC6" scoped="" ref="0x41054090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41054268"/>
        <function-ref name="readDone" scoped="" ref="0x41054348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam0" ref="0x41050010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam0" scoped="" ref="0x41050010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x410501e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x41053360" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC0" scoped="" ref="0x41053360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41053538"/>
        <function-ref name="readDone" scoped="" ref="0x41053618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio2" ref="0x41047e68" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio2" scoped="" ref="0x41047e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41046050"/>
        <function-ref name="high" scoped="" ref="0x41046130"/>
        <function-ref name="Toggle" scoped="" ref="0x41046210"/>
        <function-ref name="read" scoped="" ref="0x410462f0"/>
        <function-ref name="setParam" scoped="" ref="0x410463d0"/>
        <function-ref name="readDone" scoped="" ref="0x410464b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCinit" ref="0x410589c8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCinit" scoped="" ref="0x410589c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41058ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC9" ref="0x41054e88" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC9" scoped="" ref="0x41054e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41052070"/>
        <function-ref name="readDone" scoped="" ref="0x41052150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC3" ref="0x41055200" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC3" scoped="" ref="0x41055200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410553d8"/>
        <function-ref name="readDone" scoped="" ref="0x410554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam3" ref="0x41050ce0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam3" scoped="" ref="0x41050ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41050eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio5" ref="0x41043660" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio5" scoped="" ref="0x41043660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41043838"/>
        <function-ref name="high" scoped="" ref="0x41043918"/>
        <function-ref name="Toggle" scoped="" ref="0x410439f8"/>
        <function-ref name="read" scoped="" ref="0x41043ad8"/>
        <function-ref name="setParam" scoped="" ref="0x41043bb8"/>
        <function-ref name="readDone" scoped="" ref="0x41043c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterInit" ref="0x41043ea8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x41043ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41042308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC12" ref="0x41052ca8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC12" scoped="" ref="0x41052ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41052e80"/>
        <function-ref name="readDone" scoped="" ref="0x41051010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam6" ref="0x4104f8c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam6" scoped="" ref="0x4104f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104fa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC4" ref="0x410556a8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC4" scoped="" ref="0x410556a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41055900"/>
        <function-ref name="readDone" scoped="" ref="0x410559e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio0" ref="0x41044e78" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio0" scoped="" ref="0x41044e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41047070"/>
        <function-ref name="high" scoped="" ref="0x41047150"/>
        <function-ref name="Toggle" scoped="" ref="0x41047230"/>
        <function-ref name="read" scoped="" ref="0x41047310"/>
        <function-ref name="setParam" scoped="" ref="0x410473f0"/>
        <function-ref name="readDone" scoped="" ref="0x410474d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hum" ref="0x4104aa68" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hum" scoped="" ref="0x4104aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410490b8"/>
        <function-ref name="readDone" scoped="" ref="0x41049310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Battery" ref="0x4104c968" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Battery" scoped="" ref="0x4104c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104b010"/>
        <function-ref name="readDone" scoped="" ref="0x4104b268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam9" ref="0x4104d4b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam9" scoped="" ref="0x4104d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104d688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam12" ref="0x4104c0c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam12" scoped="" ref="0x4104c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104c2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC7" ref="0x41054538" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC7" scoped="" ref="0x41054538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41054710"/>
        <function-ref name="readDone" scoped="" ref="0x410547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempHumControl" ref="0x4104b680" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempHumControl" scoped="" ref="0x4104b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4104b858"/>
        <function-ref name="stopDone" scoped="" ref="0x4104b938"/>
        <function-ref name="start" scoped="" ref="0x4104ba18"/>
        <function-ref name="stop" scoped="" ref="0x4104baf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam1" ref="0x41050400" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam1" scoped="" ref="0x41050400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x410505d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x41022ce0" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x41022ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x4105b390"/>
        <function-ref name="set_digital_output" scoped="" ref="0x4105b010"/>
        <function-ref name="getSample" scoped="" ref="0x4105b0f0"/>
        <function-ref name="reTask" scoped="" ref="0x4105b1d0"/>
        <function-ref name="start" scoped="" ref="0x4105b2b0"/>
        <function-ref name="stop" scoped="" ref="0x41022eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerTimer" ref="0x4105a758" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerTimer" scoped="" ref="0x4105a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41058248"/>
        <function-ref name="fired" scoped="" ref="0x410594e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41059bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41059998"/>
        <function-ref name="getdt" scoped="" ref="0x410586f8"/>
        <function-ref name="gett0" scoped="" ref="0x410584a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41059740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4105ad80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41059f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x41059010"/>
        <function-ref name="stop" scoped="" ref="0x41059290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x41053808" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC1" scoped="" ref="0x41053808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410539e0"/>
        <function-ref name="readDone" scoped="" ref="0x41053ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC10" ref="0x41052348" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC10" scoped="" ref="0x41052348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41052520"/>
        <function-ref name="readDone" scoped="" ref="0x41052600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam4" ref="0x4104f0e0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam4" scoped="" ref="0x4104f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104f2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio3" ref="0x41046660" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio3" scoped="" ref="0x41046660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41046838"/>
        <function-ref name="high" scoped="" ref="0x41046918"/>
        <function-ref name="Toggle" scoped="" ref="0x410469f8"/>
        <function-ref name="read" scoped="" ref="0x41046ad8"/>
        <function-ref name="setParam" scoped="" ref="0x41046bb8"/>
        <function-ref name="readDone" scoped="" ref="0x41046c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x41022260" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x41022260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41022438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioInit" ref="0x41049690" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioInit" scoped="" ref="0x41049690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41049868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x410226c8" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x410226c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410228a0"/>
        <function-ref name="stopDone" scoped="" ref="0x41022980"/>
        <function-ref name="start" scoped="" ref="0x41022a60"/>
        <function-ref name="stop" scoped="" ref="0x41022b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41042bb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41042bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41042d90"/>
        <function-ref name="high" scoped="" ref="0x41042e70"/>
        <function-ref name="Toggle" scoped="" ref="0x41041010"/>
        <function-ref name="read" scoped="" ref="0x410410f0"/>
        <function-ref name="setParam" scoped="" ref="0x410411d0"/>
        <function-ref name="readDone" scoped="" ref="0x410412b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC13" ref="0x41051208" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC13" scoped="" ref="0x41051208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410513e0"/>
        <function-ref name="readDone" scoped="" ref="0x410514c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam7" ref="0x4104fcb0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam7" scoped="" ref="0x4104fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104fe88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4105b940" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4105b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4105bb18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4105bbf8"/>
        <function-ref name="led1On" scoped="" ref="0x4105bcd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4105bdb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4105be98"/>
        <function-ref name="get" scoped="" ref="0x4105a010"/>
        <function-ref name="led1Off" scoped="" ref="0x4105a0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x4105a470"/>
        <function-ref name="set" scoped="" ref="0x4105a1d0"/>
        <function-ref name="led0On" scoped="" ref="0x4105a2b0"/>
        <function-ref name="led2On" scoped="" ref="0x4105a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC5" ref="0x41055bd0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC5" scoped="" ref="0x41055bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41055da8"/>
        <function-ref name="readDone" scoped="" ref="0x41055e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam10" ref="0x4104d8a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam10" scoped="" ref="0x4104d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104da80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCcontrol" ref="0x41058e00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCcontrol" scoped="" ref="0x41058e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41056010"/>
        <function-ref name="stopDone" scoped="" ref="0x410560f0"/>
        <function-ref name="start" scoped="" ref="0x410561d0"/>
        <function-ref name="stop" scoped="" ref="0x410562b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x4104bda0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x4104bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104a3e0"/>
        <function-ref name="readDone" scoped="" ref="0x4104a638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio1" ref="0x41047680" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio1" scoped="" ref="0x41047680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41047858"/>
        <function-ref name="high" scoped="" ref="0x41047938"/>
        <function-ref name="Toggle" scoped="" ref="0x41047a18"/>
        <function-ref name="read" scoped="" ref="0x41047af8"/>
        <function-ref name="setParam" scoped="" ref="0x41047bd8"/>
        <function-ref name="readDone" scoped="" ref="0x41047cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterControl" ref="0x41042578" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x41042578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41042750"/>
        <function-ref name="stopDone" scoped="" ref="0x41042830"/>
        <function-ref name="start" scoped="" ref="0x41042910"/>
        <function-ref name="stop" scoped="" ref="0x410429f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioControl" ref="0x41049ab0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioControl" scoped="" ref="0x41049ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41049c88"/>
        <function-ref name="stopDone" scoped="" ref="0x41049d68"/>
        <function-ref name="start" scoped="" ref="0x41049e48"/>
        <function-ref name="stop" scoped="" ref="0x41049f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam13" ref="0x4104c4c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam13" scoped="" ref="0x4104c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104c698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC8" ref="0x410549e0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC8" scoped="" ref="0x410549e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41054bb8"/>
        <function-ref name="readDone" scoped="" ref="0x41054c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam2" ref="0x410507f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam2" scoped="" ref="0x410507f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41050ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC2" ref="0x41053cb0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC2" scoped="" ref="0x41053cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41053e88"/>
        <function-ref name="readDone" scoped="" ref="0x41055010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio4" ref="0x41046e48" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio4" scoped="" ref="0x41046e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41043050"/>
        <function-ref name="high" scoped="" ref="0x41043130"/>
        <function-ref name="Toggle" scoped="" ref="0x41043210"/>
        <function-ref name="read" scoped="" ref="0x410432f0"/>
        <function-ref name="setParam" scoped="" ref="0x410433d0"/>
        <function-ref name="readDone" scoped="" ref="0x410434b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC11" ref="0x410527f8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC11" scoped="" ref="0x410527f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410529d0"/>
        <function-ref name="readDone" scoped="" ref="0x41052ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam5" ref="0x4104f4d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam5" scoped="" ref="0x4104f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410a15d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SamplerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410a15d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4109e0d8"/>
        <function-ref name="fired" scoped="" ref="0x410a0368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410a0a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x410a0818"/>
        <function-ref name="getdt" scoped="" ref="0x4109e588"/>
        <function-ref name="gett0" scoped="" ref="0x4109e330"/>
        <function-ref name="isRunning" scoped="" ref="0x410a05c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410a1c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410a0d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x410a1e80"/>
        <function-ref name="stop" scoped="" ref="0x410a0110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x411a9ef8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SamplerC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x411a9ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4109c558"/>
        <function-ref name="readDone" scoped="" ref="0x4109c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x418354e8" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x418354e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x418356c0"/>
        <function-ref name="configure" scoped="" ref="0x418357a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41836430" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41836430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41836a58"/>
        <function-ref name="readDone" scoped="" ref="0x41836cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41835010" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41835010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x418351e8"/>
        <function-ref name="getChannel" scoped="" ref="0x418352c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x418353a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410d2820" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410d2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410d2e48"/>
        <function-ref name="readDone" scoped="" ref="0x410cd0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x410cac48" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x410cac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410cc2a8"/>
        <function-ref name="readDone" scoped="" ref="0x410cc520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x410ccbd8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410ccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x410ccdb0"/>
        <function-ref name="getChannel" scoped="" ref="0x410cce90"/>
        <function-ref name="getPrescaler" scoped="" ref="0x410cb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410cb4b0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410cb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410cb688"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410cb768"/>
        <function-ref name="request" scoped="" ref="0x410cb848"/>
        <function-ref name="granted" scoped="" ref="0x410cb928"/>
        <function-ref name="isOwner" scoped="" ref="0x410cba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410c47f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410c47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410c49c8"/>
        <function-ref name="configure" scoped="" ref="0x410c4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x410c4010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410c41e8"/>
        <function-ref name="dataReady" scoped="" ref="0x410c42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x410c2e10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410c2e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410c5010"/>
        <function-ref name="cancel" scoped="" ref="0x410c50f0"/>
        <function-ref name="dataReady" scoped="" ref="0x410c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410c6498" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410c6498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410c6670"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410c6750"/>
        <function-ref name="request" scoped="" ref="0x410c6830"/>
        <function-ref name="granted" scoped="" ref="0x410c6910"/>
        <function-ref name="isOwner" scoped="" ref="0x410c69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410bc440" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410bc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410bc618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x410bb2e0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410bb2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410bb4b8"/>
        <function-ref name="dataReady" scoped="" ref="0x410bb598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x410bcc80" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410bcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410bce58"/>
        <function-ref name="cancel" scoped="" ref="0x410bb010"/>
        <function-ref name="dataReady" scoped="" ref="0x410bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x410f0bc0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x410f0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x410f0d98"/>
        <function-ref name="getAdmux" scoped="" ref="0x410f0e78"/>
        <function-ref name="setPrescaler" scoped="" ref="0x410ba010"/>
        <function-ref name="isEnabled" scoped="" ref="0x410ba0f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x410ba1d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x410ba2b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x410ba390"/>
        <function-ref name="isComplete" scoped="" ref="0x410ba470"/>
        <function-ref name="cancel" scoped="" ref="0x410ba550"/>
        <function-ref name="disableAdc" scoped="" ref="0x410ba630"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x410ba710"/>
        <function-ref name="disableInterruption" scoped="" ref="0x410ba7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x410ba8d0"/>
        <function-ref name="isStarted" scoped="" ref="0x410baa30"/>
        <function-ref name="setAdcsra" scoped="" ref="0x410bab10"/>
        <function-ref name="setContinuous" scoped="" ref="0x410babf0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x410bacd0"/>
        <function-ref name="getValue" scoped="" ref="0x410badb0"/>
        <function-ref name="dataReady" scoped="" ref="0x410bae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x410bc7f0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x410bc7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410bc9c8"/>
        <function-ref name="stop" scoped="" ref="0x410bcaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x410b90f8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x410b90f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x410b92d0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x410b93b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x410b9490"/>
        <function-ref name="actualMicro" scoped="" ref="0x410b9570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x410b9650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41110278" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41110278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x41110450"/>
        <function-ref name="getAdmux" scoped="" ref="0x41110530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x41110610"/>
        <function-ref name="isEnabled" scoped="" ref="0x411106f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x411107d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x411108b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41110990"/>
        <function-ref name="isComplete" scoped="" ref="0x41110a70"/>
        <function-ref name="cancel" scoped="" ref="0x41110b50"/>
        <function-ref name="disableAdc" scoped="" ref="0x41110c30"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41110d10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41110df0"/>
        <function-ref name="startConversion" scoped="" ref="0x41110ed0"/>
        <function-ref name="isStarted" scoped="" ref="0x4110f090"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4110f170"/>
        <function-ref name="setContinuous" scoped="" ref="0x4110f250"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4110f330"/>
        <function-ref name="getValue" scoped="" ref="0x4110f410"/>
        <function-ref name="dataReady" scoped="" ref="0x4110f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x4110feb0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110feb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4110c0c0"/>
        <function-ref name="getAdmux" scoped="" ref="0x4110c1a0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4110c280"/>
        <function-ref name="isEnabled" scoped="" ref="0x4110c360"/>
        <function-ref name="enableAdc" scoped="" ref="0x4110c440"/>
        <function-ref name="setAdmux" scoped="" ref="0x4110c520"/>
        <function-ref name="enableInterruption" scoped="" ref="0x4110c600"/>
        <function-ref name="isComplete" scoped="" ref="0x4110c6e0"/>
        <function-ref name="cancel" scoped="" ref="0x4110c7c0"/>
        <function-ref name="disableAdc" scoped="" ref="0x4110c8a0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4110c980"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4110ca60"/>
        <function-ref name="startConversion" scoped="" ref="0x4110cb40"/>
        <function-ref name="isStarted" scoped="" ref="0x4110cca0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4110cd80"/>
        <function-ref name="setContinuous" scoped="" ref="0x4110ce60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4110b010"/>
        <function-ref name="getValue" scoped="" ref="0x4110b0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x4110b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4110b3b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4110b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4110b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41169068" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41169068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41169250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41169330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41168010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41168010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411681f8"/>
        <function-ref name="configure" scoped="" ref="0x411682d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41169470" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41169470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41169648"/>
        <function-ref name="requested" scoped="" ref="0x41169728"/>
        <function-ref name="granted" scoped="" ref="0x41169808"/>
        <function-ref name="isOwner" scoped="" ref="0x411698e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411699c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4110d910" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4110d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4110daf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4110dbd8"/>
        <function-ref name="request" scoped="" ref="0x4110dcb8"/>
        <function-ref name="granted" scoped="" ref="0x4110dd98"/>
        <function-ref name="isOwner" scoped="" ref="0x4110de78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41169b08" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41169b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41169ce0"/>
        <function-ref name="userId" scoped="" ref="0x41169dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4182c030" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4182c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4182c208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x4182c368" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x4182c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4182c540"/>
        <function-ref name="isEmpty" scoped="" ref="0x4182c620"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4182c700"/>
        <function-ref name="dequeue" scoped="" ref="0x4182c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4182ac20" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4182ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4182ae08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4182aee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41829b98" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41829b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41829d80"/>
        <function-ref name="configure" scoped="" ref="0x41829e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41828010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41828010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418281e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x418282c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418283a8"/>
        <function-ref name="dequeue" scoped="" ref="0x41828488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41829040" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41829040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41829218"/>
        <function-ref name="requested" scoped="" ref="0x418292f8"/>
        <function-ref name="granted" scoped="" ref="0x418293d8"/>
        <function-ref name="isOwner" scoped="" ref="0x418294b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41829598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418285c8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418285c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418287a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41828880"/>
        <function-ref name="led1On" scoped="" ref="0x41828960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41828a40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41828b20"/>
        <function-ref name="get" scoped="" ref="0x41828c00"/>
        <function-ref name="led1Off" scoped="" ref="0x41828ce0"/>
        <function-ref name="led0On" scoped="" ref="0x418270f0"/>
        <function-ref name="set" scoped="" ref="0x41828ea0"/>
        <function-ref name="led2On" scoped="" ref="0x41828dc0"/>
        <function-ref name="led2Off" scoped="" ref="0x41827010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4182a4e0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4182a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4182a6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4182a7a8"/>
        <function-ref name="request" scoped="" ref="0x4182a888"/>
        <function-ref name="granted" scoped="" ref="0x4182a968"/>
        <function-ref name="isOwner" scoped="" ref="0x4182aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x418296d8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418296d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418298b0"/>
        <function-ref name="userId" scoped="" ref="0x41829990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41827270" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41827270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41827448"/>
        <function-ref name="runTask" scoped="" ref="0x41827528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41167de8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41167de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41166010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41166150" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41166150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41166328"/>
        <function-ref name="requested" scoped="" ref="0x41166408"/>
        <function-ref name="granted" scoped="" ref="0x411664e8"/>
        <function-ref name="isOwner" scoped="" ref="0x411665c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411666a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x411679f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x411679f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41167bc8"/>
        <function-ref name="stop" scoped="" ref="0x41167ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x411667e8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411667e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411669c0"/>
        <function-ref name="userId" scoped="" ref="0x41166aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41868b00" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41868b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41868cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41868e18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41868e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41867010"/>
        <function-ref name="requested" scoped="" ref="0x418670f0"/>
        <function-ref name="granted" scoped="" ref="0x418671d0"/>
        <function-ref name="isOwner" scoped="" ref="0x418672b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41867390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41868708" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41868708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x418688e0"/>
        <function-ref name="stop" scoped="" ref="0x418689c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x418674d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418676a8"/>
        <function-ref name="userId" scoped="" ref="0x41867788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x411541d8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x411541d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41154800"/>
        <function-ref name="readDone" scoped="" ref="0x41154a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x41153178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x41153178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411537c0"/>
        <function-ref name="readDone" scoped="" ref="0x41153a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x411526b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411526b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41152888"/>
        <function-ref name="getChannel" scoped="" ref="0x41152968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41152a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x41153de8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41153de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41152010"/>
        <function-ref name="cancel" scoped="" ref="0x411520f0"/>
        <function-ref name="dataReady" scoped="" ref="0x411521d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x41189e90" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x41189e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41187080"/>
        <function-ref name="runTask" scoped="" ref="0x41187160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4117d560" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4117d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4117db98"/>
        <function-ref name="readDone" scoped="" ref="0x4117de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x4117c280" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x4117c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4117c8b8"/>
        <function-ref name="readDone" scoped="" ref="0x4117cb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4117cea0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4117cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411ae0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411ae1a0"/>
        <function-ref name="request" scoped="" ref="0x411ae280"/>
        <function-ref name="granted" scoped="" ref="0x411ae360"/>
        <function-ref name="isOwner" scoped="" ref="0x411ae440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x411aa468" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411aa468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x411aa640"/>
        <function-ref name="getChannel" scoped="" ref="0x411aa720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x411aa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411a4520" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411a4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411a46f8"/>
        <function-ref name="stopDone" scoped="" ref="0x411a47d8"/>
        <function-ref name="start" scoped="" ref="0x411a48b8"/>
        <function-ref name="stop" scoped="" ref="0x411a4998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x412487f0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x412487f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41248e18"/>
        <function-ref name="readDone" scoped="" ref="0x41247088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x411a4ba8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x411a4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412481f0"/>
        <function-ref name="readDone" scoped="" ref="0x41248448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Temp" ref="0x4185b550" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Temp" scoped="" ref="0x4185b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4185b728"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4185b808"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4185b8e8"/>
        <function-ref name="reset" scoped="" ref="0x4185b9c8"/>
        <function-ref name="resetDone" scoped="" ref="0x4185baa8"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4185bb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x4185d760" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x4185d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4185d938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x4185db48" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x4185db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4185c1e0"/>
        <function-ref name="readDone" scoped="" ref="0x4185c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x4185f7c0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x4185f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4185f998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x4185c750" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x4185c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4185c928"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4185ca08"/>
        <function-ref name="request" scoped="" ref="0x4185cae8"/>
        <function-ref name="granted" scoped="" ref="0x4185cbc8"/>
        <function-ref name="isOwner" scoped="" ref="0x4185cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Hum" ref="0x4185bd08" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Hum" scoped="" ref="0x4185bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4185bee0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4185a010"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4185a0f0"/>
        <function-ref name="reset" scoped="" ref="0x4185a1d0"/>
        <function-ref name="resetDone" scoped="" ref="0x4185a2b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4185a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x4185ce28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x4185ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4185b050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4185b130"/>
        <function-ref name="request" scoped="" ref="0x4185b210"/>
        <function-ref name="granted" scoped="" ref="0x4185b2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4185b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x4185fba8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x4185fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4185d1f0"/>
        <function-ref name="readDone" scoped="" ref="0x4185d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411bf2c8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411bf2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411bf4a0"/>
        <function-ref name="stopDone" scoped="" ref="0x411bf580"/>
        <function-ref name="start" scoped="" ref="0x411bf660"/>
        <function-ref name="stop" scoped="" ref="0x411bf740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x411be6c8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x411be6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x411be8a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x411be980"/>
        <function-ref name="measureTemperature" scoped="" ref="0x411bea60"/>
        <function-ref name="reset" scoped="" ref="0x411beb40"/>
        <function-ref name="resetDone" scoped="" ref="0x411bec20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x411bed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411bfc00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411bfc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411bfdd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411bfeb8"/>
        <function-ref name="request" scoped="" ref="0x411be010"/>
        <function-ref name="granted" scoped="" ref="0x411be0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x411be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x411bbc20" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x411bbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x411bbe08"/>
        <function-ref name="measureHumidity" scoped="" ref="0x411bbee8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4120b010"/>
        <function-ref name="reset" scoped="" ref="0x4120b0f0"/>
        <function-ref name="resetDone" scoped="" ref="0x4120b1d0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4120b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x4120a7b0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x4120a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4120a988"/>
        <function-ref name="disable" scoped="" ref="0x4120aa68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4120ab48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4120ac28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x41206c48" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x41206c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41206e20"/>
        <function-ref name="runTask" scoped="" ref="0x41206f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x4120bda8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x4120bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4120a010"/>
        <function-ref name="isInput" scoped="" ref="0x4120a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4120a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4120a2b0"/>
        <function-ref name="get" scoped="" ref="0x4120a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4120a470"/>
        <function-ref name="set" scoped="" ref="0x4120a550"/>
        <function-ref name="clr" scoped="" ref="0x4120a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x4120b430" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x4120b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4120b608"/>
        <function-ref name="isInput" scoped="" ref="0x4120b6e8"/>
        <function-ref name="toggle" scoped="" ref="0x4120b7c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4120b8a8"/>
        <function-ref name="get" scoped="" ref="0x4120b988"/>
        <function-ref name="makeOutput" scoped="" ref="0x4120ba68"/>
        <function-ref name="set" scoped="" ref="0x4120bb48"/>
        <function-ref name="clr" scoped="" ref="0x4120bc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41206030" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41206030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41206208"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412062e8"/>
        <function-ref name="led1On" scoped="" ref="0x412063c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412064a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41206588"/>
        <function-ref name="get" scoped="" ref="0x41206668"/>
        <function-ref name="led1Off" scoped="" ref="0x41206748"/>
        <function-ref name="led2On" scoped="" ref="0x41206ac8"/>
        <function-ref name="set" scoped="" ref="0x41206908"/>
        <function-ref name="led2Off" scoped="" ref="0x41206828"/>
        <function-ref name="led0On" scoped="" ref="0x412069e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4120ae18" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4120ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41208920"/>
        <function-ref name="fired" scoped="" ref="0x41209bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412082e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41208088"/>
        <function-ref name="getdt" scoped="" ref="0x41208dd0"/>
        <function-ref name="gett0" scoped="" ref="0x41208b78"/>
        <function-ref name="isRunning" scoped="" ref="0x41209e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41209468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41208600"/>
        <function-ref name="startOneShot" scoped="" ref="0x412096e8"/>
        <function-ref name="stop" scoped="" ref="0x41209968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412049c0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412049c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41204b98"/>
        <function-ref name="stopDone" scoped="" ref="0x41204c78"/>
        <function-ref name="start" scoped="" ref="0x41204d58"/>
        <function-ref name="stop" scoped="" ref="0x41204e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x411ff010" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x411ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ff1e8"/>
        <function-ref name="disable" scoped="" ref="0x411ff2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x411ff3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x411ff488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x412004b0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x412004b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41200688"/>
        <function-ref name="isInput" scoped="" ref="0x41200768"/>
        <function-ref name="toggle" scoped="" ref="0x41200848"/>
        <function-ref name="isOutput" scoped="" ref="0x41200928"/>
        <function-ref name="get" scoped="" ref="0x41200a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x41200ae8"/>
        <function-ref name="set" scoped="" ref="0x41200bc8"/>
        <function-ref name="clr" scoped="" ref="0x41200ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x41201a58" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x41201a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41201c30"/>
        <function-ref name="isInput" scoped="" ref="0x41201d10"/>
        <function-ref name="toggle" scoped="" ref="0x41201df0"/>
        <function-ref name="isOutput" scoped="" ref="0x41201ed0"/>
        <function-ref name="get" scoped="" ref="0x41200010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412000f0"/>
        <function-ref name="set" scoped="" ref="0x412001d0"/>
        <function-ref name="clr" scoped="" ref="0x412002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412012f0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412014c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412015a8"/>
        <function-ref name="request" scoped="" ref="0x41201688"/>
        <function-ref name="granted" scoped="" ref="0x41201768"/>
        <function-ref name="isOwner" scoped="" ref="0x41201848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x411ffc30" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x411ffc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ffe08"/>
        <function-ref name="isInput" scoped="" ref="0x411ffee8"/>
        <function-ref name="toggle" scoped="" ref="0x411fc010"/>
        <function-ref name="isOutput" scoped="" ref="0x411fc0f0"/>
        <function-ref name="get" scoped="" ref="0x411fc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411fc2b0"/>
        <function-ref name="set" scoped="" ref="0x411fc390"/>
        <function-ref name="clr" scoped="" ref="0x411fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x411f5ec8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x411f5ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411f4188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x411fba28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x411fba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fbc00"/>
        <function-ref name="isInput" scoped="" ref="0x411fbce0"/>
        <function-ref name="toggle" scoped="" ref="0x411fbdc0"/>
        <function-ref name="isOutput" scoped="" ref="0x411fbea0"/>
        <function-ref name="get" scoped="" ref="0x411fa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411fa0f0"/>
        <function-ref name="set" scoped="" ref="0x411fa1d0"/>
        <function-ref name="clr" scoped="" ref="0x411fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x411f9850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x411f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f9a28"/>
        <function-ref name="isInput" scoped="" ref="0x411f9b08"/>
        <function-ref name="toggle" scoped="" ref="0x411f9be8"/>
        <function-ref name="isOutput" scoped="" ref="0x411f9cc8"/>
        <function-ref name="get" scoped="" ref="0x411f9da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f9e88"/>
        <function-ref name="set" scoped="" ref="0x411f8010"/>
        <function-ref name="clr" scoped="" ref="0x411f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x411f4b20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x411f4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411f4cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x412352d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x412352d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x412354b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x411f7740" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x411f7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f7918"/>
        <function-ref name="isInput" scoped="" ref="0x411f79f8"/>
        <function-ref name="toggle" scoped="" ref="0x411f7ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x411f7bb8"/>
        <function-ref name="get" scoped="" ref="0x411f7c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f7d78"/>
        <function-ref name="set" scoped="" ref="0x411f7e58"/>
        <function-ref name="clr" scoped="" ref="0x411f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x411fc650" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x411fc650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fc828"/>
        <function-ref name="isInput" scoped="" ref="0x411fc908"/>
        <function-ref name="toggle" scoped="" ref="0x411fc9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x411fcac8"/>
        <function-ref name="get" scoped="" ref="0x411fcba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411fcc88"/>
        <function-ref name="set" scoped="" ref="0x411fcd68"/>
        <function-ref name="clr" scoped="" ref="0x411fce48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x411fa490" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x411fa490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fa668"/>
        <function-ref name="isInput" scoped="" ref="0x411fa748"/>
        <function-ref name="toggle" scoped="" ref="0x411fa828"/>
        <function-ref name="isOutput" scoped="" ref="0x411fa908"/>
        <function-ref name="get" scoped="" ref="0x411fa9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411faac8"/>
        <function-ref name="set" scoped="" ref="0x411faba8"/>
        <function-ref name="clr" scoped="" ref="0x411fac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x411f4380" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x411f4380"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411f4558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x411f82d0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x411f82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f84a8"/>
        <function-ref name="isInput" scoped="" ref="0x411f8588"/>
        <function-ref name="toggle" scoped="" ref="0x411f8668"/>
        <function-ref name="isOutput" scoped="" ref="0x411f8748"/>
        <function-ref name="get" scoped="" ref="0x411f8828"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f8908"/>
        <function-ref name="set" scoped="" ref="0x411f89e8"/>
        <function-ref name="clr" scoped="" ref="0x411f8ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x412356a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x412356a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41235880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x411f6200" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x411f6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f63d8"/>
        <function-ref name="isInput" scoped="" ref="0x411f64b8"/>
        <function-ref name="toggle" scoped="" ref="0x411f6598"/>
        <function-ref name="isOutput" scoped="" ref="0x411f6678"/>
        <function-ref name="get" scoped="" ref="0x411f6758"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f6838"/>
        <function-ref name="set" scoped="" ref="0x411f6918"/>
        <function-ref name="clr" scoped="" ref="0x411f69f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x411fb050" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x411fb050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fb228"/>
        <function-ref name="isInput" scoped="" ref="0x411fb308"/>
        <function-ref name="toggle" scoped="" ref="0x411fb3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x411fb4c8"/>
        <function-ref name="get" scoped="" ref="0x411fb5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411fb688"/>
        <function-ref name="set" scoped="" ref="0x411fb768"/>
        <function-ref name="clr" scoped="" ref="0x411fb848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x411fae68" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x411fae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f9050"/>
        <function-ref name="isInput" scoped="" ref="0x411f9130"/>
        <function-ref name="toggle" scoped="" ref="0x411f9210"/>
        <function-ref name="isOutput" scoped="" ref="0x411f92f0"/>
        <function-ref name="get" scoped="" ref="0x411f93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f94b0"/>
        <function-ref name="set" scoped="" ref="0x411f9590"/>
        <function-ref name="clr" scoped="" ref="0x411f9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x411f4750" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x411f4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411f4928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x411f8cb8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x411f8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f8e90"/>
        <function-ref name="isInput" scoped="" ref="0x411f7010"/>
        <function-ref name="toggle" scoped="" ref="0x411f70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x411f71d0"/>
        <function-ref name="get" scoped="" ref="0x411f72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f7390"/>
        <function-ref name="set" scoped="" ref="0x411f7470"/>
        <function-ref name="clr" scoped="" ref="0x411f7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x411f4ef0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x411f4ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x412350e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x41235a78" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x41235a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41235c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x411f6be8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x411f6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f6dc0"/>
        <function-ref name="isInput" scoped="" ref="0x411f6ea0"/>
        <function-ref name="toggle" scoped="" ref="0x411f5010"/>
        <function-ref name="isOutput" scoped="" ref="0x411f50f0"/>
        <function-ref name="get" scoped="" ref="0x411f51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f52b0"/>
        <function-ref name="set" scoped="" ref="0x411f5390"/>
        <function-ref name="clr" scoped="" ref="0x411f5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x412335c0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x412335c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41233798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x41230208" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x41230208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x412303e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x412309a8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x412309a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41230b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x41233990" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x41233990"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41233b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x41230d78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x41230d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x41233d60" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x41233d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41230010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x412305d8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x412305d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x412307b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x4122f208" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x4122f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x41225d88" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x41225d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41223010"/>
        <function-ref name="fired" scoped="" ref="0x412230f0"/>
        <function-ref name="disable" scoped="" ref="0x412231d0"/>
        <function-ref name="edge" scoped="" ref="0x412232b0"/>
        <function-ref name="enable" scoped="" ref="0x41223390"/>
        <function-ref name="getValue" scoped="" ref="0x41223470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x41225790" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41225790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41225968"/>
        <function-ref name="disable" scoped="" ref="0x41225a48"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x41225b28"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41225c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41222e48" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41222e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4121f050"/>
        <function-ref name="stopDone" scoped="" ref="0x4121f130"/>
        <function-ref name="start" scoped="" ref="0x4121f210"/>
        <function-ref name="stop" scoped="" ref="0x4121f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x4121b040" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x4121b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4121b218"/>
        <function-ref name="runTask" scoped="" ref="0x4121b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x4121c210" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4121c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4121c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4121c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4121c688"/>
        <function-ref name="get" scoped="" ref="0x4121c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121c848"/>
        <function-ref name="set" scoped="" ref="0x4121c928"/>
        <function-ref name="clr" scoped="" ref="0x4121ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x4121d7d8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x4121d7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121d9b0"/>
        <function-ref name="isInput" scoped="" ref="0x4121da90"/>
        <function-ref name="toggle" scoped="" ref="0x4121db70"/>
        <function-ref name="isOutput" scoped="" ref="0x4121dc50"/>
        <function-ref name="get" scoped="" ref="0x4121dd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121de10"/>
        <function-ref name="set" scoped="" ref="0x4121def0"/>
        <function-ref name="clr" scoped="" ref="0x4121c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4121f558" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4121f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4121d048"/>
        <function-ref name="fired" scoped="" ref="0x4121e2f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4121e9f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4121e7a0"/>
        <function-ref name="getdt" scoped="" ref="0x4121d4f8"/>
        <function-ref name="gett0" scoped="" ref="0x4121d2a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4121e548"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4121fb80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4121ed18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4121fe00"/>
        <function-ref name="stop" scoped="" ref="0x4121e098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41220c30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41220c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41257730"/>
        <function-ref name="fired" scoped="" ref="0x412159d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412570f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41215e80"/>
        <function-ref name="getdt" scoped="" ref="0x41257be0"/>
        <function-ref name="gett0" scoped="" ref="0x41257988"/>
        <function-ref name="isRunning" scoped="" ref="0x41215c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41215278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41257410"/>
        <function-ref name="startOneShot" scoped="" ref="0x412154f8"/>
        <function-ref name="stop" scoped="" ref="0x41215778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41255ea0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41255ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412540c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412541a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41254790" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41254790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41254978"/>
        <function-ref name="configure" scoped="" ref="0x41254a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41255760" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41255760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41255948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41255a28"/>
        <function-ref name="request" scoped="" ref="0x41255b08"/>
        <function-ref name="granted" scoped="" ref="0x41255be8"/>
        <function-ref name="isOwner" scoped="" ref="0x41255cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412542e0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412542e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412544b8"/>
        <function-ref name="userId" scoped="" ref="0x41254598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418939b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418939b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41893b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41893cf0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41893cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41893ec8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41891010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418910f0"/>
        <function-ref name="dequeue" scoped="" ref="0x418911d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41890490" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41890490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41890678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41890758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41890d58" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41890d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4188e010"/>
        <function-ref name="configure" scoped="" ref="0x4188e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4188e250" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4188e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4188e428"/>
        <function-ref name="isEmpty" scoped="" ref="0x4188e508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4188e5e8"/>
        <function-ref name="dequeue" scoped="" ref="0x4188e6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41891d38" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41891d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41891f20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41890018"/>
        <function-ref name="request" scoped="" ref="0x418900f8"/>
        <function-ref name="granted" scoped="" ref="0x418901d8"/>
        <function-ref name="isOwner" scoped="" ref="0x418902b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41890898" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41890898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41890a70"/>
        <function-ref name="userId" scoped="" ref="0x41890b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4188e848" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4188e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4188ea20"/>
        <function-ref name="runTask" scoped="" ref="0x4188eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41250878" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41250878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4124e388"/>
        <function-ref name="fired" scoped="" ref="0x4124f628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4124fd30"/>
        <function-ref name="isOneShot" scoped="" ref="0x4124fad8"/>
        <function-ref name="getdt" scoped="" ref="0x4124e838"/>
        <function-ref name="gett0" scoped="" ref="0x4124e5e0"/>
        <function-ref name="isRunning" scoped="" ref="0x4124f880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41250ea0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4124e068"/>
        <function-ref name="startOneShot" scoped="" ref="0x4124f150"/>
        <function-ref name="stop" scoped="" ref="0x4124f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41360220" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41360220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413603f8"/>
        <function-ref name="stopDone" scoped="" ref="0x413604d8"/>
        <function-ref name="start" scoped="" ref="0x413605b8"/>
        <function-ref name="stop" scoped="" ref="0x41360698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x41360890" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x41360890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41360a78"/>
        <function-ref name="high" scoped="" ref="0x41360b58"/>
        <function-ref name="Toggle" scoped="" ref="0x41360c38"/>
        <function-ref name="read" scoped="" ref="0x41360d18"/>
        <function-ref name="setParam" scoped="" ref="0x41360df8"/>
        <function-ref name="readDone" scoped="" ref="0x41360ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41245ed8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41245ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413600c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41240510" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41240510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412406e8"/>
        <function-ref name="stopDone" scoped="" ref="0x412407c8"/>
        <function-ref name="start" scoped="" ref="0x412408a8"/>
        <function-ref name="stop" scoped="" ref="0x41240988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x41240e18" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x41240e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4123f010"/>
        <function-ref name="high" scoped="" ref="0x4123f0f0"/>
        <function-ref name="Toggle" scoped="" ref="0x4123f1d0"/>
        <function-ref name="read" scoped="" ref="0x4123f2b0"/>
        <function-ref name="setParam" scoped="" ref="0x4123f390"/>
        <function-ref name="readDone" scoped="" ref="0x4123f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41240158" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41240158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41240330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4123a0e0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4123a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4123a2b8"/>
        <function-ref name="stopDone" scoped="" ref="0x4123a398"/>
        <function-ref name="start" scoped="" ref="0x4123a478"/>
        <function-ref name="stop" scoped="" ref="0x4123a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x41236418" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41236418"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41236b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x4123a9c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x4123a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4123aba0"/>
        <function-ref name="high" scoped="" ref="0x4123ac80"/>
        <function-ref name="Toggle" scoped="" ref="0x4123ad60"/>
        <function-ref name="read" scoped="" ref="0x4123ae40"/>
        <function-ref name="setParam" scoped="" ref="0x4123af20"/>
        <function-ref name="readDone" scoped="" ref="0x41239018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read_io" ref="0x4128fba0" loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read_io" scoped="" ref="0x4128fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4128fdf8"/>
        <function-ref name="runTask" scoped="" ref="0x4128fed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4123fcd8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4123fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4123feb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init_io" ref="0x4126c1d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init_io" scoped="" ref="0x4126c1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4126c3b0"/>
        <function-ref name="runTask" scoped="" ref="0x4126c490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x41237bf8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x41237bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41237dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41237eb0"/>
        <function-ref name="request" scoped="" ref="0x41272010"/>
        <function-ref name="granted" scoped="" ref="0x412720f0"/>
        <function-ref name="isOwner" scoped="" ref="0x412721d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x412723d0" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x412723d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412725a8"/>
        <function-ref name="isInput" scoped="" ref="0x41272688"/>
        <function-ref name="toggle" scoped="" ref="0x41272768"/>
        <function-ref name="isOutput" scoped="" ref="0x41272848"/>
        <function-ref name="get" scoped="" ref="0x41272928"/>
        <function-ref name="makeOutput" scoped="" ref="0x41272a08"/>
        <function-ref name="set" scoped="" ref="0x41272ae8"/>
        <function-ref name="clr" scoped="" ref="0x41272bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_low" ref="0x4125e430" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_low" scoped="" ref="0x4125e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4125e608"/>
        <function-ref name="runTask" scoped="" ref="0x4125e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_toggle" ref="0x41259730" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_toggle" scoped="" ref="0x41259730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41259908"/>
        <function-ref name="runTask" scoped="" ref="0x412599e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x41273c70" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41273c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412382e8"/>
        <function-ref name="writeDone" scoped="" ref="0x41237558"/>
        <function-ref name="write" scoped="" ref="0x41238908"/>
        <function-ref name="readDone" scoped="" ref="0x41238f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x41272e40" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41272e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41270050"/>
        <function-ref name="fired" scoped="" ref="0x41270130"/>
        <function-ref name="disable" scoped="" ref="0x41270210"/>
        <function-ref name="edge" scoped="" ref="0x412702f0"/>
        <function-ref name="enable" scoped="" ref="0x412703d0"/>
        <function-ref name="getValue" scoped="" ref="0x412704b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_high" ref="0x412631e0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_high" scoped="" ref="0x412631e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412633b8"/>
        <function-ref name="runTask" scoped="" ref="0x41263498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x412bc840" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x412bc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x412b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x412bb480" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x412bb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412bb658"/>
        <function-ref name="isInput" scoped="" ref="0x412bb738"/>
        <function-ref name="toggle" scoped="" ref="0x412bb818"/>
        <function-ref name="isOutput" scoped="" ref="0x412bb8f8"/>
        <function-ref name="get" scoped="" ref="0x412bb9d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412bbab8"/>
        <function-ref name="set" scoped="" ref="0x412bbb98"/>
        <function-ref name="clr" scoped="" ref="0x412bbc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x412b37c8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x412b37c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412b39a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412b3a80"/>
        <function-ref name="request" scoped="" ref="0x412b3b60"/>
        <function-ref name="granted" scoped="" ref="0x412b3c40"/>
        <function-ref name="isOwner" scoped="" ref="0x412b3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412b57f8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412b57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412b5e40"/>
        <function-ref name="writeDone" scoped="" ref="0x412b3128"/>
        <function-ref name="write" scoped="" ref="0x412b4498"/>
        <function-ref name="readDone" scoped="" ref="0x412b4ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x412bbef0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x412bbef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412b50e0"/>
        <function-ref name="fired" scoped="" ref="0x412b51c0"/>
        <function-ref name="disable" scoped="" ref="0x412b52a0"/>
        <function-ref name="edge" scoped="" ref="0x412b5380"/>
        <function-ref name="enable" scoped="" ref="0x412b5460"/>
        <function-ref name="getValue" scoped="" ref="0x412b5540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412b1a38" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412b1a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412b1c10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412b1cf0"/>
        <function-ref name="request" scoped="" ref="0x412b1dd0"/>
        <function-ref name="granted" scoped="" ref="0x412b1eb0"/>
        <function-ref name="isOwner" scoped="" ref="0x412b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412b0200" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412b0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412b0848"/>
        <function-ref name="writeDone" scoped="" ref="0x41366ab8"/>
        <function-ref name="write" scoped="" ref="0x412b0e68"/>
        <function-ref name="readDone" scoped="" ref="0x41366498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412a7470" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a7648"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412a7728"/>
        <function-ref name="request" scoped="" ref="0x412a7808"/>
        <function-ref name="granted" scoped="" ref="0x412a78e8"/>
        <function-ref name="isOwner" scoped="" ref="0x412a79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412a6010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412a6658"/>
        <function-ref name="writeDone" scoped="" ref="0x412a58e0"/>
        <function-ref name="write" scoped="" ref="0x412a6c78"/>
        <function-ref name="readDone" scoped="" ref="0x412a52c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412a1b58" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412a1b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412a1d40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412a1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412d9b58" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412d9b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412d9d40"/>
        <function-ref name="configure" scoped="" ref="0x412d9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x412d9010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d91e8"/>
        <function-ref name="requested" scoped="" ref="0x412d92c8"/>
        <function-ref name="granted" scoped="" ref="0x412d93a8"/>
        <function-ref name="isOwner" scoped="" ref="0x412d9488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412d9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412a1418" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a1418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a1600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412a16e0"/>
        <function-ref name="request" scoped="" ref="0x412a17c0"/>
        <function-ref name="granted" scoped="" ref="0x412a18a0"/>
        <function-ref name="isOwner" scoped="" ref="0x412a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412d96a8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412d96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412d9880"/>
        <function-ref name="userId" scoped="" ref="0x412d9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418d10a0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418d1278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x418d13d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x418d13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418d15b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x418d1690"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418d1770"/>
        <function-ref name="dequeue" scoped="" ref="0x418d1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x418d0c88" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x418d0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x418d0e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x418cf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x418cfca8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x418cfca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x418cfe90"/>
        <function-ref name="configure" scoped="" ref="0x418cd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x418cd170" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x418cd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418cd348"/>
        <function-ref name="isEmpty" scoped="" ref="0x418cd428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418cd508"/>
        <function-ref name="dequeue" scoped="" ref="0x418cd5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x418cf150" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x418cf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418cf328"/>
        <function-ref name="requested" scoped="" ref="0x418cf408"/>
        <function-ref name="granted" scoped="" ref="0x418cf4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x418cf5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x418cf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418cd728" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418cd728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418cd900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x418cd9e0"/>
        <function-ref name="led1On" scoped="" ref="0x418cdac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x418cdba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x418cdc80"/>
        <function-ref name="get" scoped="" ref="0x418cdd60"/>
        <function-ref name="led1Off" scoped="" ref="0x418cde40"/>
        <function-ref name="led0On" scoped="" ref="0x418cc1d8"/>
        <function-ref name="set" scoped="" ref="0x418cc018"/>
        <function-ref name="led2On" scoped="" ref="0x418cdf20"/>
        <function-ref name="led2Off" scoped="" ref="0x418cc0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x418d0548" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x418d0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418d0730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x418d0810"/>
        <function-ref name="request" scoped="" ref="0x418d08f0"/>
        <function-ref name="granted" scoped="" ref="0x418d09d0"/>
        <function-ref name="isOwner" scoped="" ref="0x418d0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x418cf7e8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418cf7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418cf9c0"/>
        <function-ref name="userId" scoped="" ref="0x418cfaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x418cc358" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x418cc358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418cc530"/>
        <function-ref name="runTask" scoped="" ref="0x418cc610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412d7230" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412d7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x412d7408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x412d7548" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d7720"/>
        <function-ref name="requested" scoped="" ref="0x412d7800"/>
        <function-ref name="granted" scoped="" ref="0x412d78e0"/>
        <function-ref name="isOwner" scoped="" ref="0x412d79c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412d7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x412d8d90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412d8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412d7010"/>
        <function-ref name="stop" scoped="" ref="0x412d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x412d7be0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412d7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412d7db8"/>
        <function-ref name="userId" scoped="" ref="0x412d7e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x412f8dd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x412f8dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x412f7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x412fbf20" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x412fbf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412fa580"/>
        <function-ref name="writeDone" scoped="" ref="0x412f8800"/>
        <function-ref name="write" scoped="" ref="0x412faba0"/>
        <function-ref name="readDone" scoped="" ref="0x412f81e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412d5010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d51f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412d52d8"/>
        <function-ref name="request" scoped="" ref="0x412d53b8"/>
        <function-ref name="granted" scoped="" ref="0x412d5498"/>
        <function-ref name="isOwner" scoped="" ref="0x412d5578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412d5800" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412d5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412d5e58"/>
        <function-ref name="writeDone" scoped="" ref="0x412fb128"/>
        <function-ref name="write" scoped="" ref="0x412d4498"/>
        <function-ref name="readDone" scoped="" ref="0x412d4ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x412fb7a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x412fb7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412fb990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412fba70"/>
        <function-ref name="request" scoped="" ref="0x412fbb50"/>
        <function-ref name="granted" scoped="" ref="0x412fbc30"/>
        <function-ref name="isOwner" scoped="" ref="0x412fbd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x41305d50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x41305d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x41305f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x413040b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x413040b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x41304290"/>
        <function-ref name="sendCommand" scoped="" ref="0x41304370"/>
        <function-ref name="setStart" scoped="" ref="0x41304450"/>
        <function-ref name="status" scoped="" ref="0x41304530"/>
        <function-ref name="hasAcks" scoped="" ref="0x41304610"/>
        <function-ref name="isEnabled" scoped="" ref="0x413046f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x413047d0"/>
        <function-ref name="read" scoped="" ref="0x413048b0"/>
        <function-ref name="init" scoped="" ref="0x41304990"/>
        <function-ref name="enableAck" scoped="" ref="0x41304a70"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x41304b50"/>
        <function-ref name="hasStart" scoped="" ref="0x41304c30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41304d10"/>
        <function-ref name="commandComplete" scoped="" ref="0x41304e70"/>
        <function-ref name="enable" scoped="" ref="0x4134a010"/>
        <function-ref name="write" scoped="" ref="0x4134a0f0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x4134a1d0"/>
        <function-ref name="off" scoped="" ref="0x4134a2b0"/>
        <function-ref name="setStop" scoped="" ref="0x4134a390"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x4134a470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4134a550"/>
        <function-ref name="hasStop" scoped="" ref="0x4134a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x4134a7b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x4134a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4134a988"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4134aa68"/>
        <function-ref name="led1On" scoped="" ref="0x4134ab48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4134ac28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4134ad08"/>
        <function-ref name="get" scoped="" ref="0x4134ade8"/>
        <function-ref name="led1Off" scoped="" ref="0x4134aec8"/>
        <function-ref name="led2On" scoped="" ref="0x413482b0"/>
        <function-ref name="set" scoped="" ref="0x413480f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41348010"/>
        <function-ref name="led0On" scoped="" ref="0x413481d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x41348430" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x41348430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41348608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413486e8"/>
        <function-ref name="led1On" scoped="" ref="0x413487c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413488a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41348988"/>
        <function-ref name="get" scoped="" ref="0x41348a68"/>
        <function-ref name="led1Off" scoped="" ref="0x41348b48"/>
        <function-ref name="led2On" scoped="" ref="0x41348ec8"/>
        <function-ref name="set" scoped="" ref="0x41348d08"/>
        <function-ref name="led2Off" scoped="" ref="0x41348c28"/>
        <function-ref name="led0On" scoped="" ref="0x41348de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x412f69e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412f69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412f6bc0"/>
        <function-ref name="stop" scoped="" ref="0x412f6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412f6e90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412f6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412f54f8"/>
        <function-ref name="writeDone" scoped="" ref="0x41305778"/>
        <function-ref name="write" scoped="" ref="0x412f5b18"/>
        <function-ref name="readDone" scoped="" ref="0x41305158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x413469b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x413469b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x41346b90"/>
        <function-ref name="sendCommand" scoped="" ref="0x41346c70"/>
        <function-ref name="setStart" scoped="" ref="0x41346d50"/>
        <function-ref name="status" scoped="" ref="0x41346e30"/>
        <function-ref name="hasAcks" scoped="" ref="0x41346f10"/>
        <function-ref name="isEnabled" scoped="" ref="0x41343010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x413430f0"/>
        <function-ref name="read" scoped="" ref="0x413431d0"/>
        <function-ref name="init" scoped="" ref="0x413432b0"/>
        <function-ref name="enableAck" scoped="" ref="0x41343390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x41343470"/>
        <function-ref name="hasStart" scoped="" ref="0x41343550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41343630"/>
        <function-ref name="commandComplete" scoped="" ref="0x41343790"/>
        <function-ref name="enable" scoped="" ref="0x41343870"/>
        <function-ref name="write" scoped="" ref="0x41343950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x41343a30"/>
        <function-ref name="off" scoped="" ref="0x41343b10"/>
        <function-ref name="setStop" scoped="" ref="0x41343bf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x41343cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x41343db0"/>
        <function-ref name="hasStop" scoped="" ref="0x41343e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x41342a88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x41342a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x41342c60"/>
        <function-ref name="sendCommand" scoped="" ref="0x41342d40"/>
        <function-ref name="setStart" scoped="" ref="0x41342e20"/>
        <function-ref name="status" scoped="" ref="0x41342f00"/>
        <function-ref name="hasAcks" scoped="" ref="0x4133f010"/>
        <function-ref name="isEnabled" scoped="" ref="0x4133f0f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4133f1d0"/>
        <function-ref name="read" scoped="" ref="0x4133f2b0"/>
        <function-ref name="init" scoped="" ref="0x4133f390"/>
        <function-ref name="enableAck" scoped="" ref="0x4133f470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4133f550"/>
        <function-ref name="hasStart" scoped="" ref="0x4133f630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4133f710"/>
        <function-ref name="commandComplete" scoped="" ref="0x4133f870"/>
        <function-ref name="enable" scoped="" ref="0x4133f950"/>
        <function-ref name="write" scoped="" ref="0x4133fa30"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x4133fb10"/>
        <function-ref name="off" scoped="" ref="0x4133fbf0"/>
        <function-ref name="setStop" scoped="" ref="0x4133fcd0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x4133fdb0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4133fe90"/>
        <function-ref name="hasStop" scoped="" ref="0x4133e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x4133e240" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x4133e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133e418"/>
        <function-ref name="isInput" scoped="" ref="0x4133e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x4133e5d8"/>
        <function-ref name="isOutput" scoped="" ref="0x4133e6b8"/>
        <function-ref name="get" scoped="" ref="0x4133e798"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133e878"/>
        <function-ref name="set" scoped="" ref="0x4133e958"/>
        <function-ref name="clr" scoped="" ref="0x4133ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x4133ec40" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x4133ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133ee18"/>
        <function-ref name="isInput" scoped="" ref="0x4133eef8"/>
        <function-ref name="toggle" scoped="" ref="0x4133d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4133d0f0"/>
        <function-ref name="get" scoped="" ref="0x4133d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133d2b0"/>
        <function-ref name="set" scoped="" ref="0x4133d390"/>
        <function-ref name="clr" scoped="" ref="0x4133d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41364c60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300DigitalC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41364c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41362790"/>
        <function-ref name="fired" scoped="" ref="0x41363a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41362150"/>
        <function-ref name="isOneShot" scoped="" ref="0x41363ed0"/>
        <function-ref name="getdt" scoped="" ref="0x41362c40"/>
        <function-ref name="gett0" scoped="" ref="0x413629e8"/>
        <function-ref name="isRunning" scoped="" ref="0x41363c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413632c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41362470"/>
        <function-ref name="startOneShot" scoped="" ref="0x41363548"/>
        <function-ref name="stop" scoped="" ref="0x413637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4135d918" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4135d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4135daf0"/>
        <function-ref name="stopDone" scoped="" ref="0x4135dbd0"/>
        <function-ref name="start" scoped="" ref="0x4135dcb0"/>
        <function-ref name="stop" scoped="" ref="0x4135dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x413ddc10" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x413ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413ddde8"/>
        <function-ref name="off" scoped="" ref="0x413ddec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4135d600" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4135d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4135d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x413dd010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x413dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413dd1f8"/>
        <function-ref name="readDone" scoped="" ref="0x413dd2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x413dd4b0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x413dd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x413dd698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x413dc050" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x413dc050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413dc228"/>
        <function-ref name="off" scoped="" ref="0x413dc308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x413dd7f8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x413dd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413dd9d0"/>
        <function-ref name="off" scoped="" ref="0x413ddab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41359a48" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41359a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41359c20"/>
        <function-ref name="stopDone" scoped="" ref="0x41359d00"/>
        <function-ref name="start" scoped="" ref="0x41359de0"/>
        <function-ref name="stop" scoped="" ref="0x41359ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x413533c8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x413533c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413535a0"/>
        <function-ref name="off" scoped="" ref="0x41353680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413596b0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413596b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41359888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x413543b8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x413543b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41354590"/>
        <function-ref name="readDone" scoped="" ref="0x41354670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x41354b00" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x41354b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41354cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x41353888" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x41353888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41353a60"/>
        <function-ref name="off" scoped="" ref="0x41353b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x41354ee0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x41354ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413530e0"/>
        <function-ref name="off" scoped="" ref="0x413531c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x4134c6d8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x4134c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x4134c990"/>
        <function-ref name="toggle" scoped="" ref="0x4134ca70"/>
        <function-ref name="isOutput" scoped="" ref="0x4134cb50"/>
        <function-ref name="get" scoped="" ref="0x4134cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134cd10"/>
        <function-ref name="set" scoped="" ref="0x4134cdf0"/>
        <function-ref name="clr" scoped="" ref="0x4134ced0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x4134db98" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x4134db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134dd70"/>
        <function-ref name="isInput" scoped="" ref="0x4134de50"/>
        <function-ref name="toggle" scoped="" ref="0x4134c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4134c0f0"/>
        <function-ref name="get" scoped="" ref="0x4134c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134c2b0"/>
        <function-ref name="set" scoped="" ref="0x4134c390"/>
        <function-ref name="clr" scoped="" ref="0x4134c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerStabalizingTimer" ref="0x4138f010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4138db78"/>
        <function-ref name="fired" scoped="" ref="0x4138fe10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4138d538"/>
        <function-ref name="isOneShot" scoped="" ref="0x4138d2e0"/>
        <function-ref name="getdt" scoped="" ref="0x4138c048"/>
        <function-ref name="gett0" scoped="" ref="0x4138ddd0"/>
        <function-ref name="isRunning" scoped="" ref="0x4138d088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4138f6b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4138d858"/>
        <function-ref name="startOneShot" scoped="" ref="0x4138f938"/>
        <function-ref name="stop" scoped="" ref="0x4138fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x4134e718" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x4134e718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134e8f0"/>
        <function-ref name="off" scoped="" ref="0x4134e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x41351708" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x41351708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413518e0"/>
        <function-ref name="readDone" scoped="" ref="0x413519c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x41351e50" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x41351e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4134e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x4134d150" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x4134d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134d328"/>
        <function-ref name="isInput" scoped="" ref="0x4134d408"/>
        <function-ref name="toggle" scoped="" ref="0x4134d4e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4134d5c8"/>
        <function-ref name="get" scoped="" ref="0x4134d6a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134d788"/>
        <function-ref name="set" scoped="" ref="0x4134d868"/>
        <function-ref name="clr" scoped="" ref="0x4134d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x4134b170" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x4134b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134b348"/>
        <function-ref name="isInput" scoped="" ref="0x4134b428"/>
        <function-ref name="toggle" scoped="" ref="0x4134b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4134b5e8"/>
        <function-ref name="get" scoped="" ref="0x4134b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134b7a8"/>
        <function-ref name="set" scoped="" ref="0x4134b888"/>
        <function-ref name="clr" scoped="" ref="0x4134b968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x413876a8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413876a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x41387880"/>
        <function-ref name="get" scoped="" ref="0x41387960"/>
        <function-ref name="getDone" scoped="" ref="0x41387a40"/>
        <function-ref name="setAll" scoped="" ref="0x41387b20"/>
        <function-ref name="set" scoped="" ref="0x41387c00"/>
        <function-ref name="setAllDone" scoped="" ref="0x41387ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x41390708" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x41390708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413908e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413909c0"/>
        <function-ref name="request" scoped="" ref="0x41390aa0"/>
        <function-ref name="granted" scoped="" ref="0x41390b80"/>
        <function-ref name="isOwner" scoped="" ref="0x41390c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41387e70" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41387e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4138b070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4138b150"/>
        <function-ref name="led1On" scoped="" ref="0x4138b230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4138b310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4138b3f0"/>
        <function-ref name="get" scoped="" ref="0x4138b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4138b5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4138b930"/>
        <function-ref name="set" scoped="" ref="0x4138b690"/>
        <function-ref name="led0On" scoped="" ref="0x4138b770"/>
        <function-ref name="led2On" scoped="" ref="0x4138b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x4134ebd8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x4134ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134edb0"/>
        <function-ref name="off" scoped="" ref="0x4134ee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x4134e258" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x4134e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134e430"/>
        <function-ref name="off" scoped="" ref="0x4134e510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x4134bba8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x4134bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134bd80"/>
        <function-ref name="isInput" scoped="" ref="0x4134be60"/>
        <function-ref name="toggle" scoped="" ref="0x41392010"/>
        <function-ref name="isOutput" scoped="" ref="0x413920f0"/>
        <function-ref name="get" scoped="" ref="0x413921d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413922b0"/>
        <function-ref name="set" scoped="" ref="0x41392390"/>
        <function-ref name="clr" scoped="" ref="0x41392470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x41392748" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41392748"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41392d90"/>
        <function-ref name="writeDone" scoped="" ref="0x41390048"/>
        <function-ref name="write" scoped="" ref="0x413913c8"/>
        <function-ref name="readDone" scoped="" ref="0x413919e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adc_get_data" ref="0x41371bd8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adc_get_data" scoped="" ref="0x41371bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41371db0"/>
        <function-ref name="runTask" scoped="" ref="0x41371e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x413db010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413db1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x413db2c8"/>
        <function-ref name="start" scoped="" ref="0x413db3a8"/>
        <function-ref name="stop" scoped="" ref="0x413db488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x413db608" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413db608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x413db7e0"/>
        <function-ref name="get" scoped="" ref="0x413db8c0"/>
        <function-ref name="getDone" scoped="" ref="0x413db9a0"/>
        <function-ref name="setAll" scoped="" ref="0x413dba80"/>
        <function-ref name="set" scoped="" ref="0x413dbb60"/>
        <function-ref name="setAllDone" scoped="" ref="0x413dbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413da520" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413da520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413da6f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413da7d8"/>
        <function-ref name="request" scoped="" ref="0x413da8b8"/>
        <function-ref name="granted" scoped="" ref="0x413da998"/>
        <function-ref name="isOwner" scoped="" ref="0x413daa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413dac68" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413dac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413d92e8"/>
        <function-ref name="writeDone" scoped="" ref="0x413d7558"/>
        <function-ref name="write" scoped="" ref="0x413d9908"/>
        <function-ref name="readDone" scoped="" ref="0x413d9f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x413d66f8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413d66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d68d0"/>
        <function-ref name="stopDone" scoped="" ref="0x413d69b0"/>
        <function-ref name="start" scoped="" ref="0x413d6a90"/>
        <function-ref name="stop" scoped="" ref="0x413d6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x413d6cf0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413d6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x413d6ec8"/>
        <function-ref name="get" scoped="" ref="0x413d3010"/>
        <function-ref name="getDone" scoped="" ref="0x413d30f0"/>
        <function-ref name="setAll" scoped="" ref="0x413d31d0"/>
        <function-ref name="set" scoped="" ref="0x413d32b0"/>
        <function-ref name="setAllDone" scoped="" ref="0x413d3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x413d35e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x413d35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413d37c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413d38a0"/>
        <function-ref name="request" scoped="" ref="0x413d3980"/>
        <function-ref name="granted" scoped="" ref="0x413d3a60"/>
        <function-ref name="isOwner" scoped="" ref="0x413d3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x413d3e18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413d3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413d2488"/>
        <function-ref name="writeDone" scoped="" ref="0x413d1748"/>
        <function-ref name="write" scoped="" ref="0x413d2aa8"/>
        <function-ref name="readDone" scoped="" ref="0x413d1128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413d46c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413d46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d48a0"/>
        <function-ref name="stopDone" scoped="" ref="0x413d4980"/>
        <function-ref name="start" scoped="" ref="0x413d4a60"/>
        <function-ref name="stop" scoped="" ref="0x413d4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBuffer" ref="0x413bd338" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x413bd338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bd510"/>
        <function-ref name="isInput" scoped="" ref="0x413bd5f0"/>
        <function-ref name="toggle" scoped="" ref="0x413bd6d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413bd7b0"/>
        <function-ref name="get" scoped="" ref="0x413bd890"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bd970"/>
        <function-ref name="set" scoped="" ref="0x413bda50"/>
        <function-ref name="clr" scoped="" ref="0x413bdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation33" ref="0x413be860" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x413be860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bea38"/>
        <function-ref name="isInput" scoped="" ref="0x413beb18"/>
        <function-ref name="toggle" scoped="" ref="0x413bebf8"/>
        <function-ref name="isOutput" scoped="" ref="0x413becd8"/>
        <function-ref name="get" scoped="" ref="0x413bedb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bee98"/>
        <function-ref name="set" scoped="" ref="0x413bd010"/>
        <function-ref name="clr" scoped="" ref="0x413bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerStabalizingTimer" ref="0x413b8bd8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x413b8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414006d8"/>
        <function-ref name="fired" scoped="" ref="0x413b7970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41400098"/>
        <function-ref name="isOneShot" scoped="" ref="0x413b7e20"/>
        <function-ref name="getdt" scoped="" ref="0x41400b88"/>
        <function-ref name="gett0" scoped="" ref="0x41400930"/>
        <function-ref name="isRunning" scoped="" ref="0x413b7bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413b7218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414003b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x413b7498"/>
        <function-ref name="stop" scoped="" ref="0x413b7718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413d4330" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413d4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413d4508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation50" ref="0x413d4d70" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x413d4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413be010"/>
        <function-ref name="isInput" scoped="" ref="0x413be0f0"/>
        <function-ref name="toggle" scoped="" ref="0x413be1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413be2b0"/>
        <function-ref name="get" scoped="" ref="0x413be390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413be470"/>
        <function-ref name="set" scoped="" ref="0x413be550"/>
        <function-ref name="clr" scoped="" ref="0x413be630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBooster" ref="0x413bdd80" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x413bdd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bb010"/>
        <function-ref name="isInput" scoped="" ref="0x413bb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x413bb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413bb2b0"/>
        <function-ref name="get" scoped="" ref="0x413bb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bb470"/>
        <function-ref name="set" scoped="" ref="0x413bb550"/>
        <function-ref name="clr" scoped="" ref="0x413bb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x413b8340" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x413b8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413b8518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413b85f8"/>
        <function-ref name="request" scoped="" ref="0x413b86d8"/>
        <function-ref name="granted" scoped="" ref="0x413b87b8"/>
        <function-ref name="isOwner" scoped="" ref="0x413b8898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x41400ef0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x41400ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413fe0e0"/>
        <function-ref name="stopDone" scoped="" ref="0x413fe1c0"/>
        <function-ref name="start" scoped="" ref="0x413fe2a0"/>
        <function-ref name="stop" scoped="" ref="0x413fe380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Amplifier" ref="0x413bb850" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x413bb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bba28"/>
        <function-ref name="isInput" scoped="" ref="0x413bbb08"/>
        <function-ref name="toggle" scoped="" ref="0x413bbbe8"/>
        <function-ref name="isOutput" scoped="" ref="0x413bbcc8"/>
        <function-ref name="get" scoped="" ref="0x413bbda8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bbe88"/>
        <function-ref name="set" scoped="" ref="0x413ba010"/>
        <function-ref name="clr" scoped="" ref="0x413ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413ba3a8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413ba3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ba9f0"/>
        <function-ref name="writeDone" scoped="" ref="0x413b9c88"/>
        <function-ref name="write" scoped="" ref="0x413b9048"/>
        <function-ref name="readDone" scoped="" ref="0x413b9668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413fd030" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413fd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413fd208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413fd2e8"/>
        <function-ref name="request" scoped="" ref="0x413fd3c8"/>
        <function-ref name="granted" scoped="" ref="0x413fd4a8"/>
        <function-ref name="isOwner" scoped="" ref="0x413fd588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413fd778" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413fd778"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413fddc0"/>
        <function-ref name="writeDone" scoped="" ref="0x413fb068"/>
        <function-ref name="write" scoped="" ref="0x413fc400"/>
        <function-ref name="readDone" scoped="" ref="0x413fca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x413fa1e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300IBADCC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413fa1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413f8d58"/>
        <function-ref name="fired" scoped="" ref="0x413f8010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x413f8718"/>
        <function-ref name="isOneShot" scoped="" ref="0x413f84c0"/>
        <function-ref name="getdt" scoped="" ref="0x413f7268"/>
        <function-ref name="gett0" scoped="" ref="0x413f7010"/>
        <function-ref name="isRunning" scoped="" ref="0x413f8268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413fa810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x413f8a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x413faa90"/>
        <function-ref name="stop" scoped="" ref="0x413fad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413f33c8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413f33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413f35a0"/>
        <function-ref name="stopDone" scoped="" ref="0x413f3680"/>
        <function-ref name="start" scoped="" ref="0x413f3760"/>
        <function-ref name="stop" scoped="" ref="0x413f3840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x413f1010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x413f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f11e8"/>
        <function-ref name="isInput" scoped="" ref="0x413f12c8"/>
        <function-ref name="toggle" scoped="" ref="0x413f13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413f1488"/>
        <function-ref name="get" scoped="" ref="0x413f1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f1648"/>
        <function-ref name="set" scoped="" ref="0x413f1728"/>
        <function-ref name="clr" scoped="" ref="0x413f1808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x413f2500" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x413f2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f26d8"/>
        <function-ref name="isInput" scoped="" ref="0x413f27b8"/>
        <function-ref name="toggle" scoped="" ref="0x413f2898"/>
        <function-ref name="isOutput" scoped="" ref="0x413f2978"/>
        <function-ref name="get" scoped="" ref="0x413f2a58"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f2b38"/>
        <function-ref name="set" scoped="" ref="0x413f2c18"/>
        <function-ref name="clr" scoped="" ref="0x413f2cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413f3010" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413f31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x413f3a90" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x413f3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f3c68"/>
        <function-ref name="isInput" scoped="" ref="0x413f3d48"/>
        <function-ref name="toggle" scoped="" ref="0x413f3e28"/>
        <function-ref name="isOutput" scoped="" ref="0x413f3f08"/>
        <function-ref name="get" scoped="" ref="0x413f2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f20f0"/>
        <function-ref name="set" scoped="" ref="0x413f21d0"/>
        <function-ref name="clr" scoped="" ref="0x413f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x413f1a78" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x413f1a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f1c50"/>
        <function-ref name="isInput" scoped="" ref="0x413f1d30"/>
        <function-ref name="toggle" scoped="" ref="0x413f1e10"/>
        <function-ref name="isOutput" scoped="" ref="0x413f1ef0"/>
        <function-ref name="get" scoped="" ref="0x413f0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f00f0"/>
        <function-ref name="set" scoped="" ref="0x413f01d0"/>
        <function-ref name="clr" scoped="" ref="0x413f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x413ef998" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413ef998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413efb70"/>
        <function-ref name="stopDone" scoped="" ref="0x413efc50"/>
        <function-ref name="start" scoped="" ref="0x413efd30"/>
        <function-ref name="stop" scoped="" ref="0x413efe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x413f0f00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x413f0f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ef0f0"/>
        <function-ref name="isInput" scoped="" ref="0x413ef1d0"/>
        <function-ref name="toggle" scoped="" ref="0x413ef2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ef390"/>
        <function-ref name="get" scoped="" ref="0x413ef470"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ef550"/>
        <function-ref name="set" scoped="" ref="0x413ef630"/>
        <function-ref name="clr" scoped="" ref="0x413ef710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x413f04f0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x413f04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f06c8"/>
        <function-ref name="isInput" scoped="" ref="0x413f07a8"/>
        <function-ref name="toggle" scoped="" ref="0x413f0888"/>
        <function-ref name="isOutput" scoped="" ref="0x413f0968"/>
        <function-ref name="get" scoped="" ref="0x413f0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f0b28"/>
        <function-ref name="set" scoped="" ref="0x413f0c08"/>
        <function-ref name="clr" scoped="" ref="0x413f0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x4141f988" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x4141f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4141fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4141e350" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4141e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4141e528"/>
        <function-ref name="high" scoped="" ref="0x4141e608"/>
        <function-ref name="Toggle" scoped="" ref="0x4141e6e8"/>
        <function-ref name="read" scoped="" ref="0x4141e7c8"/>
        <function-ref name="setParam" scoped="" ref="0x4141e8a8"/>
        <function-ref name="readDone" scoped="" ref="0x4141e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x4141fce0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x4141fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4141feb8"/>
        <function-ref name="stopDone" scoped="" ref="0x4141e010"/>
        <function-ref name="start" scoped="" ref="0x4141e0f0"/>
        <function-ref name="stop" scoped="" ref="0x4141e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x4141ce10" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x4141ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41419010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41419900" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41419900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41419ad8"/>
        <function-ref name="high" scoped="" ref="0x41419bb8"/>
        <function-ref name="Toggle" scoped="" ref="0x41419c98"/>
        <function-ref name="read" scoped="" ref="0x41419d78"/>
        <function-ref name="setParam" scoped="" ref="0x41419e58"/>
        <function-ref name="readDone" scoped="" ref="0x41418010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x414192a0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x414192a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41419478"/>
        <function-ref name="stopDone" scoped="" ref="0x41419558"/>
        <function-ref name="start" scoped="" ref="0x41419638"/>
        <function-ref name="stop" scoped="" ref="0x41419718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x41413128" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41413128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41413878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x41410010" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41410010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414101e8"/>
        <function-ref name="fired" scoped="" ref="0x414102c8"/>
        <function-ref name="disable" scoped="" ref="0x414103a8"/>
        <function-ref name="edge" scoped="" ref="0x41410488"/>
        <function-ref name="enable" scoped="" ref="0x41410568"/>
        <function-ref name="getValue" scoped="" ref="0x41410648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="count_ready" ref="0x41402c28" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="count_ready" scoped="" ref="0x41402c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41402e00"/>
        <function-ref name="runTask" scoped="" ref="0x41402ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x41418c78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x41418c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41418e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41415730" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41415730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41415908"/>
        <function-ref name="high" scoped="" ref="0x414159e8"/>
        <function-ref name="Toggle" scoped="" ref="0x41415ac8"/>
        <function-ref name="read" scoped="" ref="0x41415ba8"/>
        <function-ref name="setParam" scoped="" ref="0x41415c88"/>
        <function-ref name="readDone" scoped="" ref="0x41415d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x414150f0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x414150f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414152c8"/>
        <function-ref name="stopDone" scoped="" ref="0x414153a8"/>
        <function-ref name="start" scoped="" ref="0x41415488"/>
        <function-ref name="stop" scoped="" ref="0x41415568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41414308" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41414308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414144e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414145c0"/>
        <function-ref name="led1On" scoped="" ref="0x414146a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41414780"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41414860"/>
        <function-ref name="get" scoped="" ref="0x41414940"/>
        <function-ref name="led1Off" scoped="" ref="0x41414a20"/>
        <function-ref name="led2Off" scoped="" ref="0x41414da0"/>
        <function-ref name="set" scoped="" ref="0x41414b00"/>
        <function-ref name="led0On" scoped="" ref="0x41414be0"/>
        <function-ref name="led2On" scoped="" ref="0x41414cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x41413b70" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x41413b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41413d48"/>
        <function-ref name="isInput" scoped="" ref="0x41413e28"/>
        <function-ref name="toggle" scoped="" ref="0x41413f08"/>
        <function-ref name="isOutput" scoped="" ref="0x41411010"/>
        <function-ref name="get" scoped="" ref="0x414110f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414111d0"/>
        <function-ref name="set" scoped="" ref="0x414112b0"/>
        <function-ref name="clr" scoped="" ref="0x41411390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x41411588" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x41411588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41411760"/>
        <function-ref name="isInput" scoped="" ref="0x41411840"/>
        <function-ref name="toggle" scoped="" ref="0x41411920"/>
        <function-ref name="isOutput" scoped="" ref="0x41411a00"/>
        <function-ref name="get" scoped="" ref="0x41411ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x41411bc0"/>
        <function-ref name="set" scoped="" ref="0x41411ca0"/>
        <function-ref name="clr" scoped="" ref="0x41411d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x41445010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x41445010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414451e8"/>
        <function-ref name="isInput" scoped="" ref="0x414452c8"/>
        <function-ref name="toggle" scoped="" ref="0x414453a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41445488"/>
        <function-ref name="get" scoped="" ref="0x41445568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41445648"/>
        <function-ref name="set" scoped="" ref="0x41445728"/>
        <function-ref name="clr" scoped="" ref="0x41445808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x41445a00" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x41445a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41445bd8"/>
        <function-ref name="isInput" scoped="" ref="0x41445cb8"/>
        <function-ref name="toggle" scoped="" ref="0x41445d98"/>
        <function-ref name="isOutput" scoped="" ref="0x41445e78"/>
        <function-ref name="get" scoped="" ref="0x41444010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414440f0"/>
        <function-ref name="set" scoped="" ref="0x414441d0"/>
        <function-ref name="clr" scoped="" ref="0x414442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x41444528" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41444528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41444700"/>
        <function-ref name="fired" scoped="" ref="0x414447e0"/>
        <function-ref name="disable" scoped="" ref="0x414448c0"/>
        <function-ref name="edge" scoped="" ref="0x414449a0"/>
        <function-ref name="enable" scoped="" ref="0x41444a80"/>
        <function-ref name="getValue" scoped="" ref="0x41444b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41443b10" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41443b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41443ce8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41443dc8"/>
        <function-ref name="request" scoped="" ref="0x41443ea8"/>
        <function-ref name="granted" scoped="" ref="0x41442010"/>
        <function-ref name="isOwner" scoped="" ref="0x414420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x414422e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x414422e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41279450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412795b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41442928"/>
        <function-ref name="writeDone" scoped="" ref="0x41441c50"/>
        <function-ref name="write" scoped="" ref="0x41441010"/>
        <function-ref name="readDone" scoped="" ref="0x41441630"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40381a70" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4037de18" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40382508" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403823b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4037fb50" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403841c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40384068" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40384888" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40384730" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40384de0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403953e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403957c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40390b70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40394010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40395010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40395ba0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40390430" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403907c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402e88b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402eb1c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402e8cf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f2138" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f2650" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4035d418" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4036a010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40321798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40366a50" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataQueueManage" loc="3:DataQueueManage.nc">
      <function command="" provided="0" name="addToQueue" ref="0x404a5a10" loc="5:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x404a5710" loc="5:DataQueueManage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable ref="0x404a58b0" loc="5:DataQueueManage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="addLocalDataToQueue" ref="0x404a5e20" loc="7:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404ac908" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ac7b0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404ab730" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ab5d8" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404ac0c8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404ace18" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405070c0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405070c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405075a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404e6ec0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404e6ec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404f0630" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404f2490" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404f1610" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404f12c8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404f14b0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404f2de0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404ef010" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404f0a78" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404f2920" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404e7540" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e73e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404f0010" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404f1cb0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404f1e98" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404e7bd8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e7a80" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404f20c8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4050c5e0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4050c138" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404adb18" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404ad5b8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404ad7d0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ad9b0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404eca88" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ec728" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ec908" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404ec1c8" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404dfb80" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404dfa28" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404eb898" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404eb540" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404eb738" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4050b010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4050b010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4050b660" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4050b010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4050b508" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4050b010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMASchedule" loc="3:TDMASchedule.nc">
      <function command="" provided="0" name="allocChildTimeSlot" ref="0x4050f6d8" loc="21:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x4050f318" loc="21:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="local" ref="0x4050f578" loc="21:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPPB" ref="0x405047e8" loc="7:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gparent" ref="0x40504690" loc="7:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="radioWakeup" ref="0x4050fe38" loc="23:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x4050fac0" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="node_id" ref="0x4050fcd8" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBeaconTimeStamp" ref="0x40502890" loc="17:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timestamp" ref="0x40502738" loc="17:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTDMASlot" ref="0x40502e18" loc="19:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tslot" ref="0x40502cc0" loc="19:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPPB" ref="0x405041f0" loc="5:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Index" ref="0x404fbc30" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ppb" ref="0x404fbe78" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40504088" loc="5:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stopTimers" ref="0x40503010" loc="11:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTimeStamp" ref="0x405022c8" loc="15:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x40503c90" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="bmsg" ref="0x40503ee8" loc="15:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timestamp" ref="0x40502160" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTimers" ref="0x40504bf0" loc="9:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTableEntry" ref="0x405037f0" loc="13:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x40503490" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40503690" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40516520" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40516968" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40516de8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405146a0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40513458" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40513900" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40514258" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40512058" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40513ee8" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405160f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40514b20" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40513010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404e9690" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e9148" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404e9328" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e9508" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <function command="" provided="0" name="group" ref="0x404e4c50" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e4af8" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404db560" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404db408" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404dd4a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404ddb38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404dd9e0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404dae58" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404daaf0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404dacf8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404da170" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404dbde0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404da010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404e55f0" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e5498" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404e4170" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e5df8" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404e4010" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404d9a90" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d9938" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404e28e8" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e2588" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404e2788" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404e31a8" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40575168" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40575010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40575b38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405759e0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40584af0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584790" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40584970" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405841a8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405837e8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405834a8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40583688" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40576870" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40576870"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405769d8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405769d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4058abd8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405769d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058aa80" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40588698" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40588540" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4058a088" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576f08" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40589170" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405769d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40588de8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40589010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405769d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4057f2e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057f188" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4057fdd8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057fc80" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4057e950" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057e7f8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x405a4550" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a43f8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x40595458" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40595300" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x405965d8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40596480" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x4059ced8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x4059cd80" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40596bd0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40596a78" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x40595d08" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40595bb0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405a3e90" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405a3b18" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405a3d30" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x4059b438" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059b0e0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x4059b2d8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x4059bac0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059b968" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x4058ebf0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4058ea98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x4059a1c0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059a068" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x405a1210" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x4059d810" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059d6b8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x4059ea30" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x4059e8d8" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x405a1e78" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x405a0720" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a0358" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x405a05c0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x405a1820" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405a16c8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x4059fd08" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f978" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x4059fba8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x4059e240" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x4059e0e8" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x4059f1c0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f068" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x40599bd0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40599a78" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405aade8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aac90" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405ab1e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40598e20" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x405ab088" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x405aa498" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aa340" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405abdc0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aba28" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x405abc60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405a7738" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a75e0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4058d940" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058d7e8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405b2c90" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2950" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b2b30" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405bfa18" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bf6b8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405bf898" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405bf158" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405afb38" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405af9e0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405be820" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405be4c8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405be6c0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x405c6c28" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x405c68c0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x405c6ac8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x405c7ef0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x405c7910" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x405c7520" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x405c77b0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x405b8168" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405b8010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x405c6440" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x405b75e8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x405b7490" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x405b8b00" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x405b89a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x405c5720" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x405c7010" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x405b7e80" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x405c51d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x405b7010" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x405b0ac0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x405b8578" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x405b7a28" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x405c3728" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x405c1010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x405c3b98" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x405c3238" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x405bdec0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x405c30d8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x405ba2c8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x404a1e40"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x404a8e30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ba130" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x405bad58" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x404b4560"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x404b34a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405babc0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40617448" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40617100" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x406172e8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40615010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x40614720" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40615f08" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x406143d8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406145b8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40615a18" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x406156c0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x406158b8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x40617a98" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x40617940" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4060fb60" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40618038" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x4061b510" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x4061a7f0" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x4061a388" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x40610688" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x4061b038" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x4061ba28" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x4061bee8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x40610b90" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4060ec40" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4060e320" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40611cd0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4060e7d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4060c5f0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x40620738" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x406218a8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x406202d0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x40620178" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x40621cc0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x40625da0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40625c48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x40621420" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x406212c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40656b88" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40656b88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40653070" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40653820" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40656b88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x406534f0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x406536c0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40656b88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x406651c0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40665068" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40665858" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40665700" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4064e870" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4064e870"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4064e9d8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4065dc88" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4065f960" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4065d640" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4065d2f0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          </variable>
          <variable name="dt" ref="0x4065d4e0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4065fdd0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4065c138" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4065f020" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4064eeb0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064e9d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4065f500" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x406645e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40668298" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40658a30" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40658f08" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40668130" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40667098" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40668840" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40668d18" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40668f18" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4066a358" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40659eb8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40659aa8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40659540" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406ca940" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x406cb340" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406cb1e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406cbe20" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x406d0c48" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406ca488" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406ca330" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406c9010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406cadf8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x406cd678" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x406cd1a8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x406cdcc0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406cdb68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x406cb960" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406cb808" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406de180" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406de180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406dbc48" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406dbaf0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406db260" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406de678" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406de180"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406dd1e0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406de180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406dd088" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406de180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406dd620" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406db6c0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406debf0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406de180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406dea98" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406de180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406dda28" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406dde20" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406d7158" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d7158"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406d5090" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406d6038" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406d7650" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d7158"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d6440" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406d54f0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406d7bd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d7158"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406d7a80" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d7158"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d6848" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d6c40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406c4d28" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c4d28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x406d24f0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406d3c38" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406be230" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c4d28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406d2a80" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406d2928" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406d2f10" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d3010" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406bebd8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406d20c8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406be7a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c4d28"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406be650" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c4d28"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d3418" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d3810" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406e4850" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406e1e20" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406e1368" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406e1970" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406e1818" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406e0480" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406e0328" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406e4e70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406e4d18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406f1010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406f14e0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406f2bc8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406f19a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406f20f8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406f26e8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406f2590" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407a5dc8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407a5dc8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407ba010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ba010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x407ba4f8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ba010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407baf20" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407baa20" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407b8360" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40800e30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40815840" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x408153f8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408152a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40800928" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4081b138" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4081a070" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4081ed10" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4081bb98" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4081ba40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4081e908" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4081b588" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40827778" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x4087d428" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087d0c8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087d2c8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4087bb40" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087b5e0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087b7e0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4087b9d8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4087cd98" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087ca38" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087cc38" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x4087f818" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087f4b8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087f6b8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4087c1f0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087dc70" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087de70" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4087c088" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40874dc0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x408712d0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x408717b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408a2768" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x408a21f8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x408a2410" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a2600" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4089fda8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4089f628" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4089f840" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4089fa30" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4089fc38" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x408a3378" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x408a3220" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408f78e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408f1070" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408f3158" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408f1658" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408f1500" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408f7498" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408f2168" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408f2010" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408f4370" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408f4218" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408f61a8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x4090c738" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x4090c5e0" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408f47c8" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408ef010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408f1e88" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x408ef898" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408f2bf8" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408f2aa0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x4090c1a8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408f36e8" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408f3590" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408f6740" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408f65e8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408f4d18" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408f4bc0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408f2618" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408f1a80" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408ef420" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x408efcf0" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408f3b20" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408f7d10" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408f6d08" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408f6bb0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409094e8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x409099e8" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40935070" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40935558" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4096ad30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40967328" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40965038" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40969b48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4095f940" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968318"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4095f7e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968318"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x409635d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40963c90" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968318"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40963b38" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968318"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4095f258" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40968318"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x409f51d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40a12a28" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a124a8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40a128c8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40a12010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40a16b50" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a169f8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40a1da70" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1d918" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40a1d168" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1d010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a1bc58" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1bb00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a1b370" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1b218" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40d093a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d09010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40d09240" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40d0b0c8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40d0b998" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d0b620" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40d0b838" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40cfa368" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40cffed8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40d059b8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40cfe698" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40cfd790" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cfd638" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40cfebc0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40cfe168" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cfe010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40cfdc98" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40cfd138" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40d04970" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40d03010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40d04360" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40d04208" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40d03748" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d035f0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40d068d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40d01168" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d01010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40d01800" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40d016a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40da38a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40da3558" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40da3748" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40d9fc28" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d9fad0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d9d480" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d9d130" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d9d320" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40d9f090" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40dcd370" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d9dda8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dcd010" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40dcd208" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40d9f618" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40da0730" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40da01e0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40da03d0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40da05c8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40dbb468" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40dbb310" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40dbbd00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40dbb998" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40dbbba0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40de04c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40de1c50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40ddfaa8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ddf950" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40ddf1a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40de13d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40de1818" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40de00c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40de08c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40de0dd0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40de0c78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40ddf578" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f3ccf0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f3ccf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40f71ed8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f3ccf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40f70db0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f3ccf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f70c58" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f3ccf0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40031740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x40031740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40f6e6c8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f3ccf0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40f6e570" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f71aa8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40f705a0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f3ccf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40f711a8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f715f0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f6fd78" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40f6aa10" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f6bc90" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40f6b248" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40f6a2b0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f6a158" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f6b758" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sample" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
      <function command="" provided="0" name="stop" ref="0x40ff8ed0" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40ff8d78" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_digital_output" ref="0x40ff97f8" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ff94a0" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x40ff9698" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSample" ref="0x40ff9010" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ffc778" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40ffc9a8" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40ffcbd0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="param" ref="0x40ffcdc8" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reTask" ref="0x40ff8980" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40ff85f8" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40ff8820" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ff62b0" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40ff81f0" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ff9c28" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40ff9e58" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40ff8088" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetParam" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="setParam" ref="0x41051e00" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <interfacedef-ref qname="SetParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x41051ca8" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ADConvert" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x41056a50" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Initiates an ADC conversion on a given port.</short>
          <long>&#10; Initiates an ADC conversion on a given port.&#10;&#10; @return SUCCESS if the ADC is free and available to accept the request&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41053088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41056ef0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Dio" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="low" ref="0x41048dd8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="high" ref="0x41048a20" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="Toggle" ref="0x410441c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x41048658" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParam" ref="0x41044768" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="modeToSet" ref="0x41044610" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41044ca0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41044b48" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x410d3dd8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x410d38e0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x410d02f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x410cd968" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x410cd968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x410cde38" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x410ca630" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x410cd968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410ca300" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x410ca4d0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x410cd968"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x410c07f0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x410c0010" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x410c0238" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x410c0460" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x410c0680" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x410bfb60" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410bf130" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x410bf320" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x410bf528" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x410bf780" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x410bf9e8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x410c3ac8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x410c32e8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x410c3510" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x410c3738" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x410c3958" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x410c2b20" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x410c2598" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410c2248" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x410c2438" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x410f28d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x410b8010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x410f1dc0" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x410f1c68" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x410f2d98" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x410b7a78" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x410b8628" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x410b84d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x410f32e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x410f1718" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x410f02a0" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x410b7e78" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x410f3b70" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x410f3740" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x410f2010" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x410f1270" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x410b7168" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x410b7010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x410f24d8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x410b8b10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x410b7618" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x410f09f0" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410f0898" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x41127668" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x41125070" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x41127138" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x41127b78" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x41125648" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x411624d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht15" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <short>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x41195c30" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x411958e0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x41195ad0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x41195408" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x41196678" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41199bc8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x41196188" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41196030" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x41196ec0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41196b70" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x41196d60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x4119b010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x411f5c70" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x41239880" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x41239880"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x412399e8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x412399e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x41236018" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x412399e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x41239ea8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x412399e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x412781a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x412781a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x41278e50" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41279818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x412786d0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41279818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x412788d0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41278ad0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41278ce0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x412734b0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41274ce8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x41274ee8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41273130" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41273340" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x412751d8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41279818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x41276a28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41279818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x41276c28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41276e28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41275068" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x412743b0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41275c20" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x41275e20" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41274030" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41274240" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x412cdc60" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x412eff08" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x412ed310" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x412edc40" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412edae8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x412efb28" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x412eb2a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x412e8568" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x412eb828" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x412eb6d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x412e72e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x412ef3a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x412ef248" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x412ecea8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x412ecd50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x412ebd00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x412ec070" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x412e9630" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x412ed718" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x412e8168" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412e8010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x412e8ee8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412e8d90" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x412e91c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x412ef730" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x412ec578" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412ec420" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x412e9bf0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412e9a98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x412e89b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x412ec960" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Power" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
      <function command="" provided="0" name="on" ref="0x4135ad18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x413570c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Switch" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function event="" provided="0" name="setDone" ref="0x41387010" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41389e48" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4138c878" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDone" ref="0x41389a90" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41389938" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x41389570" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41389418" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41389010" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x4138cc80" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x4138ce78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAllDone" ref="0x41387540" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x413873e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
