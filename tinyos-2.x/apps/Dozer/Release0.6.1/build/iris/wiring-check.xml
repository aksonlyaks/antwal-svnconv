<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="31:uAgriC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40f59090"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4039d780"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4039d780"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404922b8"/></to>
    </wire>
    <wire loc="32:uAgriC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x40f572c0"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x404bf6a8"/></to>
    </wire>
    <wire loc="35:DozerC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x404bf6a8"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x40525010"/></to>
    </wire>
    <wire loc="33:uAgriC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40f57670"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x404e32a0"/></to>
    </wire>
    <wire loc="106:DozerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x404e32a0"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40eb04b8"/></to>
    </wire>
    <wire loc="34:uAgriC.nc">
      <from><interface-ref name="CmdReceive" scoped="" ref="0x40f57b38"/></from>
      <to><interface-ref name="CmdReceive" scoped="" ref="0x404e4158"/></to>
    </wire>
    <wire loc="45:DozerC.nc">
      <from><interface-ref name="CmdReceive" scoped="" ref="0x404e4158"/></from>
      <to><interface-ref name="CmdReceive" scoped="" ref="0x40525418"/></to>
    </wire>
    <wire loc="35:uAgriC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f57e90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f2f788"/></to>
    </wire>
    <wire loc="38:uAgriC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40f59478"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40f2ec80"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40f2ec80"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40f78b90"/></to>
    </wire>
    <wire loc="39:uAgriC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40f598c0"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40f790f0"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40f790f0"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40fad010"/></to>
    </wire>
    <wire loc="40:uAgriC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40f52590"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40f796e8"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40f796e8"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40fad628"/></to>
    </wire>
    <wire loc="43:uAgriC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40f57090"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x40f78210"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40f78210"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x40fac158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417cddf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417ed7d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4176bd78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416c2c50"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40d0dca0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40d09760"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cbf730"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bcd7e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4163a070"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x409de670"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409cad50"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4079e970"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4093da08"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40933cb0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4090a010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40492650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4037aa30"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40492c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a684c0"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40492c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409de010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40492c18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403a1868"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403a1868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403a8c68"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40491030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a59c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410343b8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a59c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d8b860"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a59c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4075c860"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40480880"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403ac490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404804d0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ac088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b90e48"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ac088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403a46f8"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403a46f8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403b2690"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a4ac8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403a59c8"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403b5be8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403b9010"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403b9010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404056b0"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403af668"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403a4ac8"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403d82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404593b0"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403ca830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404204f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404204f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414c0010"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403cdea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042b030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d1228"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403d10a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41536c08"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403b84b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40404988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40404988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e2010"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403d3c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40430790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40430790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415397f8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403c18e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40409888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40409888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41452de8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403c40a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404134f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404134f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145fd70"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403c8750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414bb010"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403d5ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042ac88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042ac88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414cc0b0"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403bb120"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40407968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40407968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ecc08"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403bf750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404115d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404115d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4144ac08"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403c3ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145ac08"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403d0670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041ce48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414b6010"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403daea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042d7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41531a88"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403d63d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4045db68"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403cea98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40422d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40422d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d5de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404056b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e6a88"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403bd750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040f250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41445a88"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403d8ee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40456b68"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403c6c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40415228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40415228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41463938"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403c92f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40420e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40420e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414bf9e8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403cc8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042b988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042b988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d0c08"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403d1a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415346c0"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403b8ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40403330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40403330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e19e8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403c02f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40408250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40408250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4144d7f8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403c4a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40413e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40413e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145d7f8"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403c7210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ba9e8"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403d4750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404296b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404296b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414cba88"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403bbb18"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40406330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40406330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ea6c0"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403be210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40411f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40411f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414486c0"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403c28e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414586c0"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403d98e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042c170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4152f538"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403cbce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40417b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40417b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414c2538"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403cd4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404216b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404216b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d37f8"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403d2670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41537228"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403d6dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404653b0"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403b9a08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40404030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40404030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e4538"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403c6210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040fba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040fba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41443538"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403d3210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40431dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40431dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f0de8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403c5670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40415b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40415b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414613b0"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403c9ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041f7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041f7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414bd538"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403d52f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4042a330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4042a330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ce6c0"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403da4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4042ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4042ee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415320b0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403b1700"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40407010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40407010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ed228"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403c0ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40408ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40408ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4144b228"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403c34b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404127d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404127d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145b228"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403c7c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041c4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414b8538"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403d7900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4045f3b0"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403ce0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404223d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404223d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d6418"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403cb2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414560b0"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403ba590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40406c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40406c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413e70b0"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403bec88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40410890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40410890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414460b0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403792a8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40379f10"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402f3938"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4038de88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40808a30"/></to>
    </wire>
    <wire loc="35:DataManagerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40eb04b8"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40e9fd00"/></to>
    </wire>
    <wire loc="36:DozerC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404edde0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4059ccd8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4059ccd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c58c0"/></to>
    </wire>
    <wire loc="37:DozerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x404e79d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40598a00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405c3590"/></to>
    </wire>
    <wire loc="38:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404f77b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405c3c80"/></to>
    </wire>
    <wire loc="42:DozerC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404e2518"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b8e9e0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b8e9e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bcdb78"/></to>
    </wire>
    <wire loc="43:DozerC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x404f4418"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40da5730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40da5730"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b8bc88"/>
      <arguments>
        <value cst="I:50">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:DozerC.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x405072a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dcf1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dcf1e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:DozerC.nc">
      <from><interface-ref name="BeaconWaitTimer" scoped="" ref="0x40506638"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dcb0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dcb0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:DozerC.nc">
      <from><interface-ref name="ConnReqListenTimer" scoped="" ref="0x40504a10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dc9e80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dc9e80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:DozerC.nc">
      <from><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x4050fda8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dc5cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dc5cf0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x4050b1a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dc2c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dc2c68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x40517580"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dbeb48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dbeb48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:DozerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x40500868"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40db76a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40db76a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416a1518"/></to>
    </wire>
    <wire loc="64:DozerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x404f4010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e08a98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40e08a98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40598010"/>
      <arguments>
        <value cst="I:50">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4051e648"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40799470"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40799470"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40882970"/></to>
    </wire>
    <wire loc="69:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40523528"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409ca0f0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409ca0f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c6b40"/></to>
    </wire>
    <wire loc="70:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40522820"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4099f808"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4099f808"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x409c6280"/></to>
    </wire>
    <wire loc="71:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4052a298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7cbe0"/></to>
    </wire>
    <wire loc="75:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40518cb8"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40e02c58"/></to>
    </wire>
    <wire loc="83:DozerC.nc">
      <from><interface-ref name="PPBListenTimer0" scoped="" ref="0x40e300f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e99760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e99760"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:DozerC.nc">
      <from><interface-ref name="PPBListenTimer1" scoped="" ref="0x40e2e498"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e96670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e96670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:DozerC.nc">
      <from><interface-ref name="PPBListenTimer2" scoped="" ref="0x40e2b890"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e92458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e92458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:DozerC.nc">
      <from><interface-ref name="PPBListenTimer3" scoped="" ref="0x40e28c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e8f330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e8f330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:DozerC.nc">
      <from><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40e25010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e8b168"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e8b168"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:DozerC.nc">
      <from><interface-ref name="TDMASlotTimer" scoped="" ref="0x40e223d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e870a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e870a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40e1f768"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40799470"/></to>
    </wire>
    <wire loc="92:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40e31dc0"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x40525a08"/></to>
    </wire>
    <wire loc="93:DozerC.nc">
      <from><interface-ref name="SchedulerInit" scoped="" ref="0x40513010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e317c0"/></to>
    </wire>
    <wire loc="95:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40e1e040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409ca0f0"/></to>
    </wire>
    <wire loc="96:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40e1e620"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4099f808"/></to>
    </wire>
    <wire loc="97:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e1eeb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></to>
    </wire>
    <wire loc="108:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40eb2488"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40e02c58"/></to>
    </wire>
    <wire loc="109:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40eb0290"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x40525a08"/></to>
    </wire>
    <wire loc="111:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eb4528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire loc="112:DozerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e83d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire loc="115:DozerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40eb3968"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f0b258"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f0b258"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41709b28"/></to>
    </wire>
    <wire loc="119:DozerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40eb3208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f085c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f085c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41735d08"/></to>
    </wire>
    <wire loc="120:DozerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40eb20f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f3c540"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f3c540"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40598010"/>
      <arguments>
        <value cst="I:51">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:TreeP.nc">
      <from><interface-ref name="send_beacon" scoped="" ref="0x40526e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="394:TreeP.nc">
      <from><interface-ref name="sendReply" scoped="" ref="0x405627b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="382:TreeP.nc">
      <from><interface-ref name="sendRequest" scoped="" ref="0x40564220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405c58c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408dc600"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a4ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405da3a0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405da3a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40655b30"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40599630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405c41b0"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405c41b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4089c6b0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405986a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405c3238"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405c3238"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408b0798"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405c3590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405d61f0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405aa500"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405d2010"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405d2010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408e8628"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40598010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405c4b70"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405c4b70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b0100"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a0308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c1a10"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c1a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406385b0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405c3c80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405d68e0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x405b64a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ca9b0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ca9b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40642178"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408dc600"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408f7db8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405cc4d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406484d8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406484d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4065f390"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405d61f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4064f350"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405cd0f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x406490f0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406490f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4064c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408e8628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408eadd8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40642178"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40659100"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405cece0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40638ca0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40638ca0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4064fc00"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406385b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40652de0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405d68e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40692288"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40655b30"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40658af8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40600978"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40650470"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40650470"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x406a5480"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405ff7d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405d61f0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4060e978"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4087ce68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408ae510"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405ee418"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408af750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40692288"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40692288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406a1288"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408a9b98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b4460"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408b4460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b2720"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408af3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b4b40"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408b4b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b2e00"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408b3660"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408f2cd8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408f2cd8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40933170"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408b3dc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e8310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408e8310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408f6ac8"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40936640"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405ebde0"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40938950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408dcbb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408dcbb8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408f6410"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408f7db8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408f4a70"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408f4a70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408ef930"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408f6410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408f1090"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408f1090"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4090a358"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408f6ac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f1770"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408f1770"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4090aa38"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408f0c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405d61f0"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408f0290"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409601f0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409601f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4095d770"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408f07e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40938470"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40938470"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40933888"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408f1b40"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40960ba8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40960ba8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4095a1b8"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40936168"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40960748"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40960748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4095dcc8"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4095e6d0"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405e5978"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4095f428"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a41f8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a41f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a23d8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4095fa08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a4750"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a4750"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a2930"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x4095fee0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409e5890"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409e5890"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409de9f0"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409a3788"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405f3278"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a4c60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a5278"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a5278"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409bc808"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a3258"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a57d0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a57d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409bcd60"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409bd840"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405dc6e0"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a5ce0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409eb708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409eb708"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x409eae48"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409bd338"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409e2568"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409e2568"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409dd708"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409e7c40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405eee40"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x409eae48"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409e2010"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409e2010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409dd1b0"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409e9788"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409e29b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409e29b8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409ddb58"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x409e2e50"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x405e11a8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0x406478a8"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0x4065e800"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40645c90"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4065cbc8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40669310"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40650470"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40667330"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40694d30"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40694d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x407903d0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40667d68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406e1a68"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x406e1a68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40799470"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4069d860"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406e0060"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40790d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406ea490"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407726f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fcd08"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406fcd08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4075e470"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40768630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407071b8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407071b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4070bad0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40701c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4071cdb0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40712a28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4071bb28"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4070c628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40719a80"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4070c628"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407166a0"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4070c628"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40714340"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4075cc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407071b8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4079b158"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4085aea8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4079e970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40797b10"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40797b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407a3d88"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4086a220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4083c0a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40842398"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x407a7390"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x407a7390"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40825270"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40881360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x407ac010"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x407ac010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40824cd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40824cd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41594010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x407a3d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415970a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40825270"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415974d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x415931e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e3128"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407e3128"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407f30e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x415e33f0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407fa408"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407fa408"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407f13b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x415e3dd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407faf28"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407faf28"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407f1ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x415e1830"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407f8ad0"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407f8ad0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40808e90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40840d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x408834b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4087ce68"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40892b60"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408799c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a5d030"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4088f470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408799c8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40889740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40891b18"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40895e28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408b3010"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408cd970"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408b3660"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408cc130"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408b3dc8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x408cc4d0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40650470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408f9150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408f7920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x408fa150"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408f98d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408f9568"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408f6e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408facc0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x408f7508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408fa7e8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x408f7010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4090ae08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408f1b40"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40909518"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40891b18"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40909b30"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408f0290"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409080e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408f07e8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40908518"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408f0c20"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40902430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x408fdae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40926e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4092d9c8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40935de8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40935de8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4093dda0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4092ba00"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4093e848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4093e848"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4093a860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409320c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40938950"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40932868"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40936168"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40932ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40936640"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409594b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4095f428"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40959a98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4095fa08"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40978010"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4095fee0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4095a970"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4095e6d0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40978808"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40997918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40997918"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40975a70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40935de8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409741f8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4098a850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4098a850"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4093a860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409747f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40891b18"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0x4097aa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4079b158"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a2e40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409a4c60"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4099d540"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409a3788"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4099e458"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409a3258"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4099e8b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4087ce68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4099d010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409ca0f0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x40999508"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4099f2e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409cad50"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409db348"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409a5ce0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409db928"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409bd338"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409da580"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409bd840"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409dbd88"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4087ce68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x409be5b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409e9c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409ea010"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409e9788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409eb070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409ea790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x409beb68"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409e7250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409ec548"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408eadd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409ea428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409e7c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409ebbe0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x409e9370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x409ec230"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409e7908"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x40a09c98"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x409e2e50"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x409f7bb0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40638ca0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409ee010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x406490f0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409ed390"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406484d8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0e800"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40645c90"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a0cbe0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40642178"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a093d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40694d30"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a08c18"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4087ce68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a5d030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b49820"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409dc090"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x409dfe90"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409dfe90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c18e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409fab30"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a608c8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a608c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a96920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409fdb68"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a5f010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a5f010"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a5ad78"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x409f52f0"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a5c9c0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x40a5c9c0"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a68830"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409f5a48"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a5f3e8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a5f3e8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403c6210"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409f84a0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a5fdd0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a5fdd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403b84b0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409f1650"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a5e820"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a5e820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a69d70"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a085f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40891b18"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409f7010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b4dcb0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a5ad78"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a9cda0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b49820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41624db0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a8c010"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403c7c08"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a8ca10"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403c8750"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a67138"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40712a28"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a961d0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a951b0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a5a9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a9ca40"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a96920"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a958e0"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a928c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b0e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b0e010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x416393d8"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40aabf08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b0eb58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b0eb58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41639f20"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40aadbc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a97b40"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a97b40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40acdf18"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40aaa398"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40ac11e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40aea598"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40ac6d00"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c18e0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40ac8730"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403c02f0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40ac7128"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403c0ce8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40ac7b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403bf750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b0e750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41639b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x416383f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b27030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41638820"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4163a3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41638e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x416227b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407071b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4161fa60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4070c628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b90e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b7c898"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40b79940"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40b92010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40b92010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403bbb18"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40b783c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40b92a18"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40b92a18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403bb120"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40b78da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40b904c0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40b904c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403b1700"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bcdb78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bdeb88"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b8b2c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40bafa10"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40b8a010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40bd0150"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b8bc88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bae1e8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bb13f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd07e8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b8a700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40bae510"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bcd7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bde7f0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bc8660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bb1928"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bd0d10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bcaa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bcf410"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bca458"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40bc8158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40dad930"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bcaa60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c8b108"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bca458"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c8cd10"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40c8b898"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40bc8158"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bdc040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc8660"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c8a8c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc8660"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ca8978"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc8660"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c8bd80"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c00430"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40c8a310"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40c03348"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40bfd790"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40c88d40"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40bfbd38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cb3620"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cb3620"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cc6338"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40ca80f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40cb3aa0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40cb3aa0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40cc6c28"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40c208b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40c15300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40c226a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40c1e550"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40c89510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40c89948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40cc48f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40cc67a8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40cc67a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40cbfe80"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40cc6c28"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40cbe2b0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cc6338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cbfa68"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40cc26f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40cc3878"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40cc3878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d2ce68"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40cf30a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40cc26f0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40cbeb48"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40ce3918"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40ce3918"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40d0a110"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40cf4010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40ce3e28"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40ce3e28"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40d0a640"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40cf4448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40ce2370"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40ce2370"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40d0ab58"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40d0fa18"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40d08628"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40d0f010"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40d09bb0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40d0f520"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40d08110"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40d07208"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5268"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40d07948"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40db00e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d2a3c0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d2a3c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d8de40"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40db6050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d29d20"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d29d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d4b438"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40d53090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40d48770"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40d53d80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40d47508"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d51f20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40d44450"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d51f20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40d420b8"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d51f20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40d40cb0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d8bc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d29d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40da5a48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b8a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40da4150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b8a700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40db7d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e0b3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40e0a010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a0308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x416a1be0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ddac08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416a0310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ddac08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dd5be0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e113d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40599630"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e11a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e10690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40e10d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40e0f270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e08db0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e044d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire loc="37:DataManagerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40eb0db8"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40eb2488"/></to>
    </wire>
    <wire loc="38:DataManagerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40eadbe8"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x40eb0290"/></to>
    </wire>
    <wire loc="40:DataManagerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40eadd98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e83d88"/></to>
    </wire>
    <wire loc="41:DataManagerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eac528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40eb4528"/></to>
    </wire>
    <wire loc="42:DataManagerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40eab208"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x40eb3208"/></to>
    </wire>
    <wire loc="43:DataManagerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40eab968"/></from>
      <to><interface-ref name="SerialSend" scoped="" ref="0x40eb3968"/></to>
    </wire>
    <wire loc="44:DataManagerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40eaa0f0"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x40eb20f0"/></to>
    </wire>
    <wire loc="46:DataManagerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e9f060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></to>
    </wire>
    <wire loc="51:DataManagerC.nc">
      <from><interface-ref name="DataMessagePool" scoped="" ref="0x40e9eaf0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40edb5b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40edb5b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416c1010"/></to>
    </wire>
    <wire loc="52:DataManagerC.nc">
      <from><interface-ref name="DataQueue" scoped="" ref="0x40ea5858"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40ef90f0"/></to>
    </wire>
    <wire loc="156:DataManagerP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40ec02a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:DataManagerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40ec2658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:DataManagerP.nc">
      <from><interface-ref name="sendAvailableData" scoped="" ref="0x40e9d690"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f0b8f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b8a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f0a010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b8a700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f0ac08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bb13f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41705260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f16e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417058f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b8a700"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f16e70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f12558"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f12cc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b8b2c8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f103f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b8a700"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f0f010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b8a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40f0f6e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40f0fb20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f08c58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f07310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f07f08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a0308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41732420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ddac08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41732ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f3c858"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40598a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f3cef0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerTimer" scoped="" ref="0x40fab0b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4101c448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4101c448"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fac318"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Battery" scoped="" ref="0x40f9a6b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41017a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41017a60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4171c168"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="TempHumControl" scoped="" ref="0x40f9c428"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411e2c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x411e2c38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41128d50"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x40f9cb48"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x411e1300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x411e1300"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x41798908"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Hum" scoped="" ref="0x40f9b868"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x411e1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x411e1f28"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x41797968"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioInit" scoped="" ref="0x40f98490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411de330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x411de330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411db980"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioControl" scoped="" ref="0x40f988b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411de668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x411de668"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411dbd38"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio0" scoped="" ref="0x40f94cc0"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411decd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio1" scoped="" ref="0x40f97540"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411decd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio2" scoped="" ref="0x40f97d28"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411decd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio3" scoped="" ref="0x40f96540"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411decd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio4" scoped="" ref="0x40f96d28"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411decd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio5" scoped="" ref="0x40fcc540"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411decd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCinit" scoped="" ref="0x40fa8338"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412ecb50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x412ecb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412e9b38"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCcontrol" scoped="" ref="0x40fa8770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412ece68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x412ece68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412e9ed0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x40fa5c68"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x40fa7128"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x40fa75d0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x40fa7a78"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x40fa7f20"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x40fa6460"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x40fa6908"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x40fa6db0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC8" scoped="" ref="0x40fa42e0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC9" scoped="" ref="0x40fa4788"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC10" scoped="" ref="0x40fa4c38"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC11" scoped="" ref="0x40fa3118"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC12" scoped="" ref="0x40fa35c8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC13" scoped="" ref="0x40fa3a78"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam0" scoped="" ref="0x40fa2880"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam1" scoped="" ref="0x40fa2c70"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam2" scoped="" ref="0x40fa1090"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam3" scoped="" ref="0x40fa1580"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam4" scoped="" ref="0x40fa1970"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam5" scoped="" ref="0x40fa1d60"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam6" scoped="" ref="0x40f9f228"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam7" scoped="" ref="0x40f9f618"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam8" scoped="" ref="0x40f9fa08"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam9" scoped="" ref="0x40f9fdf8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam10" scoped="" ref="0x40f9e230"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam11" scoped="" ref="0x40f9e628"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam12" scoped="" ref="0x40f9ea20"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam13" scoped="" ref="0x40f9ee18"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413b0968"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x40fccd88"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x413a7d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterInit" scoped="" ref="0x413a7d00"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x413a2330"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x40fcb578"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x413a6080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterControl" scoped="" ref="0x413a6080"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x413a2798"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40fcbbb8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x413a6678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x413a6678"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x413a2df8"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x40fca670"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x413a6e58"/></to>
    </wire>
    <wire>
      <from><function-ref name="Plugged" scoped="" ref="0x413a6e58"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x413a1850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x4171c168"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410106f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4171ccf0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41114ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4100ab30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4171ccf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410093c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4103f3c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4103d6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4171a230"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x410106f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410dbe78"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x41008b90"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x410c1978"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410da7d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410093c0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410c0eb0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4100ab30"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x410e9ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410c4970"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410c0638"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4103bd38"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4103bd38"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41034bf8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41038ec0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41033200"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4103f3c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410d70c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410d70c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417672e8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410d67c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4103d6c8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x4102aa78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41048010"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x41048010"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41047ce8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x41032ea8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5268"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x410d4118"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x41034768"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d4828"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d7c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d7c10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41767e30"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x410431f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x410d7808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41767a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410d6310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41766510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417669d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410d67c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41766df8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41768170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41764030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x4174a3b0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x410d4118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x4174a7a8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x410d4510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4174aac0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d4828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41748230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410d4ec0"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x410f3538"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41128d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41163a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x41796580"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41125698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Temp" scoped="" ref="0x41795350"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x41124100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x41796c58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41125698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Hum" scoped="" ref="0x41795b08"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x41124100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41163a80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411bb4a8"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SensirionSht15" scoped="" ref="0x41124100"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x41122e70"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41125698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411603a8"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411603a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411eece8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x4116a650"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x41160b10"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x41160b10"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x41194be8"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x41169010"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x4115f590"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4115f590"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x4115ec50"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x41169988"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x4115e030"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x4115e030"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x41180408"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41168010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411eae30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411eae30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41165240"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f2f788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x41165e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x4115ec50"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403c6c08"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x41194be8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403d4750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411eece8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417ecb78"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x41180a00"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x411b0bb8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x411b0bb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411c1228"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411bbb88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411b92c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411b92c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x411b7e38"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403d4750"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x411b6870"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403c6c08"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x41193ec8"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x411905c0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x4115aa28"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x403c4a98"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x41158850"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x403c28e0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x41192b20"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x4118d208"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x411912d8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x4118d9a8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x41195740"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403d52f0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x4115b650"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x403c5670"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x41159490"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x403c34b0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x41192380"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x41190990"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x411572d0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x403cb2f0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x411916a8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x4118dd78"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x41194200"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403d5ce8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x4115a050"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x403c40a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x41159e68"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x403c3ea8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x41192750"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x41190d60"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x41157cb8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403cc8e0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x41192ef0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x4118d5d8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x41191a78"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x4118c208"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x411b0338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411c3010"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x411b36b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411cf7f8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x411b1168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411c8c70"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x411b2010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411cd920"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x411b19e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411c6d60"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4117fdd8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411ad6f8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x411b2890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411cbb68"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411adeb0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x411aa7a0"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411ce010"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x411aac18"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411cc190"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x411ac0a8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411ca350"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x411ac520"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411c7438"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x411ac998"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411c55f0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x411ace10"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411c37c8"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x411ab2b0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411c19e0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x411ab728"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x411f7710"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x411ed488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417eb2d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411ed890"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417eb6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417ebb98"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x411edd40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417ea010"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417edb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417ea608"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x411dbd38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411d78d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Dio" scoped="" ref="0x411decd8"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411d8660"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Dio" scoped="" ref="0x411d8660"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x412161e0"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x411db980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411d7538"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41209608"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4124f6e8"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x4124f6e8"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x411b1168"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4120a3f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4124e010"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4124e010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41249580"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4120d360"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x4124c010"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4124c010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4124adb0"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4120dab8"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x41252c40"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x41252c40"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403cc8e0"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x41216ba8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b4dcb0"/></to>
    </wire>
    <wire loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="read_io" scoped="" ref="0x41225408"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="init_io" scoped="" ref="0x41206978"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_low" scoped="" ref="0x411f8c58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_toggle" scoped="" ref="0x41235f20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_high" scoped="" ref="0x411fc930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4124adb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41243c18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41249580"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4123f7b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41243c18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4126d248"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4123f7b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4126da38"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x412919e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4127d9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4127d9e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417c92e8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41290220"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4128b320"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x4128d110"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x412dc240"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x4126f3b0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x4128ce48"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4126fac0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412715f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412715f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x417c9e30"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x412dc598"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x412d8d88"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x412d8d88"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x412d1010"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x412dbc90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f2f788"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x412da970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f2f788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x412711e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417c9a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41271c88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417c8510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417c89d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41270208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417c8df8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417ca170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417c6030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x412d0780"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x403cbce8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x412cf218"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x403ca830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x412f3010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412e9ed0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41369a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION33" scoped="" ref="0x413af170"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x413298b0"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION33" scoped="" ref="0x413298b0"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x41325c68"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x412e9b38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413696e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x412e57f8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="ADConvert" scoped="" ref="0x412e57f8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41328c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SetParam" scoped="" ref="0x413b0968"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x41329010"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SetParam" scoped="" ref="0x41329010"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413253c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION50" scoped="" ref="0x413af588"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x41329d70"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION50" scoped="" ref="0x41329d70"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x41324140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION25" scoped="" ref="0x413b0cb0"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x413293f0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION25" scoped="" ref="0x413293f0"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x413257a8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41369a80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4137e630"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x413696e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4137e278"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x41316ae0"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x413689a8"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x413689a8"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x413600a0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4131a360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x41324658"/></from>
      <to><interface-ref name="Exitation50" scoped="" ref="0x41392150"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x41392150"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x41159e68"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x413230d0"/></from>
      <to><interface-ref name="Exitation33" scoped="" ref="0x41392b78"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x41392b78"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x4115aa28"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x41323b30"/></from>
      <to><interface-ref name="VoltageBuffer" scoped="" ref="0x413915d8"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x413915d8"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x4115a050"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x41322600"/></from>
      <to><interface-ref name="VoltageBooster" scoped="" ref="0x41390030"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x41390030"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x4115b650"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x41321090"/></from>
      <to><interface-ref name="Amplifier" scoped="" ref="0x41390a48"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x41390a48"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x41158850"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41321b60"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4138f568"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4138f568"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41388940"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4131fb58"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x4138d518"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4138d518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413881f8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4131d450"/></from>
      <to><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138ddb0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138ddb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41384428"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413890e8"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413683b0"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413683b0"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x41363a80"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <from><interface-ref name="adc_get_data" scoped="" ref="0x41346040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4135f178"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41365030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41365030"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4123f7b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x41360930"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413678d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413678d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41243c18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41384428"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413881f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41243c18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41388940"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4123f7b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x4137aca8"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413890e8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x4137ecf8"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x41159e68"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x4137d7a0"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x4115aa28"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x4137c278"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x4115a050"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x4137cce0"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x4115b650"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x4137b790"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x41158850"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4137a228"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x41159490"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x413a2330"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x4139e0f0"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x413a2df8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4139eb78"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x413a2798"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x4139e538"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x413a1850"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x4139d590"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4139d760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41399528"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x413cac78"/></to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x413cac78"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x411b19e8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4139a070"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x413ce788"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x413ce788"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403d52f0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4139aa60"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x413ca208"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x413ca208"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x41159490"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4139b600"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b4dcb0"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <from><interface-ref name="count_ready" scoped="" ref="0x413d3240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413c82a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41243c18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413c89f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4123f7b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DozerC" loc="19:DozerC.nc">
      <configuration/>
    </component>
    <component qname="TreeP" loc="13:TreeP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.h">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407a5b70"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <value cst="I:18">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x40374af0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DozerC.SerialReceiverC" loc="35(DozerC.SerialReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconTimerC" loc="36(DozerC.BeaconTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconWaitTimerC" loc="36(DozerC.BeaconWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnReqListenTimerC" loc="36(DozerC.ConnReqListenTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnRepWaitTimerC" loc="36(DozerC.ConnRepWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateTimerC" loc="36(DozerC.NeighbourUpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateStopTimerC" loc="36(DozerC.NeighbourUpdateStopTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC" loc="39(DozerC.BeaconSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC.AMQueueEntryP" loc="35(DozerC.BeaconSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.BeaconReceiverC" loc="35(DozerC.BeaconReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SchedulerP" loc="14:SchedulerP.nc">
      <module/>
    </component>
    <component qname="DozerC.PPBListenTimer0C" loc="36(DozerC.PPBListenTimer0C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer1C" loc="36(DozerC.PPBListenTimer1C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer2C" loc="36(DozerC.PPBListenTimer2C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer3C" loc="36(DozerC.PPBListenTimer3C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMAScheduleTimerC" loc="36(DozerC.TDMAScheduleTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMASlotTimerC" loc="36(DozerC.TDMASlotTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC" loc="12:DataManagerC.nc">
      <configuration/>
    </component>
    <component qname="DataManagerP" loc="10:DataManagerP.nc">
      <module/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP" loc="41(DataManagerC.DataMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
            <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
          </type-tag>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP.PoolP" loc="53(DataManagerC.DataMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ed9010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DataManagerC.DataQueueP" loc="42(DataManagerC.DataQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
              <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.SerialAMSenderC" loc="39(DozerC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.SerialAMSenderC.AMQueueEntryP" loc="35(DozerC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataSenderC" loc="39(DozerC.DataSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.DataSenderC.AMQueueEntryP" loc="35(DozerC.DataSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataReceiverC" loc="35(DozerC.DataReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriP" loc="39:uAgriP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <configuration/>
    </component>
    <component qname="SamplerM" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TimerMilliC" loc="36(SamplerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC" loc="29(SamplerC.VoltageC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC.AdcReadClientC" loc="21(SamplerC.VoltageC.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TempHumC" loc="15(SamplerC.TempHumC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.TempHumC.SensirionSht15ReaderP" loc="16(SamplerC.TempHumC.SensirionSht15ReaderP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht15ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
        <short>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board.</short>
        <long>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board. This component provides the SensirionSht15&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht15C.SensirionSht15LogicP" loc="24(HalSensirionSht15C.SensirionSht15LogicP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/mda300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; Revision: $Revision: 1.0 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Int" loc="6(HplSensirionSht15C.Int):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15P" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <documentation loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
        <short>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; </short>
        <long>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.TimerMilliC" loc="36(HplSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter" loc="73(HplSensirionSht15C.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht15.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Queue" loc="32(HplSensirionSht15C.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Arbiter" loc="49(HplSensirionSht15C.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C.TimerMilliC" loc="36(HalSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.DioC" loc="10(SamplerC.DioC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300DigitalC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300DigitalLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300DigitalC.I2C" loc="43(HplMDA300DigitalC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC.WarmupTimer" loc="36(HplMDA300DigitalC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.IBADC" loc="10(SamplerC.IBADC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300IBADCC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCLogicP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MDA300IBADCSwitchC" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchC.I2C" loc="43(MDA300IBADCSwitchC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.I2C" loc="43(HplMDA300IBADCC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.WarmupTimer" loc="36(HplMDA300IBADCC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.CounterC" loc="10(SamplerC.CounterC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300CounterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300CounterLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300CounterC.I2C" loc="43(HplMDA300CounterC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403debf0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403dee08" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403db030" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403e9f18" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403e6158" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403e6380" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403e6570" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404333d0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404335f8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40433820" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40433a10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4075a010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4075a010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x4075a230" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4075fa68" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4075fa68"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4075feb0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4075feb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406ebba8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406ebba8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40789038" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40789038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407892a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407892a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40789710" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40789710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40789978" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40789e00" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40789e00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078e3c8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078e3c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407a5b70" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407a5b70"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407a5d30" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407b8ec8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407b8ec8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407b50d0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40796c00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40796c00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408580b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408580b0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40858290" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40b10870" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40b09688" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b43488" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b43488"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b438d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b438d0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b43a90" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40da30b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40db9e88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40de6928" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40dd4110" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e093d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ed9010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ed9010"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40ed9230" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ed6510" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ed6510"/></type-var>
        </typedef>
        <constant name="size" ref="0x40ed6700" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40efa530" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40efa530"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40efa758" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40f1d908" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x41049d90" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41095010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x41088988" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x410e72b8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x410e72b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht15ReaderP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15LogicP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x411ae6d8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x411ae900" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x411aeb28" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x411aed18" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4123ba88" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403a23d8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403a23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4039d780" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4039d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4039d958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403a59c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403a59c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403a1868" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403a1868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403a5268" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403a5440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403a5520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403a5600"/>
        <function-ref name="actualMicro" scoped="" ref="0x403a56e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403a57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403ac088" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403ac088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403a8c68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403a8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403ac490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403ac490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403a4ac8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403a4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403a46f8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403a46f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403af668" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403af668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403af840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403b5be8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403b5be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5dc0"/>
        <function-ref name="isInput" scoped="" ref="0x403b5ea0"/>
        <function-ref name="toggle" scoped="" ref="0x403af010"/>
        <function-ref name="isOutput" scoped="" ref="0x403af0f0"/>
        <function-ref name="get" scoped="" ref="0x403af1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af2b0"/>
        <function-ref name="set" scoped="" ref="0x403af390"/>
        <function-ref name="clr" scoped="" ref="0x403af470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403b2690" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403b2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b2868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403d82f0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d86c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d87a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d8888"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8968"/>
        <function-ref name="get" scoped="" ref="0x403d8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8b28"/>
        <function-ref name="set" scoped="" ref="0x403d8c08"/>
        <function-ref name="clr" scoped="" ref="0x403d8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403ca830" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403ca830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403caa08"/>
        <function-ref name="isInput" scoped="" ref="0x403caae8"/>
        <function-ref name="toggle" scoped="" ref="0x403cabc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403caca8"/>
        <function-ref name="get" scoped="" ref="0x403cad88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cae68"/>
        <function-ref name="set" scoped="" ref="0x403c9010"/>
        <function-ref name="clr" scoped="" ref="0x403c90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403cdea8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403cdea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403cc1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403cc280"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc360"/>
        <function-ref name="get" scoped="" ref="0x403cc440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc520"/>
        <function-ref name="set" scoped="" ref="0x403cc600"/>
        <function-ref name="clr" scoped="" ref="0x403cc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403d10a0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1278"/>
        <function-ref name="isInput" scoped="" ref="0x403d1358"/>
        <function-ref name="toggle" scoped="" ref="0x403d1438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1518"/>
        <function-ref name="get" scoped="" ref="0x403d15f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d16d8"/>
        <function-ref name="set" scoped="" ref="0x403d17b8"/>
        <function-ref name="clr" scoped="" ref="0x403d1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403b84b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403b84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8688"/>
        <function-ref name="isInput" scoped="" ref="0x403b8768"/>
        <function-ref name="toggle" scoped="" ref="0x403b8848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8928"/>
        <function-ref name="get" scoped="" ref="0x403b8a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8ae8"/>
        <function-ref name="set" scoped="" ref="0x403b8bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b8ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403d3c08" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403d3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d2010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d20f0"/>
        <function-ref name="get" scoped="" ref="0x403d21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d22b0"/>
        <function-ref name="set" scoped="" ref="0x403d2390"/>
        <function-ref name="clr" scoped="" ref="0x403d2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403c18e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403c18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c1b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1d58"/>
        <function-ref name="get" scoped="" ref="0x403c1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1f18"/>
        <function-ref name="set" scoped="" ref="0x403c0010"/>
        <function-ref name="clr" scoped="" ref="0x403c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403c40a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403c40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4278"/>
        <function-ref name="isInput" scoped="" ref="0x403c4358"/>
        <function-ref name="toggle" scoped="" ref="0x403c4438"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4518"/>
        <function-ref name="get" scoped="" ref="0x403c45f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c46d8"/>
        <function-ref name="set" scoped="" ref="0x403c47b8"/>
        <function-ref name="clr" scoped="" ref="0x403c4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403c8750" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403c8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8928"/>
        <function-ref name="isInput" scoped="" ref="0x403c8a08"/>
        <function-ref name="toggle" scoped="" ref="0x403c8ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8bc8"/>
        <function-ref name="get" scoped="" ref="0x403c8ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8d88"/>
        <function-ref name="set" scoped="" ref="0x403c8e68"/>
        <function-ref name="clr" scoped="" ref="0x403c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403d5ce8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403d5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d4010"/>
        <function-ref name="toggle" scoped="" ref="0x403d40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d41d0"/>
        <function-ref name="get" scoped="" ref="0x403d42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4390"/>
        <function-ref name="set" scoped="" ref="0x403d4470"/>
        <function-ref name="clr" scoped="" ref="0x403d4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403bb120" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403bb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb2f8"/>
        <function-ref name="isInput" scoped="" ref="0x403bb3d8"/>
        <function-ref name="toggle" scoped="" ref="0x403bb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb598"/>
        <function-ref name="get" scoped="" ref="0x403bb678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb758"/>
        <function-ref name="set" scoped="" ref="0x403bb838"/>
        <function-ref name="clr" scoped="" ref="0x403bb918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403bf750" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403bf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bf928"/>
        <function-ref name="isInput" scoped="" ref="0x403bfa08"/>
        <function-ref name="toggle" scoped="" ref="0x403bfae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bfbc8"/>
        <function-ref name="get" scoped="" ref="0x403bfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bfd88"/>
        <function-ref name="set" scoped="" ref="0x403bfe68"/>
        <function-ref name="clr" scoped="" ref="0x403be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403c3ea8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403c3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c20c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c21a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c2280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2360"/>
        <function-ref name="get" scoped="" ref="0x403c2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2520"/>
        <function-ref name="set" scoped="" ref="0x403c2600"/>
        <function-ref name="clr" scoped="" ref="0x403c26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403d0670" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0848"/>
        <function-ref name="isInput" scoped="" ref="0x403d0928"/>
        <function-ref name="toggle" scoped="" ref="0x403d0a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0ae8"/>
        <function-ref name="get" scoped="" ref="0x403d0bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0ca8"/>
        <function-ref name="set" scoped="" ref="0x403d0d88"/>
        <function-ref name="clr" scoped="" ref="0x403d0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403daea8" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d90c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d91a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d9280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9360"/>
        <function-ref name="get" scoped="" ref="0x403d9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9520"/>
        <function-ref name="set" scoped="" ref="0x403d9600"/>
        <function-ref name="clr" scoped="" ref="0x403d96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403d63d0" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403d63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d65a8"/>
        <function-ref name="isInput" scoped="" ref="0x403d6688"/>
        <function-ref name="toggle" scoped="" ref="0x403d6768"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6848"/>
        <function-ref name="get" scoped="" ref="0x403d6928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6a08"/>
        <function-ref name="set" scoped="" ref="0x403d6ae8"/>
        <function-ref name="clr" scoped="" ref="0x403d6bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403cea98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403cea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cec70"/>
        <function-ref name="isInput" scoped="" ref="0x403ced50"/>
        <function-ref name="toggle" scoped="" ref="0x403cee30"/>
        <function-ref name="isOutput" scoped="" ref="0x403cef10"/>
        <function-ref name="get" scoped="" ref="0x403cd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd0f0"/>
        <function-ref name="set" scoped="" ref="0x403cd1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403b9010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b91e8"/>
        <function-ref name="isInput" scoped="" ref="0x403b92c8"/>
        <function-ref name="toggle" scoped="" ref="0x403b93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9488"/>
        <function-ref name="get" scoped="" ref="0x403b9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9648"/>
        <function-ref name="set" scoped="" ref="0x403b9728"/>
        <function-ref name="clr" scoped="" ref="0x403b9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403bd750" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403bd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd928"/>
        <function-ref name="isInput" scoped="" ref="0x403bda08"/>
        <function-ref name="toggle" scoped="" ref="0x403bdae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bdbc8"/>
        <function-ref name="get" scoped="" ref="0x403bdca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bdd88"/>
        <function-ref name="set" scoped="" ref="0x403bde68"/>
        <function-ref name="clr" scoped="" ref="0x403c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403d8ee8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403d8ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d70e0"/>
        <function-ref name="isInput" scoped="" ref="0x403d71c0"/>
        <function-ref name="toggle" scoped="" ref="0x403d72a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7380"/>
        <function-ref name="get" scoped="" ref="0x403d7460"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7540"/>
        <function-ref name="set" scoped="" ref="0x403d7620"/>
        <function-ref name="clr" scoped="" ref="0x403d7700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403c6c08" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403c6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c6de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403c5010"/>
        <function-ref name="isOutput" scoped="" ref="0x403c50f0"/>
        <function-ref name="get" scoped="" ref="0x403c51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c52b0"/>
        <function-ref name="set" scoped="" ref="0x403c5390"/>
        <function-ref name="clr" scoped="" ref="0x403c5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403c92f0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c94c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c95a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c9688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9768"/>
        <function-ref name="get" scoped="" ref="0x403c9848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9928"/>
        <function-ref name="set" scoped="" ref="0x403c9a08"/>
        <function-ref name="clr" scoped="" ref="0x403c9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403cc8e0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403cc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ccab8"/>
        <function-ref name="isInput" scoped="" ref="0x403ccb98"/>
        <function-ref name="toggle" scoped="" ref="0x403ccc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403ccd58"/>
        <function-ref name="get" scoped="" ref="0x403cce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ccf18"/>
        <function-ref name="set" scoped="" ref="0x403d5010"/>
        <function-ref name="clr" scoped="" ref="0x403d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403d1a98" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403d1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d1d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d1e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1f10"/>
        <function-ref name="get" scoped="" ref="0x403da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da0f0"/>
        <function-ref name="set" scoped="" ref="0x403da1d0"/>
        <function-ref name="clr" scoped="" ref="0x403da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403b8ea8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403b8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c10c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c11a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c1280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1360"/>
        <function-ref name="get" scoped="" ref="0x403c1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1520"/>
        <function-ref name="set" scoped="" ref="0x403c1600"/>
        <function-ref name="clr" scoped="" ref="0x403c16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403c02f0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c04c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c05a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c0688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0768"/>
        <function-ref name="get" scoped="" ref="0x403c0848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0928"/>
        <function-ref name="set" scoped="" ref="0x403c0a08"/>
        <function-ref name="clr" scoped="" ref="0x403c0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403c4a98" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403c4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4c70"/>
        <function-ref name="isInput" scoped="" ref="0x403c4d50"/>
        <function-ref name="toggle" scoped="" ref="0x403c4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4f10"/>
        <function-ref name="get" scoped="" ref="0x403c3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c30f0"/>
        <function-ref name="set" scoped="" ref="0x403c31d0"/>
        <function-ref name="clr" scoped="" ref="0x403c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403c7210" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403c7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c73e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c74c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c75a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7688"/>
        <function-ref name="get" scoped="" ref="0x403c7768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7848"/>
        <function-ref name="set" scoped="" ref="0x403c7928"/>
        <function-ref name="clr" scoped="" ref="0x403c7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403d4750" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403d4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4928"/>
        <function-ref name="isInput" scoped="" ref="0x403d4a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4bc8"/>
        <function-ref name="get" scoped="" ref="0x403d4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4d88"/>
        <function-ref name="set" scoped="" ref="0x403d4e68"/>
        <function-ref name="clr" scoped="" ref="0x403d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403bbb18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403bbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bbcf0"/>
        <function-ref name="isInput" scoped="" ref="0x403bbdd0"/>
        <function-ref name="toggle" scoped="" ref="0x403bbeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba010"/>
        <function-ref name="get" scoped="" ref="0x403ba0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba1d0"/>
        <function-ref name="set" scoped="" ref="0x403ba2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ba390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403be210" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403be210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403be468"/>
        <function-ref name="isInput" scoped="" ref="0x403be548"/>
        <function-ref name="toggle" scoped="" ref="0x403be628"/>
        <function-ref name="isOutput" scoped="" ref="0x403be708"/>
        <function-ref name="get" scoped="" ref="0x403be7e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be8c8"/>
        <function-ref name="set" scoped="" ref="0x403be9a8"/>
        <function-ref name="clr" scoped="" ref="0x403bea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403c28e0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403c28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c2b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c2c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2d58"/>
        <function-ref name="get" scoped="" ref="0x403c2e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2f18"/>
        <function-ref name="set" scoped="" ref="0x403cb010"/>
        <function-ref name="clr" scoped="" ref="0x403cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403d98e0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403d98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d9b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9d58"/>
        <function-ref name="get" scoped="" ref="0x403d9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9f18"/>
        <function-ref name="set" scoped="" ref="0x403d8010"/>
        <function-ref name="clr" scoped="" ref="0x403d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403cbce8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403cbce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca010"/>
        <function-ref name="isInput" scoped="" ref="0x403ca0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ca1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca2b0"/>
        <function-ref name="get" scoped="" ref="0x403ca390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca470"/>
        <function-ref name="set" scoped="" ref="0x403ca550"/>
        <function-ref name="clr" scoped="" ref="0x403ca630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403cd4b0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403cd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd688"/>
        <function-ref name="isInput" scoped="" ref="0x403cd768"/>
        <function-ref name="toggle" scoped="" ref="0x403cd848"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd928"/>
        <function-ref name="get" scoped="" ref="0x403cda08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cdae8"/>
        <function-ref name="set" scoped="" ref="0x403cdbc8"/>
        <function-ref name="clr" scoped="" ref="0x403cdca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403d2670" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2848"/>
        <function-ref name="isInput" scoped="" ref="0x403d2928"/>
        <function-ref name="toggle" scoped="" ref="0x403d2a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2ae8"/>
        <function-ref name="get" scoped="" ref="0x403d2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2ca8"/>
        <function-ref name="set" scoped="" ref="0x403d2d88"/>
        <function-ref name="clr" scoped="" ref="0x403d2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403d6dc8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403d6dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df010"/>
        <function-ref name="isInput" scoped="" ref="0x403df0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403df1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403df2b0"/>
        <function-ref name="get" scoped="" ref="0x403df390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df470"/>
        <function-ref name="set" scoped="" ref="0x403df550"/>
        <function-ref name="clr" scoped="" ref="0x403df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403b9a08" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403b9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9be0"/>
        <function-ref name="isInput" scoped="" ref="0x403b9cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403b9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9e80"/>
        <function-ref name="get" scoped="" ref="0x403b8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b80f0"/>
        <function-ref name="set" scoped="" ref="0x403b81d0"/>
        <function-ref name="clr" scoped="" ref="0x403b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403c6210" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403c6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c63e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c64c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c65a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6688"/>
        <function-ref name="get" scoped="" ref="0x403c6768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c6848"/>
        <function-ref name="set" scoped="" ref="0x403c6928"/>
        <function-ref name="clr" scoped="" ref="0x403c6a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403d3210" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403d3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d33e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d34c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3688"/>
        <function-ref name="get" scoped="" ref="0x403d3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3848"/>
        <function-ref name="set" scoped="" ref="0x403d3928"/>
        <function-ref name="clr" scoped="" ref="0x403d3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403c5670" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c5848"/>
        <function-ref name="isInput" scoped="" ref="0x403c5928"/>
        <function-ref name="toggle" scoped="" ref="0x403c5a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5ae8"/>
        <function-ref name="get" scoped="" ref="0x403c5bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c5ca8"/>
        <function-ref name="set" scoped="" ref="0x403c5d88"/>
        <function-ref name="clr" scoped="" ref="0x403c5e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403c9ce8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403c9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c8010"/>
        <function-ref name="toggle" scoped="" ref="0x403c80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c81d0"/>
        <function-ref name="get" scoped="" ref="0x403c82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8390"/>
        <function-ref name="set" scoped="" ref="0x403c8470"/>
        <function-ref name="clr" scoped="" ref="0x403c8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403d52f0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d54c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d55a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d5688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5768"/>
        <function-ref name="get" scoped="" ref="0x403d5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5928"/>
        <function-ref name="set" scoped="" ref="0x403d5a08"/>
        <function-ref name="clr" scoped="" ref="0x403d5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403da4b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da688"/>
        <function-ref name="isInput" scoped="" ref="0x403da768"/>
        <function-ref name="toggle" scoped="" ref="0x403da848"/>
        <function-ref name="isOutput" scoped="" ref="0x403da928"/>
        <function-ref name="get" scoped="" ref="0x403daa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daae8"/>
        <function-ref name="set" scoped="" ref="0x403dabc8"/>
        <function-ref name="clr" scoped="" ref="0x403daca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403b1700" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403b1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b18d8"/>
        <function-ref name="isInput" scoped="" ref="0x403b19b8"/>
        <function-ref name="toggle" scoped="" ref="0x403b1a98"/>
        <function-ref name="isOutput" scoped="" ref="0x403b1b78"/>
        <function-ref name="get" scoped="" ref="0x403b1c58"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b1d38"/>
        <function-ref name="set" scoped="" ref="0x403b1e18"/>
        <function-ref name="clr" scoped="" ref="0x403b1ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403c0ce8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403c0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403bf010"/>
        <function-ref name="toggle" scoped="" ref="0x403bf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bf1d0"/>
        <function-ref name="get" scoped="" ref="0x403bf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bf390"/>
        <function-ref name="set" scoped="" ref="0x403bf470"/>
        <function-ref name="clr" scoped="" ref="0x403bf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403c34b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403c34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3688"/>
        <function-ref name="isInput" scoped="" ref="0x403c3768"/>
        <function-ref name="toggle" scoped="" ref="0x403c3848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3928"/>
        <function-ref name="get" scoped="" ref="0x403c3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3ae8"/>
        <function-ref name="set" scoped="" ref="0x403c3bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403c7c08" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403c7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c7de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d0010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d00f0"/>
        <function-ref name="get" scoped="" ref="0x403d01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d02b0"/>
        <function-ref name="set" scoped="" ref="0x403d0390"/>
        <function-ref name="clr" scoped="" ref="0x403d0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403d7900" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403d7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7ad8"/>
        <function-ref name="isInput" scoped="" ref="0x403d7bb8"/>
        <function-ref name="toggle" scoped="" ref="0x403d7c98"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7d78"/>
        <function-ref name="get" scoped="" ref="0x403d7e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6010"/>
        <function-ref name="set" scoped="" ref="0x403d60f0"/>
        <function-ref name="clr" scoped="" ref="0x403d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403ce0a0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403ce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ce278"/>
        <function-ref name="isInput" scoped="" ref="0x403ce358"/>
        <function-ref name="toggle" scoped="" ref="0x403ce438"/>
        <function-ref name="isOutput" scoped="" ref="0x403ce518"/>
        <function-ref name="get" scoped="" ref="0x403ce5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ce6d8"/>
        <function-ref name="set" scoped="" ref="0x403ce7b8"/>
        <function-ref name="clr" scoped="" ref="0x403ce898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403cb2f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403cb5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403cb688"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb768"/>
        <function-ref name="get" scoped="" ref="0x403cb848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb928"/>
        <function-ref name="set" scoped="" ref="0x403cba08"/>
        <function-ref name="clr" scoped="" ref="0x403cbae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403ba590" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403ba590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba768"/>
        <function-ref name="isInput" scoped="" ref="0x403ba848"/>
        <function-ref name="toggle" scoped="" ref="0x403ba928"/>
        <function-ref name="isOutput" scoped="" ref="0x403baa08"/>
        <function-ref name="get" scoped="" ref="0x403baae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403babc8"/>
        <function-ref name="set" scoped="" ref="0x403baca8"/>
        <function-ref name="clr" scoped="" ref="0x403bad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403bec88" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403bec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bee60"/>
        <function-ref name="isInput" scoped="" ref="0x403bd010"/>
        <function-ref name="toggle" scoped="" ref="0x403bd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd1d0"/>
        <function-ref name="get" scoped="" ref="0x403bd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd390"/>
        <function-ref name="set" scoped="" ref="0x403bd470"/>
        <function-ref name="clr" scoped="" ref="0x403bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40406330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40406330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406508"/>
        <function-ref name="isInput" scoped="" ref="0x404065e8"/>
        <function-ref name="toggle" scoped="" ref="0x404066c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404067a8"/>
        <function-ref name="get" scoped="" ref="0x40406888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406968"/>
        <function-ref name="set" scoped="" ref="0x40406a48"/>
        <function-ref name="clr" scoped="" ref="0x40406b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40404030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40404030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404208"/>
        <function-ref name="isInput" scoped="" ref="0x404042e8"/>
        <function-ref name="toggle" scoped="" ref="0x404043c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404044a8"/>
        <function-ref name="get" scoped="" ref="0x40404588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404668"/>
        <function-ref name="set" scoped="" ref="0x40404748"/>
        <function-ref name="clr" scoped="" ref="0x40404828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40407010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40407010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404071e8"/>
        <function-ref name="isInput" scoped="" ref="0x404072c8"/>
        <function-ref name="toggle" scoped="" ref="0x404073a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40407488"/>
        <function-ref name="get" scoped="" ref="0x40407568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407648"/>
        <function-ref name="set" scoped="" ref="0x40407728"/>
        <function-ref name="clr" scoped="" ref="0x40407808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40406c88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40406c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406e60"/>
        <function-ref name="isInput" scoped="" ref="0x40405010"/>
        <function-ref name="toggle" scoped="" ref="0x404050f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404051d0"/>
        <function-ref name="get" scoped="" ref="0x404052b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405390"/>
        <function-ref name="set" scoped="" ref="0x40405470"/>
        <function-ref name="clr" scoped="" ref="0x40405550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40404988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40404988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404b60"/>
        <function-ref name="isInput" scoped="" ref="0x40404c40"/>
        <function-ref name="toggle" scoped="" ref="0x40404d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40404e00"/>
        <function-ref name="get" scoped="" ref="0x40404ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403010"/>
        <function-ref name="set" scoped="" ref="0x404030f0"/>
        <function-ref name="clr" scoped="" ref="0x404031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40407968" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40407968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407b40"/>
        <function-ref name="isInput" scoped="" ref="0x40407c20"/>
        <function-ref name="toggle" scoped="" ref="0x40407d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40407de0"/>
        <function-ref name="get" scoped="" ref="0x40407ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406010"/>
        <function-ref name="set" scoped="" ref="0x404060f0"/>
        <function-ref name="clr" scoped="" ref="0x404061d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404056b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404056b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405888"/>
        <function-ref name="isInput" scoped="" ref="0x40405968"/>
        <function-ref name="toggle" scoped="" ref="0x40405a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40405b28"/>
        <function-ref name="get" scoped="" ref="0x40405c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405ce8"/>
        <function-ref name="set" scoped="" ref="0x40405dc8"/>
        <function-ref name="clr" scoped="" ref="0x40405ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40403330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40403330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403508"/>
        <function-ref name="isInput" scoped="" ref="0x404035e8"/>
        <function-ref name="toggle" scoped="" ref="0x404036c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404037a8"/>
        <function-ref name="get" scoped="" ref="0x40403888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403968"/>
        <function-ref name="set" scoped="" ref="0x40403a48"/>
        <function-ref name="clr" scoped="" ref="0x40403b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ed228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ed228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ed400"/>
        <function-ref name="isInput" scoped="" ref="0x413ed4e0"/>
        <function-ref name="toggle" scoped="" ref="0x413ed5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ed6a0"/>
        <function-ref name="get" scoped="" ref="0x413ed780"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ed860"/>
        <function-ref name="set" scoped="" ref="0x413ed940"/>
        <function-ref name="clr" scoped="" ref="0x413eda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ecc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ecc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ecde0"/>
        <function-ref name="isInput" scoped="" ref="0x413ecec0"/>
        <function-ref name="toggle" scoped="" ref="0x413eb010"/>
        <function-ref name="isOutput" scoped="" ref="0x413eb0f0"/>
        <function-ref name="get" scoped="" ref="0x413eb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413eb2b0"/>
        <function-ref name="set" scoped="" ref="0x413eb390"/>
        <function-ref name="clr" scoped="" ref="0x413eb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ea6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ea6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ea898"/>
        <function-ref name="isInput" scoped="" ref="0x413ea978"/>
        <function-ref name="toggle" scoped="" ref="0x413eaa58"/>
        <function-ref name="isOutput" scoped="" ref="0x413eab38"/>
        <function-ref name="get" scoped="" ref="0x413eac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x413eacf8"/>
        <function-ref name="set" scoped="" ref="0x413eadd8"/>
        <function-ref name="clr" scoped="" ref="0x413eaeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e70b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e7288"/>
        <function-ref name="isInput" scoped="" ref="0x413e7368"/>
        <function-ref name="toggle" scoped="" ref="0x413e7448"/>
        <function-ref name="isOutput" scoped="" ref="0x413e7528"/>
        <function-ref name="get" scoped="" ref="0x413e7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e76e8"/>
        <function-ref name="set" scoped="" ref="0x413e77c8"/>
        <function-ref name="clr" scoped="" ref="0x413e78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e6a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e6c60"/>
        <function-ref name="isInput" scoped="" ref="0x413e6d40"/>
        <function-ref name="toggle" scoped="" ref="0x413e6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x413e6f00"/>
        <function-ref name="get" scoped="" ref="0x413e5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e50f0"/>
        <function-ref name="set" scoped="" ref="0x413e51d0"/>
        <function-ref name="clr" scoped="" ref="0x413e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e4538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e4710"/>
        <function-ref name="isInput" scoped="" ref="0x413e47f0"/>
        <function-ref name="toggle" scoped="" ref="0x413e48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413e49b0"/>
        <function-ref name="get" scoped="" ref="0x413e4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e4b70"/>
        <function-ref name="set" scoped="" ref="0x413e4c50"/>
        <function-ref name="clr" scoped="" ref="0x413e4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e2010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e21e8"/>
        <function-ref name="isInput" scoped="" ref="0x413e22c8"/>
        <function-ref name="toggle" scoped="" ref="0x413e23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413e2488"/>
        <function-ref name="get" scoped="" ref="0x413e2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e2648"/>
        <function-ref name="set" scoped="" ref="0x413e2728"/>
        <function-ref name="clr" scoped="" ref="0x413e2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413e19e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413e19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413e1bc0"/>
        <function-ref name="isInput" scoped="" ref="0x413e1ca0"/>
        <function-ref name="toggle" scoped="" ref="0x413e1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x413e1e60"/>
        <function-ref name="get" scoped="" ref="0x413e0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413e00f0"/>
        <function-ref name="set" scoped="" ref="0x413e01d0"/>
        <function-ref name="clr" scoped="" ref="0x413e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40408ba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40408ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408d80"/>
        <function-ref name="isInput" scoped="" ref="0x40408e60"/>
        <function-ref name="toggle" scoped="" ref="0x40411010"/>
        <function-ref name="isOutput" scoped="" ref="0x404110f0"/>
        <function-ref name="get" scoped="" ref="0x404111d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404112b0"/>
        <function-ref name="set" scoped="" ref="0x40411390"/>
        <function-ref name="clr" scoped="" ref="0x40411470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40410890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40410890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410a68"/>
        <function-ref name="isInput" scoped="" ref="0x40410b48"/>
        <function-ref name="toggle" scoped="" ref="0x40410c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40410d08"/>
        <function-ref name="get" scoped="" ref="0x40410de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410ec8"/>
        <function-ref name="set" scoped="" ref="0x4040f010"/>
        <function-ref name="clr" scoped="" ref="0x4040f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40409888" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40409888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409a60"/>
        <function-ref name="isInput" scoped="" ref="0x40409b40"/>
        <function-ref name="toggle" scoped="" ref="0x40409c20"/>
        <function-ref name="isOutput" scoped="" ref="0x40409d00"/>
        <function-ref name="get" scoped="" ref="0x40409de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409ec0"/>
        <function-ref name="set" scoped="" ref="0x40408010"/>
        <function-ref name="clr" scoped="" ref="0x404080f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404115d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404115d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404117a8"/>
        <function-ref name="isInput" scoped="" ref="0x40411888"/>
        <function-ref name="toggle" scoped="" ref="0x40411968"/>
        <function-ref name="isOutput" scoped="" ref="0x40411a48"/>
        <function-ref name="get" scoped="" ref="0x40411b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411c08"/>
        <function-ref name="set" scoped="" ref="0x40411ce8"/>
        <function-ref name="clr" scoped="" ref="0x40411dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040f250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f428"/>
        <function-ref name="isInput" scoped="" ref="0x4040f508"/>
        <function-ref name="toggle" scoped="" ref="0x4040f5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f6c8"/>
        <function-ref name="get" scoped="" ref="0x4040f7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f888"/>
        <function-ref name="set" scoped="" ref="0x4040f968"/>
        <function-ref name="clr" scoped="" ref="0x4040fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40408250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40408250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408428"/>
        <function-ref name="isInput" scoped="" ref="0x40408508"/>
        <function-ref name="toggle" scoped="" ref="0x404085e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404086c8"/>
        <function-ref name="get" scoped="" ref="0x404087a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408888"/>
        <function-ref name="set" scoped="" ref="0x40408968"/>
        <function-ref name="clr" scoped="" ref="0x40408a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40411f28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40411f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410110"/>
        <function-ref name="isInput" scoped="" ref="0x404101f0"/>
        <function-ref name="toggle" scoped="" ref="0x404102d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404103b0"/>
        <function-ref name="get" scoped="" ref="0x40410490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410570"/>
        <function-ref name="set" scoped="" ref="0x40410650"/>
        <function-ref name="clr" scoped="" ref="0x40410730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040fba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040fd80"/>
        <function-ref name="isInput" scoped="" ref="0x4040fe60"/>
        <function-ref name="toggle" scoped="" ref="0x4040e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e0f0"/>
        <function-ref name="get" scoped="" ref="0x4040e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e2b0"/>
        <function-ref name="set" scoped="" ref="0x4040e390"/>
        <function-ref name="clr" scoped="" ref="0x4040e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41452de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41452de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144e010"/>
        <function-ref name="isInput" scoped="" ref="0x4144e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4144e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4144e2b0"/>
        <function-ref name="get" scoped="" ref="0x4144e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144e470"/>
        <function-ref name="set" scoped="" ref="0x4144e550"/>
        <function-ref name="clr" scoped="" ref="0x4144e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4144d7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4144d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4144dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4144db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4144dc70"/>
        <function-ref name="get" scoped="" ref="0x4144dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144de30"/>
        <function-ref name="set" scoped="" ref="0x4144df10"/>
        <function-ref name="clr" scoped="" ref="0x4144c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4144b228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4144b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144b400"/>
        <function-ref name="isInput" scoped="" ref="0x4144b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4144b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4144b6a0"/>
        <function-ref name="get" scoped="" ref="0x4144b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144b860"/>
        <function-ref name="set" scoped="" ref="0x4144b940"/>
        <function-ref name="clr" scoped="" ref="0x4144ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4144ac08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4144ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4144aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41449010"/>
        <function-ref name="isOutput" scoped="" ref="0x414490f0"/>
        <function-ref name="get" scoped="" ref="0x414491d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414492b0"/>
        <function-ref name="set" scoped="" ref="0x41449390"/>
        <function-ref name="clr" scoped="" ref="0x41449470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414486c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414486c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41448898"/>
        <function-ref name="isInput" scoped="" ref="0x41448978"/>
        <function-ref name="toggle" scoped="" ref="0x41448a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41448b38"/>
        <function-ref name="get" scoped="" ref="0x41448c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41448cf8"/>
        <function-ref name="set" scoped="" ref="0x41448dd8"/>
        <function-ref name="clr" scoped="" ref="0x41448eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414460b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414460b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41446288"/>
        <function-ref name="isInput" scoped="" ref="0x41446368"/>
        <function-ref name="toggle" scoped="" ref="0x41446448"/>
        <function-ref name="isOutput" scoped="" ref="0x41446528"/>
        <function-ref name="get" scoped="" ref="0x41446608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414466e8"/>
        <function-ref name="set" scoped="" ref="0x414467c8"/>
        <function-ref name="clr" scoped="" ref="0x414468a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41445a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41445a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41445c60"/>
        <function-ref name="isInput" scoped="" ref="0x41445d40"/>
        <function-ref name="toggle" scoped="" ref="0x41445e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41445f00"/>
        <function-ref name="get" scoped="" ref="0x41444010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414440f0"/>
        <function-ref name="set" scoped="" ref="0x414441d0"/>
        <function-ref name="clr" scoped="" ref="0x414442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41443538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41443538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41443710"/>
        <function-ref name="isInput" scoped="" ref="0x414437f0"/>
        <function-ref name="toggle" scoped="" ref="0x414438d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414439b0"/>
        <function-ref name="get" scoped="" ref="0x41443a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41443b70"/>
        <function-ref name="set" scoped="" ref="0x41443c50"/>
        <function-ref name="clr" scoped="" ref="0x41443d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404134f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404136c8"/>
        <function-ref name="isInput" scoped="" ref="0x404137a8"/>
        <function-ref name="toggle" scoped="" ref="0x40413888"/>
        <function-ref name="isOutput" scoped="" ref="0x40413968"/>
        <function-ref name="get" scoped="" ref="0x40413a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413b28"/>
        <function-ref name="set" scoped="" ref="0x40413c08"/>
        <function-ref name="clr" scoped="" ref="0x40413ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041b170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b348"/>
        <function-ref name="isInput" scoped="" ref="0x4041b428"/>
        <function-ref name="toggle" scoped="" ref="0x4041b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b5e8"/>
        <function-ref name="get" scoped="" ref="0x4041b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b7a8"/>
        <function-ref name="set" scoped="" ref="0x4041b888"/>
        <function-ref name="clr" scoped="" ref="0x4041b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40415228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40415228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415400"/>
        <function-ref name="isInput" scoped="" ref="0x404154e0"/>
        <function-ref name="toggle" scoped="" ref="0x404155c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404156a0"/>
        <function-ref name="get" scoped="" ref="0x40415780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415860"/>
        <function-ref name="set" scoped="" ref="0x40415940"/>
        <function-ref name="clr" scoped="" ref="0x40415a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40413e48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40413e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412050"/>
        <function-ref name="isInput" scoped="" ref="0x40412130"/>
        <function-ref name="toggle" scoped="" ref="0x40412210"/>
        <function-ref name="isOutput" scoped="" ref="0x404122f0"/>
        <function-ref name="get" scoped="" ref="0x404123d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404124b0"/>
        <function-ref name="set" scoped="" ref="0x40412590"/>
        <function-ref name="clr" scoped="" ref="0x40412670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041bac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4041be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a010"/>
        <function-ref name="get" scoped="" ref="0x4041a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a1d0"/>
        <function-ref name="set" scoped="" ref="0x4041a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40415b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40415b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415d58"/>
        <function-ref name="isInput" scoped="" ref="0x40415e38"/>
        <function-ref name="toggle" scoped="" ref="0x40415f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40413010"/>
        <function-ref name="get" scoped="" ref="0x404130f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404131d0"/>
        <function-ref name="set" scoped="" ref="0x404132b0"/>
        <function-ref name="clr" scoped="" ref="0x40413390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404127d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404127d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404129a8"/>
        <function-ref name="isInput" scoped="" ref="0x40412a88"/>
        <function-ref name="toggle" scoped="" ref="0x40412b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40412c48"/>
        <function-ref name="get" scoped="" ref="0x40412d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412e08"/>
        <function-ref name="set" scoped="" ref="0x40412ee8"/>
        <function-ref name="clr" scoped="" ref="0x4041b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041a4f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a968"/>
        <function-ref name="get" scoped="" ref="0x4041aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ab28"/>
        <function-ref name="set" scoped="" ref="0x4041ac08"/>
        <function-ref name="clr" scoped="" ref="0x4041ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41463938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41463938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41463b10"/>
        <function-ref name="isInput" scoped="" ref="0x41463bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41463cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41463db0"/>
        <function-ref name="get" scoped="" ref="0x41463e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41462010"/>
        <function-ref name="set" scoped="" ref="0x414620f0"/>
        <function-ref name="clr" scoped="" ref="0x414621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414613b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414613b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41461588"/>
        <function-ref name="isInput" scoped="" ref="0x41461668"/>
        <function-ref name="toggle" scoped="" ref="0x41461748"/>
        <function-ref name="isOutput" scoped="" ref="0x41461828"/>
        <function-ref name="get" scoped="" ref="0x41461908"/>
        <function-ref name="makeOutput" scoped="" ref="0x414619e8"/>
        <function-ref name="set" scoped="" ref="0x41461ac8"/>
        <function-ref name="clr" scoped="" ref="0x41461ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145fd70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145e010"/>
        <function-ref name="isInput" scoped="" ref="0x4145e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4145e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4145e2b0"/>
        <function-ref name="get" scoped="" ref="0x4145e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4145e470"/>
        <function-ref name="set" scoped="" ref="0x4145e550"/>
        <function-ref name="clr" scoped="" ref="0x4145e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145d7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4145dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4145db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4145dc70"/>
        <function-ref name="get" scoped="" ref="0x4145dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4145de30"/>
        <function-ref name="set" scoped="" ref="0x4145df10"/>
        <function-ref name="clr" scoped="" ref="0x4145c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145b228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145b400"/>
        <function-ref name="isInput" scoped="" ref="0x4145b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4145b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4145b6a0"/>
        <function-ref name="get" scoped="" ref="0x4145b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4145b860"/>
        <function-ref name="set" scoped="" ref="0x4145b940"/>
        <function-ref name="clr" scoped="" ref="0x4145ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145ac08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4145aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41459010"/>
        <function-ref name="isOutput" scoped="" ref="0x414590f0"/>
        <function-ref name="get" scoped="" ref="0x414591d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414592b0"/>
        <function-ref name="set" scoped="" ref="0x41459390"/>
        <function-ref name="clr" scoped="" ref="0x41459470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414586c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414586c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41458898"/>
        <function-ref name="isInput" scoped="" ref="0x41458978"/>
        <function-ref name="toggle" scoped="" ref="0x41458a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41458b38"/>
        <function-ref name="get" scoped="" ref="0x41458c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41458cf8"/>
        <function-ref name="set" scoped="" ref="0x41458dd8"/>
        <function-ref name="clr" scoped="" ref="0x41458eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414560b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414560b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41456288"/>
        <function-ref name="isInput" scoped="" ref="0x41456368"/>
        <function-ref name="toggle" scoped="" ref="0x41456448"/>
        <function-ref name="isOutput" scoped="" ref="0x41456528"/>
        <function-ref name="get" scoped="" ref="0x41456608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414566e8"/>
        <function-ref name="set" scoped="" ref="0x414567c8"/>
        <function-ref name="clr" scoped="" ref="0x414568a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40420e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40420e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f050"/>
        <function-ref name="isInput" scoped="" ref="0x4041f130"/>
        <function-ref name="toggle" scoped="" ref="0x4041f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f2f0"/>
        <function-ref name="get" scoped="" ref="0x4041f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f4b0"/>
        <function-ref name="set" scoped="" ref="0x4041f590"/>
        <function-ref name="clr" scoped="" ref="0x4041f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041eac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4041ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c010"/>
        <function-ref name="get" scoped="" ref="0x4041c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c1d0"/>
        <function-ref name="set" scoped="" ref="0x4041c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40417b00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40417b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40417db8"/>
        <function-ref name="toggle" scoped="" ref="0x40417e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40420010"/>
        <function-ref name="get" scoped="" ref="0x404200f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404201d0"/>
        <function-ref name="set" scoped="" ref="0x404202b0"/>
        <function-ref name="clr" scoped="" ref="0x40420390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041f7d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4041fa88"/>
        <function-ref name="toggle" scoped="" ref="0x4041fb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4041fc48"/>
        <function-ref name="get" scoped="" ref="0x4041fd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fe08"/>
        <function-ref name="set" scoped="" ref="0x4041fee8"/>
        <function-ref name="clr" scoped="" ref="0x4041e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041c4f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c968"/>
        <function-ref name="get" scoped="" ref="0x4041ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041cb28"/>
        <function-ref name="set" scoped="" ref="0x4041cc08"/>
        <function-ref name="clr" scoped="" ref="0x4041cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404204f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404204f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404206c8"/>
        <function-ref name="isInput" scoped="" ref="0x404207a8"/>
        <function-ref name="toggle" scoped="" ref="0x40420888"/>
        <function-ref name="isOutput" scoped="" ref="0x40420968"/>
        <function-ref name="get" scoped="" ref="0x40420a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420b28"/>
        <function-ref name="set" scoped="" ref="0x40420c08"/>
        <function-ref name="clr" scoped="" ref="0x40420ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041e170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e348"/>
        <function-ref name="isInput" scoped="" ref="0x4041e428"/>
        <function-ref name="toggle" scoped="" ref="0x4041e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e5e8"/>
        <function-ref name="get" scoped="" ref="0x4041e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e7a8"/>
        <function-ref name="set" scoped="" ref="0x4041e888"/>
        <function-ref name="clr" scoped="" ref="0x4041e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041ce48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425050"/>
        <function-ref name="isInput" scoped="" ref="0x40425130"/>
        <function-ref name="toggle" scoped="" ref="0x40425210"/>
        <function-ref name="isOutput" scoped="" ref="0x404252f0"/>
        <function-ref name="get" scoped="" ref="0x404253d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404254b0"/>
        <function-ref name="set" scoped="" ref="0x40425590"/>
        <function-ref name="clr" scoped="" ref="0x40425670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414c2538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414c2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414c2710"/>
        <function-ref name="isInput" scoped="" ref="0x414c27f0"/>
        <function-ref name="toggle" scoped="" ref="0x414c28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414c29b0"/>
        <function-ref name="get" scoped="" ref="0x414c2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414c2b70"/>
        <function-ref name="set" scoped="" ref="0x414c2c50"/>
        <function-ref name="clr" scoped="" ref="0x414c2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414c0010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414c01e8"/>
        <function-ref name="isInput" scoped="" ref="0x414c02c8"/>
        <function-ref name="toggle" scoped="" ref="0x414c03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414c0488"/>
        <function-ref name="get" scoped="" ref="0x414c0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414c0648"/>
        <function-ref name="set" scoped="" ref="0x414c0728"/>
        <function-ref name="clr" scoped="" ref="0x414c0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414bf9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414bf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414bfbc0"/>
        <function-ref name="isInput" scoped="" ref="0x414bfca0"/>
        <function-ref name="toggle" scoped="" ref="0x414bfd80"/>
        <function-ref name="isOutput" scoped="" ref="0x414bfe60"/>
        <function-ref name="get" scoped="" ref="0x414be010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414be0f0"/>
        <function-ref name="set" scoped="" ref="0x414be1d0"/>
        <function-ref name="clr" scoped="" ref="0x414be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414bd538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414bd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414bd710"/>
        <function-ref name="isInput" scoped="" ref="0x414bd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x414bd8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414bd9b0"/>
        <function-ref name="get" scoped="" ref="0x414bda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414bdb70"/>
        <function-ref name="set" scoped="" ref="0x414bdc50"/>
        <function-ref name="clr" scoped="" ref="0x414bdd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414bb010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414bb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x414bb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x414bb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414bb488"/>
        <function-ref name="get" scoped="" ref="0x414bb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414bb648"/>
        <function-ref name="set" scoped="" ref="0x414bb728"/>
        <function-ref name="clr" scoped="" ref="0x414bb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ba9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ba9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414babc0"/>
        <function-ref name="isInput" scoped="" ref="0x414baca0"/>
        <function-ref name="toggle" scoped="" ref="0x414bad80"/>
        <function-ref name="isOutput" scoped="" ref="0x414bae60"/>
        <function-ref name="get" scoped="" ref="0x414b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414b90f0"/>
        <function-ref name="set" scoped="" ref="0x414b91d0"/>
        <function-ref name="clr" scoped="" ref="0x414b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414b8538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414b8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414b8710"/>
        <function-ref name="isInput" scoped="" ref="0x414b87f0"/>
        <function-ref name="toggle" scoped="" ref="0x414b88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414b89b0"/>
        <function-ref name="get" scoped="" ref="0x414b8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414b8b70"/>
        <function-ref name="set" scoped="" ref="0x414b8c50"/>
        <function-ref name="clr" scoped="" ref="0x414b8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414b6010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414b61e8"/>
        <function-ref name="isInput" scoped="" ref="0x414b62c8"/>
        <function-ref name="toggle" scoped="" ref="0x414b63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414b6488"/>
        <function-ref name="get" scoped="" ref="0x414b6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414b6648"/>
        <function-ref name="set" scoped="" ref="0x414b6728"/>
        <function-ref name="clr" scoped="" ref="0x414b6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404216b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404216b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421888"/>
        <function-ref name="isInput" scoped="" ref="0x40421968"/>
        <function-ref name="toggle" scoped="" ref="0x40421a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40421b28"/>
        <function-ref name="get" scoped="" ref="0x40421c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421ce8"/>
        <function-ref name="set" scoped="" ref="0x40421dc8"/>
        <function-ref name="clr" scoped="" ref="0x40421ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4042a330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4042a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a508"/>
        <function-ref name="isInput" scoped="" ref="0x4042a5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4042a6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a7a8"/>
        <function-ref name="get" scoped="" ref="0x4042a888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a968"/>
        <function-ref name="set" scoped="" ref="0x4042aa48"/>
        <function-ref name="clr" scoped="" ref="0x4042ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404223d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404223d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404225b0"/>
        <function-ref name="isInput" scoped="" ref="0x40422690"/>
        <function-ref name="toggle" scoped="" ref="0x40422770"/>
        <function-ref name="isOutput" scoped="" ref="0x40422850"/>
        <function-ref name="get" scoped="" ref="0x40422930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422a10"/>
        <function-ref name="set" scoped="" ref="0x40422af0"/>
        <function-ref name="clr" scoped="" ref="0x40422bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042b030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b208"/>
        <function-ref name="isInput" scoped="" ref="0x4042b2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4042b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b4a8"/>
        <function-ref name="get" scoped="" ref="0x4042b588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b668"/>
        <function-ref name="set" scoped="" ref="0x4042b748"/>
        <function-ref name="clr" scoped="" ref="0x4042b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042ac88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ae60"/>
        <function-ref name="isInput" scoped="" ref="0x40429010"/>
        <function-ref name="toggle" scoped="" ref="0x404290f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404291d0"/>
        <function-ref name="get" scoped="" ref="0x404292b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429390"/>
        <function-ref name="set" scoped="" ref="0x40429470"/>
        <function-ref name="clr" scoped="" ref="0x40429550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40422d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40422d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422f08"/>
        <function-ref name="isInput" scoped="" ref="0x40421010"/>
        <function-ref name="toggle" scoped="" ref="0x404210f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404211d0"/>
        <function-ref name="get" scoped="" ref="0x404212b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421390"/>
        <function-ref name="set" scoped="" ref="0x40421470"/>
        <function-ref name="clr" scoped="" ref="0x40421550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042b988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042bb60"/>
        <function-ref name="isInput" scoped="" ref="0x4042bc40"/>
        <function-ref name="toggle" scoped="" ref="0x4042bd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4042be00"/>
        <function-ref name="get" scoped="" ref="0x4042bee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a010"/>
        <function-ref name="set" scoped="" ref="0x4042a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4042a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404296b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404296b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429888"/>
        <function-ref name="isInput" scoped="" ref="0x40429968"/>
        <function-ref name="toggle" scoped="" ref="0x40429a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40429b28"/>
        <function-ref name="get" scoped="" ref="0x40429c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429ce8"/>
        <function-ref name="set" scoped="" ref="0x40429dc8"/>
        <function-ref name="clr" scoped="" ref="0x40429ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d6418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d65f0"/>
        <function-ref name="isInput" scoped="" ref="0x414d66d0"/>
        <function-ref name="toggle" scoped="" ref="0x414d67b0"/>
        <function-ref name="isOutput" scoped="" ref="0x414d6890"/>
        <function-ref name="get" scoped="" ref="0x414d6970"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d6a50"/>
        <function-ref name="set" scoped="" ref="0x414d6b30"/>
        <function-ref name="clr" scoped="" ref="0x414d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d5de0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d4010"/>
        <function-ref name="isInput" scoped="" ref="0x414d40f0"/>
        <function-ref name="toggle" scoped="" ref="0x414d41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414d42b0"/>
        <function-ref name="get" scoped="" ref="0x414d4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d4470"/>
        <function-ref name="set" scoped="" ref="0x414d4550"/>
        <function-ref name="clr" scoped="" ref="0x414d4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d37f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d39d0"/>
        <function-ref name="isInput" scoped="" ref="0x414d3ab0"/>
        <function-ref name="toggle" scoped="" ref="0x414d3b90"/>
        <function-ref name="isOutput" scoped="" ref="0x414d3c70"/>
        <function-ref name="get" scoped="" ref="0x414d3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d3e30"/>
        <function-ref name="set" scoped="" ref="0x414d3f10"/>
        <function-ref name="clr" scoped="" ref="0x414d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d1228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d1400"/>
        <function-ref name="isInput" scoped="" ref="0x414d14e0"/>
        <function-ref name="toggle" scoped="" ref="0x414d15c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414d16a0"/>
        <function-ref name="get" scoped="" ref="0x414d1780"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d1860"/>
        <function-ref name="set" scoped="" ref="0x414d1940"/>
        <function-ref name="clr" scoped="" ref="0x414d1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d0c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d0de0"/>
        <function-ref name="isInput" scoped="" ref="0x414d0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x414cf010"/>
        <function-ref name="isOutput" scoped="" ref="0x414cf0f0"/>
        <function-ref name="get" scoped="" ref="0x414cf1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414cf2b0"/>
        <function-ref name="set" scoped="" ref="0x414cf390"/>
        <function-ref name="clr" scoped="" ref="0x414cf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ce6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ce6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ce898"/>
        <function-ref name="isInput" scoped="" ref="0x414ce978"/>
        <function-ref name="toggle" scoped="" ref="0x414cea58"/>
        <function-ref name="isOutput" scoped="" ref="0x414ceb38"/>
        <function-ref name="get" scoped="" ref="0x414cec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x414cecf8"/>
        <function-ref name="set" scoped="" ref="0x414cedd8"/>
        <function-ref name="clr" scoped="" ref="0x414ceeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414cc0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414cc0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414cc288"/>
        <function-ref name="isInput" scoped="" ref="0x414cc368"/>
        <function-ref name="toggle" scoped="" ref="0x414cc448"/>
        <function-ref name="isOutput" scoped="" ref="0x414cc528"/>
        <function-ref name="get" scoped="" ref="0x414cc608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414cc6e8"/>
        <function-ref name="set" scoped="" ref="0x414cc7c8"/>
        <function-ref name="clr" scoped="" ref="0x414cc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414cba88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414cba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414cbc60"/>
        <function-ref name="isInput" scoped="" ref="0x414cbd40"/>
        <function-ref name="toggle" scoped="" ref="0x414cbe20"/>
        <function-ref name="isOutput" scoped="" ref="0x414cbf00"/>
        <function-ref name="get" scoped="" ref="0x414ca010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414ca0f0"/>
        <function-ref name="set" scoped="" ref="0x414ca1d0"/>
        <function-ref name="clr" scoped="" ref="0x414ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042f170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f348"/>
        <function-ref name="isInput" scoped="" ref="0x4042f428"/>
        <function-ref name="toggle" scoped="" ref="0x4042f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f5e8"/>
        <function-ref name="get" scoped="" ref="0x4042f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f7a8"/>
        <function-ref name="set" scoped="" ref="0x4042f888"/>
        <function-ref name="clr" scoped="" ref="0x4042f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4042ee48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4042ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d050"/>
        <function-ref name="isInput" scoped="" ref="0x4042d130"/>
        <function-ref name="toggle" scoped="" ref="0x4042d210"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d2f0"/>
        <function-ref name="get" scoped="" ref="0x4042d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d4b0"/>
        <function-ref name="set" scoped="" ref="0x4042d590"/>
        <function-ref name="clr" scoped="" ref="0x4042d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40431dc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40431dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430010"/>
        <function-ref name="isInput" scoped="" ref="0x404300f0"/>
        <function-ref name="toggle" scoped="" ref="0x404301d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404302b0"/>
        <function-ref name="get" scoped="" ref="0x40430390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430470"/>
        <function-ref name="set" scoped="" ref="0x40430550"/>
        <function-ref name="clr" scoped="" ref="0x40430630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042fac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4042fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4042fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e010"/>
        <function-ref name="get" scoped="" ref="0x4042e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e1d0"/>
        <function-ref name="set" scoped="" ref="0x4042e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042d7d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4042da88"/>
        <function-ref name="toggle" scoped="" ref="0x4042db68"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dc48"/>
        <function-ref name="get" scoped="" ref="0x4042dd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042de08"/>
        <function-ref name="set" scoped="" ref="0x4042dee8"/>
        <function-ref name="clr" scoped="" ref="0x4042c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40430790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40430790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430968"/>
        <function-ref name="isInput" scoped="" ref="0x40430a48"/>
        <function-ref name="toggle" scoped="" ref="0x40430b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40430c08"/>
        <function-ref name="get" scoped="" ref="0x40430ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430dc8"/>
        <function-ref name="set" scoped="" ref="0x40430ea8"/>
        <function-ref name="clr" scoped="" ref="0x4042f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042e4f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e968"/>
        <function-ref name="get" scoped="" ref="0x4042ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042eb28"/>
        <function-ref name="set" scoped="" ref="0x4042ec08"/>
        <function-ref name="clr" scoped="" ref="0x4042ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042c170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c348"/>
        <function-ref name="isInput" scoped="" ref="0x4042c428"/>
        <function-ref name="toggle" scoped="" ref="0x4042c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c5e8"/>
        <function-ref name="get" scoped="" ref="0x4042c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c7a8"/>
        <function-ref name="set" scoped="" ref="0x4042c888"/>
        <function-ref name="clr" scoped="" ref="0x4042c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f0de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4153a010"/>
        <function-ref name="isInput" scoped="" ref="0x4153a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4153a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4153a2b0"/>
        <function-ref name="get" scoped="" ref="0x4153a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4153a470"/>
        <function-ref name="set" scoped="" ref="0x4153a550"/>
        <function-ref name="clr" scoped="" ref="0x4153a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415397f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415397f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415399d0"/>
        <function-ref name="isInput" scoped="" ref="0x41539ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41539b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41539c70"/>
        <function-ref name="get" scoped="" ref="0x41539d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41539e30"/>
        <function-ref name="set" scoped="" ref="0x41539f10"/>
        <function-ref name="clr" scoped="" ref="0x41538010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41537228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41537228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41537400"/>
        <function-ref name="isInput" scoped="" ref="0x415374e0"/>
        <function-ref name="toggle" scoped="" ref="0x415375c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415376a0"/>
        <function-ref name="get" scoped="" ref="0x41537780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41537860"/>
        <function-ref name="set" scoped="" ref="0x41537940"/>
        <function-ref name="clr" scoped="" ref="0x41537a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41536c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41536c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41536de0"/>
        <function-ref name="isInput" scoped="" ref="0x41536ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41535010"/>
        <function-ref name="isOutput" scoped="" ref="0x415350f0"/>
        <function-ref name="get" scoped="" ref="0x415351d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415352b0"/>
        <function-ref name="set" scoped="" ref="0x41535390"/>
        <function-ref name="clr" scoped="" ref="0x41535470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415346c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415346c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41534898"/>
        <function-ref name="isInput" scoped="" ref="0x41534978"/>
        <function-ref name="toggle" scoped="" ref="0x41534a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41534b38"/>
        <function-ref name="get" scoped="" ref="0x41534c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41534cf8"/>
        <function-ref name="set" scoped="" ref="0x41534dd8"/>
        <function-ref name="clr" scoped="" ref="0x41534eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415320b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415320b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41532288"/>
        <function-ref name="isInput" scoped="" ref="0x41532368"/>
        <function-ref name="toggle" scoped="" ref="0x41532448"/>
        <function-ref name="isOutput" scoped="" ref="0x41532528"/>
        <function-ref name="get" scoped="" ref="0x41532608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415326e8"/>
        <function-ref name="set" scoped="" ref="0x415327c8"/>
        <function-ref name="clr" scoped="" ref="0x415328a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41531a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41531a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41531c60"/>
        <function-ref name="isInput" scoped="" ref="0x41531d40"/>
        <function-ref name="toggle" scoped="" ref="0x41531e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41531f00"/>
        <function-ref name="get" scoped="" ref="0x41530010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415300f0"/>
        <function-ref name="set" scoped="" ref="0x415301d0"/>
        <function-ref name="clr" scoped="" ref="0x415302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4152f538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4152f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4152f710"/>
        <function-ref name="isInput" scoped="" ref="0x4152f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4152f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4152f9b0"/>
        <function-ref name="get" scoped="" ref="0x4152fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4152fb70"/>
        <function-ref name="set" scoped="" ref="0x4152fc50"/>
        <function-ref name="clr" scoped="" ref="0x4152fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404352d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404352d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404354a8"/>
        <function-ref name="isInput" scoped="" ref="0x40435588"/>
        <function-ref name="toggle" scoped="" ref="0x40435668"/>
        <function-ref name="isOutput" scoped="" ref="0x40435748"/>
        <function-ref name="get" scoped="" ref="0x40435828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435908"/>
        <function-ref name="set" scoped="" ref="0x404359e8"/>
        <function-ref name="clr" scoped="" ref="0x40435ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40449a88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40449a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449c60"/>
        <function-ref name="isInput" scoped="" ref="0x40449d40"/>
        <function-ref name="toggle" scoped="" ref="0x40449e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40449f00"/>
        <function-ref name="get" scoped="" ref="0x40448010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404480f0"/>
        <function-ref name="set" scoped="" ref="0x404481d0"/>
        <function-ref name="clr" scoped="" ref="0x404482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40446280" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40446280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446458"/>
        <function-ref name="isInput" scoped="" ref="0x40446538"/>
        <function-ref name="toggle" scoped="" ref="0x40446618"/>
        <function-ref name="isOutput" scoped="" ref="0x404466f8"/>
        <function-ref name="get" scoped="" ref="0x404467d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404468b8"/>
        <function-ref name="set" scoped="" ref="0x40446998"/>
        <function-ref name="clr" scoped="" ref="0x40446a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40444a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40444a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444c08"/>
        <function-ref name="isInput" scoped="" ref="0x40444ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40444dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40444ea8"/>
        <function-ref name="get" scoped="" ref="0x4044f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f0f0"/>
        <function-ref name="set" scoped="" ref="0x4044f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4044f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044c280" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c458"/>
        <function-ref name="isInput" scoped="" ref="0x4044c538"/>
        <function-ref name="toggle" scoped="" ref="0x4044c618"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c6f8"/>
        <function-ref name="get" scoped="" ref="0x4044c7d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c8b8"/>
        <function-ref name="set" scoped="" ref="0x4044c998"/>
        <function-ref name="clr" scoped="" ref="0x4044ca78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044aa30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044ac08"/>
        <function-ref name="isInput" scoped="" ref="0x4044ace8"/>
        <function-ref name="toggle" scoped="" ref="0x4044adc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044aea8"/>
        <function-ref name="get" scoped="" ref="0x40455010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404550f0"/>
        <function-ref name="set" scoped="" ref="0x404551d0"/>
        <function-ref name="clr" scoped="" ref="0x404552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404523b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404523b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452588"/>
        <function-ref name="isInput" scoped="" ref="0x40452668"/>
        <function-ref name="toggle" scoped="" ref="0x40452748"/>
        <function-ref name="isOutput" scoped="" ref="0x40452828"/>
        <function-ref name="get" scoped="" ref="0x40452908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404529e8"/>
        <function-ref name="set" scoped="" ref="0x40452ac8"/>
        <function-ref name="clr" scoped="" ref="0x40452ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40450b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40450b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450d40"/>
        <function-ref name="isInput" scoped="" ref="0x40450e20"/>
        <function-ref name="toggle" scoped="" ref="0x40450f00"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b010"/>
        <function-ref name="get" scoped="" ref="0x4045b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b1d0"/>
        <function-ref name="set" scoped="" ref="0x4045b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404593b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404593b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459588"/>
        <function-ref name="isInput" scoped="" ref="0x40459668"/>
        <function-ref name="toggle" scoped="" ref="0x40459748"/>
        <function-ref name="isOutput" scoped="" ref="0x40459828"/>
        <function-ref name="get" scoped="" ref="0x40459908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404599e8"/>
        <function-ref name="set" scoped="" ref="0x40459ac8"/>
        <function-ref name="clr" scoped="" ref="0x40459ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40456b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40456b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40456d40"/>
        <function-ref name="isInput" scoped="" ref="0x40456e20"/>
        <function-ref name="toggle" scoped="" ref="0x40456f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40461010"/>
        <function-ref name="get" scoped="" ref="0x404610f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404611d0"/>
        <function-ref name="set" scoped="" ref="0x404612b0"/>
        <function-ref name="clr" scoped="" ref="0x40461390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045f3b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f588"/>
        <function-ref name="isInput" scoped="" ref="0x4045f668"/>
        <function-ref name="toggle" scoped="" ref="0x4045f748"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f828"/>
        <function-ref name="get" scoped="" ref="0x4045f908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f9e8"/>
        <function-ref name="set" scoped="" ref="0x4045fac8"/>
        <function-ref name="clr" scoped="" ref="0x4045fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045db68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045dd40"/>
        <function-ref name="isInput" scoped="" ref="0x4045de20"/>
        <function-ref name="toggle" scoped="" ref="0x4045df00"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c010"/>
        <function-ref name="get" scoped="" ref="0x4045c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c1d0"/>
        <function-ref name="set" scoped="" ref="0x4045c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404653b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404653b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465588"/>
        <function-ref name="isInput" scoped="" ref="0x40465668"/>
        <function-ref name="toggle" scoped="" ref="0x40465748"/>
        <function-ref name="isOutput" scoped="" ref="0x40465828"/>
        <function-ref name="get" scoped="" ref="0x40465908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404659e8"/>
        <function-ref name="set" scoped="" ref="0x40465ac8"/>
        <function-ref name="clr" scoped="" ref="0x40465ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404804d0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404804d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404806a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40480880" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40480880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40480a58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40480b38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40480c18"/>
        <function-ref name="actualMicro" scoped="" ref="0x40480cf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40480dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40491030" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40491030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40491208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404922b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404922b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40492490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40492c18" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40492c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40492df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40492650" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40492650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40492828"/>
        <function-ref name="taskLoop" scoped="" ref="0x40492908"/>
        <function-ref name="runNextTask" scoped="" ref="0x404929e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fe600" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402fe7d8"/>
        <function-ref name="runTask" scoped="" ref="0x402fe8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402f8ed8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f40c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f41a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f4280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403792a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403792a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40379480"/>
        <function-ref name="runTask" scoped="" ref="0x40379560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40379f10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40379f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4037f108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4037aa30" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4037aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037ac08"/>
        <function-ref name="taskLoop" scoped="" ref="0x4037ace8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4037adc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4038de88" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4038de88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40388070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402f3938" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402f3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4038e680" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4038e858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x404e32a0" loc="22:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x404e32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x404e3478"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x404e3558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x404bf6a8" loc="20:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x404bf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CmdReceive" ref="0x404e4158" loc="21:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CmdReceive" scoped="" ref="0x404e4158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404e4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404e2518" loc="16:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404e2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e26f0"/>
        <function-ref name="stopDone" scoped="" ref="0x404e27d0"/>
        <function-ref name="start" scoped="" ref="0x404e28b0"/>
        <function-ref name="stop" scoped="" ref="0x404e2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_beacon" ref="0x40526e58" loc="80:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send_beacon" scoped="" ref="0x40526e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40535050"/>
        <function-ref name="runTask" scoped="" ref="0x40535130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x404e79d0" loc="18:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404e79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404e7ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x404e7c88"/>
        <function-ref name="getPayload" scoped="" ref="0x404e7d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404e7e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404e7f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x4051e648" loc="31:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4051e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4051ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnReqListenTimer" ref="0x40504a10" loc="26:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnReqListenTimer" scoped="" ref="0x40504a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4050f508"/>
        <function-ref name="fired" scoped="" ref="0x405037a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40503ea8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40503c50"/>
        <function-ref name="getdt" scoped="" ref="0x4050f9b8"/>
        <function-ref name="gett0" scoped="" ref="0x4050f760"/>
        <function-ref name="isRunning" scoped="" ref="0x405039f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40503048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4050f1e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x405032c8"/>
        <function-ref name="stop" scoped="" ref="0x40503548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404edde0" loc="15:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404edde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e2010"/>
        <function-ref name="stopDone" scoped="" ref="0x404e20f0"/>
        <function-ref name="start" scoped="" ref="0x404e21d0"/>
        <function-ref name="stop" scoped="" ref="0x404e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SchedulerInit" ref="0x40513010" loc="33:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SchedulerInit" scoped="" ref="0x40513010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405131e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40523528" loc="38:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40523528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40523700"/>
        <function-ref name="rand32" scoped="" ref="0x405237e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconWaitTimer" ref="0x40506638" loc="25:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconWaitTimer" scoped="" ref="0x40506638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40504170"/>
        <function-ref name="fired" scoped="" ref="0x405053f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40505b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x405058a8"/>
        <function-ref name="getdt" scoped="" ref="0x40504620"/>
        <function-ref name="gett0" scoped="" ref="0x405043c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40505650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40506c60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40505e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40506ee0"/>
        <function-ref name="stop" scoped="" ref="0x405051a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40522820" loc="39:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40522820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40522e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnRepWaitTimer" ref="0x4050fda8" loc="27:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x4050fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4050d8a8"/>
        <function-ref name="fired" scoped="" ref="0x4050eb38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4050d268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4050d010"/>
        <function-ref name="getdt" scoped="" ref="0x4050dd58"/>
        <function-ref name="gett0" scoped="" ref="0x4050db00"/>
        <function-ref name="isRunning" scoped="" ref="0x4050ed90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4050e3e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4050d588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4050e660"/>
        <function-ref name="stop" scoped="" ref="0x4050e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x40500868" loc="20:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x40500868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40500a40"/>
        <function-ref name="getPayload" scoped="" ref="0x40500b20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40500c00"/>
        <function-ref name="cancel" scoped="" ref="0x40500ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x40500dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReply" ref="0x405627b8" loc="394:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReply" scoped="" ref="0x405627b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40562a90"/>
        <function-ref name="runTask" scoped="" ref="0x40562b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x40525010" loc="43:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x40525010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405251e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x405072a0" loc="24:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x405072a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f8d90"/>
        <function-ref name="fired" scoped="" ref="0x404f8048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404f8750"/>
        <function-ref name="isOneShot" scoped="" ref="0x404f84f8"/>
        <function-ref name="getdt" scoped="" ref="0x40506268"/>
        <function-ref name="gett0" scoped="" ref="0x40506010"/>
        <function-ref name="isRunning" scoped="" ref="0x404f82a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405078c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f8a70"/>
        <function-ref name="startOneShot" scoped="" ref="0x40507b48"/>
        <function-ref name="stop" scoped="" ref="0x40507dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateStopTimer" ref="0x40517580" loc="29:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x40517580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40514110"/>
        <function-ref name="fired" scoped="" ref="0x405163a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40516ab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40516858"/>
        <function-ref name="getdt" scoped="" ref="0x405145c0"/>
        <function-ref name="gett0" scoped="" ref="0x40514368"/>
        <function-ref name="isRunning" scoped="" ref="0x40516600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40517c28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40516dd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40517ea8"/>
        <function-ref name="stop" scoped="" ref="0x40516150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x404f4418" loc="22:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x404f4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404f45f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40518cb8" loc="34:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40518cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40511710"/>
        <function-ref name="getPPB" scoped="" ref="0x40511010"/>
        <function-ref name="radioWakeup" scoped="" ref="0x405110f0"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x405111d0"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x405112b0"/>
        <function-ref name="setPPB" scoped="" ref="0x40511390"/>
        <function-ref name="stopTimers" scoped="" ref="0x40511470"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40511550"/>
        <function-ref name="startTimers" scoped="" ref="0x40511630"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40518e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4052a298" loc="40:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4052a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4052a470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4052a550"/>
        <function-ref name="led1On" scoped="" ref="0x4052a630"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4052a710"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4052a7f0"/>
        <function-ref name="get" scoped="" ref="0x4052a8d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4052a9b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4052ad30"/>
        <function-ref name="set" scoped="" ref="0x4052aa90"/>
        <function-ref name="led0On" scoped="" ref="0x4052ab70"/>
        <function-ref name="led2On" scoped="" ref="0x4052ac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x404f4010" loc="21:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x404f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404f41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CmdReceive" ref="0x40525418" loc="44:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CmdReceive" scoped="" ref="0x40525418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405255f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x404f77b0" loc="19:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404f77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404f7988"/>
        <function-ref name="source" scoped="" ref="0x404f7a68"/>
        <function-ref name="address" scoped="" ref="0x404f7b48"/>
        <function-ref name="destination" scoped="" ref="0x404f7c28"/>
        <function-ref name="setSource" scoped="" ref="0x404f7d08"/>
        <function-ref name="setDestination" scoped="" ref="0x404f7de8"/>
        <function-ref name="type" scoped="" ref="0x404f7ec8"/>
        <function-ref name="setType" scoped="" ref="0x404ec010"/>
        <function-ref name="isForMe" scoped="" ref="0x404ec0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x404ec1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x404ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateTimer" ref="0x4050b1a0" loc="28:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x4050b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4050ac80"/>
        <function-ref name="fired" scoped="" ref="0x4050bf20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4050a640"/>
        <function-ref name="isOneShot" scoped="" ref="0x4050a3e8"/>
        <function-ref name="getdt" scoped="" ref="0x40517150"/>
        <function-ref name="gett0" scoped="" ref="0x4050aed8"/>
        <function-ref name="isRunning" scoped="" ref="0x4050a190"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4050b7c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4050a960"/>
        <function-ref name="startOneShot" scoped="" ref="0x4050ba48"/>
        <function-ref name="stop" scoped="" ref="0x4050bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendRequest" ref="0x40564220" loc="382:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendRequest" scoped="" ref="0x40564220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405643f8"/>
        <function-ref name="runTask" scoped="" ref="0x405644d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4059ccd8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4059ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4059ceb0"/>
        <function-ref name="stopDone" scoped="" ref="0x40599010"/>
        <function-ref name="start" scoped="" ref="0x405990f0"/>
        <function-ref name="stop" scoped="" ref="0x405991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405a4ea8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405b79c0"/>
        <function-ref name="clear" scoped="" ref="0x405b7d70"/>
        <function-ref name="isValid" scoped="" ref="0x405b7610"/>
        <function-ref name="set" scoped="" ref="0x405b5150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40599630" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40599630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40599808"/>
        <function-ref name="getPayload" scoped="" ref="0x405998e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405999c8"/>
        <function-ref name="cancel" scoped="" ref="0x40599aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x40599b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405986a8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405986a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40598880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40598a00" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40598a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40598bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40598cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40598d98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40598e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40596010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405aa500" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405aa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x405aa6d8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x405aa7b8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x405aa898"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x405aa978"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x405aaa58"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x405aab38"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x405aac18"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x405aacf8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x405aadd8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x405aaeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40598010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40598010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405981e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405a0308" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a0308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405a04e0"/>
        <function-ref name="noAck" scoped="" ref="0x405a05c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405a06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405961a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405961a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40596380"/>
        <function-ref name="source" scoped="" ref="0x40596460"/>
        <function-ref name="address" scoped="" ref="0x40596540"/>
        <function-ref name="destination" scoped="" ref="0x40596620"/>
        <function-ref name="setSource" scoped="" ref="0x40596700"/>
        <function-ref name="setDestination" scoped="" ref="0x405967e0"/>
        <function-ref name="type" scoped="" ref="0x405968c0"/>
        <function-ref name="setType" scoped="" ref="0x405969a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40596a80"/>
        <function-ref name="setGroup" scoped="" ref="0x40596b60"/>
        <function-ref name="localGroup" scoped="" ref="0x40596c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x405b64a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x405b64a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405a4010"/>
        <function-ref name="clear" scoped="" ref="0x405a43c0"/>
        <function-ref name="isValid" scoped="" ref="0x405b6bf0"/>
        <function-ref name="set" scoped="" ref="0x405a4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c58c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c5a98"/>
        <function-ref name="stopDone" scoped="" ref="0x405c5b78"/>
        <function-ref name="start" scoped="" ref="0x405c5c58"/>
        <function-ref name="stop" scoped="" ref="0x405c5d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405cc4d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405cc4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ca0b8"/>
        <function-ref name="get" scoped="" ref="0x405ccde0"/>
        <function-ref name="isSet" scoped="" ref="0x405ccb20"/>
        <function-ref name="set" scoped="" ref="0x405ca378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405c3590" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405c3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c3768"/>
        <function-ref name="payloadLength" scoped="" ref="0x405c3848"/>
        <function-ref name="getPayload" scoped="" ref="0x405c3928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c3a08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405c3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405c41b0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405c41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c4388"/>
        <function-ref name="getPayload" scoped="" ref="0x405c4468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c4548"/>
        <function-ref name="cancel" scoped="" ref="0x405c4628"/>
        <function-ref name="sendDone" scoped="" ref="0x405c4708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405c3238" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405c3238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c3410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405cd0f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405cd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405cdcb8"/>
        <function-ref name="get" scoped="" ref="0x405cd9f8"/>
        <function-ref name="isSet" scoped="" ref="0x405cd738"/>
        <function-ref name="set" scoped="" ref="0x405cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405d2010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x405d21e8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x405d22c8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x405d23a8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x405d2488"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x405d2568"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x405d2648"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x405d2728"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x405d2808"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x405d28e8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x405d29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405c4b70" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405c4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c4d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405ca9b0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ca9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405db4d0"/>
        <function-ref name="clear" scoped="" ref="0x405db880"/>
        <function-ref name="isValid" scoped="" ref="0x405db120"/>
        <function-ref name="set" scoped="" ref="0x405dbc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405cece0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405cece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d18f0"/>
        <function-ref name="get" scoped="" ref="0x405d1630"/>
        <function-ref name="isSet" scoped="" ref="0x405d1370"/>
        <function-ref name="set" scoped="" ref="0x405d1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405c1a10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405c1be8"/>
        <function-ref name="noAck" scoped="" ref="0x405c1cc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405c1da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405c3c80" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405c3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405c3e58"/>
        <function-ref name="source" scoped="" ref="0x405c1010"/>
        <function-ref name="address" scoped="" ref="0x405c10f0"/>
        <function-ref name="destination" scoped="" ref="0x405c11d0"/>
        <function-ref name="setSource" scoped="" ref="0x405c12b0"/>
        <function-ref name="setDestination" scoped="" ref="0x405c1390"/>
        <function-ref name="type" scoped="" ref="0x405c1470"/>
        <function-ref name="setType" scoped="" ref="0x405c1550"/>
        <function-ref name="isForMe" scoped="" ref="0x405c1630"/>
        <function-ref name="setGroup" scoped="" ref="0x405c1710"/>
        <function-ref name="localGroup" scoped="" ref="0x405c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405da3a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405da3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405daf20"/>
        <function-ref name="clear" scoped="" ref="0x405d82e8"/>
        <function-ref name="isValid" scoped="" ref="0x405dab70"/>
        <function-ref name="set" scoped="" ref="0x405d8698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x405e5978" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405e5978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x405ea2b0"/>
        <function-ref name="channelError" scoped="" ref="0x405e5c30"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x405e5d10"/>
        <function-ref name="getChannelTime" scoped="" ref="0x405e5df0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x405e5ed0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x405ea010"/>
        <function-ref name="timerTick" scoped="" ref="0x405ea0f0"/>
        <function-ref name="getSender" scoped="" ref="0x405ea1d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x405e5b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405f01e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405f01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405f03c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405f04a0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405f0580"/>
        <function-ref name="timerTick" scoped="" ref="0x405f0660"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405f0740"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405f0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x405ee418" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405ee418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x405ee5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405eee40" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405eee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x405f6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x405ed010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x405ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x405ed1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x405dc6e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405dc6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405dc8b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405dc998"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405dca78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405dcb58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x405dcc38"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x405dcd18"/>
        <function-ref name="setAckReceived" scoped="" ref="0x405dcdf8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405dced8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x40600978" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40600978"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40600b50"/>
        <function-ref name="getDSN" scoped="" ref="0x40600c30"/>
        <function-ref name="setFCF" scoped="" ref="0x40600d10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40600df0"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40600ed0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405ef010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405ef0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x405ef1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x405ef2b0"/>
        <function-ref name="getHeader" scoped="" ref="0x405ef390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405ef470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405ef550"/>
        <function-ref name="setType" scoped="" ref="0x405ef630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405ef790"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405ef870"/>
        <function-ref name="setLength" scoped="" ref="0x405ef950"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405efa30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405efb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405efbf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405efcd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405efdb0"/>
        <function-ref name="getLength" scoped="" ref="0x405efe90"/>
        <function-ref name="setDestPan" scoped="" ref="0x405ff010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405ff0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x405ff1d0"/>
        <function-ref name="getType" scoped="" ref="0x405ff3b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405ff490"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405ff570"/>
        <function-ref name="getFramePending" scoped="" ref="0x405ff650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x405ff7d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405ff7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ff9a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405ffa88"/>
        <function-ref name="getPayload" scoped="" ref="0x405ffb68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405ffc48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405ffd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4060e978" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4060e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4060eb50"/>
        <function-ref name="wait" scoped="" ref="0x4060ec30"/>
        <function-ref name="cancel" scoped="" ref="0x4060ed10"/>
        <function-ref name="isFree" scoped="" ref="0x4060edf0"/>
        <function-ref name="getNow" scoped="" ref="0x4060eed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405ebde0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405ebde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405d3010"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405d30f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405d31d0"/>
        <function-ref name="getSender" scoped="" ref="0x405d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405f3278" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405f3278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405f3450"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x405f3530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x405f3610"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405f36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0x405e11a8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x405e11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x405e1380"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x405e18c0"/>
        <function-ref name="getPayload" scoped="" ref="0x405e1540"/>
        <function-ref name="setLength" scoped="" ref="0x405e1620"/>
        <function-ref name="getLength" scoped="" ref="0x405e1700"/>
        <function-ref name="getMaxLength" scoped="" ref="0x405e17e0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x405e1460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406484d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406484d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406470b8"/>
        <function-ref name="get" scoped="" ref="0x40648de0"/>
        <function-ref name="isSet" scoped="" ref="0x40648b20"/>
        <function-ref name="set" scoped="" ref="0x40647378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405d61f0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405d61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d63c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405d64a8"/>
        <function-ref name="getPayload" scoped="" ref="0x405d6588"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d6668"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d6748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406490f0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406490f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40649cb8"/>
        <function-ref name="get" scoped="" ref="0x406499f8"/>
        <function-ref name="isSet" scoped="" ref="0x40649738"/>
        <function-ref name="set" scoped="" ref="0x40648010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x406478a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x406478a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406454a0"/>
        <function-ref name="get" scoped="" ref="0x406451e0"/>
        <function-ref name="isSet" scoped="" ref="0x40647ef0"/>
        <function-ref name="set" scoped="" ref="0x40645760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40645c90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40645c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40644868"/>
        <function-ref name="get" scoped="" ref="0x406445a8"/>
        <function-ref name="isSet" scoped="" ref="0x406442e8"/>
        <function-ref name="set" scoped="" ref="0x40644b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40642178" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40642178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40642c78"/>
        <function-ref name="clear" scoped="" ref="0x40655048"/>
        <function-ref name="isValid" scoped="" ref="0x406428c8"/>
        <function-ref name="set" scoped="" ref="0x406553f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406385b0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406385b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40638788"/>
        <function-ref name="noAck" scoped="" ref="0x40638868"/>
        <function-ref name="wasAcked" scoped="" ref="0x40638948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40638ca0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40638ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4064b888"/>
        <function-ref name="get" scoped="" ref="0x4064b5c8"/>
        <function-ref name="isSet" scoped="" ref="0x4064b308"/>
        <function-ref name="set" scoped="" ref="0x4064bb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405d68e0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405d68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405d6ab8"/>
        <function-ref name="source" scoped="" ref="0x405d6b98"/>
        <function-ref name="address" scoped="" ref="0x405d6c78"/>
        <function-ref name="destination" scoped="" ref="0x405d6d58"/>
        <function-ref name="setSource" scoped="" ref="0x405d6e38"/>
        <function-ref name="setDestination" scoped="" ref="0x405d6f18"/>
        <function-ref name="type" scoped="" ref="0x40638010"/>
        <function-ref name="setType" scoped="" ref="0x406380f0"/>
        <function-ref name="isForMe" scoped="" ref="0x406381d0"/>
        <function-ref name="setGroup" scoped="" ref="0x406382b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40638390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40655b30" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40655b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406546b8"/>
        <function-ref name="clear" scoped="" ref="0x40654a68"/>
        <function-ref name="isValid" scoped="" ref="0x40654308"/>
        <function-ref name="set" scoped="" ref="0x40654e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4065f390" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4065f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065e010"/>
        <function-ref name="get" scoped="" ref="0x4065fc98"/>
        <function-ref name="isSet" scoped="" ref="0x4065f9d8"/>
        <function-ref name="set" scoped="" ref="0x4065e2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4064f350" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4064f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4064f528"/>
        <function-ref name="payloadLength" scoped="" ref="0x4064f608"/>
        <function-ref name="getPayload" scoped="" ref="0x4064f6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4064f7c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4064f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4064c010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4064c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4064cbd8"/>
        <function-ref name="get" scoped="" ref="0x4064c918"/>
        <function-ref name="isSet" scoped="" ref="0x4064c658"/>
        <function-ref name="set" scoped="" ref="0x4064ce98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x4065e800" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x4065e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065c3d8"/>
        <function-ref name="get" scoped="" ref="0x4065c118"/>
        <function-ref name="isSet" scoped="" ref="0x4065ee48"/>
        <function-ref name="set" scoped="" ref="0x4065c698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x40669310" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40669310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406694e8"/>
        <function-ref name="getDSN" scoped="" ref="0x406695c8"/>
        <function-ref name="setFCF" scoped="" ref="0x406696a8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40669788"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40669868"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40669948"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40669a28"/>
        <function-ref name="setDSN" scoped="" ref="0x40669b08"/>
        <function-ref name="createAckReply" scoped="" ref="0x40669be8"/>
        <function-ref name="getHeader" scoped="" ref="0x40669cc8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40669da8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40669e88"/>
        <function-ref name="setType" scoped="" ref="0x40668010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40668170"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40668250"/>
        <function-ref name="setLength" scoped="" ref="0x40668330"/>
        <function-ref name="get6LowPan" scoped="" ref="0x40668410"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406684f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406685d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406686b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40668790"/>
        <function-ref name="getLength" scoped="" ref="0x40668870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40668950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40668a30"/>
        <function-ref name="getFCF" scoped="" ref="0x40668b10"/>
        <function-ref name="getType" scoped="" ref="0x40668cf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40668dd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40668eb0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40667010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4065cbc8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4065cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065b7b8"/>
        <function-ref name="get" scoped="" ref="0x4065b4f8"/>
        <function-ref name="isSet" scoped="" ref="0x4065b238"/>
        <function-ref name="set" scoped="" ref="0x4065ba78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40659100" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40659100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40659c00"/>
        <function-ref name="clear" scoped="" ref="0x40658010"/>
        <function-ref name="isValid" scoped="" ref="0x40659850"/>
        <function-ref name="set" scoped="" ref="0x406583c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40667330" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40667330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40667978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40652de0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40652de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4064f010"/>
        <function-ref name="noAck" scoped="" ref="0x4064f0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4064f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4064fc00" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4064fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4064e7f8"/>
        <function-ref name="get" scoped="" ref="0x4064e538"/>
        <function-ref name="isSet" scoped="" ref="0x4064e278"/>
        <function-ref name="set" scoped="" ref="0x4064eab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40667d68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40667d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406663e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40658af8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40658af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406576b8"/>
        <function-ref name="clear" scoped="" ref="0x40657a68"/>
        <function-ref name="isValid" scoped="" ref="0x40657308"/>
        <function-ref name="set" scoped="" ref="0x40657e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x40650470" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40650470"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40650648"/>
        <function-ref name="getDSN" scoped="" ref="0x40650728"/>
        <function-ref name="setFCF" scoped="" ref="0x40650808"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406508e8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x406509c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40650aa8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40650b88"/>
        <function-ref name="setDSN" scoped="" ref="0x40650c68"/>
        <function-ref name="createAckReply" scoped="" ref="0x40650d48"/>
        <function-ref name="getHeader" scoped="" ref="0x40650e28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40650f08"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40693010"/>
        <function-ref name="setType" scoped="" ref="0x406930f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40693250"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40693330"/>
        <function-ref name="setLength" scoped="" ref="0x40693410"/>
        <function-ref name="get6LowPan" scoped="" ref="0x406934f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406935d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406936b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40693790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40693870"/>
        <function-ref name="getLength" scoped="" ref="0x40693950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40693a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40693b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40693bf0"/>
        <function-ref name="getType" scoped="" ref="0x40693dd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40693eb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40692010"/>
        <function-ref name="getFramePending" scoped="" ref="0x406920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40692288" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40692288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40692460"/>
        <function-ref name="source" scoped="" ref="0x40692540"/>
        <function-ref name="address" scoped="" ref="0x40692620"/>
        <function-ref name="destination" scoped="" ref="0x40692700"/>
        <function-ref name="setSource" scoped="" ref="0x406927e0"/>
        <function-ref name="setDestination" scoped="" ref="0x406928c0"/>
        <function-ref name="type" scoped="" ref="0x406929a0"/>
        <function-ref name="setType" scoped="" ref="0x40692a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40692b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40692c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40692d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x406a5480" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x406a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406a5658"/>
        <function-ref name="getDSN" scoped="" ref="0x406a5738"/>
        <function-ref name="setFCF" scoped="" ref="0x406a5818"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406a58f8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x406a59d8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406a5ab8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406a5b98"/>
        <function-ref name="setDSN" scoped="" ref="0x406a5c78"/>
        <function-ref name="createAckReply" scoped="" ref="0x406a5d58"/>
        <function-ref name="getHeader" scoped="" ref="0x406a5e38"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406a5f18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406a2010"/>
        <function-ref name="setType" scoped="" ref="0x406a20f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406a2250"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406a2330"/>
        <function-ref name="setLength" scoped="" ref="0x406a2410"/>
        <function-ref name="get6LowPan" scoped="" ref="0x406a24f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406a25d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406a26b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406a2790"/>
        <function-ref name="setFramePending" scoped="" ref="0x406a2870"/>
        <function-ref name="getLength" scoped="" ref="0x406a2950"/>
        <function-ref name="setDestPan" scoped="" ref="0x406a2a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406a2b10"/>
        <function-ref name="getFCF" scoped="" ref="0x406a2bf0"/>
        <function-ref name="getType" scoped="" ref="0x406a2dd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406a2eb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406a1010"/>
        <function-ref name="getFramePending" scoped="" ref="0x406a10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4069d860" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4069d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4069da38"/>
        <function-ref name="changed" scoped="" ref="0x4069db18"/>
        <function-ref name="amGroup" scoped="" ref="0x4069dbf8"/>
        <function-ref name="setAddress" scoped="" ref="0x4069dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406a1288" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406a1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406a1460"/>
        <function-ref name="source" scoped="" ref="0x406a1540"/>
        <function-ref name="address" scoped="" ref="0x406a1620"/>
        <function-ref name="destination" scoped="" ref="0x406a1700"/>
        <function-ref name="setSource" scoped="" ref="0x406a17e0"/>
        <function-ref name="setDestination" scoped="" ref="0x406a18c0"/>
        <function-ref name="type" scoped="" ref="0x406a19a0"/>
        <function-ref name="setType" scoped="" ref="0x406a1a80"/>
        <function-ref name="isForMe" scoped="" ref="0x406a1b60"/>
        <function-ref name="setGroup" scoped="" ref="0x406a1c40"/>
        <function-ref name="localGroup" scoped="" ref="0x406a1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x406e0060" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406e0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406e0238"/>
        <function-ref name="changed" scoped="" ref="0x406e0318"/>
        <function-ref name="amGroup" scoped="" ref="0x406e03f8"/>
        <function-ref name="setAddress" scoped="" ref="0x406e04d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40694d30" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40694d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ec390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406fcd08" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406fcd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406e9478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406e9968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406e96f0"/>
        <function-ref name="overflow" scoped="" ref="0x406e9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40701c40" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40701c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40701e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40701ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x40706010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407060f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407061d0"/>
        <function-ref name="setControlB" scoped="" ref="0x407062b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40706390"/>
        <function-ref name="getControlB" scoped="" ref="0x40706470"/>
        <function-ref name="setControlC" scoped="" ref="0x40706550"/>
        <function-ref name="setControlA" scoped="" ref="0x40706630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40712a28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40712a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40700500"/>
        <function-ref name="test" scoped="" ref="0x40700010"/>
        <function-ref name="get" scoped="" ref="0x40705088"/>
        <function-ref name="captured" scoped="" ref="0x407055a0"/>
        <function-ref name="reset" scoped="" ref="0x40705840"/>
        <function-ref name="isOn" scoped="" ref="0x40700288"/>
        <function-ref name="set" scoped="" ref="0x40705300"/>
        <function-ref name="start" scoped="" ref="0x40705ab8"/>
        <function-ref name="stop" scoped="" ref="0x40705d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4070c628" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4070c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4070fba0"/>
        <function-ref name="fired" scoped="" ref="0x4070f1c0"/>
        <function-ref name="get" scoped="" ref="0x4070cc70"/>
        <function-ref name="reset" scoped="" ref="0x4070f438"/>
        <function-ref name="isOn" scoped="" ref="0x4070fe18"/>
        <function-ref name="set" scoped="" ref="0x4070cee8"/>
        <function-ref name="start" scoped="" ref="0x4070f6b0"/>
        <function-ref name="stop" scoped="" ref="0x4070f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407071b8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407071b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406f7c68"/>
        <function-ref name="test" scoped="" ref="0x406f7778"/>
        <function-ref name="get" scoped="" ref="0x40707800"/>
        <function-ref name="setScale" scoped="" ref="0x406f7ee0"/>
        <function-ref name="getScale" scoped="" ref="0x406f61c0"/>
        <function-ref name="reset" scoped="" ref="0x406f7010"/>
        <function-ref name="overflow" scoped="" ref="0x40707d18"/>
        <function-ref name="isOn" scoped="" ref="0x406f79f0"/>
        <function-ref name="set" scoped="" ref="0x40707a78"/>
        <function-ref name="start" scoped="" ref="0x406f7288"/>
        <function-ref name="stop" scoped="" ref="0x406f7500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4071cdb0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4071cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x4071b010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4071b0f0"/>
        <function-ref name="getControlA" scoped="" ref="0x4071b1d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4071b2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4071b390"/>
        <function-ref name="setControlB" scoped="" ref="0x4071b470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4071b550"/>
        <function-ref name="getControlB" scoped="" ref="0x4071b630"/>
        <function-ref name="setControlC" scoped="" ref="0x4071b710"/>
        <function-ref name="setControlA" scoped="" ref="0x4071b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40719a80" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40719a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40716010"/>
        <function-ref name="fired" scoped="" ref="0x40718610"/>
        <function-ref name="get" scoped="" ref="0x407180f8"/>
        <function-ref name="reset" scoped="" ref="0x40718888"/>
        <function-ref name="isOn" scoped="" ref="0x40716288"/>
        <function-ref name="set" scoped="" ref="0x40718370"/>
        <function-ref name="start" scoped="" ref="0x40718b00"/>
        <function-ref name="stop" scoped="" ref="0x40718d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4071bb28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4071bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40719640"/>
        <function-ref name="test" scoped="" ref="0x40719150"/>
        <function-ref name="get" scoped="" ref="0x4071a200"/>
        <function-ref name="captured" scoped="" ref="0x4071a718"/>
        <function-ref name="reset" scoped="" ref="0x4071a9b8"/>
        <function-ref name="isOn" scoped="" ref="0x407193c8"/>
        <function-ref name="set" scoped="" ref="0x4071a478"/>
        <function-ref name="start" scoped="" ref="0x4071ac30"/>
        <function-ref name="stop" scoped="" ref="0x4071aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407166a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407166a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40715c90"/>
        <function-ref name="fired" scoped="" ref="0x407152b0"/>
        <function-ref name="get" scoped="" ref="0x40716ce8"/>
        <function-ref name="reset" scoped="" ref="0x40715528"/>
        <function-ref name="isOn" scoped="" ref="0x40715f08"/>
        <function-ref name="set" scoped="" ref="0x40715010"/>
        <function-ref name="start" scoped="" ref="0x407157a0"/>
        <function-ref name="stop" scoped="" ref="0x40715a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40714340" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40714340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40728898"/>
        <function-ref name="fired" scoped="" ref="0x40714ea0"/>
        <function-ref name="get" scoped="" ref="0x40714988"/>
        <function-ref name="reset" scoped="" ref="0x40728130"/>
        <function-ref name="isOn" scoped="" ref="0x40728b10"/>
        <function-ref name="set" scoped="" ref="0x40714c00"/>
        <function-ref name="start" scoped="" ref="0x407283a8"/>
        <function-ref name="stop" scoped="" ref="0x40728620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4070bad0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4070bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4071c538"/>
        <function-ref name="test" scoped="" ref="0x4071c048"/>
        <function-ref name="get" scoped="" ref="0x4071e128"/>
        <function-ref name="setScale" scoped="" ref="0x4071c7b0"/>
        <function-ref name="getScale" scoped="" ref="0x4071ca50"/>
        <function-ref name="reset" scoped="" ref="0x4071e8b8"/>
        <function-ref name="overflow" scoped="" ref="0x4071e640"/>
        <function-ref name="isOn" scoped="" ref="0x4071c2c0"/>
        <function-ref name="set" scoped="" ref="0x4071e3a0"/>
        <function-ref name="start" scoped="" ref="0x4071eb30"/>
        <function-ref name="stop" scoped="" ref="0x4071eda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4075c860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4075c860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4075ca38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4075cc48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4075cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4076b6a0"/>
        <function-ref name="test" scoped="" ref="0x4076b1b0"/>
        <function-ref name="get" scoped="" ref="0x4075b2a8"/>
        <function-ref name="setScale" scoped="" ref="0x4076b918"/>
        <function-ref name="getScale" scoped="" ref="0x4076bbb8"/>
        <function-ref name="reset" scoped="" ref="0x4075ba38"/>
        <function-ref name="overflow" scoped="" ref="0x4075b7c0"/>
        <function-ref name="isOn" scoped="" ref="0x4076b428"/>
        <function-ref name="set" scoped="" ref="0x4075b520"/>
        <function-ref name="start" scoped="" ref="0x4075bcb0"/>
        <function-ref name="stop" scoped="" ref="0x4075bf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4075e470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4075e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4075ebc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407680d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075ee38"/>
        <function-ref name="overflow" scoped="" ref="0x40768350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40768630" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40768630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407740a8"/>
        <function-ref name="test" scoped="" ref="0x40776ba0"/>
        <function-ref name="get" scoped="" ref="0x40768c78"/>
        <function-ref name="setScale" scoped="" ref="0x40774320"/>
        <function-ref name="getScale" scoped="" ref="0x407745c0"/>
        <function-ref name="reset" scoped="" ref="0x40776438"/>
        <function-ref name="overflow" scoped="" ref="0x407761c0"/>
        <function-ref name="isOn" scoped="" ref="0x40776e18"/>
        <function-ref name="set" scoped="" ref="0x40768ef0"/>
        <function-ref name="start" scoped="" ref="0x407766b0"/>
        <function-ref name="stop" scoped="" ref="0x40776928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407726f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407726f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40772e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40791350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407910d8"/>
        <function-ref name="overflow" scoped="" ref="0x407915c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406ea490" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406ea490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406eabe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40772110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406eae58"/>
        <function-ref name="overflow" scoped="" ref="0x40772388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x407903d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x407903d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40790a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40790d68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40790d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4078f4e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4078f9d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4078f760"/>
        <function-ref name="overflow" scoped="" ref="0x4078fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406e1a68" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406e1a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4079e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4079b158" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4079b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4079ac40"/>
        <function-ref name="fired" scoped="" ref="0x4079bed8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4079a600"/>
        <function-ref name="isOneShot" scoped="" ref="0x4079a3a8"/>
        <function-ref name="getdt" scoped="" ref="0x40799110"/>
        <function-ref name="gett0" scoped="" ref="0x4079ae98"/>
        <function-ref name="isRunning" scoped="" ref="0x4079a150"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4079b780"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4079a920"/>
        <function-ref name="startOneShot" scoped="" ref="0x4079ba00"/>
        <function-ref name="stop" scoped="" ref="0x4079bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40799470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40799470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40799ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4079e970" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4079e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4079eb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x407ac010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x407ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407ac760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407acc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ac9d8"/>
        <function-ref name="overflow" scoped="" ref="0x407acec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40797b10" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40797b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40797ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x407a7390" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x407a7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407ad840"/>
        <function-ref name="fired" scoped="" ref="0x407ad010"/>
        <function-ref name="startAt" scoped="" ref="0x407ad500"/>
        <function-ref name="isRunning" scoped="" ref="0x407ad288"/>
        <function-ref name="getAlarm" scoped="" ref="0x407adab8"/>
        <function-ref name="start" scoped="" ref="0x407a7ae0"/>
        <function-ref name="stop" scoped="" ref="0x407a7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40825270" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40825270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40824728"/>
        <function-ref name="fired" scoped="" ref="0x40825ed8"/>
        <function-ref name="startAt" scoped="" ref="0x408243e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40824170"/>
        <function-ref name="getAlarm" scoped="" ref="0x408249a0"/>
        <function-ref name="start" scoped="" ref="0x408259c0"/>
        <function-ref name="stop" scoped="" ref="0x40825c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407a3d88" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407a3d88"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40825010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40824cd0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40824cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4083f438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4083f928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4083f6b0"/>
        <function-ref name="overflow" scoped="" ref="0x4083fba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x415e33f0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x415e33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x415e35c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x415e36a8"/>
        <function-ref name="getControlA" scoped="" ref="0x415e3788"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x415e3868"/>
        <function-ref name="setControlB" scoped="" ref="0x415e3948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x415e3a28"/>
        <function-ref name="getControlB" scoped="" ref="0x415e3b08"/>
        <function-ref name="setControlA" scoped="" ref="0x415e3be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415974d8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415974d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415969a0"/>
        <function-ref name="fired" scoped="" ref="0x41596170"/>
        <function-ref name="startAt" scoped="" ref="0x41596660"/>
        <function-ref name="isRunning" scoped="" ref="0x415963e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41596c18"/>
        <function-ref name="start" scoped="" ref="0x41597c28"/>
        <function-ref name="stop" scoped="" ref="0x41597ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415970a0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41597278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41594010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41594010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41594760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41594c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x415949d8"/>
        <function-ref name="overflow" scoped="" ref="0x41594ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x415e1830" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x415e1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x415e1a08"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x415e1ae8"/>
        <function-ref name="controlABusy" scoped="" ref="0x415e1bc8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x415e1ca8"/>
        <function-ref name="countBusy" scoped="" ref="0x415e1d88"/>
        <function-ref name="compareABusy" scoped="" ref="0x415e1e68"/>
        <function-ref name="getAssr" scoped="" ref="0x415e0010"/>
        <function-ref name="setAssr" scoped="" ref="0x415e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x415e3dd8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x415e3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x415e1388"/>
        <function-ref name="fired" scoped="" ref="0x415e2980"/>
        <function-ref name="get" scoped="" ref="0x415e2468"/>
        <function-ref name="reset" scoped="" ref="0x415e2bf8"/>
        <function-ref name="isOn" scoped="" ref="0x415e1600"/>
        <function-ref name="set" scoped="" ref="0x415e26e0"/>
        <function-ref name="start" scoped="" ref="0x415e2e70"/>
        <function-ref name="stop" scoped="" ref="0x415e1110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x415931e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415931e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41592c68"/>
        <function-ref name="test" scoped="" ref="0x41592778"/>
        <function-ref name="get" scoped="" ref="0x41593830"/>
        <function-ref name="setScale" scoped="" ref="0x41592ee0"/>
        <function-ref name="getScale" scoped="" ref="0x415e31c0"/>
        <function-ref name="reset" scoped="" ref="0x41592010"/>
        <function-ref name="overflow" scoped="" ref="0x41593d48"/>
        <function-ref name="isOn" scoped="" ref="0x415929f0"/>
        <function-ref name="set" scoped="" ref="0x41593aa8"/>
        <function-ref name="start" scoped="" ref="0x41592288"/>
        <function-ref name="stop" scoped="" ref="0x41592500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407fa408" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407fa408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407fa5e0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407fa6c0"/>
        <function-ref name="getControlA" scoped="" ref="0x407fa7a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407fa880"/>
        <function-ref name="setControlB" scoped="" ref="0x407fa960"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407faa40"/>
        <function-ref name="getControlB" scoped="" ref="0x407fab20"/>
        <function-ref name="setControlA" scoped="" ref="0x407fac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407f8ad0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407f8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407f8ca8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407f8d88"/>
        <function-ref name="controlABusy" scoped="" ref="0x407f8e68"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407f6010"/>
        <function-ref name="countBusy" scoped="" ref="0x407f60f0"/>
        <function-ref name="compareABusy" scoped="" ref="0x407f61d0"/>
        <function-ref name="getAssr" scoped="" ref="0x407f62b0"/>
        <function-ref name="setAssr" scoped="" ref="0x407f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407faf28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407faf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407f8500"/>
        <function-ref name="fired" scoped="" ref="0x407f9a98"/>
        <function-ref name="get" scoped="" ref="0x407f9580"/>
        <function-ref name="reset" scoped="" ref="0x407f9d10"/>
        <function-ref name="isOn" scoped="" ref="0x407f8778"/>
        <function-ref name="set" scoped="" ref="0x407f97f8"/>
        <function-ref name="start" scoped="" ref="0x407f8010"/>
        <function-ref name="stop" scoped="" ref="0x407f8288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e3128" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e3128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407fbb80"/>
        <function-ref name="test" scoped="" ref="0x407fb690"/>
        <function-ref name="get" scoped="" ref="0x407e3770"/>
        <function-ref name="setScale" scoped="" ref="0x407fbdf8"/>
        <function-ref name="getScale" scoped="" ref="0x407fa0b8"/>
        <function-ref name="reset" scoped="" ref="0x407e3f00"/>
        <function-ref name="overflow" scoped="" ref="0x407e3c88"/>
        <function-ref name="isOn" scoped="" ref="0x407fb908"/>
        <function-ref name="set" scoped="" ref="0x407e39e8"/>
        <function-ref name="start" scoped="" ref="0x407fb1a0"/>
        <function-ref name="stop" scoped="" ref="0x407fb418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407f13b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407f13b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407f1590"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407f1670"/>
        <function-ref name="getControlA" scoped="" ref="0x407f1750"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407f1830"/>
        <function-ref name="setControlB" scoped="" ref="0x407f1910"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407f19f0"/>
        <function-ref name="getControlB" scoped="" ref="0x407f1ad0"/>
        <function-ref name="setControlA" scoped="" ref="0x407f1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40808a30" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40808a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40808c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40808e90" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40808e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40807080"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40807160"/>
        <function-ref name="controlABusy" scoped="" ref="0x40807240"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40807320"/>
        <function-ref name="countBusy" scoped="" ref="0x40807400"/>
        <function-ref name="compareABusy" scoped="" ref="0x408074e0"/>
        <function-ref name="getAssr" scoped="" ref="0x408075c0"/>
        <function-ref name="setAssr" scoped="" ref="0x408076a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407f1ed8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407f1ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40808500"/>
        <function-ref name="fired" scoped="" ref="0x407f0a90"/>
        <function-ref name="get" scoped="" ref="0x407f0578"/>
        <function-ref name="reset" scoped="" ref="0x407f0d08"/>
        <function-ref name="isOn" scoped="" ref="0x40808778"/>
        <function-ref name="set" scoped="" ref="0x407f07f0"/>
        <function-ref name="start" scoped="" ref="0x40808010"/>
        <function-ref name="stop" scoped="" ref="0x40808288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407f30e0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407f30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407f2b30"/>
        <function-ref name="test" scoped="" ref="0x407f2640"/>
        <function-ref name="get" scoped="" ref="0x407f3728"/>
        <function-ref name="setScale" scoped="" ref="0x407f2da8"/>
        <function-ref name="getScale" scoped="" ref="0x407f1068"/>
        <function-ref name="reset" scoped="" ref="0x407f3eb8"/>
        <function-ref name="overflow" scoped="" ref="0x407f3c40"/>
        <function-ref name="isOn" scoped="" ref="0x407f28b8"/>
        <function-ref name="set" scoped="" ref="0x407f39a0"/>
        <function-ref name="start" scoped="" ref="0x407f2150"/>
        <function-ref name="stop" scoped="" ref="0x407f23c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40840d08" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40840d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40840ee0"/>
        <function-ref name="runTask" scoped="" ref="0x4085b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40842398" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40842398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40840840"/>
        <function-ref name="fired" scoped="" ref="0x40840010"/>
        <function-ref name="startAt" scoped="" ref="0x40840500"/>
        <function-ref name="isRunning" scoped="" ref="0x40840288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40840ab8"/>
        <function-ref name="start" scoped="" ref="0x40842ae8"/>
        <function-ref name="stop" scoped="" ref="0x40842d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4083c0a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4083c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40843b88"/>
        <function-ref name="fired" scoped="" ref="0x4083ce20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40843548"/>
        <function-ref name="isOneShot" scoped="" ref="0x408432f0"/>
        <function-ref name="getdt" scoped="" ref="0x40842048"/>
        <function-ref name="gett0" scoped="" ref="0x40843de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40843098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4083c6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40843868"/>
        <function-ref name="startOneShot" scoped="" ref="0x4083c948"/>
        <function-ref name="stop" scoped="" ref="0x4083cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x408834b8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x408834b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40883690"/>
        <function-ref name="runTask" scoped="" ref="0x40883770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4086a220" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4086a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40884d58"/>
        <function-ref name="fired" scoped="" ref="0x40884010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40884718"/>
        <function-ref name="isOneShot" scoped="" ref="0x408844c0"/>
        <function-ref name="getdt" scoped="" ref="0x40883268"/>
        <function-ref name="gett0" scoped="" ref="0x40883010"/>
        <function-ref name="isRunning" scoped="" ref="0x40884268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4086a848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40884a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4086aac8"/>
        <function-ref name="stop" scoped="" ref="0x4086ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4085aea8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4085aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4086ba48"/>
        <function-ref name="fired" scoped="" ref="0x40859c88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4086b3e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4086b180"/>
        <function-ref name="getdt" scoped="" ref="0x4086bf18"/>
        <function-ref name="gett0" scoped="" ref="0x4086bcb0"/>
        <function-ref name="isRunning" scoped="" ref="0x40859ef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40859500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4086b718"/>
        <function-ref name="startOneShot" scoped="" ref="0x40859790"/>
        <function-ref name="stop" scoped="" ref="0x40859a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40882970" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40882970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40881010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40881360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40881360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40881ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4087f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40881d28"/>
        <function-ref name="overflow" scoped="" ref="0x4087f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4087ce68" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4087ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40879050"/>
        <function-ref name="wait" scoped="" ref="0x40879130"/>
        <function-ref name="cancel" scoped="" ref="0x40879210"/>
        <function-ref name="isFree" scoped="" ref="0x408792f0"/>
        <function-ref name="getNow" scoped="" ref="0x408793d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408799c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408799c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40878e70"/>
        <function-ref name="fired" scoped="" ref="0x40878640"/>
        <function-ref name="startAt" scoped="" ref="0x40878b30"/>
        <function-ref name="isRunning" scoped="" ref="0x408788b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40892110"/>
        <function-ref name="start" scoped="" ref="0x40878128"/>
        <function-ref name="stop" scoped="" ref="0x408783c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40892b60" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40892b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40892d38"/>
        <function-ref name="wait" scoped="" ref="0x40892e18"/>
        <function-ref name="cancel" scoped="" ref="0x40892ef8"/>
        <function-ref name="isFree" scoped="" ref="0x4088f010"/>
        <function-ref name="getNow" scoped="" ref="0x4088f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4088f470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4088f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4088e940"/>
        <function-ref name="fired" scoped="" ref="0x4088e110"/>
        <function-ref name="startAt" scoped="" ref="0x4088e600"/>
        <function-ref name="isRunning" scoped="" ref="0x4088e388"/>
        <function-ref name="getAlarm" scoped="" ref="0x4088ebb8"/>
        <function-ref name="start" scoped="" ref="0x4088fbc0"/>
        <function-ref name="stop" scoped="" ref="0x4088fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40889740" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40889740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40889918"/>
        <function-ref name="suspend" scoped="" ref="0x408899f8"/>
        <function-ref name="resume" scoped="" ref="0x40889ad8"/>
        <function-ref name="run" scoped="" ref="0x40889bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40891b18" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40891b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40891cf0"/>
        <function-ref name="suspend" scoped="" ref="0x40891dd0"/>
        <function-ref name="resume" scoped="" ref="0x40891eb0"/>
        <function-ref name="run" scoped="" ref="0x4089b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408a9b98" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408a9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a9d70"/>
        <function-ref name="getPayload" scoped="" ref="0x408a9e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408af010"/>
        <function-ref name="cancel" scoped="" ref="0x408af0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408af1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408af3e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408af3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408af5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4089c6b0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4089c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089c888"/>
        <function-ref name="getPayload" scoped="" ref="0x4089c968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089ca48"/>
        <function-ref name="cancel" scoped="" ref="0x4089cb28"/>
        <function-ref name="sendDone" scoped="" ref="0x4089cc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408b0798" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408b0798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b0970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408ae510" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408ae510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x408ae6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b0100" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b02d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x408af750" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408af750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408af928"/>
        <function-ref name="source" scoped="" ref="0x408afa08"/>
        <function-ref name="address" scoped="" ref="0x408afae8"/>
        <function-ref name="destination" scoped="" ref="0x408afbc8"/>
        <function-ref name="setSource" scoped="" ref="0x408afca8"/>
        <function-ref name="setDestination" scoped="" ref="0x408afd88"/>
        <function-ref name="type" scoped="" ref="0x408afe68"/>
        <function-ref name="setType" scoped="" ref="0x408ae010"/>
        <function-ref name="isForMe" scoped="" ref="0x408ae0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x408ae1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x408ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40895e28" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40895e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408b4050"/>
        <function-ref name="stopDone" scoped="" ref="0x408b4130"/>
        <function-ref name="start" scoped="" ref="0x408b4210"/>
        <function-ref name="stop" scoped="" ref="0x408b42f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408b3660" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408b3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b3838"/>
        <function-ref name="getPayload" scoped="" ref="0x408b3918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b39f8"/>
        <function-ref name="cancel" scoped="" ref="0x408b3ad8"/>
        <function-ref name="sendDone" scoped="" ref="0x408b3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408b3dc8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408b3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408b4460" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408b4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b4638"/>
        <function-ref name="getPayload" scoped="" ref="0x408b4718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b47f8"/>
        <function-ref name="cancel" scoped="" ref="0x408b48d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408b49b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408b3010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408b31e8"/>
        <function-ref name="stopDone" scoped="" ref="0x408b32c8"/>
        <function-ref name="start" scoped="" ref="0x408b33a8"/>
        <function-ref name="stop" scoped="" ref="0x408b3488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b4b40" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b4d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408cd970" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408cd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cdb48"/>
        <function-ref name="getPayload" scoped="" ref="0x408cdc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408cdd08"/>
        <function-ref name="cancel" scoped="" ref="0x408cdde8"/>
        <function-ref name="sendDone" scoped="" ref="0x408cdec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408cc130" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408cc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cc308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408b2720" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408b2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b28f8"/>
        <function-ref name="getPayload" scoped="" ref="0x408b29d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b2ab8"/>
        <function-ref name="cancel" scoped="" ref="0x408b2b98"/>
        <function-ref name="sendDone" scoped="" ref="0x408b2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x408cd570" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x408cd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cd748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x408cc4d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x408cc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408cc6a8"/>
        <function-ref name="getDSN" scoped="" ref="0x408cc788"/>
        <function-ref name="setFCF" scoped="" ref="0x408cc868"/>
        <function-ref name="isAckFrame" scoped="" ref="0x408cc948"/>
        <function-ref name="set6LowPan" scoped="" ref="0x408cca28"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408ccb08"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408ccbe8"/>
        <function-ref name="setDSN" scoped="" ref="0x408cccc8"/>
        <function-ref name="createAckReply" scoped="" ref="0x408ccda8"/>
        <function-ref name="getHeader" scoped="" ref="0x408cce88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408cb010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408cb0f0"/>
        <function-ref name="setType" scoped="" ref="0x408cb1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408cb330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408cb410"/>
        <function-ref name="setLength" scoped="" ref="0x408cb4f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x408cb5d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408cb6b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408cb790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408cb870"/>
        <function-ref name="setFramePending" scoped="" ref="0x408cb950"/>
        <function-ref name="getLength" scoped="" ref="0x408cba30"/>
        <function-ref name="setDestPan" scoped="" ref="0x408cbb10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408cbbf0"/>
        <function-ref name="getFCF" scoped="" ref="0x408cbcd0"/>
        <function-ref name="getType" scoped="" ref="0x408cbeb0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408ca010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408ca0f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408ca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b2e00" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408dc600" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408dc600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408dc7d8"/>
        <function-ref name="stopDone" scoped="" ref="0x408dc8b8"/>
        <function-ref name="start" scoped="" ref="0x408dc998"/>
        <function-ref name="stop" scoped="" ref="0x408dca78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408f9150" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408f9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408f9328"/>
        <function-ref name="request" scoped="" ref="0x408f9408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x408f7010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x408f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f71e8"/>
        <function-ref name="ready" scoped="" ref="0x408f72c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408f73a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408f6410" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408f6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f65e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408f66c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f67a8"/>
        <function-ref name="cancel" scoped="" ref="0x408f6888"/>
        <function-ref name="sendDone" scoped="" ref="0x408f6968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408f6ac8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408f6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408fa150" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408fa150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408fa328"/>
        <function-ref name="turnOn" scoped="" ref="0x408fa408"/>
        <function-ref name="setChannel" scoped="" ref="0x408fa4e8"/>
        <function-ref name="done" scoped="" ref="0x408fa5c8"/>
        <function-ref name="standby" scoped="" ref="0x408fa6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408dcbb8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408dcbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408dcd90"/>
        <function-ref name="getPayload" scoped="" ref="0x408dce70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e8010"/>
        <function-ref name="cancel" scoped="" ref="0x408e80f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408e8628" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408e8628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408e8800"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408e88e0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408e89c0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408e8aa0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408e8b80"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408e8c60"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408e8d40"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408e8e20"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408e8f00"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408f9568" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408f9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408f9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408facc0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408facc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fae98"/>
        <function-ref name="header" scoped="" ref="0x408f9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408f98d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408f98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408f9aa8"/>
        <function-ref name="turnOn" scoped="" ref="0x408f9b88"/>
        <function-ref name="setChannel" scoped="" ref="0x408f9c68"/>
        <function-ref name="done" scoped="" ref="0x408f9d48"/>
        <function-ref name="standby" scoped="" ref="0x408f9e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408f7db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408f7db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408f6010"/>
        <function-ref name="stopDone" scoped="" ref="0x408f60f0"/>
        <function-ref name="start" scoped="" ref="0x408f61d0"/>
        <function-ref name="stop" scoped="" ref="0x408f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408f6e00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408f6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408e8310" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408e8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e84e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x408f7508" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x408f7508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f76e0"/>
        <function-ref name="header" scoped="" ref="0x408f77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408fa7e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408fa7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fa9c0"/>
        <function-ref name="ready" scoped="" ref="0x408faaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x408fab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408f7920" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408f7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408f7b78"/>
        <function-ref name="request" scoped="" ref="0x408f7c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408eadd8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408eadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408e7010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408e70f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408e71d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408e72b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408e7390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408e7470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408e7550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408e7630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408e7710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408e77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408f4a70" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408f4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408f4c48"/>
        <function-ref name="stopDone" scoped="" ref="0x408f4d28"/>
        <function-ref name="start" scoped="" ref="0x408f4e08"/>
        <function-ref name="stop" scoped="" ref="0x408f4ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408f1b40" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408f1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408f1d18"/>
        <function-ref name="turnOn" scoped="" ref="0x408f1df8"/>
        <function-ref name="setChannel" scoped="" ref="0x408f1ed8"/>
        <function-ref name="done" scoped="" ref="0x408f0010"/>
        <function-ref name="standby" scoped="" ref="0x408f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408f1090" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408f1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f1268"/>
        <function-ref name="getPayload" scoped="" ref="0x408f1348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f1428"/>
        <function-ref name="cancel" scoped="" ref="0x408f1508"/>
        <function-ref name="sendDone" scoped="" ref="0x408f15e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408f0c20" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408f0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f0df8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f0ed8"/>
        <function-ref name="getPayload" scoped="" ref="0x408ef010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ef0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408ef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408f07e8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408f07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f09c0"/>
        <function-ref name="header" scoped="" ref="0x408f0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408f1770" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408f1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f1948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408f0290" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408f0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f0468"/>
        <function-ref name="ready" scoped="" ref="0x408f0548"/>
        <function-ref name="sendDone" scoped="" ref="0x408f0628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408ef930" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408ef930"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408efb08"/>
        <function-ref name="stopDone" scoped="" ref="0x408efbe8"/>
        <function-ref name="start" scoped="" ref="0x408efcc8"/>
        <function-ref name="stop" scoped="" ref="0x408efda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4090a010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4090a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4090a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4090ae08" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4090ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40909010"/>
        <function-ref name="turnOn" scoped="" ref="0x409090f0"/>
        <function-ref name="setChannel" scoped="" ref="0x409091d0"/>
        <function-ref name="done" scoped="" ref="0x409092b0"/>
        <function-ref name="standby" scoped="" ref="0x40909390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4090a358" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4090a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090a530"/>
        <function-ref name="getPayload" scoped="" ref="0x4090a610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090a6f0"/>
        <function-ref name="cancel" scoped="" ref="0x4090a7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4090a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40908518" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40908518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409086f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409087d0"/>
        <function-ref name="getPayload" scoped="" ref="0x409088b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40908990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40908a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x409080e0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409080e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409082b8"/>
        <function-ref name="header" scoped="" ref="0x40908398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40902430" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40902430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40902608"/>
        <function-ref name="runTask" scoped="" ref="0x409026e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090aa38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x408fdae0" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x408fdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fdcb8"/>
        <function-ref name="runTask" scoped="" ref="0x408fdd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40926e08" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40926e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40925010"/>
        <function-ref name="runTask" scoped="" ref="0x409250f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40909b30" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40909b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40909d08"/>
        <function-ref name="ready" scoped="" ref="0x40909de8"/>
        <function-ref name="sendDone" scoped="" ref="0x40909ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40909518" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40909518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409096f0"/>
        <function-ref name="suspend" scoped="" ref="0x409097d0"/>
        <function-ref name="resume" scoped="" ref="0x409098b0"/>
        <function-ref name="run" scoped="" ref="0x40909990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40938950" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40938950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40938b28"/>
        <function-ref name="getPayload" scoped="" ref="0x40938c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40938ce8"/>
        <function-ref name="cancel" scoped="" ref="0x40938dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40938ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40936168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40936168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40936340"/>
        <function-ref name="header" scoped="" ref="0x40936420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408f2cd8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408f2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f2eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40938010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409380f0"/>
        <function-ref name="cancel" scoped="" ref="0x409381d0"/>
        <function-ref name="sendDone" scoped="" ref="0x409382b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40936640" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40936640"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40936818"/>
        <function-ref name="reportChannelError" scoped="" ref="0x409368f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409369d8"/>
        <function-ref name="getSender" scoped="" ref="0x40936ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40938470" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40938470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40938648"/>
        <function-ref name="header" scoped="" ref="0x40938728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409320c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409320c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409322a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40932380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40932460"/>
        <function-ref name="cancel" scoped="" ref="0x40932540"/>
        <function-ref name="sendDone" scoped="" ref="0x40932620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40932868" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40932868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40932a40"/>
        <function-ref name="header" scoped="" ref="0x40932b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4092ba00" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4092ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092bbd8"/>
        <function-ref name="clearAll" scoped="" ref="0x4092bcb8"/>
        <function-ref name="get" scoped="" ref="0x4092bd98"/>
        <function-ref name="set" scoped="" ref="0x4092be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40933170" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40933170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40933348"/>
        <function-ref name="getPayload" scoped="" ref="0x40933428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40933508"/>
        <function-ref name="cancel" scoped="" ref="0x409335e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409336c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4092d9c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4092d9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4092dba0"/>
        <function-ref name="insertNode" scoped="" ref="0x4092dc80"/>
        <function-ref name="getNode" scoped="" ref="0x4092dd60"/>
        <function-ref name="evicted" scoped="" ref="0x4092de40"/>
        <function-ref name="getIndex" scoped="" ref="0x4092df20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40933888" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40933888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40933a60"/>
        <function-ref name="header" scoped="" ref="0x40933b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40933cb0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40933cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40933e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40932ce0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40932ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40932eb8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40931010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409310f0"/>
        <function-ref name="getSender" scoped="" ref="0x409311d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40935de8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40935de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4093d010"/>
        <function-ref name="insertNode" scoped="" ref="0x4093d0f0"/>
        <function-ref name="getNode" scoped="" ref="0x4093d1d0"/>
        <function-ref name="evicted" scoped="" ref="0x4093d2b0"/>
        <function-ref name="getIndex" scoped="" ref="0x4093d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4093a860" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4093a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4093aa38"/>
        <function-ref name="clearAll" scoped="" ref="0x4093ab18"/>
        <function-ref name="get" scoped="" ref="0x4093abf8"/>
        <function-ref name="set" scoped="" ref="0x4093acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4093dda0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4093dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4093a010"/>
        <function-ref name="insertNode" scoped="" ref="0x4093a0f0"/>
        <function-ref name="getNode" scoped="" ref="0x4093a1d0"/>
        <function-ref name="evicted" scoped="" ref="0x4093a2b0"/>
        <function-ref name="getIndex" scoped="" ref="0x4093a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4093da08" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4093da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4093e848" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4093e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4093ea20"/>
        <function-ref name="clearAll" scoped="" ref="0x4093eb00"/>
        <function-ref name="get" scoped="" ref="0x4093ebe0"/>
        <function-ref name="set" scoped="" ref="0x4093ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4095f428" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4095f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095f600"/>
        <function-ref name="ready" scoped="" ref="0x4095f6e0"/>
        <function-ref name="sendDone" scoped="" ref="0x4095f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4095fa08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4095fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095fbe0"/>
        <function-ref name="header" scoped="" ref="0x4095fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40960ba8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40960ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40960d80"/>
        <function-ref name="turnOn" scoped="" ref="0x40960e60"/>
        <function-ref name="setChannel" scoped="" ref="0x4095f010"/>
        <function-ref name="done" scoped="" ref="0x4095f0f0"/>
        <function-ref name="standby" scoped="" ref="0x4095f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4095fee0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4095fee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4095e0e0"/>
        <function-ref name="turnOn" scoped="" ref="0x4095e1c0"/>
        <function-ref name="setChannel" scoped="" ref="0x4095e2a0"/>
        <function-ref name="done" scoped="" ref="0x4095e380"/>
        <function-ref name="standby" scoped="" ref="0x4095e460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4095e6d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4095e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4095d010"/>
        <function-ref name="channelError" scoped="" ref="0x4095e988"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4095ea68"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4095eb48"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4095ec28"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4095ed08"/>
        <function-ref name="timerTick" scoped="" ref="0x4095ede8"/>
        <function-ref name="getSender" scoped="" ref="0x4095eec8"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4095e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40960748" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40960748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40960920"/>
        <function-ref name="header" scoped="" ref="0x40960a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409601f0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409601f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409603c8"/>
        <function-ref name="ready" scoped="" ref="0x409604a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40960588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409594b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409594b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40959690"/>
        <function-ref name="ready" scoped="" ref="0x40959770"/>
        <function-ref name="sendDone" scoped="" ref="0x40959850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0x4095a970" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4095a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x409592b0"/>
        <function-ref name="channelError" scoped="" ref="0x4095ac28"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4095ad08"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4095ade8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4095aec8"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40959010"/>
        <function-ref name="timerTick" scoped="" ref="0x409590f0"/>
        <function-ref name="getSender" scoped="" ref="0x409591d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4095ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40959a98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40959a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40959c70"/>
        <function-ref name="header" scoped="" ref="0x40959d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4095a1b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4095a1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4095a390"/>
        <function-ref name="turnOn" scoped="" ref="0x4095a470"/>
        <function-ref name="setChannel" scoped="" ref="0x4095a550"/>
        <function-ref name="done" scoped="" ref="0x4095a630"/>
        <function-ref name="standby" scoped="" ref="0x4095a710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40978010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40978010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409781e8"/>
        <function-ref name="turnOn" scoped="" ref="0x409782c8"/>
        <function-ref name="setChannel" scoped="" ref="0x409783a8"/>
        <function-ref name="done" scoped="" ref="0x40978488"/>
        <function-ref name="standby" scoped="" ref="0x40978568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40975a70" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40975a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40975c48"/>
        <function-ref name="insertNode" scoped="" ref="0x40975d28"/>
        <function-ref name="getNode" scoped="" ref="0x40975e08"/>
        <function-ref name="evicted" scoped="" ref="0x40975ee8"/>
        <function-ref name="getIndex" scoped="" ref="0x40974010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4095dcc8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4095dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095dea0"/>
        <function-ref name="header" scoped="" ref="0x4095a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x409741f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409741f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409743d0"/>
        <function-ref name="clearAll" scoped="" ref="0x409744b0"/>
        <function-ref name="get" scoped="" ref="0x40974590"/>
        <function-ref name="set" scoped="" ref="0x40974670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409747f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409747f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409749d0"/>
        <function-ref name="suspend" scoped="" ref="0x40974ab0"/>
        <function-ref name="resume" scoped="" ref="0x40974b90"/>
        <function-ref name="run" scoped="" ref="0x40974c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4095d770" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4095d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095d948"/>
        <function-ref name="ready" scoped="" ref="0x4095da28"/>
        <function-ref name="sendDone" scoped="" ref="0x4095db08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0x4097aa50" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0x4097aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4097ac28"/>
        <function-ref name="runTask" scoped="" ref="0x4097ad08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40978808" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40978808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40975330"/>
        <function-ref name="fired" scoped="" ref="0x409775b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40977cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40977a60"/>
        <function-ref name="getdt" scoped="" ref="0x409757e0"/>
        <function-ref name="gett0" scoped="" ref="0x40975588"/>
        <function-ref name="isRunning" scoped="" ref="0x40977808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40978e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40975010"/>
        <function-ref name="startOneShot" scoped="" ref="0x409770d8"/>
        <function-ref name="stop" scoped="" ref="0x40977358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40997918" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40997918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4098b4c8"/>
        <function-ref name="fired" scoped="" ref="0x40996768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40996e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40996c18"/>
        <function-ref name="getdt" scoped="" ref="0x4098b978"/>
        <function-ref name="gett0" scoped="" ref="0x4098b720"/>
        <function-ref name="isRunning" scoped="" ref="0x409969c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40996010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4098b1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40996290"/>
        <function-ref name="stop" scoped="" ref="0x40996510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40992ab8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40992ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4098e650"/>
        <function-ref name="fired" scoped="" ref="0x4098f858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4098e010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4098fd08"/>
        <function-ref name="getdt" scoped="" ref="0x4098eb00"/>
        <function-ref name="gett0" scoped="" ref="0x4098e8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4098fab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4098f100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4098e330"/>
        <function-ref name="startOneShot" scoped="" ref="0x4098f380"/>
        <function-ref name="stop" scoped="" ref="0x4098f600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4098a850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4098a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098aa28"/>
        <function-ref name="clearAll" scoped="" ref="0x4098ab08"/>
        <function-ref name="get" scoped="" ref="0x4098abe8"/>
        <function-ref name="set" scoped="" ref="0x4098acc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a4c60" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a4e38"/>
        <function-ref name="ready" scoped="" ref="0x409a4f18"/>
        <function-ref name="sendDone" scoped="" ref="0x409a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a3258" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a3258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a3430"/>
        <function-ref name="header" scoped="" ref="0x409a3510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409a3788" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409a3788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x409a3960"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x409a3a40"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x409a3b20"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x409a3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a4750" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a4928"/>
        <function-ref name="header" scoped="" ref="0x409a4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a41f8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a41f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a43d0"/>
        <function-ref name="ready" scoped="" ref="0x409a44b0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a4590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a2e40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4099e050"/>
        <function-ref name="ready" scoped="" ref="0x4099e130"/>
        <function-ref name="sendDone" scoped="" ref="0x4099e210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4099e458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4099e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4099e630"/>
        <function-ref name="header" scoped="" ref="0x4099e710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4099e8b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4099e8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099ea90"/>
        <function-ref name="wait" scoped="" ref="0x4099eb70"/>
        <function-ref name="cancel" scoped="" ref="0x4099ec50"/>
        <function-ref name="isFree" scoped="" ref="0x4099ed30"/>
        <function-ref name="getNow" scoped="" ref="0x4099ee10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4099d010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4099d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4099d1e8"/>
        <function-ref name="rand32" scoped="" ref="0x4099d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4099d540" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4099d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4099d718"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4099d7f8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4099d8d8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4099d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a2930" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a2b08"/>
        <function-ref name="header" scoped="" ref="0x409a2be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a23d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a25b0"/>
        <function-ref name="ready" scoped="" ref="0x409a2690"/>
        <function-ref name="sendDone" scoped="" ref="0x409a2770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x40999508" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x40999508"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409996e0"/>
        <function-ref name="runTask" scoped="" ref="0x409997c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409ca0f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409ca0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409ca2c8"/>
        <function-ref name="rand32" scoped="" ref="0x409ca3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4099f808" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4099f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4099fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4099f2e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4099f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4099f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409c6b40" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409c6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409c6d18"/>
        <function-ref name="rand32" scoped="" ref="0x409c6df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409c6280" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409c6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409cad50" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409cad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409caf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a5ce0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a5eb8"/>
        <function-ref name="ready" scoped="" ref="0x409bd010"/>
        <function-ref name="sendDone" scoped="" ref="0x409bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409bd338" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409bd338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409bd510"/>
        <function-ref name="header" scoped="" ref="0x409bd5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409bd840" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409bd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409bda18"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409bdaf8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409bdbd8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409bdcb8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409bdd98"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409bde78"/>
        <function-ref name="setAckReceived" scoped="" ref="0x409bc010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a57d0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a59a8"/>
        <function-ref name="header" scoped="" ref="0x409a5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a5278" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a5278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a5450"/>
        <function-ref name="ready" scoped="" ref="0x409a5530"/>
        <function-ref name="sendDone" scoped="" ref="0x409a5610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409db348" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409db348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409db520"/>
        <function-ref name="ready" scoped="" ref="0x409db600"/>
        <function-ref name="sendDone" scoped="" ref="0x409db6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409db928" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409db928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409dbb00"/>
        <function-ref name="header" scoped="" ref="0x409dbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409dbd88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409dbd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409da010"/>
        <function-ref name="wait" scoped="" ref="0x409da0f0"/>
        <function-ref name="cancel" scoped="" ref="0x409da1d0"/>
        <function-ref name="isFree" scoped="" ref="0x409da2b0"/>
        <function-ref name="getNow" scoped="" ref="0x409da390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409bcd60" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409bcd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409db010"/>
        <function-ref name="header" scoped="" ref="0x409db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x409da580" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409da580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409da758"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409da838"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409da918"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409da9f8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409daad8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409dabb8"/>
        <function-ref name="setAckReceived" scoped="" ref="0x409dac98"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409dad78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409bc808" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409bc808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409bc9e0"/>
        <function-ref name="ready" scoped="" ref="0x409bcac0"/>
        <function-ref name="sendDone" scoped="" ref="0x409bcba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409be5b0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409be5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409be788"/>
        <function-ref name="stopDone" scoped="" ref="0x409be868"/>
        <function-ref name="start" scoped="" ref="0x409be948"/>
        <function-ref name="stop" scoped="" ref="0x409bea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409ea010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ea1e8"/>
        <function-ref name="request" scoped="" ref="0x409ea2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x409eae48" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x409eae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e9050"/>
        <function-ref name="ready" scoped="" ref="0x409e9130"/>
        <function-ref name="sendDone" scoped="" ref="0x409e9210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409e7250" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409e7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e7428"/>
        <function-ref name="getPayload" scoped="" ref="0x409e7508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e75e8"/>
        <function-ref name="cancel" scoped="" ref="0x409e76c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409e77a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409e7908" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409e7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409eb070" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409eb070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409eb248"/>
        <function-ref name="turnOn" scoped="" ref="0x409eb328"/>
        <function-ref name="setChannel" scoped="" ref="0x409eb408"/>
        <function-ref name="done" scoped="" ref="0x409eb4e8"/>
        <function-ref name="standby" scoped="" ref="0x409eb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409beb68" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409beb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409bed40"/>
        <function-ref name="getPayload" scoped="" ref="0x409bee20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409bef00"/>
        <function-ref name="cancel" scoped="" ref="0x409ec010"/>
        <function-ref name="sendDone" scoped="" ref="0x409ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409ec548" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409ec548"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409ec720"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409ec800"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409ec8e0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409ec9c0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x409ecaa0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x409ecb80"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x409ecc60"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x409ecd40"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x409ece20"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409ecf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409ea428" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409ea428"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409ea600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409ebbe0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409ebbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ebdb8"/>
        <function-ref name="header" scoped="" ref="0x409ebe98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409ea790" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409ea790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409ea968"/>
        <function-ref name="turnOn" scoped="" ref="0x409eaa48"/>
        <function-ref name="setChannel" scoped="" ref="0x409eab28"/>
        <function-ref name="done" scoped="" ref="0x409eac08"/>
        <function-ref name="standby" scoped="" ref="0x409eace8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409e9c20" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409e9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409e9df8"/>
        <function-ref name="stopDone" scoped="" ref="0x409e9ed8"/>
        <function-ref name="start" scoped="" ref="0x409e7010"/>
        <function-ref name="stop" scoped="" ref="0x409e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409e7c40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409e7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409e7e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409ec230" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409ec230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ec408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x409e9370" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x409e9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e9548"/>
        <function-ref name="header" scoped="" ref="0x409e9628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409eb708" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409eb708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409eb8e0"/>
        <function-ref name="ready" scoped="" ref="0x409eb9c0"/>
        <function-ref name="sendDone" scoped="" ref="0x409ebaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409e9788" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409e9788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409e99e0"/>
        <function-ref name="request" scoped="" ref="0x409e9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409e29b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409e29b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409e2b90"/>
        <function-ref name="request" scoped="" ref="0x409e2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409e5890" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409e5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409e5a68"/>
        <function-ref name="turnOn" scoped="" ref="0x409e5b48"/>
        <function-ref name="setChannel" scoped="" ref="0x409e5c28"/>
        <function-ref name="done" scoped="" ref="0x409e5d08"/>
        <function-ref name="standby" scoped="" ref="0x409e5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409e2568" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409e2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e2740"/>
        <function-ref name="header" scoped="" ref="0x409e2820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409e2010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e21e8"/>
        <function-ref name="ready" scoped="" ref="0x409e22c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409e23a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x409e2e50" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x409e2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409e1050"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x409e1590"/>
        <function-ref name="getPayload" scoped="" ref="0x409e1210"/>
        <function-ref name="setLength" scoped="" ref="0x409e12f0"/>
        <function-ref name="getLength" scoped="" ref="0x409e13d0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x409e14b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409e1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409ddb58" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409ddb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ddd30"/>
        <function-ref name="request" scoped="" ref="0x409dde10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409f7010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409f7760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x409ed390" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409ed390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0e010"/>
        <function-ref name="get" scoped="" ref="0x409edc98"/>
        <function-ref name="isSet" scoped="" ref="0x409ed9d8"/>
        <function-ref name="set" scoped="" ref="0x40a0e2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x409de670" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x409de670"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409de848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a0cbe0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a0cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a0b730"/>
        <function-ref name="clear" scoped="" ref="0x40a0bae0"/>
        <function-ref name="isValid" scoped="" ref="0x40a0b380"/>
        <function-ref name="set" scoped="" ref="0x40a0be90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0x409f52f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x409f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x409f54c8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x409f55a8"/>
        <function-ref name="spiWrite" scoped="" ref="0x409f5688"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x409f5768"/>
        <function-ref name="crcByte" scoped="" ref="0x409f5848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409de9f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409de9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409debc8"/>
        <function-ref name="turnOn" scoped="" ref="0x409deca8"/>
        <function-ref name="setChannel" scoped="" ref="0x409ded88"/>
        <function-ref name="done" scoped="" ref="0x409dee68"/>
        <function-ref name="standby" scoped="" ref="0x409dd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x409f84a0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409f84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f8678"/>
        <function-ref name="isInput" scoped="" ref="0x409f8758"/>
        <function-ref name="toggle" scoped="" ref="0x409f8838"/>
        <function-ref name="isOutput" scoped="" ref="0x409f8918"/>
        <function-ref name="get" scoped="" ref="0x409f89f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f8ad8"/>
        <function-ref name="set" scoped="" ref="0x409f8bb8"/>
        <function-ref name="clr" scoped="" ref="0x409f8c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0x409ee010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eebd8"/>
        <function-ref name="get" scoped="" ref="0x409ee918"/>
        <function-ref name="isSet" scoped="" ref="0x409ee658"/>
        <function-ref name="set" scoped="" ref="0x409eee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a093d0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a093d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a09a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x409fdb68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409fdb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409fdd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409f5a48" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409f5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f5c20"/>
        <function-ref name="isInput" scoped="" ref="0x409f5d00"/>
        <function-ref name="toggle" scoped="" ref="0x409f5de0"/>
        <function-ref name="isOutput" scoped="" ref="0x409f5ec0"/>
        <function-ref name="get" scoped="" ref="0x409f8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f80f0"/>
        <function-ref name="set" scoped="" ref="0x409f81d0"/>
        <function-ref name="clr" scoped="" ref="0x409f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409dd708" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409dd708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409dd8e0"/>
        <function-ref name="header" scoped="" ref="0x409dd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a08c18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a08c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a08df0"/>
        <function-ref name="wait" scoped="" ref="0x40a08ed0"/>
        <function-ref name="cancel" scoped="" ref="0x40a07010"/>
        <function-ref name="isFree" scoped="" ref="0x40a070f0"/>
        <function-ref name="getNow" scoped="" ref="0x40a071d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40a0e800" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0c3d8"/>
        <function-ref name="get" scoped="" ref="0x40a0c118"/>
        <function-ref name="isSet" scoped="" ref="0x40a0ee48"/>
        <function-ref name="set" scoped="" ref="0x40a0c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409de010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409de010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409de1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409fab30" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409fab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409fad08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409fade8"/>
        <function-ref name="request" scoped="" ref="0x409faec8"/>
        <function-ref name="granted" scoped="" ref="0x409fd010"/>
        <function-ref name="isOwner" scoped="" ref="0x409fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409dc090" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409dc090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409dc268"/>
        <function-ref name="isInput" scoped="" ref="0x409dc348"/>
        <function-ref name="toggle" scoped="" ref="0x409dc428"/>
        <function-ref name="isOutput" scoped="" ref="0x409dc508"/>
        <function-ref name="get" scoped="" ref="0x409dc5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409dc6c8"/>
        <function-ref name="set" scoped="" ref="0x409dc7a8"/>
        <function-ref name="clr" scoped="" ref="0x409dc888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409dd1b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409dd1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409dd388"/>
        <function-ref name="ready" scoped="" ref="0x409dd468"/>
        <function-ref name="sendDone" scoped="" ref="0x409dd548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x409f1650" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409f1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409f18a8"/>
        <function-ref name="disable" scoped="" ref="0x409f1988"/>
        <function-ref name="captured" scoped="" ref="0x409f1a68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409f1b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x409f7bb0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409f7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f4790"/>
        <function-ref name="get" scoped="" ref="0x409f44d0"/>
        <function-ref name="isSet" scoped="" ref="0x409f4210"/>
        <function-ref name="set" scoped="" ref="0x409f4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a085f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a085f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a087d0"/>
        <function-ref name="suspend" scoped="" ref="0x40a088b0"/>
        <function-ref name="resume" scoped="" ref="0x40a08990"/>
        <function-ref name="run" scoped="" ref="0x40a08a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x40a09c98" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x40a09c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x40a09e70"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x40a08470"/>
        <function-ref name="getPayload" scoped="" ref="0x40a080f0"/>
        <function-ref name="setLength" scoped="" ref="0x40a081d0"/>
        <function-ref name="getLength" scoped="" ref="0x40a082b0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x40a08390"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a08010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a5fdd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a5fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a5e010"/>
        <function-ref name="isInput" scoped="" ref="0x40a5e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a5e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a5e2b0"/>
        <function-ref name="get" scoped="" ref="0x40a5e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a5e470"/>
        <function-ref name="set" scoped="" ref="0x40a5e550"/>
        <function-ref name="clr" scoped="" ref="0x40a5e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a5c9c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a5c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a5cb98"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a5cc78"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a5cd58"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a5ce38"/>
        <function-ref name="crcByte" scoped="" ref="0x40a5cf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a5f010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a5f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a5f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a5f3e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a5f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a5f5c0"/>
        <function-ref name="isInput" scoped="" ref="0x40a5f6a0"/>
        <function-ref name="toggle" scoped="" ref="0x40a5f780"/>
        <function-ref name="isOutput" scoped="" ref="0x40a5f860"/>
        <function-ref name="get" scoped="" ref="0x40a5f940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a5fa20"/>
        <function-ref name="set" scoped="" ref="0x40a5fb00"/>
        <function-ref name="clr" scoped="" ref="0x40a5fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a5d030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a5d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x405c5508"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a5c4e0"/>
        <function-ref name="fired" scoped="" ref="0x40a5dc98"/>
        <function-ref name="startAt" scoped="" ref="0x40a5c1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a5df10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a5c758"/>
        <function-ref name="start" scoped="" ref="0x40a5d780"/>
        <function-ref name="stop" scoped="" ref="0x40a5da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a608c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a608c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a60aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a60b80"/>
        <function-ref name="request" scoped="" ref="0x40a60c60"/>
        <function-ref name="granted" scoped="" ref="0x40a60d40"/>
        <function-ref name="isOwner" scoped="" ref="0x40a60e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x409dfe90" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409dfe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a60080"/>
        <function-ref name="isInput" scoped="" ref="0x40a60160"/>
        <function-ref name="toggle" scoped="" ref="0x40a60240"/>
        <function-ref name="isOutput" scoped="" ref="0x40a60320"/>
        <function-ref name="get" scoped="" ref="0x40a60400"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a604e0"/>
        <function-ref name="set" scoped="" ref="0x40a605c0"/>
        <function-ref name="clr" scoped="" ref="0x40a606a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a5e820" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a5e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a5e9f8"/>
        <function-ref name="disable" scoped="" ref="0x40a5ead8"/>
        <function-ref name="captured" scoped="" ref="0x40a5ebb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a5ec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a8c010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a8c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a8c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8c488"/>
        <function-ref name="get" scoped="" ref="0x40a8c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8c648"/>
        <function-ref name="set" scoped="" ref="0x40a8c728"/>
        <function-ref name="clr" scoped="" ref="0x40a8c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a68830" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a68830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a68a08"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a68ae8"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a68bc8"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a68ca8"/>
        <function-ref name="crcByte" scoped="" ref="0x40a68d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a67138" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a67138"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a8dc68"/>
        <function-ref name="test" scoped="" ref="0x40a8d778"/>
        <function-ref name="get" scoped="" ref="0x40a67780"/>
        <function-ref name="captured" scoped="" ref="0x40a67c98"/>
        <function-ref name="reset" scoped="" ref="0x40a8d010"/>
        <function-ref name="isOn" scoped="" ref="0x40a8d9f0"/>
        <function-ref name="set" scoped="" ref="0x40a679f8"/>
        <function-ref name="start" scoped="" ref="0x40a8d288"/>
        <function-ref name="stop" scoped="" ref="0x40a8d500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a8ca10" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a8ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8cbe8"/>
        <function-ref name="isInput" scoped="" ref="0x40a8ccc8"/>
        <function-ref name="toggle" scoped="" ref="0x40a8cda8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8ce88"/>
        <function-ref name="get" scoped="" ref="0x40a8a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8a0f0"/>
        <function-ref name="set" scoped="" ref="0x40a8a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40a8a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a684c0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a684c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a68698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a69d70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a69d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a68010"/>
        <function-ref name="disable" scoped="" ref="0x40a680f0"/>
        <function-ref name="captured" scoped="" ref="0x40a681d0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a961d0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a961d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a963a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a96488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a5ad78" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a5ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a9d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a5a9f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a5a9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a5abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a96920" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a96920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a96af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a96bd8"/>
        <function-ref name="request" scoped="" ref="0x40a96cb8"/>
        <function-ref name="granted" scoped="" ref="0x40a96d98"/>
        <function-ref name="isOwner" scoped="" ref="0x40a96e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40ac11e0" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40ac11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ac13b8"/>
        <function-ref name="runTask" scoped="" ref="0x40ac1498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a951b0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a951b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a95388"/>
        <function-ref name="sendDone" scoped="" ref="0x40a95468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a928c0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a928c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a92a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a92b78"/>
        <function-ref name="request" scoped="" ref="0x40a92c58"/>
        <function-ref name="granted" scoped="" ref="0x40a92d38"/>
        <function-ref name="isOwner" scoped="" ref="0x40a92e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a9cda0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a9cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a95010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a9ca40" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a9ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a9cc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40aadbc8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40aadbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aadda0"/>
        <function-ref name="sleep" scoped="" ref="0x40a922b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a93010"/>
        <function-ref name="dataReady" scoped="" ref="0x40a92390"/>
        <function-ref name="initMaster" scoped="" ref="0x40a931d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a932b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a93390"/>
        <function-ref name="read" scoped="" ref="0x40a93470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a93550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a93630"/>
        <function-ref name="setClock" scoped="" ref="0x40a93710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a937f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a938d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a93a30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a93b10"/>
        <function-ref name="write" scoped="" ref="0x40a93bf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a93cd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a93db0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a93e90"/>
        <function-ref name="getClock" scoped="" ref="0x40a92010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a920f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aade80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a930f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a958e0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a958e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a95ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a95b98"/>
        <function-ref name="request" scoped="" ref="0x40a95c78"/>
        <function-ref name="granted" scoped="" ref="0x40a95d58"/>
        <function-ref name="isOwner" scoped="" ref="0x40a95e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40aaa398" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40aaa398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aaa570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40aabf08" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40aabf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40aaa0f0"/>
        <function-ref name="userId" scoped="" ref="0x40aaa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a97b40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a97b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a97d18"/>
        <function-ref name="sleep" scoped="" ref="0x40acd1d0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a97ed8"/>
        <function-ref name="dataReady" scoped="" ref="0x40acd2b0"/>
        <function-ref name="initMaster" scoped="" ref="0x40ace0f0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ace1d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ace2b0"/>
        <function-ref name="read" scoped="" ref="0x40ace390"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40ace470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40ace550"/>
        <function-ref name="setClock" scoped="" ref="0x40ace630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ace710"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40ace7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40ace950"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40acea30"/>
        <function-ref name="write" scoped="" ref="0x40aceb10"/>
        <function-ref name="enableSpi" scoped="" ref="0x40acebf0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40acecd0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40acedb0"/>
        <function-ref name="getClock" scoped="" ref="0x40acee90"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40acd010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a97df8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ace010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40acd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40ac7b10" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40ac7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac7ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40ac7dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac7ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40aea010"/>
        <function-ref name="get" scoped="" ref="0x40aea0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aea1d0"/>
        <function-ref name="set" scoped="" ref="0x40aea2b0"/>
        <function-ref name="clr" scoped="" ref="0x40aea390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40ac8730" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40ac8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac8908"/>
        <function-ref name="isInput" scoped="" ref="0x40ac89e8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac8ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac8ba8"/>
        <function-ref name="get" scoped="" ref="0x40ac8c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac8d68"/>
        <function-ref name="set" scoped="" ref="0x40ac8e48"/>
        <function-ref name="clr" scoped="" ref="0x40ac8f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40ac6d00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40ac6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac6ed8"/>
        <function-ref name="isInput" scoped="" ref="0x40ac8010"/>
        <function-ref name="toggle" scoped="" ref="0x40ac80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac81d0"/>
        <function-ref name="get" scoped="" ref="0x40ac82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac8390"/>
        <function-ref name="set" scoped="" ref="0x40ac8470"/>
        <function-ref name="clr" scoped="" ref="0x40ac8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40ac6840" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40ac6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ac6a18"/>
        <function-ref name="stop" scoped="" ref="0x40ac6af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40aea598" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40aea598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aea770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40acdf18" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40acdf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aca108"/>
        <function-ref name="sleep" scoped="" ref="0x40ac9550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40aca2c8"/>
        <function-ref name="dataReady" scoped="" ref="0x40ac9630"/>
        <function-ref name="initMaster" scoped="" ref="0x40aca488"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40aca568"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40aca648"/>
        <function-ref name="read" scoped="" ref="0x40aca728"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40aca808"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40aca8e8"/>
        <function-ref name="setClock" scoped="" ref="0x40aca9c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40acaaa8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40acab88"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40acace8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40acadc8"/>
        <function-ref name="write" scoped="" ref="0x40acaea8"/>
        <function-ref name="enableSpi" scoped="" ref="0x40ac9010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40ac90f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40ac91d0"/>
        <function-ref name="getClock" scoped="" ref="0x40ac92b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40ac9390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aca1e8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40aca3a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40ac9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40ac7128" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40ac7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac7300"/>
        <function-ref name="isInput" scoped="" ref="0x40ac73e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ac74c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac75a0"/>
        <function-ref name="get" scoped="" ref="0x40ac7680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac7760"/>
        <function-ref name="set" scoped="" ref="0x40ac7840"/>
        <function-ref name="clr" scoped="" ref="0x40ac7920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b0e750" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b0e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b0e938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b0ea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b27030" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b27030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b27218"/>
        <function-ref name="configure" scoped="" ref="0x40b272f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b0e010" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b0e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b0e1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b0e2d8"/>
        <function-ref name="request" scoped="" ref="0x40b0e3b8"/>
        <function-ref name="granted" scoped="" ref="0x40b0e498"/>
        <function-ref name="isOwner" scoped="" ref="0x40b0e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b0eb58" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b0eb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b0ed30"/>
        <function-ref name="userId" scoped="" ref="0x40b0ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4163a070" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4163a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4163a248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4163a3a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4163a3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4163a580"/>
        <function-ref name="isEmpty" scoped="" ref="0x4163a660"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4163a740"/>
        <function-ref name="dequeue" scoped="" ref="0x4163a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41639b18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41639b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41639d00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41639de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x416383f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x416383f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x416385e0"/>
        <function-ref name="configure" scoped="" ref="0x416386c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41638820" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41638820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x416389f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41638ad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41638bb8"/>
        <function-ref name="dequeue" scoped="" ref="0x41638c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x416393d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x416393d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x416395c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x416396a0"/>
        <function-ref name="request" scoped="" ref="0x41639780"/>
        <function-ref name="granted" scoped="" ref="0x41639860"/>
        <function-ref name="isOwner" scoped="" ref="0x41639940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41639f20" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41639f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41638110"/>
        <function-ref name="userId" scoped="" ref="0x416381f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41638e18" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41638e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41637010"/>
        <function-ref name="runTask" scoped="" ref="0x416370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b49820" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b49820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b50d58"/>
        <function-ref name="fired" scoped="" ref="0x40b50528"/>
        <function-ref name="startAt" scoped="" ref="0x40b50a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40b507a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b4f010"/>
        <function-ref name="start" scoped="" ref="0x40b50010"/>
        <function-ref name="stop" scoped="" ref="0x40b502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41624db0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41624db0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f53d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f53d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41622278"/>
        <function-ref name="fired" scoped="" ref="0x41623a30"/>
        <function-ref name="startAt" scoped="" ref="0x41623f20"/>
        <function-ref name="isRunning" scoped="" ref="0x41623ca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x416224f0"/>
        <function-ref name="start" scoped="" ref="0x41623518"/>
        <function-ref name="stop" scoped="" ref="0x416237b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4161fa60" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4161fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4161c010"/>
        <function-ref name="fired" scoped="" ref="0x4161e5f0"/>
        <function-ref name="get" scoped="" ref="0x4161e0d8"/>
        <function-ref name="reset" scoped="" ref="0x4161e868"/>
        <function-ref name="isOn" scoped="" ref="0x4161c288"/>
        <function-ref name="set" scoped="" ref="0x4161e350"/>
        <function-ref name="start" scoped="" ref="0x4161eae0"/>
        <function-ref name="stop" scoped="" ref="0x4161ed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x416227b0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x416227b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4161f288"/>
        <function-ref name="test" scoped="" ref="0x41620d08"/>
        <function-ref name="get" scoped="" ref="0x41622df8"/>
        <function-ref name="setScale" scoped="" ref="0x4161f500"/>
        <function-ref name="getScale" scoped="" ref="0x4161f7a0"/>
        <function-ref name="reset" scoped="" ref="0x416205a0"/>
        <function-ref name="overflow" scoped="" ref="0x41620328"/>
        <function-ref name="isOn" scoped="" ref="0x4161f010"/>
        <function-ref name="set" scoped="" ref="0x41620088"/>
        <function-ref name="start" scoped="" ref="0x41620818"/>
        <function-ref name="stop" scoped="" ref="0x41620a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40b4dcb0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40b4dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40b72410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b7f4f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b7f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b7f6c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b7f7a8"/>
        <function-ref name="led1On" scoped="" ref="0x40b7f888"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b7f968"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b7fa48"/>
        <function-ref name="get" scoped="" ref="0x40b7fb28"/>
        <function-ref name="led1Off" scoped="" ref="0x40b7fc08"/>
        <function-ref name="led2Off" scoped="" ref="0x40b7c010"/>
        <function-ref name="set" scoped="" ref="0x40b7fce8"/>
        <function-ref name="led0On" scoped="" ref="0x40b7fdc8"/>
        <function-ref name="led2On" scoped="" ref="0x40b7fea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40b79940" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40b79940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b79b18"/>
        <function-ref name="isInput" scoped="" ref="0x40b79bf8"/>
        <function-ref name="toggle" scoped="" ref="0x40b79cd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b79db8"/>
        <function-ref name="get" scoped="" ref="0x40b79e98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b78010"/>
        <function-ref name="set" scoped="" ref="0x40b780f0"/>
        <function-ref name="clr" scoped="" ref="0x40b781d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b7c898" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b7c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b7ca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40b783c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40b783c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b78598"/>
        <function-ref name="isInput" scoped="" ref="0x40b78678"/>
        <function-ref name="toggle" scoped="" ref="0x40b78758"/>
        <function-ref name="isOutput" scoped="" ref="0x40b78838"/>
        <function-ref name="get" scoped="" ref="0x40b78918"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b789f8"/>
        <function-ref name="set" scoped="" ref="0x40b78ad8"/>
        <function-ref name="clr" scoped="" ref="0x40b78bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b7cbe0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b7cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b7cdb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b7ce98"/>
        <function-ref name="led1On" scoped="" ref="0x40b79010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b790f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b791d0"/>
        <function-ref name="get" scoped="" ref="0x40b792b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40b79390"/>
        <function-ref name="led2Off" scoped="" ref="0x40b79710"/>
        <function-ref name="set" scoped="" ref="0x40b79470"/>
        <function-ref name="led0On" scoped="" ref="0x40b79550"/>
        <function-ref name="led2On" scoped="" ref="0x40b79630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40b78da8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40b78da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b77010"/>
        <function-ref name="isInput" scoped="" ref="0x40b770f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b771d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b772b0"/>
        <function-ref name="get" scoped="" ref="0x40b77390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b77470"/>
        <function-ref name="set" scoped="" ref="0x40b77550"/>
        <function-ref name="clr" scoped="" ref="0x40b77630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40b92010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40b92010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b921e8"/>
        <function-ref name="isInput" scoped="" ref="0x40b922c8"/>
        <function-ref name="toggle" scoped="" ref="0x40b923a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b92488"/>
        <function-ref name="get" scoped="" ref="0x40b92568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b92648"/>
        <function-ref name="set" scoped="" ref="0x40b92728"/>
        <function-ref name="clr" scoped="" ref="0x40b92808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40b92a18" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40b92a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b92bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40b92cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40b92db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b92e90"/>
        <function-ref name="get" scoped="" ref="0x40b90010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b900f0"/>
        <function-ref name="set" scoped="" ref="0x40b901d0"/>
        <function-ref name="clr" scoped="" ref="0x40b902b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40b90e48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b90e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b8f050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40b904c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40b904c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b90698"/>
        <function-ref name="isInput" scoped="" ref="0x40b90778"/>
        <function-ref name="toggle" scoped="" ref="0x40b90858"/>
        <function-ref name="isOutput" scoped="" ref="0x40b90938"/>
        <function-ref name="get" scoped="" ref="0x40b90a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b90af8"/>
        <function-ref name="set" scoped="" ref="0x40b90bd8"/>
        <function-ref name="clr" scoped="" ref="0x40b90cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b8e9e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b8e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b8ebb8"/>
        <function-ref name="stopDone" scoped="" ref="0x40b8ec98"/>
        <function-ref name="start" scoped="" ref="0x40b8ed78"/>
        <function-ref name="stop" scoped="" ref="0x40b8ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b8b2c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b8b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b8b4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b8b580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b8b660"/>
        <function-ref name="cancel" scoped="" ref="0x40b8b740"/>
        <function-ref name="sendDone" scoped="" ref="0x40b8b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b8a010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b8a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b8a1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b8a2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40b8a3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b8a488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b8a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b8bc88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b8bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b8be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bb1928" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bb1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bb1b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bb1be0"/>
        <function-ref name="led1On" scoped="" ref="0x40bb1cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bb1da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bb1e80"/>
        <function-ref name="get" scoped="" ref="0x40bb0010"/>
        <function-ref name="led1Off" scoped="" ref="0x40bb00f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40bb0470"/>
        <function-ref name="set" scoped="" ref="0x40bb01d0"/>
        <function-ref name="led0On" scoped="" ref="0x40bb02b0"/>
        <function-ref name="led2On" scoped="" ref="0x40bb0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40bb13f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bb13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bb15c8"/>
        <function-ref name="noAck" scoped="" ref="0x40bb16a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bb1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b8a700" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b8a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b8a8d8"/>
        <function-ref name="source" scoped="" ref="0x40b8a9b8"/>
        <function-ref name="address" scoped="" ref="0x40b8aa98"/>
        <function-ref name="destination" scoped="" ref="0x40b8ab78"/>
        <function-ref name="setSource" scoped="" ref="0x40b8ac58"/>
        <function-ref name="setDestination" scoped="" ref="0x40b8ad38"/>
        <function-ref name="type" scoped="" ref="0x40b8ae18"/>
        <function-ref name="setType" scoped="" ref="0x40b8aef8"/>
        <function-ref name="isForMe" scoped="" ref="0x40bb1010"/>
        <function-ref name="setGroup" scoped="" ref="0x40bb10f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40bb11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bd0d10" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bd0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd0ee8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bcf010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bcf0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40bcf1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bcf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bcf410" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bcf410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcf5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40bafa10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bafa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bafbf8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bafcd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bafdb8"/>
        <function-ref name="cancel" scoped="" ref="0x40bafe98"/>
        <function-ref name="sendDone" scoped="" ref="0x40bae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bd0150" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bd0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd0328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd0408"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd04e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd05c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bae1e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bae1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bae3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40bd07e8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bd09c0"/>
        <function-ref name="noAck" scoped="" ref="0x40bd0aa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bae510" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bae510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bae6e8"/>
        <function-ref name="source" scoped="" ref="0x40bae7c8"/>
        <function-ref name="address" scoped="" ref="0x40bae8a8"/>
        <function-ref name="destination" scoped="" ref="0x40bae988"/>
        <function-ref name="setSource" scoped="" ref="0x40baea68"/>
        <function-ref name="setDestination" scoped="" ref="0x40baeb48"/>
        <function-ref name="type" scoped="" ref="0x40baec28"/>
        <function-ref name="setType" scoped="" ref="0x40baed08"/>
        <function-ref name="isForMe" scoped="" ref="0x40baede8"/>
        <function-ref name="setGroup" scoped="" ref="0x40baeec8"/>
        <function-ref name="localGroup" scoped="" ref="0x40bd0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bcdb78" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bcdb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bcdd50"/>
        <function-ref name="stopDone" scoped="" ref="0x40bcde30"/>
        <function-ref name="start" scoped="" ref="0x40bcdf10"/>
        <function-ref name="stop" scoped="" ref="0x40bca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bcaa60" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bcaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404d44d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bcac38"/>
        <function-ref name="getPayload" scoped="" ref="0x40bcad18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bcadf8"/>
        <function-ref name="cancel" scoped="" ref="0x40bcaed8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bcd7e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bcd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bcd9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bca458" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bca458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404d44d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bca630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bc8660" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bc8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bc8838"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bc8918"/>
        <function-ref name="led1On" scoped="" ref="0x40bc89f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bc8ad8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bc8bb8"/>
        <function-ref name="get" scoped="" ref="0x40bc8c98"/>
        <function-ref name="led1Off" scoped="" ref="0x40bc8d78"/>
        <function-ref name="led2Off" scoped="" ref="0x40bc71d0"/>
        <function-ref name="set" scoped="" ref="0x40bc8e58"/>
        <function-ref name="led0On" scoped="" ref="0x40bc7010"/>
        <function-ref name="led2On" scoped="" ref="0x40bc70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40bc8158" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40bc8158"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404d44d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40bc8330"/>
        <function-ref name="offset" scoped="" ref="0x40bc8410"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40bc84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bdeb88" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bdeb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bded60"/>
        <function-ref name="stopDone" scoped="" ref="0x40bdee40"/>
        <function-ref name="start" scoped="" ref="0x40bdef20"/>
        <function-ref name="stop" scoped="" ref="0x40bdd018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40c208b0" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40c208b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c20a88"/>
        <function-ref name="runTask" scoped="" ref="0x40c20b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40bfbd38" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40bfbd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40bfbf10"/>
        <function-ref name="stop" scoped="" ref="0x40c05010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40c15300" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40c15300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c154d8"/>
        <function-ref name="runTask" scoped="" ref="0x40c155b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bde7f0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bde7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bde9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40c05d60" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40c05d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40bfa010"/>
        <function-ref name="flush" scoped="" ref="0x40bfa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40c226a8" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40c226a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c22880"/>
        <function-ref name="runTask" scoped="" ref="0x40c22960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40bfd790" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40bfd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40bfd968"/>
        <function-ref name="resetSend" scoped="" ref="0x40bfda48"/>
        <function-ref name="dataReceived" scoped="" ref="0x40bfdb28"/>
        <function-ref name="resetReceive" scoped="" ref="0x40bfdc08"/>
        <function-ref name="putData" scoped="" ref="0x40bfdce8"/>
        <function-ref name="putDone" scoped="" ref="0x40bfddc8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40bfdea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bdc040" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bdc040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bdc218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bdc2f8"/>
        <function-ref name="led1On" scoped="" ref="0x40bdc3d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bdc4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bdc598"/>
        <function-ref name="get" scoped="" ref="0x40bdc678"/>
        <function-ref name="led1Off" scoped="" ref="0x40bdc758"/>
        <function-ref name="led2Off" scoped="" ref="0x40bdcad8"/>
        <function-ref name="set" scoped="" ref="0x40bdc838"/>
        <function-ref name="led0On" scoped="" ref="0x40bdc918"/>
        <function-ref name="led2On" scoped="" ref="0x40bdc9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40c1e550" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40c1e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c1e728"/>
        <function-ref name="runTask" scoped="" ref="0x40c1e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40c03348" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40c03348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40c03520"/>
        <function-ref name="nextByte" scoped="" ref="0x40c03600"/>
        <function-ref name="startSend" scoped="" ref="0x40c036e0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40c037c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40c00430" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c00430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40c00608"/>
        <function-ref name="byteReceived" scoped="" ref="0x40c006e8"/>
        <function-ref name="endPacket" scoped="" ref="0x40c007c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40c89510" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40c89510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c896e8"/>
        <function-ref name="runTask" scoped="" ref="0x40c897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c8b108" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c8b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404d44d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8b2f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8b3d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8b4b0"/>
        <function-ref name="cancel" scoped="" ref="0x40c8b590"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40c89948" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40c89948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c89b20"/>
        <function-ref name="runTask" scoped="" ref="0x40c89c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c8cd10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c8cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404d44d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40c8b898" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40c8b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404d44d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40c8ba80"/>
        <function-ref name="offset" scoped="" ref="0x40c8bb60"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40c8bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c8a8c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c8a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c8aaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c8ab80"/>
        <function-ref name="led1On" scoped="" ref="0x40c8ac60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c8ad40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c8ae20"/>
        <function-ref name="get" scoped="" ref="0x40c8af00"/>
        <function-ref name="led1Off" scoped="" ref="0x40c89010"/>
        <function-ref name="led2On" scoped="" ref="0x40c89390"/>
        <function-ref name="set" scoped="" ref="0x40c891d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c890f0"/>
        <function-ref name="led0On" scoped="" ref="0x40c892b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40c8a310" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40c8a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40c8a4e8"/>
        <function-ref name="nextByte" scoped="" ref="0x40c8a5c8"/>
        <function-ref name="startSend" scoped="" ref="0x40c8a6a8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40c8a788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40c8bd80" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c8bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40c8a010"/>
        <function-ref name="byteReceived" scoped="" ref="0x40c8a0f0"/>
        <function-ref name="endPacket" scoped="" ref="0x40c8a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40ca80f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ca80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca82c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ca83a8"/>
        <function-ref name="receive" scoped="" ref="0x40ca8488"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ca8568"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ca8648"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ca8728"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40c88d40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40c88d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40c88f18"/>
        <function-ref name="resetSend" scoped="" ref="0x40cb1010"/>
        <function-ref name="dataReceived" scoped="" ref="0x40cb10f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40cb11d0"/>
        <function-ref name="putData" scoped="" ref="0x40cb12b0"/>
        <function-ref name="putDone" scoped="" ref="0x40cb1390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40cb1470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ca8978" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ca8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ca8b50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ca8c30"/>
        <function-ref name="led1On" scoped="" ref="0x40ca8d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ca8df0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ca8ed0"/>
        <function-ref name="get" scoped="" ref="0x40cb0010"/>
        <function-ref name="led1Off" scoped="" ref="0x40cb00f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40cb0470"/>
        <function-ref name="set" scoped="" ref="0x40cb01d0"/>
        <function-ref name="led0On" scoped="" ref="0x40cb02b0"/>
        <function-ref name="led2On" scoped="" ref="0x40cb0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40cc48f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40cc48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc4ac8"/>
        <function-ref name="receive" scoped="" ref="0x40cc4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40cb3aa0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40cb3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb3c78"/>
        <function-ref name="receivedByte" scoped="" ref="0x40cb3d58"/>
        <function-ref name="receive" scoped="" ref="0x40cb3e38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40cb3f18"/>
        <function-ref name="receiveDone" scoped="" ref="0x40cc7010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40cc70f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cb3620" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cb3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cb37f8"/>
        <function-ref name="stop" scoped="" ref="0x40cb38d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40cc67a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40cc67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc6980"/>
        <function-ref name="receive" scoped="" ref="0x40cc6a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40cc6c28" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40cc6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc6e00"/>
        <function-ref name="receivedByte" scoped="" ref="0x40cc6ee0"/>
        <function-ref name="receive" scoped="" ref="0x40cc2010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40cc20f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40cc21d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40cc22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40cc26f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cc26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cc2e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cc0350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cc00d8"/>
        <function-ref name="overflow" scoped="" ref="0x40cc05c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cc6338" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cc6338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc6510"/>
        <function-ref name="stop" scoped="" ref="0x40cc65f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40cbfe80" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40cbfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cbe070"/>
        <function-ref name="receive" scoped="" ref="0x40cbe150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40cbeb48" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40cbeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cbed20"/>
        <function-ref name="stop" scoped="" ref="0x40cbee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cbf730" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cbf730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cbf908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40cbe2b0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40cbe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cbe488"/>
        <function-ref name="receivedByte" scoped="" ref="0x40cbe568"/>
        <function-ref name="receive" scoped="" ref="0x40cbe648"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40cbe728"/>
        <function-ref name="receiveDone" scoped="" ref="0x40cbe808"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40cbe8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbe9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40cf30a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cf30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cf37f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cf3ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cf3a68"/>
        <function-ref name="overflow" scoped="" ref="0x40cf1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40cf4448" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40cf4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40cf4620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40cf4700"/>
        <function-ref name="rxDone" scoped="" ref="0x40cf47e0"/>
        <function-ref name="txDone" scoped="" ref="0x40cf48c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40cf49a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40cf4a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40cf4b60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40cf4c40"/>
        <function-ref name="tx" scoped="" ref="0x40cf4d20"/>
        <function-ref name="rx" scoped="" ref="0x40cf4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cbfa68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cbfa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cbfc40"/>
        <function-ref name="stop" scoped="" ref="0x40cbfd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40cf4010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40cf4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cf41e8"/>
        <function-ref name="stop" scoped="" ref="0x40cf42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40ce2370" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40ce2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ce2548"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ce2628"/>
        <function-ref name="rxDone" scoped="" ref="0x40ce2708"/>
        <function-ref name="txDone" scoped="" ref="0x40ce27e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ce28c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ce29a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ce2a88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40ce2b68"/>
        <function-ref name="tx" scoped="" ref="0x40ce2c48"/>
        <function-ref name="rx" scoped="" ref="0x40ce2d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40d0fa18" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40d0fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d0fbf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d0fcd0"/>
        <function-ref name="rxDone" scoped="" ref="0x40d0fdb0"/>
        <function-ref name="txDone" scoped="" ref="0x40d0fe90"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d0d010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d0d0f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d0d1d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d0d2b0"/>
        <function-ref name="tx" scoped="" ref="0x40d0d390"/>
        <function-ref name="rx" scoped="" ref="0x40d0d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40ce3e28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40ce3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ce2050"/>
        <function-ref name="stop" scoped="" ref="0x40ce2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40d0f010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40d0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d0f1e8"/>
        <function-ref name="stop" scoped="" ref="0x40d0f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40d0f520" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40d0f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d0f6f8"/>
        <function-ref name="stop" scoped="" ref="0x40d0f7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40ce3918" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40ce3918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ce3af0"/>
        <function-ref name="stop" scoped="" ref="0x40ce3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40d0dca0" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40d0dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d0de78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40d0ab58" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40d0ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d0ad30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d0ae10"/>
        <function-ref name="rxDone" scoped="" ref="0x40d0aef0"/>
        <function-ref name="txDone" scoped="" ref="0x40d09010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d090f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d091d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d092b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d09390"/>
        <function-ref name="tx" scoped="" ref="0x40d09470"/>
        <function-ref name="rx" scoped="" ref="0x40d09550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40d09760" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40d09760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d09938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40d08628" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40d08628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d08800"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d088e0"/>
        <function-ref name="rxDone" scoped="" ref="0x40d089c0"/>
        <function-ref name="txDone" scoped="" ref="0x40d08aa0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d08b80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d08c60"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d08d40"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d08e20"/>
        <function-ref name="tx" scoped="" ref="0x40d08f00"/>
        <function-ref name="rx" scoped="" ref="0x40d07010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40d0a640" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40d0a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d0a818"/>
        <function-ref name="stop" scoped="" ref="0x40d0a8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40d09bb0" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40d09bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d09d88"/>
        <function-ref name="stop" scoped="" ref="0x40d09e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40d08110" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40d08110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d082e8"/>
        <function-ref name="stop" scoped="" ref="0x40d083c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40d07208" loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40d07208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40d073e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40d074c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40d075a0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40d07680"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40d07760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40d07948" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40d07948"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40d07b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40d0a110" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40d0a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d0a2e8"/>
        <function-ref name="stop" scoped="" ref="0x40d0a3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40cc3878" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cc3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d2e010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d2e500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d2e288"/>
        <function-ref name="overflow" scoped="" ref="0x40d2e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d2a3c0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d2a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d2ab10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d29010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d2ad88"/>
        <function-ref name="overflow" scoped="" ref="0x40d29288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40d53090" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d53090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40d53268"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d53348"/>
        <function-ref name="getControlA" scoped="" ref="0x40d53428"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d53508"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d535e8"/>
        <function-ref name="setControlB" scoped="" ref="0x40d536c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d537a8"/>
        <function-ref name="getControlB" scoped="" ref="0x40d53888"/>
        <function-ref name="setControlC" scoped="" ref="0x40d53968"/>
        <function-ref name="setControlA" scoped="" ref="0x40d53a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40d53d80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d53d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d51810"/>
        <function-ref name="test" scoped="" ref="0x40d51320"/>
        <function-ref name="get" scoped="" ref="0x40d523e0"/>
        <function-ref name="captured" scoped="" ref="0x40d528f8"/>
        <function-ref name="reset" scoped="" ref="0x40d52b98"/>
        <function-ref name="isOn" scoped="" ref="0x40d51598"/>
        <function-ref name="set" scoped="" ref="0x40d52658"/>
        <function-ref name="start" scoped="" ref="0x40d52e10"/>
        <function-ref name="stop" scoped="" ref="0x40d510a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40d51f20" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40d51f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d4e500"/>
        <function-ref name="fired" scoped="" ref="0x40d4fa98"/>
        <function-ref name="get" scoped="" ref="0x40d4f580"/>
        <function-ref name="reset" scoped="" ref="0x40d4fd10"/>
        <function-ref name="isOn" scoped="" ref="0x40d4e778"/>
        <function-ref name="set" scoped="" ref="0x40d4f7f8"/>
        <function-ref name="start" scoped="" ref="0x40d4e010"/>
        <function-ref name="stop" scoped="" ref="0x40d4e288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d29d20" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d29d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d547b0"/>
        <function-ref name="test" scoped="" ref="0x40d542c0"/>
        <function-ref name="get" scoped="" ref="0x40d56390"/>
        <function-ref name="setScale" scoped="" ref="0x40d54a28"/>
        <function-ref name="getScale" scoped="" ref="0x40d54cc8"/>
        <function-ref name="reset" scoped="" ref="0x40d56b20"/>
        <function-ref name="overflow" scoped="" ref="0x40d568a8"/>
        <function-ref name="isOn" scoped="" ref="0x40d54538"/>
        <function-ref name="set" scoped="" ref="0x40d56608"/>
        <function-ref name="start" scoped="" ref="0x40d56d98"/>
        <function-ref name="stop" scoped="" ref="0x40d54048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40d48770" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d48770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40d48948"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d48a28"/>
        <function-ref name="getControlA" scoped="" ref="0x40d48b08"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d48be8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d48cc8"/>
        <function-ref name="setControlB" scoped="" ref="0x40d48da8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d48e88"/>
        <function-ref name="getControlB" scoped="" ref="0x40d47010"/>
        <function-ref name="setControlC" scoped="" ref="0x40d470f0"/>
        <function-ref name="setControlA" scoped="" ref="0x40d471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40d44450" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40d44450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d439f0"/>
        <function-ref name="fired" scoped="" ref="0x40d43010"/>
        <function-ref name="get" scoped="" ref="0x40d44a98"/>
        <function-ref name="reset" scoped="" ref="0x40d43288"/>
        <function-ref name="isOn" scoped="" ref="0x40d43c68"/>
        <function-ref name="set" scoped="" ref="0x40d44d10"/>
        <function-ref name="start" scoped="" ref="0x40d43500"/>
        <function-ref name="stop" scoped="" ref="0x40d43778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40d47508" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d47508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d44010"/>
        <function-ref name="test" scoped="" ref="0x40d46a90"/>
        <function-ref name="get" scoped="" ref="0x40d47b50"/>
        <function-ref name="captured" scoped="" ref="0x40d46088"/>
        <function-ref name="reset" scoped="" ref="0x40d46328"/>
        <function-ref name="isOn" scoped="" ref="0x40d46d08"/>
        <function-ref name="set" scoped="" ref="0x40d47dc8"/>
        <function-ref name="start" scoped="" ref="0x40d465a0"/>
        <function-ref name="stop" scoped="" ref="0x40d46818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40d420b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40d420b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d40620"/>
        <function-ref name="fired" scoped="" ref="0x40d42c18"/>
        <function-ref name="get" scoped="" ref="0x40d42700"/>
        <function-ref name="reset" scoped="" ref="0x40d42e90"/>
        <function-ref name="isOn" scoped="" ref="0x40d40898"/>
        <function-ref name="set" scoped="" ref="0x40d42978"/>
        <function-ref name="start" scoped="" ref="0x40d40130"/>
        <function-ref name="stop" scoped="" ref="0x40d403a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40d40cb0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40d40cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d6e288"/>
        <function-ref name="fired" scoped="" ref="0x40d3f820"/>
        <function-ref name="get" scoped="" ref="0x40d3f308"/>
        <function-ref name="reset" scoped="" ref="0x40d3fa98"/>
        <function-ref name="isOn" scoped="" ref="0x40d6e500"/>
        <function-ref name="set" scoped="" ref="0x40d3f580"/>
        <function-ref name="start" scoped="" ref="0x40d3fd10"/>
        <function-ref name="stop" scoped="" ref="0x40d6e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d4b438" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d4b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d49ee0"/>
        <function-ref name="test" scoped="" ref="0x40d499f0"/>
        <function-ref name="get" scoped="" ref="0x40d4ba80"/>
        <function-ref name="setScale" scoped="" ref="0x40d48170"/>
        <function-ref name="getScale" scoped="" ref="0x40d48410"/>
        <function-ref name="reset" scoped="" ref="0x40d49288"/>
        <function-ref name="overflow" scoped="" ref="0x40d49010"/>
        <function-ref name="isOn" scoped="" ref="0x40d49c68"/>
        <function-ref name="set" scoped="" ref="0x40d4bcf8"/>
        <function-ref name="start" scoped="" ref="0x40d49500"/>
        <function-ref name="stop" scoped="" ref="0x40d49778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d8b860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d8b860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d8ba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d8bc48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d8bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d896a0"/>
        <function-ref name="test" scoped="" ref="0x40d891b0"/>
        <function-ref name="get" scoped="" ref="0x40d8a2a8"/>
        <function-ref name="setScale" scoped="" ref="0x40d89918"/>
        <function-ref name="getScale" scoped="" ref="0x40d89bb8"/>
        <function-ref name="reset" scoped="" ref="0x40d8aa38"/>
        <function-ref name="overflow" scoped="" ref="0x40d8a7c0"/>
        <function-ref name="isOn" scoped="" ref="0x40d89428"/>
        <function-ref name="set" scoped="" ref="0x40d8a520"/>
        <function-ref name="start" scoped="" ref="0x40d8acb0"/>
        <function-ref name="stop" scoped="" ref="0x40d8af28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d8de40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d8de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d8c5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d8cad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d8c858"/>
        <function-ref name="overflow" scoped="" ref="0x40d8cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40db6050" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40db6050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40db4a98"/>
        <function-ref name="test" scoped="" ref="0x40db45a8"/>
        <function-ref name="get" scoped="" ref="0x40db6698"/>
        <function-ref name="setScale" scoped="" ref="0x40db4d10"/>
        <function-ref name="getScale" scoped="" ref="0x40db3010"/>
        <function-ref name="reset" scoped="" ref="0x40db6e28"/>
        <function-ref name="overflow" scoped="" ref="0x40db6bb0"/>
        <function-ref name="isOn" scoped="" ref="0x40db4820"/>
        <function-ref name="set" scoped="" ref="0x40db6910"/>
        <function-ref name="start" scoped="" ref="0x40db40b8"/>
        <function-ref name="stop" scoped="" ref="0x40db4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40db00e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40db00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db0830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40db0d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40db0aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40daf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d2ce68" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d2ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db25e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40db2ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40db2858"/>
        <function-ref name="overflow" scoped="" ref="0x40db2d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40dad930" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40dad930"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40dadb08"/>
        <function-ref name="offset" scoped="" ref="0x40dadbe8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40dadcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40da5a48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DozerC.SerialReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40da5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da5c20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40da5d00"/>
        <function-ref name="getPayload" scoped="" ref="0x40da5de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da5ec0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40da4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40da5730" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DozerC.SerialReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40da5730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40da4150" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DozerC.SerialReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40da4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40da4328"/>
        <function-ref name="source" scoped="" ref="0x40da4408"/>
        <function-ref name="address" scoped="" ref="0x40da44e8"/>
        <function-ref name="destination" scoped="" ref="0x40da45c8"/>
        <function-ref name="setSource" scoped="" ref="0x40da46a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40da4788"/>
        <function-ref name="type" scoped="" ref="0x40da4868"/>
        <function-ref name="setType" scoped="" ref="0x40da4948"/>
        <function-ref name="isForMe" scoped="" ref="0x40da4a28"/>
        <function-ref name="setGroup" scoped="" ref="0x40da4b08"/>
        <function-ref name="localGroup" scoped="" ref="0x40da4be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dcf1e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dcf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dced58"/>
        <function-ref name="fired" scoped="" ref="0x40dce010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dce718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dce4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40dcd268"/>
        <function-ref name="gett0" scoped="" ref="0x40dcd010"/>
        <function-ref name="isRunning" scoped="" ref="0x40dce268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dcf810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dcea38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dcfa90"/>
        <function-ref name="stop" scoped="" ref="0x40dcfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dcb0a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dcb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dcab88"/>
        <function-ref name="fired" scoped="" ref="0x40dcbe20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dca548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dca2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40dc9048"/>
        <function-ref name="gett0" scoped="" ref="0x40dcade0"/>
        <function-ref name="isRunning" scoped="" ref="0x40dca098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dcb6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dca868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dcb948"/>
        <function-ref name="stop" scoped="" ref="0x40dcbbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dc9e80" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnReqListenTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dc9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dc7988"/>
        <function-ref name="fired" scoped="" ref="0x40dc8c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dc7348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dc70f0"/>
        <function-ref name="getdt" scoped="" ref="0x40dc7e38"/>
        <function-ref name="gett0" scoped="" ref="0x40dc7be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40dc8e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dc84b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dc7668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dc8738"/>
        <function-ref name="stop" scoped="" ref="0x40dc89b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dc5cf0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnRepWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dc5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dc38a8"/>
        <function-ref name="fired" scoped="" ref="0x40dc4aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dc3268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dc3010"/>
        <function-ref name="getdt" scoped="" ref="0x40dc3d58"/>
        <function-ref name="gett0" scoped="" ref="0x40dc3b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40dc4d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dc4350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dc3588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dc45d0"/>
        <function-ref name="stop" scoped="" ref="0x40dc4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dc2c68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dc2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dbf790"/>
        <function-ref name="fired" scoped="" ref="0x40dc0a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dbf150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dc0ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40dbfc40"/>
        <function-ref name="gett0" scoped="" ref="0x40dbf9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40dc0c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dc02c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dbf470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dc0548"/>
        <function-ref name="stop" scoped="" ref="0x40dc07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dbeb48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateStopTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dbeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dbc6a8"/>
        <function-ref name="fired" scoped="" ref="0x40dbd938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dbc068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dbdde8"/>
        <function-ref name="getdt" scoped="" ref="0x40dbcb58"/>
        <function-ref name="gett0" scoped="" ref="0x40dbc900"/>
        <function-ref name="isRunning" scoped="" ref="0x40dbdb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dbd1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dbc388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dbd460"/>
        <function-ref name="stop" scoped="" ref="0x40dbd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40db76a0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40db76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db7878"/>
        <function-ref name="getPayload" scoped="" ref="0x40db7958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db7a38"/>
        <function-ref name="cancel" scoped="" ref="0x40db7b18"/>
        <function-ref name="sendDone" scoped="" ref="0x40db7bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40db7d38" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40db7d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db7f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e0b010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e0b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e0b1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e0b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e0b3f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e0b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e0b5c8"/>
        <function-ref name="source" scoped="" ref="0x40e0b6a8"/>
        <function-ref name="address" scoped="" ref="0x40e0b788"/>
        <function-ref name="destination" scoped="" ref="0x40e0b868"/>
        <function-ref name="setSource" scoped="" ref="0x40e0b948"/>
        <function-ref name="setDestination" scoped="" ref="0x40e0ba28"/>
        <function-ref name="type" scoped="" ref="0x40e0bb08"/>
        <function-ref name="setType" scoped="" ref="0x40e0bbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x40e0bcc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e0bda8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e0be88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e0a010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e0a1e8"/>
        <function-ref name="noAck" scoped="" ref="0x40e0a2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e0a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416a1518" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416a1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416a16f0"/>
        <function-ref name="getPayload" scoped="" ref="0x416a17d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416a18b0"/>
        <function-ref name="cancel" scoped="" ref="0x416a1990"/>
        <function-ref name="sendDone" scoped="" ref="0x416a1a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416a1be0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416a1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416a1db8"/>
        <function-ref name="getPayload" scoped="" ref="0x416a1e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416a0010"/>
        <function-ref name="cancel" scoped="" ref="0x416a00f0"/>
        <function-ref name="sendDone" scoped="" ref="0x416a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416a0310" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416a0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416a04e8"/>
        <function-ref name="source" scoped="" ref="0x416a05c8"/>
        <function-ref name="address" scoped="" ref="0x416a06a8"/>
        <function-ref name="destination" scoped="" ref="0x416a0788"/>
        <function-ref name="setSource" scoped="" ref="0x416a0868"/>
        <function-ref name="setDestination" scoped="" ref="0x416a0948"/>
        <function-ref name="type" scoped="" ref="0x416a0a28"/>
        <function-ref name="setType" scoped="" ref="0x416a0b08"/>
        <function-ref name="isForMe" scoped="" ref="0x416a0be8"/>
        <function-ref name="setGroup" scoped="" ref="0x416a0cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x416a0da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ddac08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ddac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ddade0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ddaec0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd7010"/>
        <function-ref name="cancel" scoped="" ref="0x40dd70f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e113d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e113d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e115c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e116a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e11780"/>
        <function-ref name="cancel" scoped="" ref="0x40e11860"/>
        <function-ref name="sendDone" scoped="" ref="0x40e11940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dd5be0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dd5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd5dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd5ea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e11010"/>
        <function-ref name="cancel" scoped="" ref="0x40e110f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e111d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e10690" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e10690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e10868"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e10948"/>
        <function-ref name="getPayload" scoped="" ref="0x40e10a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e10b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e10be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40e10d68" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40e10d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e0f010"/>
        <function-ref name="runTask" scoped="" ref="0x40e0f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40e0f270" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40e0f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e0f448"/>
        <function-ref name="runTask" scoped="" ref="0x40e0f528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e11a80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e11a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e11c58"/>
        <function-ref name="source" scoped="" ref="0x40e11d38"/>
        <function-ref name="address" scoped="" ref="0x40e11e18"/>
        <function-ref name="destination" scoped="" ref="0x40e11ef8"/>
        <function-ref name="setSource" scoped="" ref="0x40e10010"/>
        <function-ref name="setDestination" scoped="" ref="0x40e100f0"/>
        <function-ref name="type" scoped="" ref="0x40e101d0"/>
        <function-ref name="setType" scoped="" ref="0x40e102b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e10390"/>
        <function-ref name="setGroup" scoped="" ref="0x40e10470"/>
        <function-ref name="localGroup" scoped="" ref="0x40e10550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e08db0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e08db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e04010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e040f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e041d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e042b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e04390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e08a98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e08a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e08c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e044d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e046a8"/>
        <function-ref name="source" scoped="" ref="0x40e04788"/>
        <function-ref name="address" scoped="" ref="0x40e04868"/>
        <function-ref name="destination" scoped="" ref="0x40e04948"/>
        <function-ref name="setSource" scoped="" ref="0x40e04a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40e04b08"/>
        <function-ref name="type" scoped="" ref="0x40e04be8"/>
        <function-ref name="setType" scoped="" ref="0x40e04cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40e04da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e04e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40e03010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer3" ref="0x40e28c08" loc="24:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer3" scoped="" ref="0x40e28c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e26730"/>
        <function-ref name="fired" scoped="" ref="0x40e279b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e260f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e27e60"/>
        <function-ref name="getdt" scoped="" ref="0x40e26be0"/>
        <function-ref name="gett0" scoped="" ref="0x40e26988"/>
        <function-ref name="isRunning" scoped="" ref="0x40e27c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e27258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e26410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e274d8"/>
        <function-ref name="stop" scoped="" ref="0x40e27758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMAScheduleTimer" ref="0x40e25010" loc="25:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40e25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e23b00"/>
        <function-ref name="fired" scoped="" ref="0x40e25d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e234c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e23268"/>
        <function-ref name="getdt" scoped="" ref="0x40e22010"/>
        <function-ref name="gett0" scoped="" ref="0x40e23d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40e23010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e25638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e237e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e258b8"/>
        <function-ref name="stop" scoped="" ref="0x40e25b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40e1f768" loc="28:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e1f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASlotTimer" ref="0x40e223d0" loc="26:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASlotTimer" scoped="" ref="0x40e223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e21ec8"/>
        <function-ref name="fired" scoped="" ref="0x40e21180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e21888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e21630"/>
        <function-ref name="getdt" scoped="" ref="0x40e1f3a8"/>
        <function-ref name="gett0" scoped="" ref="0x40e1f150"/>
        <function-ref name="isRunning" scoped="" ref="0x40e213d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e229f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e21ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e22c78"/>
        <function-ref name="stop" scoped="" ref="0x40e22ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e1e040" loc="30:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e1e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e1e218"/>
        <function-ref name="rand32" scoped="" ref="0x40e1e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer1" ref="0x40e2e498" loc="22:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer1" scoped="" ref="0x40e2e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e2b010"/>
        <function-ref name="fired" scoped="" ref="0x40e2c268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e2c970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e2c718"/>
        <function-ref name="getdt" scoped="" ref="0x40e2b4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40e2b268"/>
        <function-ref name="isRunning" scoped="" ref="0x40e2c4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e2eac0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e2cc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e2ed40"/>
        <function-ref name="stop" scoped="" ref="0x40e2c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40e1e620" loc="31:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40e1e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e1ec48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e317c0" loc="16:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e317c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e31998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TDMASchedule" ref="0x40e02c58" loc="15:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40e02c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40e31630"/>
        <function-ref name="getPPB" scoped="" ref="0x40e02f10"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40e31010"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40e310f0"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40e311d0"/>
        <function-ref name="setPPB" scoped="" ref="0x40e312b0"/>
        <function-ref name="stopTimers" scoped="" ref="0x40e31390"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40e31470"/>
        <function-ref name="startTimers" scoped="" ref="0x40e31550"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40e02e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e1eeb0" loc="32:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e1eeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e1d188"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e1d268"/>
        <function-ref name="led1On" scoped="" ref="0x40e1d348"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e1d428"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e1d508"/>
        <function-ref name="get" scoped="" ref="0x40e1d5e8"/>
        <function-ref name="led1Off" scoped="" ref="0x40e1d6c8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e1da48"/>
        <function-ref name="set" scoped="" ref="0x40e1d7a8"/>
        <function-ref name="led0On" scoped="" ref="0x40e1d888"/>
        <function-ref name="led2On" scoped="" ref="0x40e1d968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer2" ref="0x40e2b890" loc="23:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer2" scoped="" ref="0x40e2b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e28388"/>
        <function-ref name="fired" scoped="" ref="0x40e2a628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e2ad30"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e2aad8"/>
        <function-ref name="getdt" scoped="" ref="0x40e28838"/>
        <function-ref name="gett0" scoped="" ref="0x40e285e0"/>
        <function-ref name="isRunning" scoped="" ref="0x40e2a880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e2beb8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e28068"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e2a150"/>
        <function-ref name="stop" scoped="" ref="0x40e2a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer0" ref="0x40e300f8" loc="21:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer0" scoped="" ref="0x40e300f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e2fbe0"/>
        <function-ref name="fired" scoped="" ref="0x40e30e78"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e2f5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e2f348"/>
        <function-ref name="getdt" scoped="" ref="0x40e2e0b8"/>
        <function-ref name="gett0" scoped="" ref="0x40e2fe38"/>
        <function-ref name="isRunning" scoped="" ref="0x40e2f0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e30720"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e2f8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e309a0"/>
        <function-ref name="stop" scoped="" ref="0x40e30c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e99760" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e99760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e97330"/>
        <function-ref name="fired" scoped="" ref="0x40e98520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e98c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e989d0"/>
        <function-ref name="getdt" scoped="" ref="0x40e977e0"/>
        <function-ref name="gett0" scoped="" ref="0x40e97588"/>
        <function-ref name="isRunning" scoped="" ref="0x40e98778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e99d88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e97010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e98048"/>
        <function-ref name="stop" scoped="" ref="0x40e982c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e96670" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e93170"/>
        <function-ref name="fired" scoped="" ref="0x40e95408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e95b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e958b8"/>
        <function-ref name="getdt" scoped="" ref="0x40e93620"/>
        <function-ref name="gett0" scoped="" ref="0x40e933c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e95660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e96c98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e95e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e96f18"/>
        <function-ref name="stop" scoped="" ref="0x40e951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e92458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e92458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e90010"/>
        <function-ref name="fired" scoped="" ref="0x40e91268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e91970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e91718"/>
        <function-ref name="getdt" scoped="" ref="0x40e904c0"/>
        <function-ref name="gett0" scoped="" ref="0x40e90268"/>
        <function-ref name="isRunning" scoped="" ref="0x40e914c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e92a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e91c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e92d00"/>
        <function-ref name="stop" scoped="" ref="0x40e91010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e8f330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e8f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e8de38"/>
        <function-ref name="fired" scoped="" ref="0x40e8d0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e8d7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e8d5a0"/>
        <function-ref name="getdt" scoped="" ref="0x40e8c310"/>
        <function-ref name="gett0" scoped="" ref="0x40e8c0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e8d348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e8f958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e8db18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e8fbd8"/>
        <function-ref name="stop" scoped="" ref="0x40e8fe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e8b168" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMAScheduleTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e8b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e8ac70"/>
        <function-ref name="fired" scoped="" ref="0x40e8bee8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e8a630"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e8a3d8"/>
        <function-ref name="getdt" scoped="" ref="0x40e88150"/>
        <function-ref name="gett0" scoped="" ref="0x40e8aec8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e8a180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e8b790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e8a950"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e8ba10"/>
        <function-ref name="stop" scoped="" ref="0x40e8bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e870a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMASlotTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e86b88"/>
        <function-ref name="fired" scoped="" ref="0x40e87e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e86548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e862f0"/>
        <function-ref name="getdt" scoped="" ref="0x40e85048"/>
        <function-ref name="gett0" scoped="" ref="0x40e86de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40e86098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e876c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e86868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e87948"/>
        <function-ref name="stop" scoped="" ref="0x40e87bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40eb3208" loc="16:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40eb3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb33e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb34c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb35a0"/>
        <function-ref name="cancel" scoped="" ref="0x40eb3680"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb3760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e83d88" loc="14:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e83d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eb4010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eb40f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb41d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb42b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eb4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40eb04b8" loc="23:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40eb04b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40eb0690"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40eb0770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40eb3968" loc="17:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40eb3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb3b40"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb3c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb3d00"/>
        <function-ref name="cancel" scoped="" ref="0x40eb3de0"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb3ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40eb2488" loc="19:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40eb2488"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40eb2e40"/>
        <function-ref name="getPPB" scoped="" ref="0x40eb2740"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40eb2820"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40eb2900"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40eb29e0"/>
        <function-ref name="setPPB" scoped="" ref="0x40eb2ac0"/>
        <function-ref name="stopTimers" scoped="" ref="0x40eb2ba0"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40eb2c80"/>
        <function-ref name="startTimers" scoped="" ref="0x40eb2d60"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40eb2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40eb20f0" loc="18:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40eb20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eb22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40eb4528" loc="15:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eb4528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eb4700"/>
        <function-ref name="source" scoped="" ref="0x40eb47e0"/>
        <function-ref name="address" scoped="" ref="0x40eb48c0"/>
        <function-ref name="destination" scoped="" ref="0x40eb49a0"/>
        <function-ref name="setSource" scoped="" ref="0x40eb4a80"/>
        <function-ref name="setDestination" scoped="" ref="0x40eb4b60"/>
        <function-ref name="type" scoped="" ref="0x40eb4c40"/>
        <function-ref name="setType" scoped="" ref="0x40eb4d20"/>
        <function-ref name="isForMe" scoped="" ref="0x40eb4e00"/>
        <function-ref name="setGroup" scoped="" ref="0x40eb4ee0"/>
        <function-ref name="localGroup" scoped="" ref="0x40eb3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40eab208" loc="18:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40eab208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eab3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40eab4c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eab5a0"/>
        <function-ref name="cancel" scoped="" ref="0x40eab680"/>
        <function-ref name="sendDone" scoped="" ref="0x40eab760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40ec02a0" loc="156:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40ec02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec0478"/>
        <function-ref name="runTask" scoped="" ref="0x40ec0558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40eadd98" loc="16:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eadd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eac010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eac0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40eac1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eac2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40e9fd00" loc="29:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40e9fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40e9fed8"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40e9d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40ec2658" loc="147:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40ec2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec28b0"/>
        <function-ref name="runTask" scoped="" ref="0x40ec2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40eab968" loc="19:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40eab968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eabb40"/>
        <function-ref name="getPayload" scoped="" ref="0x40eabc20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eabd00"/>
        <function-ref name="cancel" scoped="" ref="0x40eabde0"/>
        <function-ref name="sendDone" scoped="" ref="0x40eabec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueue" ref="0x40ea5858" loc="22:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueue" scoped="" ref="0x40ea5858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
              <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40ea95a0"/>
        <function-ref name="enqueue" scoped="" ref="0x40ea9c80"/>
        <function-ref name="element" scoped="" ref="0x40ea8010"/>
        <function-ref name="maxSize" scoped="" ref="0x40ea9348"/>
        <function-ref name="dequeue" scoped="" ref="0x40ea9910"/>
        <function-ref name="empty" scoped="" ref="0x40ea5e80"/>
        <function-ref name="size" scoped="" ref="0x40ea90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40eb0db8" loc="12:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40eb0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40ead7f0"/>
        <function-ref name="getPPB" scoped="" ref="0x40ead0f0"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40ead1d0"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40ead2b0"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40ead390"/>
        <function-ref name="setPPB" scoped="" ref="0x40ead470"/>
        <function-ref name="stopTimers" scoped="" ref="0x40ead550"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40ead630"/>
        <function-ref name="startTimers" scoped="" ref="0x40ead710"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40ead010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataMessagePool" ref="0x40e9eaf0" loc="23:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataMessagePool" scoped="" ref="0x40e9eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
            <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ea3c78"/>
        <function-ref name="maxSize" scoped="" ref="0x40ea3690"/>
        <function-ref name="empty" scoped="" ref="0x40ea31e0"/>
        <function-ref name="put" scoped="" ref="0x40ea38e8"/>
        <function-ref name="size" scoped="" ref="0x40ea3438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e9f060" loc="26:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e9f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e9f238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e9f318"/>
        <function-ref name="led1On" scoped="" ref="0x40e9f3f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e9f4d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e9f5b8"/>
        <function-ref name="get" scoped="" ref="0x40e9f698"/>
        <function-ref name="led1Off" scoped="" ref="0x40e9f778"/>
        <function-ref name="led2Off" scoped="" ref="0x40e9faf8"/>
        <function-ref name="set" scoped="" ref="0x40e9f858"/>
        <function-ref name="led0On" scoped="" ref="0x40e9f938"/>
        <function-ref name="led2On" scoped="" ref="0x40e9fa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAvailableData" ref="0x40e9d690" loc="34:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAvailableData" scoped="" ref="0x40e9d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e9d868"/>
        <function-ref name="runTask" scoped="" ref="0x40e9d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40eaa0f0" loc="20:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40eaa0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eaa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40eac528" loc="17:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eac528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eac700"/>
        <function-ref name="source" scoped="" ref="0x40eac7e0"/>
        <function-ref name="address" scoped="" ref="0x40eac8c0"/>
        <function-ref name="destination" scoped="" ref="0x40eac9a0"/>
        <function-ref name="setSource" scoped="" ref="0x40eaca80"/>
        <function-ref name="setDestination" scoped="" ref="0x40eacb60"/>
        <function-ref name="type" scoped="" ref="0x40eacc40"/>
        <function-ref name="setType" scoped="" ref="0x40eacd20"/>
        <function-ref name="isForMe" scoped="" ref="0x40eace00"/>
        <function-ref name="setGroup" scoped="" ref="0x40eacee0"/>
        <function-ref name="localGroup" scoped="" ref="0x40eab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40edb5b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40edb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
            <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eda6a0"/>
        <function-ref name="maxSize" scoped="" ref="0x40eda0b8"/>
        <function-ref name="empty" scoped="" ref="0x40edbbd8"/>
        <function-ref name="put" scoped="" ref="0x40eda310"/>
        <function-ref name="size" scoped="" ref="0x40edbe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416c1010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
            <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416c00e8"/>
        <function-ref name="maxSize" scoped="" ref="0x416c1ae8"/>
        <function-ref name="empty" scoped="" ref="0x416c1638"/>
        <function-ref name="put" scoped="" ref="0x416c1d40"/>
        <function-ref name="size" scoped="" ref="0x416c1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416c2c50" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416c2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416c2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40ef90f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="DataManagerC.DataQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ef90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
              <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40ef9e20"/>
        <function-ref name="enqueue" scoped="" ref="0x40f20518"/>
        <function-ref name="element" scoped="" ref="0x40f20868"/>
        <function-ref name="maxSize" scoped="" ref="0x40ef9bc8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f201a8"/>
        <function-ref name="empty" scoped="" ref="0x40ef9718"/>
        <function-ref name="size" scoped="" ref="0x40ef9970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f0b258" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f0b258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0b430"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0b510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0b5f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f0b6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f0b8f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f0b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f0bac8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f0bba8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0bc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0bd68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f0be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f0a010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f0a1e8"/>
        <function-ref name="source" scoped="" ref="0x40f0a2c8"/>
        <function-ref name="address" scoped="" ref="0x40f0a3a8"/>
        <function-ref name="destination" scoped="" ref="0x40f0a488"/>
        <function-ref name="setSource" scoped="" ref="0x40f0a568"/>
        <function-ref name="setDestination" scoped="" ref="0x40f0a648"/>
        <function-ref name="type" scoped="" ref="0x40f0a728"/>
        <function-ref name="setType" scoped="" ref="0x40f0a808"/>
        <function-ref name="isForMe" scoped="" ref="0x40f0a8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f0a9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f0aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f0ac08" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f0ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f0ade0"/>
        <function-ref name="noAck" scoped="" ref="0x40f0aec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f09010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41709b28" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41709b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41709d00"/>
        <function-ref name="getPayload" scoped="" ref="0x41709de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41709ec0"/>
        <function-ref name="cancel" scoped="" ref="0x41705010"/>
        <function-ref name="sendDone" scoped="" ref="0x417050f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41705260" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41705260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41705438"/>
        <function-ref name="getPayload" scoped="" ref="0x41705518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417055f8"/>
        <function-ref name="cancel" scoped="" ref="0x417056d8"/>
        <function-ref name="sendDone" scoped="" ref="0x417057b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417058f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417058f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41705ad0"/>
        <function-ref name="source" scoped="" ref="0x41705bb0"/>
        <function-ref name="address" scoped="" ref="0x41705c90"/>
        <function-ref name="destination" scoped="" ref="0x41705d70"/>
        <function-ref name="setSource" scoped="" ref="0x41705e50"/>
        <function-ref name="setDestination" scoped="" ref="0x41704010"/>
        <function-ref name="type" scoped="" ref="0x417040f0"/>
        <function-ref name="setType" scoped="" ref="0x417041d0"/>
        <function-ref name="isForMe" scoped="" ref="0x417042b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41704390"/>
        <function-ref name="localGroup" scoped="" ref="0x41704470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f16e70" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f16e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f13070"/>
        <function-ref name="getPayload" scoped="" ref="0x40f13150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f13230"/>
        <function-ref name="cancel" scoped="" ref="0x40f13310"/>
        <function-ref name="sendDone" scoped="" ref="0x40f133f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f12cc8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f12cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f12eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f10010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f100f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f101d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f12558" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f12558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f12740"/>
        <function-ref name="getPayload" scoped="" ref="0x40f12820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f12900"/>
        <function-ref name="cancel" scoped="" ref="0x40f129e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f12ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f0f010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f0f1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f0f2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0f3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0f488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f0f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40f0f6e8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40f0f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f0f8c0"/>
        <function-ref name="runTask" scoped="" ref="0x40f0f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40f0fb20" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40f0fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f0fcf8"/>
        <function-ref name="runTask" scoped="" ref="0x40f0fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f103f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f105c8"/>
        <function-ref name="source" scoped="" ref="0x40f106a8"/>
        <function-ref name="address" scoped="" ref="0x40f10788"/>
        <function-ref name="destination" scoped="" ref="0x40f10868"/>
        <function-ref name="setSource" scoped="" ref="0x40f10948"/>
        <function-ref name="setDestination" scoped="" ref="0x40f10a28"/>
        <function-ref name="type" scoped="" ref="0x40f10b08"/>
        <function-ref name="setType" scoped="" ref="0x40f10be8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f10cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f10da8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f10e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f085c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f085c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f08798"/>
        <function-ref name="getPayload" scoped="" ref="0x40f08878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f08958"/>
        <function-ref name="cancel" scoped="" ref="0x40f08a38"/>
        <function-ref name="sendDone" scoped="" ref="0x40f08b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f08c58" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f08c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f08e30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f08f10"/>
        <function-ref name="getPayload" scoped="" ref="0x40f07010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f070f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f071d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f07310" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f07310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f074e8"/>
        <function-ref name="source" scoped="" ref="0x40f075c8"/>
        <function-ref name="address" scoped="" ref="0x40f076a8"/>
        <function-ref name="destination" scoped="" ref="0x40f07788"/>
        <function-ref name="setSource" scoped="" ref="0x40f07868"/>
        <function-ref name="setDestination" scoped="" ref="0x40f07948"/>
        <function-ref name="type" scoped="" ref="0x40f07a28"/>
        <function-ref name="setType" scoped="" ref="0x40f07b08"/>
        <function-ref name="isForMe" scoped="" ref="0x40f07be8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f07cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f07da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f07f08" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f07f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f3d0f0"/>
        <function-ref name="noAck" scoped="" ref="0x40f3d1d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f3d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41735d08" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41735d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41735ee0"/>
        <function-ref name="getPayload" scoped="" ref="0x41732010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417320f0"/>
        <function-ref name="cancel" scoped="" ref="0x417321d0"/>
        <function-ref name="sendDone" scoped="" ref="0x417322b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41732420" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41732420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417325f8"/>
        <function-ref name="getPayload" scoped="" ref="0x417326d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417327b8"/>
        <function-ref name="cancel" scoped="" ref="0x41732898"/>
        <function-ref name="sendDone" scoped="" ref="0x41732978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41732ab8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41732ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41732c90"/>
        <function-ref name="source" scoped="" ref="0x41732d70"/>
        <function-ref name="address" scoped="" ref="0x41732e50"/>
        <function-ref name="destination" scoped="" ref="0x41731010"/>
        <function-ref name="setSource" scoped="" ref="0x417310f0"/>
        <function-ref name="setDestination" scoped="" ref="0x417311d0"/>
        <function-ref name="type" scoped="" ref="0x417312b0"/>
        <function-ref name="setType" scoped="" ref="0x41731390"/>
        <function-ref name="isForMe" scoped="" ref="0x41731470"/>
        <function-ref name="setGroup" scoped="" ref="0x41731550"/>
        <function-ref name="localGroup" scoped="" ref="0x41731630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f3c858" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f3c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3ca30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f3cb10"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3cbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3ccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f3cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f3c540" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f3c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f3c718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f3cef0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f3cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f3b0e0"/>
        <function-ref name="source" scoped="" ref="0x40f3b1c0"/>
        <function-ref name="address" scoped="" ref="0x40f3b2a0"/>
        <function-ref name="destination" scoped="" ref="0x40f3b380"/>
        <function-ref name="setSource" scoped="" ref="0x40f3b460"/>
        <function-ref name="setDestination" scoped="" ref="0x40f3b540"/>
        <function-ref name="type" scoped="" ref="0x40f3b620"/>
        <function-ref name="setType" scoped="" ref="0x40f3b700"/>
        <function-ref name="isForMe" scoped="" ref="0x40f3b7e0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f3b8c0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f3b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40f59090" loc="41:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40f59090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40f59268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueueManage" ref="0x40f57670" loc="51:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40f57670"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40f57848"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40f57928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sample" ref="0x40f52590" loc="46:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40f52590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40f52bc8"/>
        <function-ref name="readDone" scoped="" ref="0x40f52ca8"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40f52928"/>
        <function-ref name="getSample" scoped="" ref="0x40f52a08"/>
        <function-ref name="start" scoped="" ref="0x40f52848"/>
        <function-ref name="reTask" scoped="" ref="0x40f52ae8"/>
        <function-ref name="stop" scoped="" ref="0x40f52768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerInit" ref="0x40f59478" loc="44:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40f59478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f59650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerControl" ref="0x40f598c0" loc="45:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40f598c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f59a98"/>
        <function-ref name="stopDone" scoped="" ref="0x40f59b78"/>
        <function-ref name="start" scoped="" ref="0x40f59c58"/>
        <function-ref name="stop" scoped="" ref="0x40f59d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingInit" ref="0x40f572c0" loc="50:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x40f572c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f57498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f57e90" loc="55:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f57e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f56080"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f56160"/>
        <function-ref name="led1On" scoped="" ref="0x40f56240"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f56320"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f56400"/>
        <function-ref name="get" scoped="" ref="0x40f564e0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f565c0"/>
        <function-ref name="led2Off" scoped="" ref="0x40f56940"/>
        <function-ref name="set" scoped="" ref="0x40f566a0"/>
        <function-ref name="led0On" scoped="" ref="0x40f56780"/>
        <function-ref name="led2On" scoped="" ref="0x40f56860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CmdReceive" ref="0x40f57b38" loc="52:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CmdReceive" scoped="" ref="0x40f57b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f57d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f2f420" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f2f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f2f5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40f2f788" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f2f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f2f960"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f2fa40"/>
        <function-ref name="led1On" scoped="" ref="0x40f2fb20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f2fc00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f2fce0"/>
        <function-ref name="get" scoped="" ref="0x40f2fdc0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f2fea0"/>
        <function-ref name="led2Off" scoped="" ref="0x40f842b0"/>
        <function-ref name="set" scoped="" ref="0x40f84010"/>
        <function-ref name="led0On" scoped="" ref="0x40f840f0"/>
        <function-ref name="led2On" scoped="" ref="0x40f841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40f796e8" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40f796e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40f79d20"/>
        <function-ref name="readDone" scoped="" ref="0x40f79e00"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40f79a80"/>
        <function-ref name="getSample" scoped="" ref="0x40f79b60"/>
        <function-ref name="start" scoped="" ref="0x40f799a0"/>
        <function-ref name="reTask" scoped="" ref="0x40f79c40"/>
        <function-ref name="stop" scoped="" ref="0x40f798c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40f2ec80" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40f2ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f2ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40f790f0" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40f790f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f792c8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f793a8"/>
        <function-ref name="start" scoped="" ref="0x40f79488"/>
        <function-ref name="stop" scoped="" ref="0x40f79568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam8" ref="0x40f9fa08" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam8" scoped="" ref="0x40f9fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam11" ref="0x40f9e628" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam11" scoped="" ref="0x40f9e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC6" ref="0x40fa6908" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC6" scoped="" ref="0x40fa6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa6ae0"/>
        <function-ref name="readDone" scoped="" ref="0x40fa6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam0" ref="0x40fa2880" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam0" scoped="" ref="0x40fa2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40fa2a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x40fa5c68" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC0" scoped="" ref="0x40fa5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa5e40"/>
        <function-ref name="readDone" scoped="" ref="0x40fa5f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio2" ref="0x40f97d28" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio2" scoped="" ref="0x40f97d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f97f00"/>
        <function-ref name="high" scoped="" ref="0x40f96010"/>
        <function-ref name="Toggle" scoped="" ref="0x40f960f0"/>
        <function-ref name="read" scoped="" ref="0x40f961d0"/>
        <function-ref name="setParam" scoped="" ref="0x40f962b0"/>
        <function-ref name="readDone" scoped="" ref="0x40f96390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCinit" ref="0x40fa8338" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCinit" scoped="" ref="0x40fa8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fa8510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC9" ref="0x40fa4788" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC9" scoped="" ref="0x40fa4788"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa4960"/>
        <function-ref name="readDone" scoped="" ref="0x40fa4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC3" ref="0x40fa7a78" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC3" scoped="" ref="0x40fa7a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa7c50"/>
        <function-ref name="readDone" scoped="" ref="0x40fa7d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam3" ref="0x40fa1580" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam3" scoped="" ref="0x40fa1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40fa1758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio5" ref="0x40fcc540" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio5" scoped="" ref="0x40fcc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40fcc718"/>
        <function-ref name="high" scoped="" ref="0x40fcc7f8"/>
        <function-ref name="Toggle" scoped="" ref="0x40fcc8d8"/>
        <function-ref name="read" scoped="" ref="0x40fcc9b8"/>
        <function-ref name="setParam" scoped="" ref="0x40fcca98"/>
        <function-ref name="readDone" scoped="" ref="0x40fccb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterInit" ref="0x40fccd88" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x40fccd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fcb308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC12" ref="0x40fa35c8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC12" scoped="" ref="0x40fa35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa37a0"/>
        <function-ref name="readDone" scoped="" ref="0x40fa3880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam6" ref="0x40f9f228" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam6" scoped="" ref="0x40f9f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9f400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC4" ref="0x40fa7f20" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC4" scoped="" ref="0x40fa7f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa6190"/>
        <function-ref name="readDone" scoped="" ref="0x40fa6270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio0" ref="0x40f94cc0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio0" scoped="" ref="0x40f94cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f94e98"/>
        <function-ref name="high" scoped="" ref="0x40f97010"/>
        <function-ref name="Toggle" scoped="" ref="0x40f970f0"/>
        <function-ref name="read" scoped="" ref="0x40f971d0"/>
        <function-ref name="setParam" scoped="" ref="0x40f972b0"/>
        <function-ref name="readDone" scoped="" ref="0x40f97390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hum" ref="0x40f9b868" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hum" scoped="" ref="0x40f9b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f9be90"/>
        <function-ref name="readDone" scoped="" ref="0x40f98110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Battery" ref="0x40f9a6b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Battery" scoped="" ref="0x40f9a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f9ace0"/>
        <function-ref name="readDone" scoped="" ref="0x40f9c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam9" ref="0x40f9fdf8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam9" scoped="" ref="0x40f9fdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam12" ref="0x40f9ea20" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam12" scoped="" ref="0x40f9ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC7" ref="0x40fa6db0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC7" scoped="" ref="0x40fa6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa4010"/>
        <function-ref name="readDone" scoped="" ref="0x40fa40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempHumControl" ref="0x40f9c428" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempHumControl" scoped="" ref="0x40f9c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f9c600"/>
        <function-ref name="stopDone" scoped="" ref="0x40f9c6e0"/>
        <function-ref name="start" scoped="" ref="0x40f9c7c0"/>
        <function-ref name="stop" scoped="" ref="0x40f9c8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam1" ref="0x40fa2c70" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam1" scoped="" ref="0x40fa2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40fa2e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40fad628" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40fad628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40fadc60"/>
        <function-ref name="readDone" scoped="" ref="0x40fadd40"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40fad9c0"/>
        <function-ref name="getSample" scoped="" ref="0x40fadaa0"/>
        <function-ref name="start" scoped="" ref="0x40fad8e0"/>
        <function-ref name="reTask" scoped="" ref="0x40fadb80"/>
        <function-ref name="stop" scoped="" ref="0x40fad800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerTimer" ref="0x40fab0b0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerTimer" scoped="" ref="0x40fab0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40faaba8"/>
        <function-ref name="fired" scoped="" ref="0x40fabe30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40faa568"/>
        <function-ref name="isOneShot" scoped="" ref="0x40faa310"/>
        <function-ref name="getdt" scoped="" ref="0x40fa8068"/>
        <function-ref name="gett0" scoped="" ref="0x40faae00"/>
        <function-ref name="isRunning" scoped="" ref="0x40faa0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fab6d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40faa888"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fab958"/>
        <function-ref name="stop" scoped="" ref="0x40fabbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x40fa7128" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC1" scoped="" ref="0x40fa7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa7300"/>
        <function-ref name="readDone" scoped="" ref="0x40fa73e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC10" ref="0x40fa4c38" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC10" scoped="" ref="0x40fa4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa4e10"/>
        <function-ref name="readDone" scoped="" ref="0x40fa4ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam4" ref="0x40fa1970" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam4" scoped="" ref="0x40fa1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40fa1b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio3" ref="0x40f96540" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio3" scoped="" ref="0x40f96540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f96718"/>
        <function-ref name="high" scoped="" ref="0x40f967f8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f968d8"/>
        <function-ref name="read" scoped="" ref="0x40f969b8"/>
        <function-ref name="setParam" scoped="" ref="0x40f96a98"/>
        <function-ref name="readDone" scoped="" ref="0x40f96b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40f78b90" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40f78b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f78d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioInit" ref="0x40f98490" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioInit" scoped="" ref="0x40f98490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f98668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40fad010" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40fad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fad1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40fad2c8"/>
        <function-ref name="start" scoped="" ref="0x40fad3a8"/>
        <function-ref name="stop" scoped="" ref="0x40fad488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40fcbbb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40fcbbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40fcbd90"/>
        <function-ref name="high" scoped="" ref="0x40fcbe70"/>
        <function-ref name="Toggle" scoped="" ref="0x40fca010"/>
        <function-ref name="read" scoped="" ref="0x40fca0f0"/>
        <function-ref name="setParam" scoped="" ref="0x40fca1d0"/>
        <function-ref name="readDone" scoped="" ref="0x40fca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC13" ref="0x40fa3a78" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC13" scoped="" ref="0x40fa3a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa3c50"/>
        <function-ref name="readDone" scoped="" ref="0x40fa3d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam7" ref="0x40f9f618" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam7" scoped="" ref="0x40f9f618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fac318" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fac318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fac4f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fac5d0"/>
        <function-ref name="led1On" scoped="" ref="0x40fac6b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fac790"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fac870"/>
        <function-ref name="get" scoped="" ref="0x40fac950"/>
        <function-ref name="led1Off" scoped="" ref="0x40faca30"/>
        <function-ref name="led2Off" scoped="" ref="0x40facdb0"/>
        <function-ref name="set" scoped="" ref="0x40facb10"/>
        <function-ref name="led0On" scoped="" ref="0x40facbf0"/>
        <function-ref name="led2On" scoped="" ref="0x40faccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC5" ref="0x40fa6460" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC5" scoped="" ref="0x40fa6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa6638"/>
        <function-ref name="readDone" scoped="" ref="0x40fa6718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam10" ref="0x40f9e230" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam10" scoped="" ref="0x40f9e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9e408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCcontrol" ref="0x40fa8770" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCcontrol" scoped="" ref="0x40fa8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fa8948"/>
        <function-ref name="stopDone" scoped="" ref="0x40fa8a28"/>
        <function-ref name="start" scoped="" ref="0x40fa8b08"/>
        <function-ref name="stop" scoped="" ref="0x40fa8be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x40f9cb48" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x40f9cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f9b1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40f9b438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio1" ref="0x40f97540" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio1" scoped="" ref="0x40f97540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f97718"/>
        <function-ref name="high" scoped="" ref="0x40f977f8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f978d8"/>
        <function-ref name="read" scoped="" ref="0x40f979b8"/>
        <function-ref name="setParam" scoped="" ref="0x40f97a98"/>
        <function-ref name="readDone" scoped="" ref="0x40f97b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterControl" ref="0x40fcb578" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x40fcb578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fcb750"/>
        <function-ref name="stopDone" scoped="" ref="0x40fcb830"/>
        <function-ref name="start" scoped="" ref="0x40fcb910"/>
        <function-ref name="stop" scoped="" ref="0x40fcb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioControl" ref="0x40f988b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioControl" scoped="" ref="0x40f988b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f98a88"/>
        <function-ref name="stopDone" scoped="" ref="0x40f98b68"/>
        <function-ref name="start" scoped="" ref="0x40f98c48"/>
        <function-ref name="stop" scoped="" ref="0x40f98d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam13" ref="0x40f9ee18" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam13" scoped="" ref="0x40f9ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC8" ref="0x40fa42e0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC8" scoped="" ref="0x40fa42e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa44b8"/>
        <function-ref name="readDone" scoped="" ref="0x40fa4598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam2" ref="0x40fa1090" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam2" scoped="" ref="0x40fa1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40fa1368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC2" ref="0x40fa75d0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC2" scoped="" ref="0x40fa75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa77a8"/>
        <function-ref name="readDone" scoped="" ref="0x40fa7888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio4" ref="0x40f96d28" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio4" scoped="" ref="0x40f96d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f96f00"/>
        <function-ref name="high" scoped="" ref="0x40fcc010"/>
        <function-ref name="Toggle" scoped="" ref="0x40fcc0f0"/>
        <function-ref name="read" scoped="" ref="0x40fcc1d0"/>
        <function-ref name="setParam" scoped="" ref="0x40fcc2b0"/>
        <function-ref name="readDone" scoped="" ref="0x40fcc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC11" ref="0x40fa3118" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC11" scoped="" ref="0x40fa3118"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa32f0"/>
        <function-ref name="readDone" scoped="" ref="0x40fa33d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam5" ref="0x40fa1d60" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam5" scoped="" ref="0x40fa1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f9f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4101c448" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SamplerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4101c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41019010"/>
        <function-ref name="fired" scoped="" ref="0x4101b268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4101b970"/>
        <function-ref name="isOneShot" scoped="" ref="0x4101b718"/>
        <function-ref name="getdt" scoped="" ref="0x410194c0"/>
        <function-ref name="gett0" scoped="" ref="0x41019268"/>
        <function-ref name="isRunning" scoped="" ref="0x4101b4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4101ca70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4101bc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4101ccf0"/>
        <function-ref name="stop" scoped="" ref="0x4101b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41017a60" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SamplerC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41017a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411130b8"/>
        <function-ref name="readDone" scoped="" ref="0x41113310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4171a230" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4171a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4171a408"/>
        <function-ref name="configure" scoped="" ref="0x4171a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4171c168" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4171c168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4171c790"/>
        <function-ref name="readDone" scoped="" ref="0x4171c9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4171ccf0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4171ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4171cec8"/>
        <function-ref name="getChannel" scoped="" ref="0x4171a010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4171a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410106f8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410106f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41010d20"/>
        <function-ref name="readDone" scoped="" ref="0x4100b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x41008b90" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x41008b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4100a200"/>
        <function-ref name="readDone" scoped="" ref="0x4100a478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4100ab30" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4100ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4100ad08"/>
        <function-ref name="getChannel" scoped="" ref="0x4100ade8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4100aec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410093c0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410093c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41009598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41009678"/>
        <function-ref name="request" scoped="" ref="0x41009758"/>
        <function-ref name="granted" scoped="" ref="0x41009838"/>
        <function-ref name="isOwner" scoped="" ref="0x41009918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4103d6c8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4103d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4103d8a0"/>
        <function-ref name="configure" scoped="" ref="0x4103d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41038ec0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41038ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4103d0c0"/>
        <function-ref name="dataReady" scoped="" ref="0x4103d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4103bd38" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4103bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4103bf10"/>
        <function-ref name="cancel" scoped="" ref="0x4103e010"/>
        <function-ref name="dataReady" scoped="" ref="0x4103e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4103f3c0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4103f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4103f598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4103f678"/>
        <function-ref name="request" scoped="" ref="0x4103f758"/>
        <function-ref name="granted" scoped="" ref="0x4103f838"/>
        <function-ref name="isOwner" scoped="" ref="0x4103f918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410343b8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410343b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41034590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41033200" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41033200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410333d8"/>
        <function-ref name="dataReady" scoped="" ref="0x410334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x41034bf8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41034bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41034dd0"/>
        <function-ref name="cancel" scoped="" ref="0x41034eb0"/>
        <function-ref name="dataReady" scoped="" ref="0x41033010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x4102aa78" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4102aa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4102ac50"/>
        <function-ref name="getAdmux" scoped="" ref="0x4102ad30"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4102ae10"/>
        <function-ref name="isEnabled" scoped="" ref="0x4102aef0"/>
        <function-ref name="enableAdc" scoped="" ref="0x41032010"/>
        <function-ref name="setAdmux" scoped="" ref="0x410320f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x410321d0"/>
        <function-ref name="isComplete" scoped="" ref="0x410322b0"/>
        <function-ref name="cancel" scoped="" ref="0x41032390"/>
        <function-ref name="disableAdc" scoped="" ref="0x41032470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41032550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41032630"/>
        <function-ref name="startConversion" scoped="" ref="0x41032710"/>
        <function-ref name="isStarted" scoped="" ref="0x41032870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41032950"/>
        <function-ref name="setContinuous" scoped="" ref="0x41032a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41032b10"/>
        <function-ref name="getValue" scoped="" ref="0x41032bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x41032cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x41034768" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41034768"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41034940"/>
        <function-ref name="stop" scoped="" ref="0x41034a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x41032ea8" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x41032ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x410310c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x410311a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x41031280"/>
        <function-ref name="actualMicro" scoped="" ref="0x41031360"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41031440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41048010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41048010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x410481e8"/>
        <function-ref name="getAdmux" scoped="" ref="0x410482c8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x410483a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x41048488"/>
        <function-ref name="enableAdc" scoped="" ref="0x41048568"/>
        <function-ref name="setAdmux" scoped="" ref="0x41048648"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41048728"/>
        <function-ref name="isComplete" scoped="" ref="0x41048808"/>
        <function-ref name="cancel" scoped="" ref="0x410488e8"/>
        <function-ref name="disableAdc" scoped="" ref="0x410489c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41048aa8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41048b88"/>
        <function-ref name="startConversion" scoped="" ref="0x41048c68"/>
        <function-ref name="isStarted" scoped="" ref="0x41048dc8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41048ea8"/>
        <function-ref name="setContinuous" scoped="" ref="0x41047010"/>
        <function-ref name="getAdcsra" scoped="" ref="0x410470f0"/>
        <function-ref name="getValue" scoped="" ref="0x410471d0"/>
        <function-ref name="dataReady" scoped="" ref="0x410472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41047ce8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41047ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x41047ec0"/>
        <function-ref name="getAdmux" scoped="" ref="0x41044010"/>
        <function-ref name="setPrescaler" scoped="" ref="0x410440f0"/>
        <function-ref name="isEnabled" scoped="" ref="0x410441d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x410442b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x41044390"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41044470"/>
        <function-ref name="isComplete" scoped="" ref="0x41044550"/>
        <function-ref name="cancel" scoped="" ref="0x41044630"/>
        <function-ref name="disableAdc" scoped="" ref="0x41044710"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x410447f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x410448d0"/>
        <function-ref name="startConversion" scoped="" ref="0x410449b0"/>
        <function-ref name="isStarted" scoped="" ref="0x41044b10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41044bf0"/>
        <function-ref name="setContinuous" scoped="" ref="0x41044cd0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41044db0"/>
        <function-ref name="getValue" scoped="" ref="0x41044e90"/>
        <function-ref name="dataReady" scoped="" ref="0x41043010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x410431f8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x410431f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x410433d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410d7808" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410d7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410d79f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410d67c0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410d67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410d69a8"/>
        <function-ref name="configure" scoped="" ref="0x410d6a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x410d7c10" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d7de8"/>
        <function-ref name="requested" scoped="" ref="0x410d7ec8"/>
        <function-ref name="granted" scoped="" ref="0x410d6010"/>
        <function-ref name="isOwner" scoped="" ref="0x410d60f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410d70c8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410d70c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d72b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410d7390"/>
        <function-ref name="request" scoped="" ref="0x410d7470"/>
        <function-ref name="granted" scoped="" ref="0x410d7550"/>
        <function-ref name="isOwner" scoped="" ref="0x410d7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410d6310" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410d6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410d64e8"/>
        <function-ref name="userId" scoped="" ref="0x410d65c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4176bd78" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4176bd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41768010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41768170" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41768170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41768348"/>
        <function-ref name="isEmpty" scoped="" ref="0x41768428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41768508"/>
        <function-ref name="dequeue" scoped="" ref="0x417685e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41767a28" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41767a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41767c10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41767cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417669d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417669d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41766bb8"/>
        <function-ref name="configure" scoped="" ref="0x41766c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41766df8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41766df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41765010"/>
        <function-ref name="isEmpty" scoped="" ref="0x417650f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417651d0"/>
        <function-ref name="dequeue" scoped="" ref="0x417652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41767e30" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41767e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41766050"/>
        <function-ref name="requested" scoped="" ref="0x41766130"/>
        <function-ref name="granted" scoped="" ref="0x41766210"/>
        <function-ref name="isOwner" scoped="" ref="0x417662f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417663d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417653f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417655c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417656a8"/>
        <function-ref name="led1On" scoped="" ref="0x41765788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41765868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41765948"/>
        <function-ref name="get" scoped="" ref="0x41765a28"/>
        <function-ref name="led1Off" scoped="" ref="0x41765b08"/>
        <function-ref name="led0On" scoped="" ref="0x41765e88"/>
        <function-ref name="set" scoped="" ref="0x41765cc8"/>
        <function-ref name="led2On" scoped="" ref="0x41765be8"/>
        <function-ref name="led2Off" scoped="" ref="0x41765da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417672e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417672e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417674d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417675b0"/>
        <function-ref name="request" scoped="" ref="0x41767690"/>
        <function-ref name="granted" scoped="" ref="0x41767770"/>
        <function-ref name="isOwner" scoped="" ref="0x41767850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41766510" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41766510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417666e8"/>
        <function-ref name="userId" scoped="" ref="0x417667c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41764030" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41764030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41764208"/>
        <function-ref name="runTask" scoped="" ref="0x417642e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x410d4510" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x410d4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x410d46e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x410d4828" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d4a00"/>
        <function-ref name="requested" scoped="" ref="0x410d4ae0"/>
        <function-ref name="granted" scoped="" ref="0x410d4bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x410d4ca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d4d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x410d4118" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x410d4118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410d42f0"/>
        <function-ref name="stop" scoped="" ref="0x410d43d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x410d4ec0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410d4ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410c60c0"/>
        <function-ref name="userId" scoped="" ref="0x410c61a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x4174a7a8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x4174a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x4174a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x4174aac0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4174aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4174ac98"/>
        <function-ref name="requested" scoped="" ref="0x4174ad78"/>
        <function-ref name="granted" scoped="" ref="0x4174ae58"/>
        <function-ref name="isOwner" scoped="" ref="0x41748010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417480f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x4174a3b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4174a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4174a588"/>
        <function-ref name="stop" scoped="" ref="0x4174a668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41748230" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41748230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41748408"/>
        <function-ref name="userId" scoped="" ref="0x417484e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410c4970" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410c4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c1010"/>
        <function-ref name="readDone" scoped="" ref="0x410c1268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x410c1978" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x410c1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c0010"/>
        <function-ref name="readDone" scoped="" ref="0x410c0288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x410c0eb0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410c0eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x410be0c0"/>
        <function-ref name="getChannel" scoped="" ref="0x410be1a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x410be280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x410c0638" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410c0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410c0810"/>
        <function-ref name="cancel" scoped="" ref="0x410c08f0"/>
        <function-ref name="dataReady" scoped="" ref="0x410c09d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x410f3538" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x410f3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410f3710"/>
        <function-ref name="runTask" scoped="" ref="0x410f37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410dbe78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410dbe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410e94d8"/>
        <function-ref name="readDone" scoped="" ref="0x410e9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x410e9ba0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x410e9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410da1f0"/>
        <function-ref name="readDone" scoped="" ref="0x410da458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410da7d8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410da7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410da9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410daaa0"/>
        <function-ref name="request" scoped="" ref="0x410dab80"/>
        <function-ref name="granted" scoped="" ref="0x410dac60"/>
        <function-ref name="isOwner" scoped="" ref="0x410dad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x41114ea0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41114ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x411110c0"/>
        <function-ref name="getChannel" scoped="" ref="0x411111a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41111280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411e2c38" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411e2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411e2e10"/>
        <function-ref name="stopDone" scoped="" ref="0x411e2ef0"/>
        <function-ref name="start" scoped="" ref="0x411e1010"/>
        <function-ref name="stop" scoped="" ref="0x411e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x411e1f28" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x411e1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411e0560"/>
        <function-ref name="readDone" scoped="" ref="0x411e07b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x411e1300" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x411e1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411e1928"/>
        <function-ref name="readDone" scoped="" ref="0x411e1b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Temp" ref="0x41795350" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Temp" scoped="" ref="0x41795350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41795528"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41795608"/>
        <function-ref name="measureTemperature" scoped="" ref="0x417956e8"/>
        <function-ref name="reset" scoped="" ref="0x417957c8"/>
        <function-ref name="resetDone" scoped="" ref="0x417958a8"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41795988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x41797580" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x41797580"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x41797758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x41797968" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x41797968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41796010"/>
        <function-ref name="readDone" scoped="" ref="0x41796268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x41798520" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x41798520"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x417986f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x41796580" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x41796580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41796758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41796838"/>
        <function-ref name="request" scoped="" ref="0x41796918"/>
        <function-ref name="granted" scoped="" ref="0x417969f8"/>
        <function-ref name="isOwner" scoped="" ref="0x41796ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Hum" ref="0x41795b08" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Hum" scoped="" ref="0x41795b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41795ce0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41795dc0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41795ea0"/>
        <function-ref name="reset" scoped="" ref="0x41793010"/>
        <function-ref name="resetDone" scoped="" ref="0x417930f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x417931d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x41796c58" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x41796c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41796e30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41796f10"/>
        <function-ref name="request" scoped="" ref="0x41795010"/>
        <function-ref name="granted" scoped="" ref="0x417950f0"/>
        <function-ref name="isOwner" scoped="" ref="0x417951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x41798908" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x41798908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41797010"/>
        <function-ref name="readDone" scoped="" ref="0x41797268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41128d50" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41128d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41128f28"/>
        <function-ref name="stopDone" scoped="" ref="0x41125018"/>
        <function-ref name="start" scoped="" ref="0x411250f8"/>
        <function-ref name="stop" scoped="" ref="0x411251d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x41124100" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x41124100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x411242d8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x411243b8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41124498"/>
        <function-ref name="reset" scoped="" ref="0x41124578"/>
        <function-ref name="resetDone" scoped="" ref="0x41124658"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41124738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41125698" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41125698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41125870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41125950"/>
        <function-ref name="request" scoped="" ref="0x41125a30"/>
        <function-ref name="granted" scoped="" ref="0x41125b10"/>
        <function-ref name="isOwner" scoped="" ref="0x41125bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x41122e70" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x41122e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4116a070"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4116a150"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4116a230"/>
        <function-ref name="reset" scoped="" ref="0x4116a310"/>
        <function-ref name="resetDone" scoped="" ref="0x4116a3f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4116a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x41169988" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x41169988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41169b60"/>
        <function-ref name="disable" scoped="" ref="0x41169c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x41169d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41169e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x41165e58" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x41165e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41164050"/>
        <function-ref name="runTask" scoped="" ref="0x41164130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x41169010" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x41169010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411691e8"/>
        <function-ref name="isInput" scoped="" ref="0x411692c8"/>
        <function-ref name="toggle" scoped="" ref="0x411693a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41169488"/>
        <function-ref name="get" scoped="" ref="0x41169568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41169648"/>
        <function-ref name="set" scoped="" ref="0x41169728"/>
        <function-ref name="clr" scoped="" ref="0x41169808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x4116a650" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x4116a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4116a828"/>
        <function-ref name="isInput" scoped="" ref="0x4116a908"/>
        <function-ref name="toggle" scoped="" ref="0x4116a9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4116aac8"/>
        <function-ref name="get" scoped="" ref="0x4116aba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4116ac88"/>
        <function-ref name="set" scoped="" ref="0x4116ad68"/>
        <function-ref name="clr" scoped="" ref="0x4116ae48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41165240" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41165240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41165418"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411654f8"/>
        <function-ref name="led1On" scoped="" ref="0x411655d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411656b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41165798"/>
        <function-ref name="get" scoped="" ref="0x41165878"/>
        <function-ref name="led1Off" scoped="" ref="0x41165958"/>
        <function-ref name="led2On" scoped="" ref="0x41165cd8"/>
        <function-ref name="set" scoped="" ref="0x41165b18"/>
        <function-ref name="led2Off" scoped="" ref="0x41165a38"/>
        <function-ref name="led0On" scoped="" ref="0x41165bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41168010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41168010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41166b00"/>
        <function-ref name="fired" scoped="" ref="0x41168d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411664c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41166268"/>
        <function-ref name="getdt" scoped="" ref="0x41165010"/>
        <function-ref name="gett0" scoped="" ref="0x41166d58"/>
        <function-ref name="isRunning" scoped="" ref="0x41166010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41168638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411667e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x411688b8"/>
        <function-ref name="stop" scoped="" ref="0x41168b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41163a80" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41163a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41163c58"/>
        <function-ref name="stopDone" scoped="" ref="0x41163d38"/>
        <function-ref name="start" scoped="" ref="0x41163e18"/>
        <function-ref name="stop" scoped="" ref="0x41163ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x4115e030" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x4115e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4115e208"/>
        <function-ref name="disable" scoped="" ref="0x4115e2e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4115e3c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4115e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x4115f590" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4115f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115f768"/>
        <function-ref name="isInput" scoped="" ref="0x4115f848"/>
        <function-ref name="toggle" scoped="" ref="0x4115f928"/>
        <function-ref name="isOutput" scoped="" ref="0x4115fa08"/>
        <function-ref name="get" scoped="" ref="0x4115fae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115fbc8"/>
        <function-ref name="set" scoped="" ref="0x4115fca8"/>
        <function-ref name="clr" scoped="" ref="0x4115fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x41160b10" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x41160b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41160ce8"/>
        <function-ref name="isInput" scoped="" ref="0x41160dc8"/>
        <function-ref name="toggle" scoped="" ref="0x41160ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x4115f010"/>
        <function-ref name="get" scoped="" ref="0x4115f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115f1d0"/>
        <function-ref name="set" scoped="" ref="0x4115f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4115f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411603a8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411603a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41160580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41160660"/>
        <function-ref name="request" scoped="" ref="0x41160740"/>
        <function-ref name="granted" scoped="" ref="0x41160820"/>
        <function-ref name="isOwner" scoped="" ref="0x41160900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x4115ec50" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x4115ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115ee28"/>
        <function-ref name="isInput" scoped="" ref="0x4115ef08"/>
        <function-ref name="toggle" scoped="" ref="0x4115b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4115b0f0"/>
        <function-ref name="get" scoped="" ref="0x4115b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115b2b0"/>
        <function-ref name="set" scoped="" ref="0x4115b390"/>
        <function-ref name="clr" scoped="" ref="0x4115b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x41193ec8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x41193ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41192188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x4115aa28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x4115aa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115ac00"/>
        <function-ref name="isInput" scoped="" ref="0x4115ace0"/>
        <function-ref name="toggle" scoped="" ref="0x4115adc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115aea0"/>
        <function-ref name="get" scoped="" ref="0x41159010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411590f0"/>
        <function-ref name="set" scoped="" ref="0x411591d0"/>
        <function-ref name="clr" scoped="" ref="0x411592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x41158850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x41158850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41158a28"/>
        <function-ref name="isInput" scoped="" ref="0x41158b08"/>
        <function-ref name="toggle" scoped="" ref="0x41158be8"/>
        <function-ref name="isOutput" scoped="" ref="0x41158cc8"/>
        <function-ref name="get" scoped="" ref="0x41158da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41158e88"/>
        <function-ref name="set" scoped="" ref="0x41157010"/>
        <function-ref name="clr" scoped="" ref="0x411570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x41192b20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x41192b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41192cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x411912d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x411912d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411914b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x41195740" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x41195740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41195918"/>
        <function-ref name="isInput" scoped="" ref="0x411959f8"/>
        <function-ref name="toggle" scoped="" ref="0x41195ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x41195bb8"/>
        <function-ref name="get" scoped="" ref="0x41195c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x41195d78"/>
        <function-ref name="set" scoped="" ref="0x41195e58"/>
        <function-ref name="clr" scoped="" ref="0x41194010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x4115b650" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x4115b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115b828"/>
        <function-ref name="isInput" scoped="" ref="0x4115b908"/>
        <function-ref name="toggle" scoped="" ref="0x4115b9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4115bac8"/>
        <function-ref name="get" scoped="" ref="0x4115bba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115bc88"/>
        <function-ref name="set" scoped="" ref="0x4115bd68"/>
        <function-ref name="clr" scoped="" ref="0x4115be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x41159490" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x41159490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41159668"/>
        <function-ref name="isInput" scoped="" ref="0x41159748"/>
        <function-ref name="toggle" scoped="" ref="0x41159828"/>
        <function-ref name="isOutput" scoped="" ref="0x41159908"/>
        <function-ref name="get" scoped="" ref="0x411599e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41159ac8"/>
        <function-ref name="set" scoped="" ref="0x41159ba8"/>
        <function-ref name="clr" scoped="" ref="0x41159c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x41192380" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x41192380"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41192558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x411572d0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x411572d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411574a8"/>
        <function-ref name="isInput" scoped="" ref="0x41157588"/>
        <function-ref name="toggle" scoped="" ref="0x41157668"/>
        <function-ref name="isOutput" scoped="" ref="0x41157748"/>
        <function-ref name="get" scoped="" ref="0x41157828"/>
        <function-ref name="makeOutput" scoped="" ref="0x41157908"/>
        <function-ref name="set" scoped="" ref="0x411579e8"/>
        <function-ref name="clr" scoped="" ref="0x41157ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x411916a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x411916a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41191880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x41194200" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x41194200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411943d8"/>
        <function-ref name="isInput" scoped="" ref="0x411944b8"/>
        <function-ref name="toggle" scoped="" ref="0x41194598"/>
        <function-ref name="isOutput" scoped="" ref="0x41194678"/>
        <function-ref name="get" scoped="" ref="0x41194758"/>
        <function-ref name="makeOutput" scoped="" ref="0x41194838"/>
        <function-ref name="set" scoped="" ref="0x41194918"/>
        <function-ref name="clr" scoped="" ref="0x411949f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x4115a050" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x4115a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115a228"/>
        <function-ref name="isInput" scoped="" ref="0x4115a308"/>
        <function-ref name="toggle" scoped="" ref="0x4115a3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4115a4c8"/>
        <function-ref name="get" scoped="" ref="0x4115a5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115a688"/>
        <function-ref name="set" scoped="" ref="0x4115a768"/>
        <function-ref name="clr" scoped="" ref="0x4115a848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x41159e68" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x41159e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41158050"/>
        <function-ref name="isInput" scoped="" ref="0x41158130"/>
        <function-ref name="toggle" scoped="" ref="0x41158210"/>
        <function-ref name="isOutput" scoped="" ref="0x411582f0"/>
        <function-ref name="get" scoped="" ref="0x411583d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411584b0"/>
        <function-ref name="set" scoped="" ref="0x41158590"/>
        <function-ref name="clr" scoped="" ref="0x41158670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x41192750" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x41192750"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41192928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x41157cb8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x41157cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41157e90"/>
        <function-ref name="isInput" scoped="" ref="0x41195010"/>
        <function-ref name="toggle" scoped="" ref="0x411950f0"/>
        <function-ref name="isOutput" scoped="" ref="0x411951d0"/>
        <function-ref name="get" scoped="" ref="0x411952b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x41195390"/>
        <function-ref name="set" scoped="" ref="0x41195470"/>
        <function-ref name="clr" scoped="" ref="0x41195550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x41192ef0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x41192ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411910e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x41191a78" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x41191a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41191c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x41194be8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x41194be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41194dc0"/>
        <function-ref name="isInput" scoped="" ref="0x41194ea0"/>
        <function-ref name="toggle" scoped="" ref="0x41193010"/>
        <function-ref name="isOutput" scoped="" ref="0x411930f0"/>
        <function-ref name="get" scoped="" ref="0x411931d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411932b0"/>
        <function-ref name="set" scoped="" ref="0x41193390"/>
        <function-ref name="clr" scoped="" ref="0x41193470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x411905c0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x411905c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41190798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x4118d208" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x4118d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4118d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x4118d9a8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x4118d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4118db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x41190990" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x41190990"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41190b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x4118dd78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x4118dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4118c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x41190d60" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x41190d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4118d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x4118d5d8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x4118d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4118d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x4118c208" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x4118c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4118c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x41180a00" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x41180a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41180bd8"/>
        <function-ref name="fired" scoped="" ref="0x41180cb8"/>
        <function-ref name="disable" scoped="" ref="0x41180d98"/>
        <function-ref name="edge" scoped="" ref="0x41180e78"/>
        <function-ref name="enable" scoped="" ref="0x4117f010"/>
        <function-ref name="getValue" scoped="" ref="0x4117f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x41180408" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41180408"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411805e0"/>
        <function-ref name="disable" scoped="" ref="0x411806c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x411807a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41180880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x411b0338" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x411b0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b0510"/>
        <function-ref name="fired" scoped="" ref="0x411b05f0"/>
        <function-ref name="disable" scoped="" ref="0x411b06d0"/>
        <function-ref name="edge" scoped="" ref="0x411b07b0"/>
        <function-ref name="enable" scoped="" ref="0x411b0890"/>
        <function-ref name="getValue" scoped="" ref="0x411b0970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x411b36b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x411b36b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b3890"/>
        <function-ref name="fired" scoped="" ref="0x411b3970"/>
        <function-ref name="disable" scoped="" ref="0x411b3a50"/>
        <function-ref name="edge" scoped="" ref="0x411b3b30"/>
        <function-ref name="enable" scoped="" ref="0x411b3c10"/>
        <function-ref name="getValue" scoped="" ref="0x411b3cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x411b1168" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x411b1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b1340"/>
        <function-ref name="fired" scoped="" ref="0x411b1420"/>
        <function-ref name="disable" scoped="" ref="0x411b1500"/>
        <function-ref name="edge" scoped="" ref="0x411b15e0"/>
        <function-ref name="enable" scoped="" ref="0x411b16c0"/>
        <function-ref name="getValue" scoped="" ref="0x411b17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x411b0bb8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x411b0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b0d90"/>
        <function-ref name="fired" scoped="" ref="0x411b0e70"/>
        <function-ref name="disable" scoped="" ref="0x411af010"/>
        <function-ref name="edge" scoped="" ref="0x411af0f0"/>
        <function-ref name="enable" scoped="" ref="0x411af1d0"/>
        <function-ref name="getValue" scoped="" ref="0x411af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x411b2010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x411b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b21e8"/>
        <function-ref name="fired" scoped="" ref="0x411b22c8"/>
        <function-ref name="disable" scoped="" ref="0x411b23a8"/>
        <function-ref name="edge" scoped="" ref="0x411b2488"/>
        <function-ref name="enable" scoped="" ref="0x411b2568"/>
        <function-ref name="getValue" scoped="" ref="0x411b2648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x411b19e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x411b19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b1bc0"/>
        <function-ref name="fired" scoped="" ref="0x411b1ca0"/>
        <function-ref name="disable" scoped="" ref="0x411b1d80"/>
        <function-ref name="edge" scoped="" ref="0x411b1e60"/>
        <function-ref name="enable" scoped="" ref="0x411b0010"/>
        <function-ref name="getValue" scoped="" ref="0x411b00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4117fdd8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4117fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b3010"/>
        <function-ref name="fired" scoped="" ref="0x411b30f0"/>
        <function-ref name="disable" scoped="" ref="0x411b31d0"/>
        <function-ref name="edge" scoped="" ref="0x411b32b0"/>
        <function-ref name="enable" scoped="" ref="0x411b3390"/>
        <function-ref name="getValue" scoped="" ref="0x411b3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x411b2890" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x411b2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b2a68"/>
        <function-ref name="fired" scoped="" ref="0x411b2b48"/>
        <function-ref name="disable" scoped="" ref="0x411b2c28"/>
        <function-ref name="edge" scoped="" ref="0x411b2d08"/>
        <function-ref name="enable" scoped="" ref="0x411b2de8"/>
        <function-ref name="getValue" scoped="" ref="0x411b2ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x411ab2b0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x411ab2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ab488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x411aac18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x411aac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411aadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x411ac998" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x411ac998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411acb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x411ab728" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x411ab728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ab900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x411ac0a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x411ac0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ac280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x411ace10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x411ace10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x411aa7a0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x411aa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411aa978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x411ac520" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x411ac520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ac6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411ad6f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411ad6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411ad8d0"/>
        <function-ref name="fired" scoped="" ref="0x411ad9b0"/>
        <function-ref name="disable" scoped="" ref="0x411ada90"/>
        <function-ref name="edge" scoped="" ref="0x411adb70"/>
        <function-ref name="enable" scoped="" ref="0x411adc50"/>
        <function-ref name="getValue" scoped="" ref="0x411add30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411adeb0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411adeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4119a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411cf7f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411cf7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411cf9d0"/>
        <function-ref name="fired" scoped="" ref="0x411cfab0"/>
        <function-ref name="disable" scoped="" ref="0x411cfb90"/>
        <function-ref name="edge" scoped="" ref="0x411cfc70"/>
        <function-ref name="enable" scoped="" ref="0x411cfd50"/>
        <function-ref name="getValue" scoped="" ref="0x411cfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411ce010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ce1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411cd920" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411cd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411cdaf8"/>
        <function-ref name="fired" scoped="" ref="0x411cdbd8"/>
        <function-ref name="disable" scoped="" ref="0x411cdcb8"/>
        <function-ref name="edge" scoped="" ref="0x411cdd98"/>
        <function-ref name="enable" scoped="" ref="0x411cde78"/>
        <function-ref name="getValue" scoped="" ref="0x411cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411cc190" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411cc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411cc368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411cbb68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411cbb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411cbd40"/>
        <function-ref name="fired" scoped="" ref="0x411cbe20"/>
        <function-ref name="disable" scoped="" ref="0x411cbf00"/>
        <function-ref name="edge" scoped="" ref="0x411ca010"/>
        <function-ref name="enable" scoped="" ref="0x411ca0f0"/>
        <function-ref name="getValue" scoped="" ref="0x411ca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411ca350" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411ca350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411ca528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411c8c70" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411c8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411c8e48"/>
        <function-ref name="fired" scoped="" ref="0x411c8f28"/>
        <function-ref name="disable" scoped="" ref="0x411c7018"/>
        <function-ref name="edge" scoped="" ref="0x411c70f8"/>
        <function-ref name="enable" scoped="" ref="0x411c71d8"/>
        <function-ref name="getValue" scoped="" ref="0x411c72b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411c7438" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411c7438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411c7610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411c6d60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411c6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411c5010"/>
        <function-ref name="fired" scoped="" ref="0x411c50f0"/>
        <function-ref name="disable" scoped="" ref="0x411c51d0"/>
        <function-ref name="edge" scoped="" ref="0x411c52b0"/>
        <function-ref name="enable" scoped="" ref="0x411c5390"/>
        <function-ref name="getValue" scoped="" ref="0x411c5470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411c55f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411c55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411c57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411c3010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411c31e8"/>
        <function-ref name="fired" scoped="" ref="0x411c32c8"/>
        <function-ref name="disable" scoped="" ref="0x411c33a8"/>
        <function-ref name="edge" scoped="" ref="0x411c3488"/>
        <function-ref name="enable" scoped="" ref="0x411c3568"/>
        <function-ref name="getValue" scoped="" ref="0x411c3648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411c37c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411c37c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411c39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411c1228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411c1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411c1400"/>
        <function-ref name="fired" scoped="" ref="0x411c14e0"/>
        <function-ref name="disable" scoped="" ref="0x411c15c0"/>
        <function-ref name="edge" scoped="" ref="0x411c16a0"/>
        <function-ref name="enable" scoped="" ref="0x411c1780"/>
        <function-ref name="getValue" scoped="" ref="0x411c1860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411c19e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411c19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411c1bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411bb4a8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411bb4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411bb680"/>
        <function-ref name="stopDone" scoped="" ref="0x411bb760"/>
        <function-ref name="start" scoped="" ref="0x411bb840"/>
        <function-ref name="stop" scoped="" ref="0x411bb920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x411f7710" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x411f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f78e8"/>
        <function-ref name="runTask" scoped="" ref="0x411f79c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x411b6870" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x411b6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411b6a48"/>
        <function-ref name="isInput" scoped="" ref="0x411b6b28"/>
        <function-ref name="toggle" scoped="" ref="0x411b6c08"/>
        <function-ref name="isOutput" scoped="" ref="0x411b6ce8"/>
        <function-ref name="get" scoped="" ref="0x411b6dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411b6ea8"/>
        <function-ref name="set" scoped="" ref="0x411f7010"/>
        <function-ref name="clr" scoped="" ref="0x411f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x411b7e38" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x411b7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411b6050"/>
        <function-ref name="isInput" scoped="" ref="0x411b6130"/>
        <function-ref name="toggle" scoped="" ref="0x411b6210"/>
        <function-ref name="isOutput" scoped="" ref="0x411b62f0"/>
        <function-ref name="get" scoped="" ref="0x411b63d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411b64b0"/>
        <function-ref name="set" scoped="" ref="0x411b6590"/>
        <function-ref name="clr" scoped="" ref="0x411b6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411bbb88" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411bbb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411b76a8"/>
        <function-ref name="fired" scoped="" ref="0x411b8938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411b7068"/>
        <function-ref name="isOneShot" scoped="" ref="0x411b8de8"/>
        <function-ref name="getdt" scoped="" ref="0x411b7b58"/>
        <function-ref name="gett0" scoped="" ref="0x411b7900"/>
        <function-ref name="isRunning" scoped="" ref="0x411b8b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411b81e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411b7388"/>
        <function-ref name="startOneShot" scoped="" ref="0x411b8460"/>
        <function-ref name="stop" scoped="" ref="0x411b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411b92c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411b92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411f0db0"/>
        <function-ref name="fired" scoped="" ref="0x411f0068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411f0770"/>
        <function-ref name="isOneShot" scoped="" ref="0x411f0518"/>
        <function-ref name="getdt" scoped="" ref="0x411ef2a0"/>
        <function-ref name="gett0" scoped="" ref="0x411ef048"/>
        <function-ref name="isRunning" scoped="" ref="0x411f02c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411b98e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411f0a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x411b9b68"/>
        <function-ref name="stop" scoped="" ref="0x411b9de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411ed488" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411ed488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411ed670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411ed750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411edd40" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411edd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411edf28"/>
        <function-ref name="configure" scoped="" ref="0x411ec018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411eece8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411eece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411eeed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411ed010"/>
        <function-ref name="request" scoped="" ref="0x411ed0f0"/>
        <function-ref name="granted" scoped="" ref="0x411ed1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x411ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411ed890" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411ed890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411eda68"/>
        <function-ref name="userId" scoped="" ref="0x411edb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417ed7d8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417ed7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417ed9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417edb10" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417edb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417edce8"/>
        <function-ref name="isEmpty" scoped="" ref="0x417eddc8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417edea8"/>
        <function-ref name="dequeue" scoped="" ref="0x417ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417eb2d0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417eb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417eb4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417eb598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417ebb98" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417ebb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417ebd80"/>
        <function-ref name="configure" scoped="" ref="0x417ebe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417ea010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417ea1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x417ea2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417ea3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x417ea488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417ecb78" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417ecb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417ecd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417ece40"/>
        <function-ref name="request" scoped="" ref="0x417ecf20"/>
        <function-ref name="granted" scoped="" ref="0x417eb018"/>
        <function-ref name="isOwner" scoped="" ref="0x417eb0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417eb6d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417eb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417eb8b0"/>
        <function-ref name="userId" scoped="" ref="0x417eb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417ea608" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417ea608"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417ea7e0"/>
        <function-ref name="runTask" scoped="" ref="0x417ea8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411eae30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411eae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411e7920"/>
        <function-ref name="fired" scoped="" ref="0x411e8bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411e72e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x411e7088"/>
        <function-ref name="getdt" scoped="" ref="0x411e7dd0"/>
        <function-ref name="gett0" scoped="" ref="0x411e7b78"/>
        <function-ref name="isRunning" scoped="" ref="0x411e8e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411e8468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411e7600"/>
        <function-ref name="startOneShot" scoped="" ref="0x411e86e8"/>
        <function-ref name="stop" scoped="" ref="0x411e8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411de668" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411de668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411de840"/>
        <function-ref name="stopDone" scoped="" ref="0x411de920"/>
        <function-ref name="start" scoped="" ref="0x411dea00"/>
        <function-ref name="stop" scoped="" ref="0x411deae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x411decd8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x411decd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x411deec0"/>
        <function-ref name="high" scoped="" ref="0x411dd010"/>
        <function-ref name="Toggle" scoped="" ref="0x411dd0f0"/>
        <function-ref name="read" scoped="" ref="0x411dd1d0"/>
        <function-ref name="setParam" scoped="" ref="0x411dd2b0"/>
        <function-ref name="readDone" scoped="" ref="0x411dd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411de330" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411de330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411de508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411dbd38" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411dbd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411dbf10"/>
        <function-ref name="stopDone" scoped="" ref="0x411d8010"/>
        <function-ref name="start" scoped="" ref="0x411d80f0"/>
        <function-ref name="stop" scoped="" ref="0x411d81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x411d8660" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x411d8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x411d8838"/>
        <function-ref name="high" scoped="" ref="0x411d8918"/>
        <function-ref name="Toggle" scoped="" ref="0x411d89f8"/>
        <function-ref name="read" scoped="" ref="0x411d8ad8"/>
        <function-ref name="setParam" scoped="" ref="0x411d8bb8"/>
        <function-ref name="readDone" scoped="" ref="0x411d8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411db980" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411db980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411dbb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411d78d0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411d78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411d7aa8"/>
        <function-ref name="stopDone" scoped="" ref="0x411d7b88"/>
        <function-ref name="start" scoped="" ref="0x411d7c68"/>
        <function-ref name="stop" scoped="" ref="0x411d7d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x41216ba8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41216ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41214318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x412161e0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x412161e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x412163b8"/>
        <function-ref name="high" scoped="" ref="0x41216498"/>
        <function-ref name="Toggle" scoped="" ref="0x41216578"/>
        <function-ref name="read" scoped="" ref="0x41216658"/>
        <function-ref name="setParam" scoped="" ref="0x41216738"/>
        <function-ref name="readDone" scoped="" ref="0x41216818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read_io" ref="0x41225408" loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read_io" scoped="" ref="0x41225408"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41225660"/>
        <function-ref name="runTask" scoped="" ref="0x41225740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411d7538" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411d7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411d7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init_io" ref="0x41206978" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init_io" scoped="" ref="0x41206978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41206b50"/>
        <function-ref name="runTask" scoped="" ref="0x41206c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x4120d360" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4120d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4120d538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4120d618"/>
        <function-ref name="request" scoped="" ref="0x4120d6f8"/>
        <function-ref name="granted" scoped="" ref="0x4120d7d8"/>
        <function-ref name="isOwner" scoped="" ref="0x4120d8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x4120dab8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4120dab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4120dc90"/>
        <function-ref name="isInput" scoped="" ref="0x4120dd70"/>
        <function-ref name="toggle" scoped="" ref="0x4120de50"/>
        <function-ref name="isOutput" scoped="" ref="0x41209010"/>
        <function-ref name="get" scoped="" ref="0x412090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412091d0"/>
        <function-ref name="set" scoped="" ref="0x412092b0"/>
        <function-ref name="clr" scoped="" ref="0x41209390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_low" ref="0x411f8c58" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_low" scoped="" ref="0x411f8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f8e30"/>
        <function-ref name="runTask" scoped="" ref="0x411f8f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_toggle" ref="0x41235f20" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_toggle" scoped="" ref="0x41235f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41233110"/>
        <function-ref name="runTask" scoped="" ref="0x412331f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x4120a3f0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4120a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4120aa38"/>
        <function-ref name="writeDone" scoped="" ref="0x41213ca8"/>
        <function-ref name="write" scoped="" ref="0x41213068"/>
        <function-ref name="readDone" scoped="" ref="0x41213688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x41209608" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41209608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412097e0"/>
        <function-ref name="fired" scoped="" ref="0x412098c0"/>
        <function-ref name="disable" scoped="" ref="0x412099a0"/>
        <function-ref name="edge" scoped="" ref="0x41209a80"/>
        <function-ref name="enable" scoped="" ref="0x41209b60"/>
        <function-ref name="getValue" scoped="" ref="0x41209c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_high" ref="0x411fc930" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_high" scoped="" ref="0x411fc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411fcb08"/>
        <function-ref name="runTask" scoped="" ref="0x411fcbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x41252c40" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x41252c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41252e18"/>
        <function-ref name="isInput" scoped="" ref="0x41252ef8"/>
        <function-ref name="toggle" scoped="" ref="0x4124f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4124f0f0"/>
        <function-ref name="get" scoped="" ref="0x4124f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4124f2b0"/>
        <function-ref name="set" scoped="" ref="0x4124f390"/>
        <function-ref name="clr" scoped="" ref="0x4124f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x4124c010" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4124c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4124c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4124c2c8"/>
        <function-ref name="request" scoped="" ref="0x4124c3a8"/>
        <function-ref name="granted" scoped="" ref="0x4124c488"/>
        <function-ref name="isOwner" scoped="" ref="0x4124c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4124e010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4124e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4124e658"/>
        <function-ref name="writeDone" scoped="" ref="0x4124d8e0"/>
        <function-ref name="write" scoped="" ref="0x4124ec78"/>
        <function-ref name="readDone" scoped="" ref="0x4124d2c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4124f6e8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4124f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4124f8c0"/>
        <function-ref name="fired" scoped="" ref="0x4124f9a0"/>
        <function-ref name="disable" scoped="" ref="0x4124fa80"/>
        <function-ref name="edge" scoped="" ref="0x4124fb60"/>
        <function-ref name="enable" scoped="" ref="0x4124fc40"/>
        <function-ref name="getValue" scoped="" ref="0x4124fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4124adb0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4124adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41249010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412490f0"/>
        <function-ref name="request" scoped="" ref="0x412491d0"/>
        <function-ref name="granted" scoped="" ref="0x412492b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41249390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41249580" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41249580"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41249bc8"/>
        <function-ref name="writeDone" scoped="" ref="0x412f6e40"/>
        <function-ref name="write" scoped="" ref="0x412f6200"/>
        <function-ref name="readDone" scoped="" ref="0x412f6820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41243c18" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41243c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41243df0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41243ed0"/>
        <function-ref name="request" scoped="" ref="0x4123f010"/>
        <function-ref name="granted" scoped="" ref="0x4123f0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4123f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4123f7b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4123f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4123fdf8"/>
        <function-ref name="writeDone" scoped="" ref="0x4123c0a8"/>
        <function-ref name="write" scoped="" ref="0x4123e440"/>
        <function-ref name="readDone" scoped="" ref="0x4123ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412711e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412711e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412713d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412714b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41270208" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41270208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412703f0"/>
        <function-ref name="configure" scoped="" ref="0x412704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x412715f0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412715f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412717c8"/>
        <function-ref name="requested" scoped="" ref="0x412718a8"/>
        <function-ref name="granted" scoped="" ref="0x41271988"/>
        <function-ref name="isOwner" scoped="" ref="0x41271a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41271b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4127d9e8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4127d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4127dbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4127dcb0"/>
        <function-ref name="request" scoped="" ref="0x4127dd90"/>
        <function-ref name="granted" scoped="" ref="0x4127de70"/>
        <function-ref name="isOwner" scoped="" ref="0x41271010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41271c88" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41271c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41271e60"/>
        <function-ref name="userId" scoped="" ref="0x41270010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417cddf0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417cddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417ca170" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417ca170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417ca348"/>
        <function-ref name="isEmpty" scoped="" ref="0x417ca428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417ca508"/>
        <function-ref name="dequeue" scoped="" ref="0x417ca5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417c9a28" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417c9a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417c9c10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417c9cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417c89d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417c89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417c8bb8"/>
        <function-ref name="configure" scoped="" ref="0x417c8c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417c8df8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417c8df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417c7010"/>
        <function-ref name="isEmpty" scoped="" ref="0x417c70f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417c71d0"/>
        <function-ref name="dequeue" scoped="" ref="0x417c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x417c9e30" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x417c9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417c8050"/>
        <function-ref name="requested" scoped="" ref="0x417c8130"/>
        <function-ref name="granted" scoped="" ref="0x417c8210"/>
        <function-ref name="isOwner" scoped="" ref="0x417c82f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417c83d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417c73f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417c73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417c75c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417c76a8"/>
        <function-ref name="led1On" scoped="" ref="0x417c7788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x417c7868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x417c7948"/>
        <function-ref name="get" scoped="" ref="0x417c7a28"/>
        <function-ref name="led1Off" scoped="" ref="0x417c7b08"/>
        <function-ref name="led0On" scoped="" ref="0x417c7e88"/>
        <function-ref name="set" scoped="" ref="0x417c7cc8"/>
        <function-ref name="led2On" scoped="" ref="0x417c7be8"/>
        <function-ref name="led2Off" scoped="" ref="0x417c7da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417c92e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417c92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417c94d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417c95b0"/>
        <function-ref name="request" scoped="" ref="0x417c9690"/>
        <function-ref name="granted" scoped="" ref="0x417c9770"/>
        <function-ref name="isOwner" scoped="" ref="0x417c9850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417c8510" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417c8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417c86e8"/>
        <function-ref name="userId" scoped="" ref="0x417c87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417c6030" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417c6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417c6208"/>
        <function-ref name="runTask" scoped="" ref="0x417c62e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x4126f7a8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x4126f7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x4126f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x4126fac0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4126fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4126fc98"/>
        <function-ref name="requested" scoped="" ref="0x4126fd78"/>
        <function-ref name="granted" scoped="" ref="0x4126fe58"/>
        <function-ref name="isOwner" scoped="" ref="0x4126e010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4126e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x4126f3b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4126f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4126f588"/>
        <function-ref name="stop" scoped="" ref="0x4126f668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x4126e230" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4126e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4126e408"/>
        <function-ref name="userId" scoped="" ref="0x4126e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x4128d110" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x4128d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x4128d2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41290220" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41290220"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41290868"/>
        <function-ref name="writeDone" scoped="" ref="0x4128eaf8"/>
        <function-ref name="write" scoped="" ref="0x41290e88"/>
        <function-ref name="readDone" scoped="" ref="0x4128e4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4126d248" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4126d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4126d430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4126d510"/>
        <function-ref name="request" scoped="" ref="0x4126d5f0"/>
        <function-ref name="granted" scoped="" ref="0x4126d6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4126d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4126da38" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4126da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4126c0a8"/>
        <function-ref name="writeDone" scoped="" ref="0x41291368"/>
        <function-ref name="write" scoped="" ref="0x4126c6d8"/>
        <function-ref name="readDone" scoped="" ref="0x4126cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x412919e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x412919e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41291bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41291cb0"/>
        <function-ref name="request" scoped="" ref="0x41291d90"/>
        <function-ref name="granted" scoped="" ref="0x41291e70"/>
        <function-ref name="isOwner" scoped="" ref="0x41290010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x412dc240" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x412dc240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x412dc418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x412dc598" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x412dc598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x412dc770"/>
        <function-ref name="sendCommand" scoped="" ref="0x412dc850"/>
        <function-ref name="setStart" scoped="" ref="0x412dc930"/>
        <function-ref name="status" scoped="" ref="0x412dca10"/>
        <function-ref name="hasAcks" scoped="" ref="0x412dcaf0"/>
        <function-ref name="isEnabled" scoped="" ref="0x412dcbd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x412dccb0"/>
        <function-ref name="read" scoped="" ref="0x412dcd90"/>
        <function-ref name="init" scoped="" ref="0x412dce70"/>
        <function-ref name="enableAck" scoped="" ref="0x412db010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x412db0f0"/>
        <function-ref name="hasStart" scoped="" ref="0x412db1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x412db2b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x412db410"/>
        <function-ref name="enable" scoped="" ref="0x412db4f0"/>
        <function-ref name="write" scoped="" ref="0x412db5d0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x412db6b0"/>
        <function-ref name="off" scoped="" ref="0x412db790"/>
        <function-ref name="setStop" scoped="" ref="0x412db870"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x412db950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x412dba30"/>
        <function-ref name="hasStop" scoped="" ref="0x412dbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x412dbc90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x412dbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412dbe68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412da010"/>
        <function-ref name="led1On" scoped="" ref="0x412da0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412da1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412da2b0"/>
        <function-ref name="get" scoped="" ref="0x412da390"/>
        <function-ref name="led1Off" scoped="" ref="0x412da470"/>
        <function-ref name="led2On" scoped="" ref="0x412da7f0"/>
        <function-ref name="set" scoped="" ref="0x412da630"/>
        <function-ref name="led2Off" scoped="" ref="0x412da550"/>
        <function-ref name="led0On" scoped="" ref="0x412da710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x412da970" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x412da970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412dab48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412dac28"/>
        <function-ref name="led1On" scoped="" ref="0x412dad08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412dade8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412daec8"/>
        <function-ref name="get" scoped="" ref="0x412d9010"/>
        <function-ref name="led1Off" scoped="" ref="0x412d90f0"/>
        <function-ref name="led2On" scoped="" ref="0x412d9470"/>
        <function-ref name="set" scoped="" ref="0x412d92b0"/>
        <function-ref name="led2Off" scoped="" ref="0x412d91d0"/>
        <function-ref name="led0On" scoped="" ref="0x412d9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x4128ce48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4128ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4128b050"/>
        <function-ref name="stop" scoped="" ref="0x4128b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4128b320" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4128b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4128b968"/>
        <function-ref name="writeDone" scoped="" ref="0x412dec50"/>
        <function-ref name="write" scoped="" ref="0x412de010"/>
        <function-ref name="readDone" scoped="" ref="0x412de630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x412d8d88" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x412d8d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x412d5010"/>
        <function-ref name="sendCommand" scoped="" ref="0x412d50f0"/>
        <function-ref name="setStart" scoped="" ref="0x412d51d0"/>
        <function-ref name="status" scoped="" ref="0x412d52b0"/>
        <function-ref name="hasAcks" scoped="" ref="0x412d5390"/>
        <function-ref name="isEnabled" scoped="" ref="0x412d5470"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x412d5550"/>
        <function-ref name="read" scoped="" ref="0x412d5630"/>
        <function-ref name="init" scoped="" ref="0x412d5710"/>
        <function-ref name="enableAck" scoped="" ref="0x412d57f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x412d58d0"/>
        <function-ref name="hasStart" scoped="" ref="0x412d59b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x412d5a90"/>
        <function-ref name="commandComplete" scoped="" ref="0x412d5bf0"/>
        <function-ref name="enable" scoped="" ref="0x412d5cd0"/>
        <function-ref name="write" scoped="" ref="0x412d5db0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x412d5e90"/>
        <function-ref name="off" scoped="" ref="0x412d4010"/>
        <function-ref name="setStop" scoped="" ref="0x412d40f0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x412d41d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x412d42b0"/>
        <function-ref name="hasStop" scoped="" ref="0x412d4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x412d1010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x412d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x412d11e8"/>
        <function-ref name="sendCommand" scoped="" ref="0x412d12c8"/>
        <function-ref name="setStart" scoped="" ref="0x412d13a8"/>
        <function-ref name="status" scoped="" ref="0x412d1488"/>
        <function-ref name="hasAcks" scoped="" ref="0x412d1568"/>
        <function-ref name="isEnabled" scoped="" ref="0x412d1648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x412d1728"/>
        <function-ref name="read" scoped="" ref="0x412d1808"/>
        <function-ref name="init" scoped="" ref="0x412d18e8"/>
        <function-ref name="enableAck" scoped="" ref="0x412d19c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x412d1aa8"/>
        <function-ref name="hasStart" scoped="" ref="0x412d1b88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x412d1c68"/>
        <function-ref name="commandComplete" scoped="" ref="0x412d1dc8"/>
        <function-ref name="enable" scoped="" ref="0x412d1ea8"/>
        <function-ref name="write" scoped="" ref="0x412d0010"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x412d00f0"/>
        <function-ref name="off" scoped="" ref="0x412d01d0"/>
        <function-ref name="setStop" scoped="" ref="0x412d02b0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x412d0390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x412d0470"/>
        <function-ref name="hasStop" scoped="" ref="0x412d0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x412d0780" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x412d0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d0958"/>
        <function-ref name="isInput" scoped="" ref="0x412d0a38"/>
        <function-ref name="toggle" scoped="" ref="0x412d0b18"/>
        <function-ref name="isOutput" scoped="" ref="0x412d0bf8"/>
        <function-ref name="get" scoped="" ref="0x412d0cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d0db8"/>
        <function-ref name="set" scoped="" ref="0x412d0e98"/>
        <function-ref name="clr" scoped="" ref="0x412cf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x412cf218" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x412cf218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412cf3f0"/>
        <function-ref name="isInput" scoped="" ref="0x412cf4d0"/>
        <function-ref name="toggle" scoped="" ref="0x412cf5b0"/>
        <function-ref name="isOutput" scoped="" ref="0x412cf690"/>
        <function-ref name="get" scoped="" ref="0x412cf770"/>
        <function-ref name="makeOutput" scoped="" ref="0x412cf850"/>
        <function-ref name="set" scoped="" ref="0x412cf930"/>
        <function-ref name="clr" scoped="" ref="0x412cfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x412f3010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300DigitalC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x412f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412f2b00"/>
        <function-ref name="fired" scoped="" ref="0x412f3d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412f24c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x412f2268"/>
        <function-ref name="getdt" scoped="" ref="0x412f1010"/>
        <function-ref name="gett0" scoped="" ref="0x412f2d58"/>
        <function-ref name="isRunning" scoped="" ref="0x412f2010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412f3638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x412f27e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x412f38b8"/>
        <function-ref name="stop" scoped="" ref="0x412f3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412ece68" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412ece68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413b0050"/>
        <function-ref name="stopDone" scoped="" ref="0x413b0130"/>
        <function-ref name="start" scoped="" ref="0x413b0210"/>
        <function-ref name="stop" scoped="" ref="0x413b02f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x413af170" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x413af170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413af348"/>
        <function-ref name="off" scoped="" ref="0x413af428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412ecb50" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412ecb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412ecd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x413b04c8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x413b04c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413b06b0"/>
        <function-ref name="readDone" scoped="" ref="0x413b0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x413b0968" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x413b0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x413b0b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x413af588" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x413af588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413af760"/>
        <function-ref name="off" scoped="" ref="0x413af840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x413b0cb0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x413b0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413b0e88"/>
        <function-ref name="off" scoped="" ref="0x413af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412e9ed0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412e9ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412e50c0"/>
        <function-ref name="stopDone" scoped="" ref="0x412e51a0"/>
        <function-ref name="start" scoped="" ref="0x412e5280"/>
        <function-ref name="stop" scoped="" ref="0x412e5360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x413298b0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x413298b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41329a88"/>
        <function-ref name="off" scoped="" ref="0x41329b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412e9b38" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412e9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412e9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x412e57f8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x412e57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412e59d0"/>
        <function-ref name="readDone" scoped="" ref="0x412e5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x41329010" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x41329010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x413291e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x41329d70" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x41329d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41328010"/>
        <function-ref name="off" scoped="" ref="0x413280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x413293f0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x413293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413295c8"/>
        <function-ref name="off" scoped="" ref="0x413296a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x41323b30" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x41323b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41323d08"/>
        <function-ref name="isInput" scoped="" ref="0x41323de8"/>
        <function-ref name="toggle" scoped="" ref="0x41323ec8"/>
        <function-ref name="isOutput" scoped="" ref="0x41322010"/>
        <function-ref name="get" scoped="" ref="0x413220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413221d0"/>
        <function-ref name="set" scoped="" ref="0x413222b0"/>
        <function-ref name="clr" scoped="" ref="0x41322390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x413230d0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x413230d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413232a8"/>
        <function-ref name="isInput" scoped="" ref="0x41323388"/>
        <function-ref name="toggle" scoped="" ref="0x41323468"/>
        <function-ref name="isOutput" scoped="" ref="0x41323548"/>
        <function-ref name="get" scoped="" ref="0x41323628"/>
        <function-ref name="makeOutput" scoped="" ref="0x41323708"/>
        <function-ref name="set" scoped="" ref="0x413237e8"/>
        <function-ref name="clr" scoped="" ref="0x413238c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerStabalizingTimer" ref="0x4131d450" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4131d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4131b010"/>
        <function-ref name="fired" scoped="" ref="0x4131c268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4131c970"/>
        <function-ref name="isOneShot" scoped="" ref="0x4131c718"/>
        <function-ref name="getdt" scoped="" ref="0x4131b4c0"/>
        <function-ref name="gett0" scoped="" ref="0x4131b268"/>
        <function-ref name="isRunning" scoped="" ref="0x4131c4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4131daf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4131cc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4131dd78"/>
        <function-ref name="stop" scoped="" ref="0x4131c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x41325c68" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x41325c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41325e40"/>
        <function-ref name="off" scoped="" ref="0x41325f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x41328c68" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x41328c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41328e40"/>
        <function-ref name="readDone" scoped="" ref="0x41328f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x413253c8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x413253c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x413255a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x41324658" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x41324658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41324830"/>
        <function-ref name="isInput" scoped="" ref="0x41324910"/>
        <function-ref name="toggle" scoped="" ref="0x413249f0"/>
        <function-ref name="isOutput" scoped="" ref="0x41324ad0"/>
        <function-ref name="get" scoped="" ref="0x41324bb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x41324c90"/>
        <function-ref name="set" scoped="" ref="0x41324d70"/>
        <function-ref name="clr" scoped="" ref="0x41324e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x41322600" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x41322600"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413227d8"/>
        <function-ref name="isInput" scoped="" ref="0x413228b8"/>
        <function-ref name="toggle" scoped="" ref="0x41322998"/>
        <function-ref name="isOutput" scoped="" ref="0x41322a78"/>
        <function-ref name="get" scoped="" ref="0x41322b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x41322c38"/>
        <function-ref name="set" scoped="" ref="0x41322d18"/>
        <function-ref name="clr" scoped="" ref="0x41322df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x41316ae0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x41316ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x41316cb8"/>
        <function-ref name="get" scoped="" ref="0x41316d98"/>
        <function-ref name="getDone" scoped="" ref="0x41316e78"/>
        <function-ref name="setAll" scoped="" ref="0x4131a010"/>
        <function-ref name="set" scoped="" ref="0x4131a0f0"/>
        <function-ref name="setAllDone" scoped="" ref="0x4131a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x4131fb58" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4131fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4131fd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4131fe10"/>
        <function-ref name="request" scoped="" ref="0x4131fef0"/>
        <function-ref name="granted" scoped="" ref="0x4131d010"/>
        <function-ref name="isOwner" scoped="" ref="0x4131d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4131a360" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4131a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4131a538"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4131a618"/>
        <function-ref name="led1On" scoped="" ref="0x4131a6f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4131a7d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4131a8b8"/>
        <function-ref name="get" scoped="" ref="0x4131a998"/>
        <function-ref name="led1Off" scoped="" ref="0x4131aa78"/>
        <function-ref name="led2Off" scoped="" ref="0x4131adf8"/>
        <function-ref name="set" scoped="" ref="0x4131ab58"/>
        <function-ref name="led0On" scoped="" ref="0x4131ac38"/>
        <function-ref name="led2On" scoped="" ref="0x4131ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x41324140" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x41324140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41324318"/>
        <function-ref name="off" scoped="" ref="0x413243f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x413257a8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x413257a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41325980"/>
        <function-ref name="off" scoped="" ref="0x41325a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x41321090" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x41321090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41321268"/>
        <function-ref name="isInput" scoped="" ref="0x41321348"/>
        <function-ref name="toggle" scoped="" ref="0x41321428"/>
        <function-ref name="isOutput" scoped="" ref="0x41321508"/>
        <function-ref name="get" scoped="" ref="0x413215e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413216c8"/>
        <function-ref name="set" scoped="" ref="0x413217a8"/>
        <function-ref name="clr" scoped="" ref="0x41321888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x41321b60" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41321b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41320200"/>
        <function-ref name="writeDone" scoped="" ref="0x4131f498"/>
        <function-ref name="write" scoped="" ref="0x41320820"/>
        <function-ref name="readDone" scoped="" ref="0x41320e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adc_get_data" ref="0x41346040" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adc_get_data" scoped="" ref="0x41346040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41346218"/>
        <function-ref name="runTask" scoped="" ref="0x413462f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x413683b0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413683b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41368588"/>
        <function-ref name="stopDone" scoped="" ref="0x41368668"/>
        <function-ref name="start" scoped="" ref="0x41368748"/>
        <function-ref name="stop" scoped="" ref="0x41368828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x413689a8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413689a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x41368b80"/>
        <function-ref name="get" scoped="" ref="0x41368c60"/>
        <function-ref name="getDone" scoped="" ref="0x41368d40"/>
        <function-ref name="setAll" scoped="" ref="0x41368e20"/>
        <function-ref name="set" scoped="" ref="0x41368f00"/>
        <function-ref name="setAllDone" scoped="" ref="0x41367010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413678d8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413678d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41367ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41367b90"/>
        <function-ref name="request" scoped="" ref="0x41367c70"/>
        <function-ref name="granted" scoped="" ref="0x41367d50"/>
        <function-ref name="isOwner" scoped="" ref="0x41367e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41365030" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41365030"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41365678"/>
        <function-ref name="writeDone" scoped="" ref="0x41364900"/>
        <function-ref name="write" scoped="" ref="0x41365c98"/>
        <function-ref name="readDone" scoped="" ref="0x413642e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x41363a80" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x41363a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41363c58"/>
        <function-ref name="stopDone" scoped="" ref="0x41363d38"/>
        <function-ref name="start" scoped="" ref="0x41363e18"/>
        <function-ref name="stop" scoped="" ref="0x41363ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x413600a0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x41360278"/>
        <function-ref name="get" scoped="" ref="0x41360358"/>
        <function-ref name="getDone" scoped="" ref="0x41360438"/>
        <function-ref name="setAll" scoped="" ref="0x41360518"/>
        <function-ref name="set" scoped="" ref="0x413605f8"/>
        <function-ref name="setAllDone" scoped="" ref="0x413606d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x41360930" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x41360930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41360b08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41360be8"/>
        <function-ref name="request" scoped="" ref="0x41360cc8"/>
        <function-ref name="granted" scoped="" ref="0x41360da8"/>
        <function-ref name="isOwner" scoped="" ref="0x41360e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x4135f178" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4135f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4135f7c0"/>
        <function-ref name="writeDone" scoped="" ref="0x4135ea40"/>
        <function-ref name="write" scoped="" ref="0x4135fde0"/>
        <function-ref name="readDone" scoped="" ref="0x4135e420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41369a80" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41369a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41369c58"/>
        <function-ref name="stopDone" scoped="" ref="0x41369d38"/>
        <function-ref name="start" scoped="" ref="0x41369e18"/>
        <function-ref name="stop" scoped="" ref="0x41369ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBuffer" ref="0x413915d8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x413915d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413917b0"/>
        <function-ref name="isInput" scoped="" ref="0x41391890"/>
        <function-ref name="toggle" scoped="" ref="0x41391970"/>
        <function-ref name="isOutput" scoped="" ref="0x41391a50"/>
        <function-ref name="get" scoped="" ref="0x41391b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x41391c10"/>
        <function-ref name="set" scoped="" ref="0x41391cf0"/>
        <function-ref name="clr" scoped="" ref="0x41391dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation33" ref="0x41392b78" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x41392b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41392d50"/>
        <function-ref name="isInput" scoped="" ref="0x41392e30"/>
        <function-ref name="toggle" scoped="" ref="0x41392f10"/>
        <function-ref name="isOutput" scoped="" ref="0x41391010"/>
        <function-ref name="get" scoped="" ref="0x413910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413911d0"/>
        <function-ref name="set" scoped="" ref="0x413912b0"/>
        <function-ref name="clr" scoped="" ref="0x41391390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerStabalizingTimer" ref="0x4138ddb0" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4138a8a8"/>
        <function-ref name="fired" scoped="" ref="0x4138cb48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4138a268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4138a010"/>
        <function-ref name="getdt" scoped="" ref="0x4138ad58"/>
        <function-ref name="gett0" scoped="" ref="0x4138ab00"/>
        <function-ref name="isRunning" scoped="" ref="0x4138cda0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4138c3f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4138a588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4138c670"/>
        <function-ref name="stop" scoped="" ref="0x4138c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413696e8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413696e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413698c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation50" ref="0x41392150" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x41392150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41392328"/>
        <function-ref name="isInput" scoped="" ref="0x41392408"/>
        <function-ref name="toggle" scoped="" ref="0x413924e8"/>
        <function-ref name="isOutput" scoped="" ref="0x413925c8"/>
        <function-ref name="get" scoped="" ref="0x413926a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41392788"/>
        <function-ref name="set" scoped="" ref="0x41392868"/>
        <function-ref name="clr" scoped="" ref="0x41392948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBooster" ref="0x41390030" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x41390030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41390208"/>
        <function-ref name="isInput" scoped="" ref="0x413902e8"/>
        <function-ref name="toggle" scoped="" ref="0x413903c8"/>
        <function-ref name="isOutput" scoped="" ref="0x413904a8"/>
        <function-ref name="get" scoped="" ref="0x41390588"/>
        <function-ref name="makeOutput" scoped="" ref="0x41390668"/>
        <function-ref name="set" scoped="" ref="0x41390748"/>
        <function-ref name="clr" scoped="" ref="0x41390828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x4138d518" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4138d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4138d6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4138d7d0"/>
        <function-ref name="request" scoped="" ref="0x4138d8b0"/>
        <function-ref name="granted" scoped="" ref="0x4138d990"/>
        <function-ref name="isOwner" scoped="" ref="0x4138da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x413890e8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413890e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413892c0"/>
        <function-ref name="stopDone" scoped="" ref="0x413893a0"/>
        <function-ref name="start" scoped="" ref="0x41389480"/>
        <function-ref name="stop" scoped="" ref="0x41389560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Amplifier" ref="0x41390a48" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x41390a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41390c20"/>
        <function-ref name="isInput" scoped="" ref="0x41390d00"/>
        <function-ref name="toggle" scoped="" ref="0x41390de0"/>
        <function-ref name="isOutput" scoped="" ref="0x41390ec0"/>
        <function-ref name="get" scoped="" ref="0x4138f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4138f0f0"/>
        <function-ref name="set" scoped="" ref="0x4138f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4138f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4138f568" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4138f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4138fbb0"/>
        <function-ref name="writeDone" scoped="" ref="0x4138ee40"/>
        <function-ref name="write" scoped="" ref="0x4138e200"/>
        <function-ref name="readDone" scoped="" ref="0x4138e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413881f8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413881f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413883d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413884b0"/>
        <function-ref name="request" scoped="" ref="0x41388590"/>
        <function-ref name="granted" scoped="" ref="0x41388670"/>
        <function-ref name="isOwner" scoped="" ref="0x41388750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41388940" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41388940"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41387010"/>
        <function-ref name="writeDone" scoped="" ref="0x41386288"/>
        <function-ref name="write" scoped="" ref="0x41387630"/>
        <function-ref name="readDone" scoped="" ref="0x41387c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41384428" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300IBADCC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41384428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41382010"/>
        <function-ref name="fired" scoped="" ref="0x41383268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41383970"/>
        <function-ref name="isOneShot" scoped="" ref="0x41383718"/>
        <function-ref name="getdt" scoped="" ref="0x413824c0"/>
        <function-ref name="gett0" scoped="" ref="0x41382268"/>
        <function-ref name="isRunning" scoped="" ref="0x413834c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41384a50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41383c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x41384cd0"/>
        <function-ref name="stop" scoped="" ref="0x41383010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4137e630" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4137e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4137e808"/>
        <function-ref name="stopDone" scoped="" ref="0x4137e8e8"/>
        <function-ref name="start" scoped="" ref="0x4137e9c8"/>
        <function-ref name="stop" scoped="" ref="0x4137eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x4137c278" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x4137c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4137c450"/>
        <function-ref name="isInput" scoped="" ref="0x4137c530"/>
        <function-ref name="toggle" scoped="" ref="0x4137c610"/>
        <function-ref name="isOutput" scoped="" ref="0x4137c6f0"/>
        <function-ref name="get" scoped="" ref="0x4137c7d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4137c8b0"/>
        <function-ref name="set" scoped="" ref="0x4137c990"/>
        <function-ref name="clr" scoped="" ref="0x4137ca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x4137d7a0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x4137d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4137d978"/>
        <function-ref name="isInput" scoped="" ref="0x4137da58"/>
        <function-ref name="toggle" scoped="" ref="0x4137db38"/>
        <function-ref name="isOutput" scoped="" ref="0x4137dc18"/>
        <function-ref name="get" scoped="" ref="0x4137dcf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4137ddd8"/>
        <function-ref name="set" scoped="" ref="0x4137deb8"/>
        <function-ref name="clr" scoped="" ref="0x4137c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4137e278" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4137e278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4137e450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x4137ecf8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x4137ecf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4137eed0"/>
        <function-ref name="isInput" scoped="" ref="0x4137d010"/>
        <function-ref name="toggle" scoped="" ref="0x4137d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4137d1d0"/>
        <function-ref name="get" scoped="" ref="0x4137d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4137d390"/>
        <function-ref name="set" scoped="" ref="0x4137d470"/>
        <function-ref name="clr" scoped="" ref="0x4137d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x4137cce0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x4137cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4137ceb8"/>
        <function-ref name="isInput" scoped="" ref="0x4137b010"/>
        <function-ref name="toggle" scoped="" ref="0x4137b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4137b1d0"/>
        <function-ref name="get" scoped="" ref="0x4137b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4137b390"/>
        <function-ref name="set" scoped="" ref="0x4137b470"/>
        <function-ref name="clr" scoped="" ref="0x4137b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x4137aca8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x4137aca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4137ae80"/>
        <function-ref name="stopDone" scoped="" ref="0x41379010"/>
        <function-ref name="start" scoped="" ref="0x413790f0"/>
        <function-ref name="stop" scoped="" ref="0x413791d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x4137a228" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4137a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4137a400"/>
        <function-ref name="isInput" scoped="" ref="0x4137a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4137a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4137a6a0"/>
        <function-ref name="get" scoped="" ref="0x4137a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4137a860"/>
        <function-ref name="set" scoped="" ref="0x4137a940"/>
        <function-ref name="clr" scoped="" ref="0x4137aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x4137b790" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x4137b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4137b968"/>
        <function-ref name="isInput" scoped="" ref="0x4137ba48"/>
        <function-ref name="toggle" scoped="" ref="0x4137bb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4137bc08"/>
        <function-ref name="get" scoped="" ref="0x4137bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4137bdc8"/>
        <function-ref name="set" scoped="" ref="0x4137bea8"/>
        <function-ref name="clr" scoped="" ref="0x4137a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x413a7d00" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x413a7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413a7ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x413a6678" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413a6678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x413a6850"/>
        <function-ref name="high" scoped="" ref="0x413a6930"/>
        <function-ref name="Toggle" scoped="" ref="0x413a6a10"/>
        <function-ref name="read" scoped="" ref="0x413a6af0"/>
        <function-ref name="setParam" scoped="" ref="0x413a6bd0"/>
        <function-ref name="readDone" scoped="" ref="0x413a6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x413a6080" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x413a6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413a6258"/>
        <function-ref name="stopDone" scoped="" ref="0x413a6338"/>
        <function-ref name="start" scoped="" ref="0x413a6418"/>
        <function-ref name="stop" scoped="" ref="0x413a64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x413a2330" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x413a2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413a2508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x413a2df8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413a2df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x413a1010"/>
        <function-ref name="high" scoped="" ref="0x413a10f0"/>
        <function-ref name="Toggle" scoped="" ref="0x413a11d0"/>
        <function-ref name="read" scoped="" ref="0x413a12b0"/>
        <function-ref name="setParam" scoped="" ref="0x413a1390"/>
        <function-ref name="readDone" scoped="" ref="0x413a1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x413a2798" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x413a2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413a2970"/>
        <function-ref name="stopDone" scoped="" ref="0x413a2a50"/>
        <function-ref name="start" scoped="" ref="0x413a2b30"/>
        <function-ref name="stop" scoped="" ref="0x413a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4139b600" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4139b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4139bd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x41399528" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41399528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41399700"/>
        <function-ref name="fired" scoped="" ref="0x413997e0"/>
        <function-ref name="disable" scoped="" ref="0x413998c0"/>
        <function-ref name="edge" scoped="" ref="0x413999a0"/>
        <function-ref name="enable" scoped="" ref="0x41399a80"/>
        <function-ref name="getValue" scoped="" ref="0x41399b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="count_ready" ref="0x413d3240" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="count_ready" scoped="" ref="0x413d3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413d3418"/>
        <function-ref name="runTask" scoped="" ref="0x413d34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x4139e0f0" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x4139e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4139e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4139eb78" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4139eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4139ed50"/>
        <function-ref name="high" scoped="" ref="0x4139ee30"/>
        <function-ref name="Toggle" scoped="" ref="0x4139ef10"/>
        <function-ref name="read" scoped="" ref="0x4139d010"/>
        <function-ref name="setParam" scoped="" ref="0x4139d0f0"/>
        <function-ref name="readDone" scoped="" ref="0x4139d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x4139e538" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x4139e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4139e710"/>
        <function-ref name="stopDone" scoped="" ref="0x4139e7f0"/>
        <function-ref name="start" scoped="" ref="0x4139e8d0"/>
        <function-ref name="stop" scoped="" ref="0x4139e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4139d760" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4139d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4139d938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4139da18"/>
        <function-ref name="led1On" scoped="" ref="0x4139daf8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4139dbd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4139dcb8"/>
        <function-ref name="get" scoped="" ref="0x4139dd98"/>
        <function-ref name="led1Off" scoped="" ref="0x4139de78"/>
        <function-ref name="led2Off" scoped="" ref="0x4139b2b0"/>
        <function-ref name="set" scoped="" ref="0x4139b010"/>
        <function-ref name="led0On" scoped="" ref="0x4139b0f0"/>
        <function-ref name="led2On" scoped="" ref="0x4139b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x4139a070" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4139a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139a248"/>
        <function-ref name="isInput" scoped="" ref="0x4139a328"/>
        <function-ref name="toggle" scoped="" ref="0x4139a408"/>
        <function-ref name="isOutput" scoped="" ref="0x4139a4e8"/>
        <function-ref name="get" scoped="" ref="0x4139a5c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4139a6a8"/>
        <function-ref name="set" scoped="" ref="0x4139a788"/>
        <function-ref name="clr" scoped="" ref="0x4139a868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x4139aa60" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4139aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139ac38"/>
        <function-ref name="isInput" scoped="" ref="0x4139ad18"/>
        <function-ref name="toggle" scoped="" ref="0x4139adf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4139aed8"/>
        <function-ref name="get" scoped="" ref="0x41399010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413990f0"/>
        <function-ref name="set" scoped="" ref="0x413991d0"/>
        <function-ref name="clr" scoped="" ref="0x413992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x413ce788" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x413ce788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ce960"/>
        <function-ref name="isInput" scoped="" ref="0x413cea40"/>
        <function-ref name="toggle" scoped="" ref="0x413ceb20"/>
        <function-ref name="isOutput" scoped="" ref="0x413cec00"/>
        <function-ref name="get" scoped="" ref="0x413cece0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413cedc0"/>
        <function-ref name="set" scoped="" ref="0x413ceea0"/>
        <function-ref name="clr" scoped="" ref="0x413ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x413ca208" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x413ca208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ca3e0"/>
        <function-ref name="isInput" scoped="" ref="0x413ca4c0"/>
        <function-ref name="toggle" scoped="" ref="0x413ca5a0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ca680"/>
        <function-ref name="get" scoped="" ref="0x413ca760"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ca840"/>
        <function-ref name="set" scoped="" ref="0x413ca920"/>
        <function-ref name="clr" scoped="" ref="0x413caa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x413cac78" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x413cac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413cae50"/>
        <function-ref name="fired" scoped="" ref="0x413c9010"/>
        <function-ref name="disable" scoped="" ref="0x413c90f0"/>
        <function-ref name="edge" scoped="" ref="0x413c91d0"/>
        <function-ref name="enable" scoped="" ref="0x413c92b0"/>
        <function-ref name="getValue" scoped="" ref="0x413c9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413c82a8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413c82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413c8480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413c8560"/>
        <function-ref name="request" scoped="" ref="0x413c8640"/>
        <function-ref name="granted" scoped="" ref="0x413c8720"/>
        <function-ref name="isOwner" scoped="" ref="0x413c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413c89f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413c89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41214bd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x41214d38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413c7048"/>
        <function-ref name="writeDone" scoped="" ref="0x413c52c0"/>
        <function-ref name="write" scoped="" ref="0x413c7668"/>
        <function-ref name="readDone" scoped="" ref="0x413c7c88"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403a2090" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4039d4f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403a5010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403a6dd8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403a75c0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403a7bf8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403a7aa0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403a62d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403a6180" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403a6830" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403b7e00" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b5210" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403b7670" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403b59e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403b7a30" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b55e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b2f08" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403b72c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402f8390" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f8c98" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f87d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f9b68" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fe090" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40379d38" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4038db28" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40337d78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4038e408" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataQueueManage" loc="3:DataQueueManage.nc">
      <function command="" provided="0" name="addToQueue" ref="0x404e4cf0" loc="5:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x404e49f0" loc="5:DataQueueManage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable ref="0x404e4b90" loc="5:DataQueueManage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="addLocalDataToQueue" ref="0x404e3138" loc="7:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x404e6210" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
              <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d9ca8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404d9e88" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e6088" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404e0d58" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e0c00" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404edae0" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ed988" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404e0518" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404ed2a8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404eb2a0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404eb148" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x404ebc70" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ebb18" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404e9c00" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e98a0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e9a80" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404e92b8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x404e88f8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e85b8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e8798" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40514dc8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40514dc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4051e2c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404f4cd0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404f4cd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40508520" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404fd288" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x405093e8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405090a0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40509288" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404fdbd8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40508e98" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40508968" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404fd718" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404fe340" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404fe1e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40509dd0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40509a88" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40509c70" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404fe9d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404fe880" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404feea8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40523328" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40511e68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40523d38" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40523d38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x405223b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40523d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40522258" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40523d38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404f6010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404eca00" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404ecc18" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ecdf8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40501dd0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40501a70" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40501c50" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40501510" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404f6cb0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f6b58" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404f5bf8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f58a0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404f5a98" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMASchedule" loc="3:TDMASchedule.nc">
      <function command="" provided="0" name="allocChildTimeSlot" ref="0x405183f0" loc="21:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4049e5b0"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4049d308"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x40518030" loc="21:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="local" ref="0x40518290" loc="21:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4049e5b0"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4049d308"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPPB" ref="0x4051c490" loc="7:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x404a8210"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x404a7010"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gparent" ref="0x4051c338" loc="7:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x404a8210"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x404a7010"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="radioWakeup" ref="0x40518b50" loc="23:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x405187d8" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="node_id" ref="0x405189f0" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBeaconTimeStamp" ref="0x405195d8" loc="17:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timestamp" ref="0x40519480" loc="17:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTDMASlot" ref="0x40519b60" loc="19:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tslot" ref="0x40519a08" loc="19:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPPB" ref="0x40513e70" loc="5:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x404a8210"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x404a7010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Index" ref="0x405138c8" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ppb" ref="0x40513b10" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x404a8210"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x404a7010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40513d08" loc="5:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stopTimers" ref="0x4051cc98" loc="11:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTimeStamp" ref="0x40519010" loc="15:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4049e5b0"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4049d308"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x4051a948" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="bmsg" ref="0x4051aba0" loc="15:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4049e5b0"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4049d308"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timestamp" ref="0x4051add0" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTimers" ref="0x4051c898" loc="9:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTableEntry" ref="0x4051a4a8" loc="13:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x4051a148" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x4051a348" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4051f258" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4051f6a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4051fb20" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4052d458" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4052b158" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4052b600" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4052d010" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4052bd40" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4052bbe8" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40520e00" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4052d8d8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4052dd00" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x404fa088" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404fbf08" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404f2930" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f27d8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404e1860" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404e1ef8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e1da0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404f0238" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f1eb0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404f00d8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404f1530" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f11c8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404f13d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404eea28" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ee8d0" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404fb580" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404fb250" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404fb420" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404f0dd8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f0c80" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404fad08" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404fa9a8" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404faba8" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404f75a0" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x405a53e8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405a53e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405a5550" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405a7748" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5550"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a75f0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x405a8200" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a80a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x405a5bd8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a5a80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a8cc0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5550"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a8950" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405a8b60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5550"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x405a1798" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x405ab010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ade50" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x405aa268" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x405aa110" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x4059e540" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x4059edc8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059ea00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x4059ec68" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x405a1da8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405a1c50" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x405ad4d8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ad148" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x405ad378" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x405aba10" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405ab8b8" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x405ae948" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ae7f0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x405a1168" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x405a1010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405a3720" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a35c8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x405a2240" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a20e8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x405a2cc8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2b70" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x405d2e20" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405d2e20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x405ce168" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405cfad0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405d2e20"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf978" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x405cf4b0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf358" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405ce910" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405d2e20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce598" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405ce7b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405d2e20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x405e6dc8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x405e7cf0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x405eda08" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x405e7168" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e7010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x405e5350" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x405e6340" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="timerTick" ref="0x405e57b0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405e77e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e7688" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x405e6888" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405f3f20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405f2540" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405f1b40" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f19e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0x405f0010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405f2c88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f2b30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405f1398" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f1240" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0x405ee188" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ee030" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x405eec90" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405d3d88" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d3c30" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405dc4c8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405dc010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405dec70" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405dee88" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405e07a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0648" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405df6b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405df560" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405de010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405dfc78" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405dfe90" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x405e00c8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0x405df060" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.</short>
          <long>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0d00" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0x405e0ee0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405de728" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405de5d0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40607780" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40607628" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x406089c8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40608870" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405fd890" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fd540" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x405fd730" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405fbc68" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fbb10" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0x40603ab0" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.</short>
          <long>&#10; Sets the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40603748" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0x40603950" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40604c70" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40604910" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40604b10" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405fb5d0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fb478" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40607170" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40608e00" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40607010" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405fac08" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405fa890" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405faaa8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x405f6bf0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.</short>
          <long>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x404bfd70"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0x404cade0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f6a78" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40604498" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40604340" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405fdef8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fdda0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40602980" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40602630" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x40602820" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405f9be0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f9a88" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405f9530" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405f91b8" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405f93d0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x405fea70" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fe710" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405fe910" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0x406032a0" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.</short>
          <long>&#10; Returns the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40603148" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40600010" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40602e38" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40606e20" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40606ac0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40606cc0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405fa350" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fa1f8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x406083b8" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40608068" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40608258" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x405fe2a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fe148" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40606010" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40607c18" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40607e08" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405f8410" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f80e8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405f82b0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x405fd088" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405feef8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x406021e0" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d54e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40602088" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40600720" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406005c8" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40606640" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406064e8" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405f8b40" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f89e8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x4060e2e8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40611a78" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40611920" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40611ec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40611400" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x4060e790" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405eb6e0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405eb380" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405eb580" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x405ebb78" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x405d4848" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d46f0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405d4e90" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d4d38" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x405f4380" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f4228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405eac90" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405eab38" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405f4878" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405f3010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f4dd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.</short>
        <long>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x405e4d38" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405e2ea8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e2d50" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405e47b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e4640" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x405e4170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.</short>
          <long>&#10; Sets the length of the PHY payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5da0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405e4010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x405d58b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5760" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0x405e2348" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0x405e2810" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x406a0df8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4069d678" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4069d278" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x406a0908" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x406a05a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d5738"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x406a07a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406fd3c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406fd3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406fd530" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fd530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406fda18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fd530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406fc510" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406fc010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406fc938" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40704460" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407029f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x406f6bc0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40701480" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40701010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40702e60" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40702010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40704df8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40701a48" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407018f0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40704038" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40702588" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40702430" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407049d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40704880" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40706be0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40706be0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x407126e0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40712588" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40713ce8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406ff0f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40706be0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406ffc48" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40706be0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406ffaf0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40706be0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407130c8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40712158" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406ff670" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40706be0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406ff518" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40706be0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407134d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407138c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40700ba0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700ba0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x4070dad8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4070ea90" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4070e0c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700ba0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4070ee98" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4070c010" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4070e650" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700ba0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4070e4f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700ba0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4070d2b8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4070d6b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406fbbd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406fbbd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x406f3438" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406f4b08" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406f50f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406fbbd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406f39c8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406f3870" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406f3e58" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406f5ec0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406f5aa0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406f3010" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406f5670" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406fbbd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406f5518" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406fbbd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406f42e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406f46e0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407ab4c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407ab4c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407ab630" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407a99a8" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407aa5b8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x407a9360" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407a9010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          </variable>
          <variable name="dt" ref="0x407a9200" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x407aaa28" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x407a9e38" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407abc60" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407abb08" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407ab630"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407aa158" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407c3158" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407c4700" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x407c6328" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407c4cc0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407c4b68" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x407c4290" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407c4138" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407c3720" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407c35c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x407c6778" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407c6cf0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407c6b98" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x407bc4f0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x407bd1a8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x407bd5d0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x407bdab0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407bc9b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x407bc010" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x407c1690" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x407c1c88" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x407c1b30" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4088a8a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4088ae78" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x408894f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4088a480" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408ad488" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ad148" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ad328" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408a9190" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408aad78" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a9010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408aa818" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408ab168" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ab010" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408abe00" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408abaa8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408abca0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408ec010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408d7e68" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408d7988" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408d8950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d87f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408d3680" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408d3168" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408d3010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408d63b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408d6df0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408d5478" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408d5320" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408d58e8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408d68f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408d1d58" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
              <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d1be0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408d1568" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d1410" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4092b3f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4092b298" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x4092b870" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40930908" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409307b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40930e68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40930d10" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x4092e238" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4092e0e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x4092d010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4092ede0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x4092e920" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4092e7c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x4092d6e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4092d588" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40931b88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40931a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d5998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409f03f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409f03f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409f0558" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f0558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x409f0b70" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f0558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409f0a18" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f0558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0x409f6378" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0x409f6a70" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f6918" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0x409f5088" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f6f18" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0x409fcdf8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409fcca0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0x409fc7f0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0x409fc4a0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x409fc690" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x409fd930" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x409fd7d8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409fa138" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x409fb7c8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409fb1c8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409fbc78" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409fa830" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409f39c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409f1458" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409f1010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409f3dd8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x409f34c0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a9a010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a9da58" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a9dc70" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a9de60" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a98668" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a9aec0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a98100" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a982f0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a984f8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0x40a94b38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40aaf2b8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a8e438" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40aaf8a0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40aaf748" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a946e8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40ab13a0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40ab1248" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a8f658" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a8f500" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a90478" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40aada10" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40aad8b8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a8fab0" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40aae280" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40aae128" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40aaeb08" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ab1e30" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40ab1cd8" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40aad480" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a8e9c8" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a8e870" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a90a10" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a908b8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a8e018" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a8fea8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40ab1850" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40aafcc8" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40aae690" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40aad010" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a8ee00" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a90010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a8f010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a90e80" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40aab7c0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40aabcc0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40ac6070" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac6558" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40b0dd30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40b0a328" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40b08038" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40b0cb48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40b02940" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b09318"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b027e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b09318"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40b055d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40b05c90" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b09318"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b05b38" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b09318"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40b02258" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40b09318"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40bf0b68" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf07d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40bf0a08" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40bc98c8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40bf01c8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc9e20" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404dba30"/>
                <typename><typedef-ref name="message_t" ref="0x404d97d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40bf0068" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40bfb4d0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40bfb998" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40c05b68" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40c05730" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40bff1a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40bffe08" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40bfd010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bfee50" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40bfe3f0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40bff8d8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bff780" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40bfd518" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40bfe950" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40c04290" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40c04858" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40bddc18" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40bddac0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40c03010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c04e38" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40c021a8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40c02990" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c02838" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40c00058" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c02ed0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40cae010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cb1c00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cb1df0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40cac410" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cac2b8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40cacc18" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cac8c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cacab8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40cad850" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40ca9aa8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40ca9558" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ca9748" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ca9940" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40caddd8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40caee70" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cae920" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40caeb10" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40caed08" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40cc7a78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cc7920" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40cc4378" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cc4010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40cc4218" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40cb89e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40cb81a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40cb5010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cb7e80" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40cb76d8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40cbb8e8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40cbbd28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40cb85e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40cb8de8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40cb7328" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cb71d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40cb7aa8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40eaa788" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eaa788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40ea7978" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eaa788"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40ea6848" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eaa788"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40ea66f0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eaa788"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40032840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40032840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40ea5168" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eaa788"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40ea5010" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40ea7548" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40ea6038" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eaa788"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40eaac28" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40ea7090" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40ea8830" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ea8830"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40e9e4c0" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ea8830"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40ea1748" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40ea8cd0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40ea1d50" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ea8830"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40ea1bf8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ea8830"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40ea1210" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sample" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
      <function command="" provided="0" name="stop" ref="0x40f52058" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40f53ee0" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40f52428" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set_digital_output" ref="0x40f553c0" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f55068" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x40f55260" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSample" ref="0x40f58bb0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f583f0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40f58620" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40f58848" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="param" ref="0x40f58a40" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reTask" ref="0x40f53560" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40f531d8" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40f53400" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readSample" ref="0x40f53ae8" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40f53990" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f55d88" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f557f0" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40f55a20" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f55c20" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetParam" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="setParam" ref="0x40fa2688" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <interfacedef-ref qname="SetParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40fa2530" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ADConvert" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40fa5398" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Initiates an ADC conversion on a given port.</short>
          <long>&#10; Initiates an ADC conversion on a given port.&#10;&#10; @return SUCCESS if the ADC is free and available to accept the request&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40fa5990" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fa5838" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Dio" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="low" ref="0x40f95be8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="high" ref="0x40f95830" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="Toggle" ref="0x40f94010" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40f95468" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParam" ref="0x40f945b0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="modeToSet" ref="0x40f94458" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f94ae8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f94990" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40f9d638" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40f9d638"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40f9dae8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f9a340" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40f9d638"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40f9a010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40f9a1e0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40f9d638"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x41011d00" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x41011808" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x4100e210" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4100b8c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4100b8c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4100bd90" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41008578" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4100b8c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41008248" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x41008418" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4100b8c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x410396a8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4103ee78" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x410390f0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x41039318" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x41039538" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x41038a40" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41038010" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x41038200" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x41038408" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x41038660" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x410388c8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4103c9e8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4103c208" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4103c430" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4103c658" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4103c878" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4103ba48" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4103b4c0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4103b170" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4103b360" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x4102c7e0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x41033e58" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x4102bc88" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4102bb30" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4102cca0" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x4102f920" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x41030490" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x41030338" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x4102e1a8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x4102b5e0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4102a158" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x4102fd20" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x4102ea30" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x4102e600" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x4102ee68" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4102b138" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x4102f010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x41030e50" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x4102c3e0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x41030978" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4102f4c0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4102a8a8" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4102a750" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x41060eb8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x410988f0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x41060988" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x41098418" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x41098ec8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x410d2cc8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht15" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <short>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x410fe8f0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410fe5a0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x410fe790" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x410fe0c8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x410ff330" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41102848" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x41102df8" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41102ca0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x410ffb78" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410ff828" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x410ffa18" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x41107c30" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4111a8e0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4111a480" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4111a070" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x4111eaf0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x41193c70" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4117ee58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4117bd90" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4117ea60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4117b8c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4117b770" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4117e658" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4117b2b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x411aa590" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x41211970" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x41211970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x41210638" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41211010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x41211e98" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41211010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x412100b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x412102b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x412104c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4120bbf0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4120b470" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4120b670" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x4120b870" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4120ba80" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4120f910" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41211010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4120f190" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41211010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4120f390" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x4120f590" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4120f7a0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4120cb10" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4120c390" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4120c590" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x4120c790" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4120c9a0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x412611a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x41283280" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x41283660" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x41282010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x41283e38" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x41284e48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x41281658" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4127e910" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x41281bd8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x41281a80" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x412c16a0" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x412846c0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x41284568" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x41281270" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x41281118" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x4127f0c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x41282408" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x4127f9d0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x41283a68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4127e510" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x4127e3b8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x412c12b8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412c1160" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x4127f568" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x41284a50" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x41282910" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412827b8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x4127e010" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x4127fe38" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x4127ed58" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x41282cf8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Power" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
      <function command="" provided="0" name="on" ref="0x412e71c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x412e7538" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Switch" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function event="" provided="0" name="setDone" ref="0x41316448" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x413162f0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4131bcf0" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDone" ref="0x41318f20" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41318dc8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x41318a00" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x413188a8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x413184a0" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x41318148" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41318340" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAllDone" ref="0x41316978" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41316820" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
