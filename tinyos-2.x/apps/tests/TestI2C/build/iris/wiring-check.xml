<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7c5ab58"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7c0b010"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7c0b010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7b19578"/></to>
    </wire>
    <wire loc="27:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb7c56608"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7b2c958"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7b2c958"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7ae3a98"/></to>
    </wire>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7c41188"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7433010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xb7433010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb71acb28"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7c3fbd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7430dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xb7430dd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7b13b18"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7c39c90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7559188"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb7559188"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb773abf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0xb7c311c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75519d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb75519d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75461a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0xb7c2caa8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0xb7550128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0xb7550128"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0xb7546b98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7c23860"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7571b48"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7571b48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb756ba40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71f1318"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb722ddf8"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb76e1ce8"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb770d308"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb791e248"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7781b10"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb779aab8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb77c8010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7b198c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7cef010"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7cef010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7c83ae8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7b19df0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7661600"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7b19df0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb76e1878"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7b19df0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7c059c8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7c059c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7bfcf20"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b181a8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7bfee40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79547c0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7bfe748"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b28428"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7bfb618"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b28100"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7bfb2a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb75566b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7bfb2a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7c01e40"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7c01e40"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7bf46b8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7bf71e0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7bfee40"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7bf2050"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7be9af8"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7be9af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7ba2f28"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7bf29d8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7bf71e0"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7bcd808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b52d10"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7bdc858"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b8b6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b8b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73728d8"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7bd59d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b81030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b81030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733ce50"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7bd0808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b797d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b797d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7308e50"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7be8e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7ba0250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7ba0250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7404c98"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7bd1508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b7a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b7a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb730b8d8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7be6190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b9c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b9c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73da6c0"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7be0348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b93968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b93968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a47f8"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7bd95e8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b89330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b89330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb736d920"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7bd37a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b80c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b80c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7335010"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7bebe68"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7ba3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7ba3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740f490"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7be5e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b9ac88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b9ac88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d57f8"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7bde068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b916b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b916b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb739f8d8"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7bd7348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b87030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b87030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7368ac8"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7bce508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b774f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b774f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7302010"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7bcb7a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b49010"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7bd66c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b83cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b83cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733f8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7ba2f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7407650"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7be3bd8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b98988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b98988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d08d8"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7bcc428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b4f360"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7be1010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b94600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b94600"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a71f8"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7bdb268"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b8a030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b8a030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73703b0"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7bd4428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b81988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b81988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733a920"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7bcf190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b78170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b78170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7306920"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7be7808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7ba0ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7ba0ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74027f8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7be6b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b9c968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b9c968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d81b0"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7be0cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b92330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b92330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a2308"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7bd8010"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b89c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b89c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb736b490"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7bd2188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b7f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b7f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7334ac8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7bea7e8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7ba3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7ba3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740d010"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7be4808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b996b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b996b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d3308"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7bde9d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b8f030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b8f030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb739d3b0"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7bcee78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b77e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b77e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7301ac8"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7bddd98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b8cce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b8cce0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7376da8"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7bd5068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b826b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b826b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733d3b0"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7bd1e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b7ae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b7ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73093b0"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7bca188"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b47618"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7be8508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7ba1890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7ba1890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74051b0"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7be25e8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b97330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b97330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73ce3b0"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7bd2af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b7cb38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b7cb38"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb730fda8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7be1980"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b93010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b93010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a6c98"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7bdbbd8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b8a988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b8a988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb736fe50"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7bd4d98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b80330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b80330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7338490"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7bcfb00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b78ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b78ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7304490"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7beb4f8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7ba48e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7ba48e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7411960"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7be5508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b9a330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b9a330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d7c98"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7bdf6c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b92c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b92c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a1da8"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7bd8980"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b886b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b886b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7369010"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7bccd98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b4d960"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7bd7cb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b833a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b833a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7342da8"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7bdd428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b8f988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b8f988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb739ce50"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7be9188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7ba25d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7ba25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740cac8"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7be3268"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b98030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b98030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d2da8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c822a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7c7f810"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7c73360"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7c6ddf0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb78bdd40"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7ae3a98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb77f7a90"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7af65c8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7ad5cc8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7ad5cc8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a5d488"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7b131e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7ae2308"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7ae2308"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7822278"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7b12120"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7ae1258"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7ae1258"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb78211a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7b0cb40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7ae1578"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7ae1578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a69860"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7afa8e8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7ae0d58"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7ae0d58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb77e4a20"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7b13b18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7ae2c38"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7ae2c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7822ba8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7b01658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7ae0868"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7ae0868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a68b08"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7b04698"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7ae1c20"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7ae1c20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a69f08"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb7b03188"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7ad6850"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7ad6850"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a5e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xb77f7a90"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb77d4250"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb7ad7540"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb7a646a0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb7a646a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb7a53718"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a69860"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a57a00"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7add2c0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a653e8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a653e8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a544b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb77e4a20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb77e2398"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a5e010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a4d010"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7ade048"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a670e8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a670e8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a56230"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a68b08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a57520"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7a69f08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a125e0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a5d488"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a4b488"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a9c8f0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a147c0"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a147c0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a0e6b8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7aac6b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a69860"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb7a963b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb78426a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7820a50"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7aae958"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb781bdf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a125e0"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7a125e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a0c500"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb781b3f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb780a700"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb780a700"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7805190"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb781bac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb780ada0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb780ada0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7805830"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb78097c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb77a18e0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb77a18e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb779a010"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7809e98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb77e4708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xb77e4708"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb77d4ee0"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb779e010"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb7abee80"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb77a0488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb77e4070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xb77e4070"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb77d4828"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb77d4250"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb77cf7f0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb77cf7f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb77c9970"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb77d4828"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb77cfdb0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb77cfdb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb77c8330"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb77d4ee0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb77ce4d8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb77ce4d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb77c89d0"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb77cd7f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a69860"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb77ceef8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb77a29d0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb77a29d0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb77629d8"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb77cd3f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb77a0010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb77a0010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb779a6b8"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb77ce850"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb77672f0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb77672f0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb77612f0"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb77a0b60"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb77a2eb8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb77a2eb8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7762ec0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7766a48"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb7ab6188"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7767a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb772f070"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb772f070"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb772a3d8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7767f28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb772f558"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb772f558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb772a8c0"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb7766370"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb76e7010"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb76e7010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb76e0040"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb772e340"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7ab4cd0"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb772f9d8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7730b10"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb7730b10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7700208"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb772fef0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7705010"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7705010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb77006f0"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7705de0"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb7ac1d98"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7705490"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76f1ee8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xb76f1ee8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xb76ee6c8"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb77059a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76e7ba0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76e7ba0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76e0bd0"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb76ec4a8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb7ab3d28"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xb76ee6c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76e76b8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb76e76b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76e06e8"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb76ed010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb76e6010"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb76e6010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb76df010"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0xb76e6448"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0xb7ac64f8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7a62970"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7a519a8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a61c28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a50c28"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a4a788"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a147c0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7a47118"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb79c6e80"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb79c6e80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb792b5c8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb7a479d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb79224c0"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb79224c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb791b828"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7a065d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb79cf830"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb792bee8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb792f1a0"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb792e220"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb79bc788"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb79bc788"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7956718"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb79406f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb79b3450"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb79b3450"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb799db40"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb79b1010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb799b938"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb79b00b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb799a5b0"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb79a1c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb79970b8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb79a1c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb7996890"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb79a1c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb7993030"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7954ba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb79b3450"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb791b828"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb78494d0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb791e8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7871068"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb791e248"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7916370"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7916370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb790be10"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb784d0c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7918d38"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb7876ce8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb79151b8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb79151b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7890270"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7849df0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb7914a78"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb7914a78"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb788ea80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xb788ea80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb72853b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xb790be10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7287730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xb7890270"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7287b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb72833a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78cbaf0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78cbaf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78c2e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb72811c8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78c9938"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb78c9938"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78c0bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0xb7281bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb78c73e8"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78c73e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb78be688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb727e290"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb78c6ad8"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb78c6ad8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb78bc0b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0xb7874440"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb784a010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb78426a8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb783c5b8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb7841010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb767dec8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb783cde0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7841010"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb7835b00"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb782a350"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb780a140"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb78091e0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb78041d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb78097c8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb78048a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7809e98"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7804bc8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a147c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb77d7548"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb77d5d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xb77e35b0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb77d7cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb77d7960"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb77d3240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb77d7150"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xb77d5908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xb77e3c48"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xb77d5410"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb77c8d48"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb77ce850"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb77c7400"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb782a350"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb77c79c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb77ceef8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb77c7eb0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb77cd3f0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb77c62e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb77cd7f0"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb77c13c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb77bc010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb77acaa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb7797010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb7784010"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb7784010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb7781e38"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7791c88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7785010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7785010"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb77807b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb779ae50"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb77a0488"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7799550"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb77a0b60"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb7799958"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb779e010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7760508"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7767a10"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7760a20"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7767f28"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb7760e58"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb7766370"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb77619f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7766a48"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb775f5d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7742350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb7742350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb773abf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb775c460"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb7784010"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb775cb10"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7735d88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7735d88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb77807b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb775b158"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb782a350"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0xb77457b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb773abf8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb791e8e0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb772ad40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb772f9d8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb77256d8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb772e340"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7729270"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb772fef0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb7729678"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb78426a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb77252a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb770fca8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb770fca8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb770c010"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb7726e88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb770f420"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb770d720"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7713368"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb770d308"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7700b70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7705490"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb76ff0a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb77059a8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb76ffb58"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7705de0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb76ff4a8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb78426a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xb770ec88"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb76ed4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb76ef7d8"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb76ed010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xb76f1850"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb76ee010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xb7702310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb76eda80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7702cc0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb77e2398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb76efbf0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb76ec4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76ef3e0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xb76eebc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xb77029a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb76ec170"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0xb76c8610"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0xb76e6448"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb76d5030"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a670e8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb76d22c0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a653e8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb76ce540"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb7a646a0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb76cd7b0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a61c28"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb76cba98"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a5e010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb76cade0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb79c6e80"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb76c7460"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb78426a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb767dec8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb75ac350"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb76df490"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb7680068"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb7680068"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7be6190"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb76dfe08"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb76809e0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb76809e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7649ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb76db7e0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb767f158"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb767f158"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb764e9a8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0xb76d7390"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0xb767b5d0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0xb767b5d0"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0xb7661928"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb76d7a60"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb767f4a8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb767f4a8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb7be25e8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb76dd428"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb767fe18"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb767fe18"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7be8e78"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb76d6010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb767d7a8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb767d7a8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb7661010"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb76c8e70"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb782a350"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb76d05b8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb7587a70"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb764e9a8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb7647970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xb75ac350"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb720c758"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb765fb20"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7bd8980"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb765e508"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7bd95e8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb7660108"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb79b00b0"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb76494f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb7647c98"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb764e668"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7647650"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7649ba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb76453f0"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xb7643880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75e5680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb75e5680"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb722a250"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb7636700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb75b2230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb75b2230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb722ad98"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb763ad10"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb7616488"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb7616488"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb76114c0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb7636b08"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7c70930"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb762c2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb760a188"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7c70930"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb760ca80"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7be6190"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb760e428"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb7be6b00"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb760ed98"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7be5508"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb760b7a8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb7be5e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb75e5dc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb722a990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb72292f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb75b26e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xb7229720"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb722b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xb7229d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb720bef8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb79b3450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb7208d30"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb79a1c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb75566b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb756b720"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb756a708"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb7558900"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7558900"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7bea7e8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7569088"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb7557368"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7557368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7bebe68"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb75699f8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb7557cf8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7557cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7beb4f8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75461a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75006d0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0xb7546b98"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0xb7500ec0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0xb74e38a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb750e4e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb750e4e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb71f08a0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb74e2030"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0xb74dfcd0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0xb74e1908"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0xb74ad5a8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb750b530"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb74df828"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb750bc40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb750d040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb750d040"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb71ef418"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0xb74ad900"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0xb74a6998"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0xb74a6998"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0xb74a18b0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0xb74ab030"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7481828"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0xb74abc48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7481828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb750ec20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb71ef010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb750d6d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb71efab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb71ee010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb750db88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xb71ee438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb71f1650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xb71ed6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0xb749f010"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0xb7bddd98"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0xb749f980"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0xb7bdc858"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xb74336a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7b0cb40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7433d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7b04698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xb7432950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7b01658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xb71a8260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb745f278"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xb71a88f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7b04698"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb745f278"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7438010"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7438780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7b131e8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7438e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7b04698"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7437a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7b0cb40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0xb7436190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0xb74365c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xb742b150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7b0cb40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xb742b7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7b04698"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TOne" ref="0xb7c86b70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10;</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb790dcd8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TOne" ref="0xb7c86b70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="36(OscilloscopeAppC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(OscilloscopeAppC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.I2C" loc="43(OscilloscopeAppC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="43(OscilloscopeAppC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10;</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10;</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10;</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10;</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10;</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="39(OscilloscopeAppC.AMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(OscilloscopeAppC.AMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="35(OscilloscopeAppC.AMReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(OscilloscopeAppC.AMReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7bc56b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7bc5840" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7bc59d0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7bbfd40" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7bbfee0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7bbc098" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7bbc230" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b717c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b71968" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b71b08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7b71ca0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb7952980" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7952980"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb7952b10" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb7957d30" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb7957d30"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb7948010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7948010"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb793a038" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb793a038"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb793a2f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb793a2f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb793a4b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb793a4b8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb793a770" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb793a770"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb793a910" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb793abd0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb793abd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7929b90" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7929b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb790dcd8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb790dcd8"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb790de58" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb79030e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb79030e0"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb7903260" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb788a358" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb788a358"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7870038" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7870038"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb78701c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb75e40b8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0xb75db880" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb75a6410" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb75a6410"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb75a66c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb75a66c8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb75a6858" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb753c1e0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0xb75327e8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10;</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10;</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb7471330" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb746ca40" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb745b4a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cf3e50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cf3e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb742eaa0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0xb7c5ab58" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7c5ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7c5ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb7c41188" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7c41188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7c41360"/>
        <function-ref name="getPayload" scoped="" ref="0xb7c41440"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7c41520"/>
        <function-ref name="cancel" scoped="" ref="0xb7c41600"/>
        <function-ref name="sendDone" scoped="" ref="0xb7c416e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb7c56608" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb7c56608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7c567e0"/>
        <function-ref name="stopDone" scoped="" ref="0xb7c568c0"/>
        <function-ref name="start" scoped="" ref="0xb7c569a0"/>
        <function-ref name="stop" scoped="" ref="0xb7c56a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb7c3fbd0" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7c3fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7c3fda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0xb7c311c8" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0xb7c311c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7c313a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7c31480"/>
        <function-ref name="request" scoped="" ref="0xb7c31560"/>
        <function-ref name="granted" scoped="" ref="0xb7c31640"/>
        <function-ref name="isOwner" scoped="" ref="0xb7c31720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7c23860" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7c23860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7c23a38"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7c23b18"/>
        <function-ref name="led1On" scoped="" ref="0xb7c23bf8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7c23cd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7c23db8"/>
        <function-ref name="get" scoped="" ref="0xb7c23e98"/>
        <function-ref name="led1Off" scoped="" ref="0xb7c2a010"/>
        <function-ref name="led2Off" scoped="" ref="0xb7c2a390"/>
        <function-ref name="set" scoped="" ref="0xb7c2a0f0"/>
        <function-ref name="led0On" scoped="" ref="0xb7c2a1d0"/>
        <function-ref name="led2On" scoped="" ref="0xb7c2a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0xb7c2caa8" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0xb7c2caa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0xb7c30a58"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0xb7c30bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7c37120"/>
        <function-ref name="writeDone" scoped="" ref="0xb7c37f00"/>
        <function-ref name="write" scoped="" ref="0xb7c375c0"/>
        <function-ref name="readDone" scoped="" ref="0xb7c37a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb7c39c90" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7c39c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7c38650"/>
        <function-ref name="fired" scoped="" ref="0xb7c3e9a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7c38010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7c3ed68"/>
        <function-ref name="getdt" scoped="" ref="0xb7c38a10"/>
        <function-ref name="gett0" scoped="" ref="0xb7c38830"/>
        <function-ref name="isRunning" scoped="" ref="0xb7c3eb88"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7c3e2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7c38330"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7c3e548"/>
        <function-ref name="stop" scoped="" ref="0xb7c3e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7c08a00" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7c08a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c08bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7c0b010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7c0b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7c0b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7bfee40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7bfee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c03050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7c059c8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7c059c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c05ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7bfe748" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7bfe748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7bfe920"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7bfea00"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7bfeae0"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7bfebc0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7bfeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7bfb2a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7bfb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bfb480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7bfcf20" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7bfcf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bfb110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7bfb618" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7bfb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bfb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7bf71e0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7bf71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bf73b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7c01e40" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7c01e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bf7050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7bf29d8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7bf29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bf2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7bf2050" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7bf2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bf2228"/>
        <function-ref name="isInput" scoped="" ref="0xb7bf2308"/>
        <function-ref name="toggle" scoped="" ref="0xb7bf23e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bf24c8"/>
        <function-ref name="get" scoped="" ref="0xb7bf25a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bf2688"/>
        <function-ref name="set" scoped="" ref="0xb7bf2768"/>
        <function-ref name="clr" scoped="" ref="0xb7bf2848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7bf46b8" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7bf46b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bf4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7bcd808" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7bcd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcdbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcdcc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcdda0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcde80"/>
        <function-ref name="get" scoped="" ref="0xb7bcc010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bcc0f0"/>
        <function-ref name="set" scoped="" ref="0xb7bcc1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7bcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7bdc858" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7bdc858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdca30"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdcb10"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdcbf0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdccd0"/>
        <function-ref name="get" scoped="" ref="0xb7bdcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdce90"/>
        <function-ref name="set" scoped="" ref="0xb7bdb010"/>
        <function-ref name="clr" scoped="" ref="0xb7bdb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7bd59d8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7bd59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd5bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd5c90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd5d70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd5e50"/>
        <function-ref name="get" scoped="" ref="0xb7bd4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd40f0"/>
        <function-ref name="set" scoped="" ref="0xb7bd41d0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7bd0808" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7bd0808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd09e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd0ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd0ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd0c80"/>
        <function-ref name="get" scoped="" ref="0xb7bd0d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd0e40"/>
        <function-ref name="set" scoped="" ref="0xb7bd0f20"/>
        <function-ref name="clr" scoped="" ref="0xb7bcf018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7be8e78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7be8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be7070"/>
        <function-ref name="isInput" scoped="" ref="0xb7be7150"/>
        <function-ref name="toggle" scoped="" ref="0xb7be7230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be7310"/>
        <function-ref name="get" scoped="" ref="0xb7be73f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be74d0"/>
        <function-ref name="set" scoped="" ref="0xb7be75b0"/>
        <function-ref name="clr" scoped="" ref="0xb7be7690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7bd1508" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7bd1508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd16e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd17c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd18a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd1980"/>
        <function-ref name="get" scoped="" ref="0xb7bd1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd1b40"/>
        <function-ref name="set" scoped="" ref="0xb7bd1c20"/>
        <function-ref name="clr" scoped="" ref="0xb7bd1d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7be6190" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7be6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be6368"/>
        <function-ref name="isInput" scoped="" ref="0xb7be6448"/>
        <function-ref name="toggle" scoped="" ref="0xb7be6528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be6608"/>
        <function-ref name="get" scoped="" ref="0xb7be66e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be67c8"/>
        <function-ref name="set" scoped="" ref="0xb7be68a8"/>
        <function-ref name="clr" scoped="" ref="0xb7be6988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7be0348" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7be0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be0520"/>
        <function-ref name="isInput" scoped="" ref="0xb7be0600"/>
        <function-ref name="toggle" scoped="" ref="0xb7be06e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be07c0"/>
        <function-ref name="get" scoped="" ref="0xb7be08a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be0980"/>
        <function-ref name="set" scoped="" ref="0xb7be0a60"/>
        <function-ref name="clr" scoped="" ref="0xb7be0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7bd95e8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7bd95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd97c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd98a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd9980"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd9a60"/>
        <function-ref name="get" scoped="" ref="0xb7bd9b40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd9c20"/>
        <function-ref name="set" scoped="" ref="0xb7bd9d00"/>
        <function-ref name="clr" scoped="" ref="0xb7bd9de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7bd37a8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7bd37a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd3980"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd3a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd3b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd3c20"/>
        <function-ref name="get" scoped="" ref="0xb7bd3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd3de0"/>
        <function-ref name="set" scoped="" ref="0xb7bd3ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7bebe68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7bebe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bea050"/>
        <function-ref name="isInput" scoped="" ref="0xb7bea130"/>
        <function-ref name="toggle" scoped="" ref="0xb7bea210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bea2f0"/>
        <function-ref name="get" scoped="" ref="0xb7bea3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bea4b0"/>
        <function-ref name="set" scoped="" ref="0xb7bea590"/>
        <function-ref name="clr" scoped="" ref="0xb7bea670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7be5e78" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7be5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be4070"/>
        <function-ref name="isInput" scoped="" ref="0xb7be4150"/>
        <function-ref name="toggle" scoped="" ref="0xb7be4230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be4310"/>
        <function-ref name="get" scoped="" ref="0xb7be43f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be44d0"/>
        <function-ref name="set" scoped="" ref="0xb7be45b0"/>
        <function-ref name="clr" scoped="" ref="0xb7be4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7bde068" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7bde068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bde240"/>
        <function-ref name="isInput" scoped="" ref="0xb7bde320"/>
        <function-ref name="toggle" scoped="" ref="0xb7bde400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bde4e0"/>
        <function-ref name="get" scoped="" ref="0xb7bde5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bde6a0"/>
        <function-ref name="set" scoped="" ref="0xb7bde780"/>
        <function-ref name="clr" scoped="" ref="0xb7bde860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7bd7348" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7bd7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd7520"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd7600"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd76e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd77c0"/>
        <function-ref name="get" scoped="" ref="0xb7bd78a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd7980"/>
        <function-ref name="set" scoped="" ref="0xb7bd7a60"/>
        <function-ref name="clr" scoped="" ref="0xb7bd7b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7bce508" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7bce508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bce6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bce7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bce8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bce980"/>
        <function-ref name="get" scoped="" ref="0xb7bcea60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bceb40"/>
        <function-ref name="set" scoped="" ref="0xb7bcec20"/>
        <function-ref name="clr" scoped="" ref="0xb7bced00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7bcb7a8" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7bcb7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcb980"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcba60"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcbb40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcbc20"/>
        <function-ref name="get" scoped="" ref="0xb7bcbd00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bcbde0"/>
        <function-ref name="set" scoped="" ref="0xb7bcbec0"/>
        <function-ref name="clr" scoped="" ref="0xb7bca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7bd66c8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7bd66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd68a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd6980"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd6a60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd6b40"/>
        <function-ref name="get" scoped="" ref="0xb7bd6c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd6d00"/>
        <function-ref name="set" scoped="" ref="0xb7bd6de0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd6ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7be9af8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7be9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be9cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be9db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7be9e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be8010"/>
        <function-ref name="get" scoped="" ref="0xb7be80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be81d0"/>
        <function-ref name="set" scoped="" ref="0xb7be82b0"/>
        <function-ref name="clr" scoped="" ref="0xb7be8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7be3bd8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7be3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be3db0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be3e90"/>
        <function-ref name="toggle" scoped="" ref="0xb7be2010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be20f0"/>
        <function-ref name="get" scoped="" ref="0xb7be21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be22b0"/>
        <function-ref name="set" scoped="" ref="0xb7be2390"/>
        <function-ref name="clr" scoped="" ref="0xb7be2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7bcc428" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7bcc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcc600"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcc6e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcc7c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcc8a0"/>
        <function-ref name="get" scoped="" ref="0xb7bcc980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bcca60"/>
        <function-ref name="set" scoped="" ref="0xb7bccb40"/>
        <function-ref name="clr" scoped="" ref="0xb7bccc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7be1010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7be1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be11e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7be12c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7be13a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be1488"/>
        <function-ref name="get" scoped="" ref="0xb7be1568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be1648"/>
        <function-ref name="set" scoped="" ref="0xb7be1728"/>
        <function-ref name="clr" scoped="" ref="0xb7be1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7bdb268" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7bdb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdb440"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdb520"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdb600"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdb6e0"/>
        <function-ref name="get" scoped="" ref="0xb7bdb7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdb8a0"/>
        <function-ref name="set" scoped="" ref="0xb7bdb980"/>
        <function-ref name="clr" scoped="" ref="0xb7bdba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7bd4428" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7bd4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd4600"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd46e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd47c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd48a0"/>
        <function-ref name="get" scoped="" ref="0xb7bd4980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd4a60"/>
        <function-ref name="set" scoped="" ref="0xb7bd4b40"/>
        <function-ref name="clr" scoped="" ref="0xb7bd4c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7bcf190" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7bcf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcf368"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcf448"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcf528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcf608"/>
        <function-ref name="get" scoped="" ref="0xb7bcf6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bcf7c8"/>
        <function-ref name="set" scoped="" ref="0xb7bcf8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7bcf988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7be7808" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7be7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be79e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be7ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7be7ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be7c80"/>
        <function-ref name="get" scoped="" ref="0xb7be7d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be7e40"/>
        <function-ref name="set" scoped="" ref="0xb7be7f20"/>
        <function-ref name="clr" scoped="" ref="0xb7be6018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7be6b00" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7be6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be6cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7be6db8"/>
        <function-ref name="toggle" scoped="" ref="0xb7be6e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be5010"/>
        <function-ref name="get" scoped="" ref="0xb7be50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be51d0"/>
        <function-ref name="set" scoped="" ref="0xb7be52b0"/>
        <function-ref name="clr" scoped="" ref="0xb7be5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7be0cb8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7be0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be0e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdf010"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdf1d0"/>
        <function-ref name="get" scoped="" ref="0xb7bdf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdf390"/>
        <function-ref name="set" scoped="" ref="0xb7bdf470"/>
        <function-ref name="clr" scoped="" ref="0xb7bdf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7bd8010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7bd8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd81e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd82c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd83a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd8488"/>
        <function-ref name="get" scoped="" ref="0xb7bd8568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd8648"/>
        <function-ref name="set" scoped="" ref="0xb7bd8728"/>
        <function-ref name="clr" scoped="" ref="0xb7bd8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7bd2188" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7bd2188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd2360"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd2440"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd2520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd2600"/>
        <function-ref name="get" scoped="" ref="0xb7bd26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd27c0"/>
        <function-ref name="set" scoped="" ref="0xb7bd28a0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7bea7e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7bea7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bea9c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7beaaa0"/>
        <function-ref name="toggle" scoped="" ref="0xb7beab80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7beac60"/>
        <function-ref name="get" scoped="" ref="0xb7bead40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7beae20"/>
        <function-ref name="set" scoped="" ref="0xb7beaf00"/>
        <function-ref name="clr" scoped="" ref="0xb7be9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7be4808" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7be4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be4a60"/>
        <function-ref name="isInput" scoped="" ref="0xb7be4b40"/>
        <function-ref name="toggle" scoped="" ref="0xb7be4c20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be4d00"/>
        <function-ref name="get" scoped="" ref="0xb7be4de0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be4ec0"/>
        <function-ref name="set" scoped="" ref="0xb7be3010"/>
        <function-ref name="clr" scoped="" ref="0xb7be30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7bde9d8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7bde9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdebb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdec90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bded70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdee50"/>
        <function-ref name="get" scoped="" ref="0xb7bdd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdd0f0"/>
        <function-ref name="set" scoped="" ref="0xb7bdd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7bdd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7bcee78" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7bcee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcd070"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcd150"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcd230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcd310"/>
        <function-ref name="get" scoped="" ref="0xb7bcd3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bcd4d0"/>
        <function-ref name="set" scoped="" ref="0xb7bcd5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bcd690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7bddd98" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7bddd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdc0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdc1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdc280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdc360"/>
        <function-ref name="get" scoped="" ref="0xb7bdc440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdc520"/>
        <function-ref name="set" scoped="" ref="0xb7bdc600"/>
        <function-ref name="clr" scoped="" ref="0xb7bdc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7bd5068" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7bd5068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd5240"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd5320"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd5400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd54e0"/>
        <function-ref name="get" scoped="" ref="0xb7bd55c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd56a0"/>
        <function-ref name="set" scoped="" ref="0xb7bd5780"/>
        <function-ref name="clr" scoped="" ref="0xb7bd5860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7bd1e78" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7bd1e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd0070"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd0150"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd0230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd0310"/>
        <function-ref name="get" scoped="" ref="0xb7bd03f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd04d0"/>
        <function-ref name="set" scoped="" ref="0xb7bd05b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd0690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7bca188" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7bca188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bca360"/>
        <function-ref name="isInput" scoped="" ref="0xb7bca440"/>
        <function-ref name="toggle" scoped="" ref="0xb7bca520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bca600"/>
        <function-ref name="get" scoped="" ref="0xb7bca6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bca7c0"/>
        <function-ref name="set" scoped="" ref="0xb7bca8a0"/>
        <function-ref name="clr" scoped="" ref="0xb7bca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7be8508" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7be8508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be86e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be87c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7be88a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be8980"/>
        <function-ref name="get" scoped="" ref="0xb7be8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be8b40"/>
        <function-ref name="set" scoped="" ref="0xb7be8c20"/>
        <function-ref name="clr" scoped="" ref="0xb7be8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7be25e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7be25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be27c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be28a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7be2980"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be2a60"/>
        <function-ref name="get" scoped="" ref="0xb7be2b40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be2c20"/>
        <function-ref name="set" scoped="" ref="0xb7be2d00"/>
        <function-ref name="clr" scoped="" ref="0xb7be2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7bd2af8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7bd2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd2cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd2db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd2e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd1010"/>
        <function-ref name="get" scoped="" ref="0xb7bd10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd11d0"/>
        <function-ref name="set" scoped="" ref="0xb7bd12b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7be1980" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7be1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be1b58"/>
        <function-ref name="isInput" scoped="" ref="0xb7be1c38"/>
        <function-ref name="toggle" scoped="" ref="0xb7be1d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be1df8"/>
        <function-ref name="get" scoped="" ref="0xb7be1ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be0010"/>
        <function-ref name="set" scoped="" ref="0xb7be00f0"/>
        <function-ref name="clr" scoped="" ref="0xb7be01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7bdbbd8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7bdbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdbdb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdbe90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd9010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd90f0"/>
        <function-ref name="get" scoped="" ref="0xb7bd91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd92b0"/>
        <function-ref name="set" scoped="" ref="0xb7bd9390"/>
        <function-ref name="clr" scoped="" ref="0xb7bd9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7bd4d98" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7bd4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd3010"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd30f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd31d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd32b0"/>
        <function-ref name="get" scoped="" ref="0xb7bd3390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd3470"/>
        <function-ref name="set" scoped="" ref="0xb7bd3550"/>
        <function-ref name="clr" scoped="" ref="0xb7bd3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7bcfb00" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7bcfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcfcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcfdb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcfe98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bce010"/>
        <function-ref name="get" scoped="" ref="0xb7bce0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bce1d0"/>
        <function-ref name="set" scoped="" ref="0xb7bce2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bce390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7beb4f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7beb4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7beb6d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7beb7b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7beb890"/>
        <function-ref name="isOutput" scoped="" ref="0xb7beb970"/>
        <function-ref name="get" scoped="" ref="0xb7beba50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bebb30"/>
        <function-ref name="set" scoped="" ref="0xb7bebc10"/>
        <function-ref name="clr" scoped="" ref="0xb7bebcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7be5508" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7be5508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be56e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be57c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7be58a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be5980"/>
        <function-ref name="get" scoped="" ref="0xb7be5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be5b40"/>
        <function-ref name="set" scoped="" ref="0xb7be5c20"/>
        <function-ref name="clr" scoped="" ref="0xb7be5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7bdf6c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7bdf6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdf8a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdf980"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdfa60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdfb40"/>
        <function-ref name="get" scoped="" ref="0xb7bdfc20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdfd00"/>
        <function-ref name="set" scoped="" ref="0xb7bdfde0"/>
        <function-ref name="clr" scoped="" ref="0xb7bdfec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7bd8980" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7bd8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd8b58"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd8c38"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd8d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd8df8"/>
        <function-ref name="get" scoped="" ref="0xb7bd8ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd7010"/>
        <function-ref name="set" scoped="" ref="0xb7bd70f0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7bccd98" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7bccd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcb010"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcb0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcb2b0"/>
        <function-ref name="get" scoped="" ref="0xb7bcb390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bcb470"/>
        <function-ref name="set" scoped="" ref="0xb7bcb550"/>
        <function-ref name="clr" scoped="" ref="0xb7bcb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7bd7cb8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7bd7cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd7e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd6010"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd60f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd61d0"/>
        <function-ref name="get" scoped="" ref="0xb7bd62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd6390"/>
        <function-ref name="set" scoped="" ref="0xb7bd6470"/>
        <function-ref name="clr" scoped="" ref="0xb7bd6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7bdd428" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7bdd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdd600"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdd6e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdd7c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdd8a0"/>
        <function-ref name="get" scoped="" ref="0xb7bdd980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdda60"/>
        <function-ref name="set" scoped="" ref="0xb7bddb40"/>
        <function-ref name="clr" scoped="" ref="0xb7bddc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7be9188" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7be9188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be9360"/>
        <function-ref name="isInput" scoped="" ref="0xb7be9440"/>
        <function-ref name="toggle" scoped="" ref="0xb7be9520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be9600"/>
        <function-ref name="get" scoped="" ref="0xb7be96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be97c0"/>
        <function-ref name="set" scoped="" ref="0xb7be98a0"/>
        <function-ref name="clr" scoped="" ref="0xb7be9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7be3268" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7be3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be3440"/>
        <function-ref name="isInput" scoped="" ref="0xb7be3520"/>
        <function-ref name="toggle" scoped="" ref="0xb7be3600"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be36e0"/>
        <function-ref name="get" scoped="" ref="0xb7be37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be38a0"/>
        <function-ref name="set" scoped="" ref="0xb7be3980"/>
        <function-ref name="clr" scoped="" ref="0xb7be3a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7ba3ba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7ba3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba3d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba3e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba2010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba20f0"/>
        <function-ref name="get" scoped="" ref="0xb7ba21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba22b0"/>
        <function-ref name="set" scoped="" ref="0xb7ba2390"/>
        <function-ref name="clr" scoped="" ref="0xb7ba2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7ba1890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7ba1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba1a68"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba1b48"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba1c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba1d08"/>
        <function-ref name="get" scoped="" ref="0xb7ba1de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba1ec8"/>
        <function-ref name="set" scoped="" ref="0xb7ba0010"/>
        <function-ref name="clr" scoped="" ref="0xb7ba00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7ba48e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7ba48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba4ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba4b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba4c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba4d58"/>
        <function-ref name="get" scoped="" ref="0xb7ba4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba4f18"/>
        <function-ref name="set" scoped="" ref="0xb7ba3010"/>
        <function-ref name="clr" scoped="" ref="0xb7ba30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7ba25d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7ba25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba27a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba2888"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba2968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba2a48"/>
        <function-ref name="get" scoped="" ref="0xb7ba2b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba2c08"/>
        <function-ref name="set" scoped="" ref="0xb7ba2ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7ba2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7ba0250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7ba0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba0428"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba0508"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba05e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba06c8"/>
        <function-ref name="get" scoped="" ref="0xb7ba07a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba0888"/>
        <function-ref name="set" scoped="" ref="0xb7ba0968"/>
        <function-ref name="clr" scoped="" ref="0xb7ba0a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7ba3250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7ba3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba3428"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba3508"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba35e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba36c8"/>
        <function-ref name="get" scoped="" ref="0xb7ba37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba3888"/>
        <function-ref name="set" scoped="" ref="0xb7ba3968"/>
        <function-ref name="clr" scoped="" ref="0xb7ba3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7ba2f28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7ba2f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba1110"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba11f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba12d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba13b0"/>
        <function-ref name="get" scoped="" ref="0xb7ba1490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba1570"/>
        <function-ref name="set" scoped="" ref="0xb7ba1650"/>
        <function-ref name="clr" scoped="" ref="0xb7ba1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7ba0ba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7ba0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba0d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba0e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7b9f010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b9f0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b9f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b9f2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b9f390"/>
        <function-ref name="clr" scoped="" ref="0xb7b9f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7411960" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7411960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7411b38"/>
        <function-ref name="isInput" scoped="" ref="0xb7411c18"/>
        <function-ref name="toggle" scoped="" ref="0xb7411cf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7411dd8"/>
        <function-ref name="get" scoped="" ref="0xb7411eb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7410010"/>
        <function-ref name="set" scoped="" ref="0xb74100f0"/>
        <function-ref name="clr" scoped="" ref="0xb74101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740f490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740f668"/>
        <function-ref name="isInput" scoped="" ref="0xb740f748"/>
        <function-ref name="toggle" scoped="" ref="0xb740f828"/>
        <function-ref name="isOutput" scoped="" ref="0xb740f908"/>
        <function-ref name="get" scoped="" ref="0xb740f9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740fac8"/>
        <function-ref name="set" scoped="" ref="0xb740fba8"/>
        <function-ref name="clr" scoped="" ref="0xb740fc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740d010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740d1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb740d2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb740d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb740d488"/>
        <function-ref name="get" scoped="" ref="0xb740d568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740d648"/>
        <function-ref name="set" scoped="" ref="0xb740d728"/>
        <function-ref name="clr" scoped="" ref="0xb740d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740cac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740cca0"/>
        <function-ref name="isInput" scoped="" ref="0xb740cd80"/>
        <function-ref name="toggle" scoped="" ref="0xb740ce60"/>
        <function-ref name="isOutput" scoped="" ref="0xb740b010"/>
        <function-ref name="get" scoped="" ref="0xb740b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740b1d0"/>
        <function-ref name="set" scoped="" ref="0xb740b2b0"/>
        <function-ref name="clr" scoped="" ref="0xb740b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7407650" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7407650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7407828"/>
        <function-ref name="isInput" scoped="" ref="0xb7407908"/>
        <function-ref name="toggle" scoped="" ref="0xb74079e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7407ac8"/>
        <function-ref name="get" scoped="" ref="0xb7407ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7407c88"/>
        <function-ref name="set" scoped="" ref="0xb7407d68"/>
        <function-ref name="clr" scoped="" ref="0xb7407e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74051b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74051b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7405388"/>
        <function-ref name="isInput" scoped="" ref="0xb7405468"/>
        <function-ref name="toggle" scoped="" ref="0xb7405548"/>
        <function-ref name="isOutput" scoped="" ref="0xb7405628"/>
        <function-ref name="get" scoped="" ref="0xb7405708"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74057e8"/>
        <function-ref name="set" scoped="" ref="0xb74058c8"/>
        <function-ref name="clr" scoped="" ref="0xb74059a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7404c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7404c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7404e70"/>
        <function-ref name="isInput" scoped="" ref="0xb7403010"/>
        <function-ref name="toggle" scoped="" ref="0xb74030f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74031d0"/>
        <function-ref name="get" scoped="" ref="0xb74032b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7403390"/>
        <function-ref name="set" scoped="" ref="0xb7403470"/>
        <function-ref name="clr" scoped="" ref="0xb7403550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74027f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74027f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74029d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7402ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7402b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7402c70"/>
        <function-ref name="get" scoped="" ref="0xb7402d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7402e30"/>
        <function-ref name="set" scoped="" ref="0xb7402f10"/>
        <function-ref name="clr" scoped="" ref="0xb7401010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b9a330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b9a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b9a508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b9a5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b9a6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b9a7a8"/>
        <function-ref name="get" scoped="" ref="0xb7b9a888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b9a968"/>
        <function-ref name="set" scoped="" ref="0xb7b9aa48"/>
        <function-ref name="clr" scoped="" ref="0xb7b9ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b98030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b98030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b98208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b982e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b983c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b984a8"/>
        <function-ref name="get" scoped="" ref="0xb7b98588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b98668"/>
        <function-ref name="set" scoped="" ref="0xb7b98748"/>
        <function-ref name="clr" scoped="" ref="0xb7b98828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b9c010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b9c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b9c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b9c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b9c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b9c488"/>
        <function-ref name="get" scoped="" ref="0xb7b9c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b9c648"/>
        <function-ref name="set" scoped="" ref="0xb7b9c728"/>
        <function-ref name="clr" scoped="" ref="0xb7b9c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b9ac88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b9ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b9ae60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b99010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b990f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b991d0"/>
        <function-ref name="get" scoped="" ref="0xb7b992b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b99390"/>
        <function-ref name="set" scoped="" ref="0xb7b99470"/>
        <function-ref name="clr" scoped="" ref="0xb7b99550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b98988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b98988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b98b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b98c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b98d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b98e00"/>
        <function-ref name="get" scoped="" ref="0xb7b98ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b97010"/>
        <function-ref name="set" scoped="" ref="0xb7b970f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b9c968" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b9c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b9cb40"/>
        <function-ref name="isInput" scoped="" ref="0xb7b9cc20"/>
        <function-ref name="toggle" scoped="" ref="0xb7b9cd00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b9cde0"/>
        <function-ref name="get" scoped="" ref="0xb7b9cec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b9a010"/>
        <function-ref name="set" scoped="" ref="0xb7b9a0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b9a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b996b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b996b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b99888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b99968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b99a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b99b28"/>
        <function-ref name="get" scoped="" ref="0xb7b99c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b99ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b99dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b99ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b97330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b97330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b97508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b975e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b976c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b977a8"/>
        <function-ref name="get" scoped="" ref="0xb7b97888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b97968"/>
        <function-ref name="set" scoped="" ref="0xb7b97a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b97b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73da6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73da6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73da898"/>
        <function-ref name="isInput" scoped="" ref="0xb73da978"/>
        <function-ref name="toggle" scoped="" ref="0xb73daa58"/>
        <function-ref name="isOutput" scoped="" ref="0xb73dab38"/>
        <function-ref name="get" scoped="" ref="0xb73dac18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73dacf8"/>
        <function-ref name="set" scoped="" ref="0xb73dadd8"/>
        <function-ref name="clr" scoped="" ref="0xb73daeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d81b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d8388"/>
        <function-ref name="isInput" scoped="" ref="0xb73d8468"/>
        <function-ref name="toggle" scoped="" ref="0xb73d8548"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d8628"/>
        <function-ref name="get" scoped="" ref="0xb73d8708"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d87e8"/>
        <function-ref name="set" scoped="" ref="0xb73d88c8"/>
        <function-ref name="clr" scoped="" ref="0xb73d89a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d7c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d7e70"/>
        <function-ref name="isInput" scoped="" ref="0xb73d6010"/>
        <function-ref name="toggle" scoped="" ref="0xb73d60f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d61d0"/>
        <function-ref name="get" scoped="" ref="0xb73d62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d6390"/>
        <function-ref name="set" scoped="" ref="0xb73d6470"/>
        <function-ref name="clr" scoped="" ref="0xb73d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d57f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d59d0"/>
        <function-ref name="isInput" scoped="" ref="0xb73d5ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb73d5b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d5c70"/>
        <function-ref name="get" scoped="" ref="0xb73d5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d5e30"/>
        <function-ref name="set" scoped="" ref="0xb73d5f10"/>
        <function-ref name="clr" scoped="" ref="0xb73d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d3308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d3308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d34e0"/>
        <function-ref name="isInput" scoped="" ref="0xb73d35c0"/>
        <function-ref name="toggle" scoped="" ref="0xb73d36a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d3780"/>
        <function-ref name="get" scoped="" ref="0xb73d3860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d3940"/>
        <function-ref name="set" scoped="" ref="0xb73d3a20"/>
        <function-ref name="clr" scoped="" ref="0xb73d3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d2da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d2da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d1010"/>
        <function-ref name="isInput" scoped="" ref="0xb73d10f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73d11d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d12b0"/>
        <function-ref name="get" scoped="" ref="0xb73d1390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d1470"/>
        <function-ref name="set" scoped="" ref="0xb73d1550"/>
        <function-ref name="clr" scoped="" ref="0xb73d1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d08d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d08d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d0ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb73d0b90"/>
        <function-ref name="toggle" scoped="" ref="0xb73d0c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d0d50"/>
        <function-ref name="get" scoped="" ref="0xb73d0e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d0f10"/>
        <function-ref name="set" scoped="" ref="0xb73cf010"/>
        <function-ref name="clr" scoped="" ref="0xb73cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73ce3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73ce3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73ce588"/>
        <function-ref name="isInput" scoped="" ref="0xb73ce668"/>
        <function-ref name="toggle" scoped="" ref="0xb73ce748"/>
        <function-ref name="isOutput" scoped="" ref="0xb73ce828"/>
        <function-ref name="get" scoped="" ref="0xb73ce908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73ce9e8"/>
        <function-ref name="set" scoped="" ref="0xb73ceac8"/>
        <function-ref name="clr" scoped="" ref="0xb73ceba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b93968" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b93968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b93b40"/>
        <function-ref name="isInput" scoped="" ref="0xb7b93c20"/>
        <function-ref name="toggle" scoped="" ref="0xb7b93d00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b93de0"/>
        <function-ref name="get" scoped="" ref="0xb7b93ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b92010"/>
        <function-ref name="set" scoped="" ref="0xb7b920f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b916b0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b91888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b91968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b91a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b91b28"/>
        <function-ref name="get" scoped="" ref="0xb7b91c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b91ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b91dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b91ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b94600" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b94600"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b947d8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b948b8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b94998"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b94a78"/>
        <function-ref name="get" scoped="" ref="0xb7b94b58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b94c38"/>
        <function-ref name="set" scoped="" ref="0xb7b94d18"/>
        <function-ref name="clr" scoped="" ref="0xb7b94df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b92330" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b92330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b92508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b925e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b926c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b927a8"/>
        <function-ref name="get" scoped="" ref="0xb7b92888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b92968"/>
        <function-ref name="set" scoped="" ref="0xb7b92a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b92b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b8f030" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b8f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b8f208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b8f2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b8f3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b8f4a8"/>
        <function-ref name="get" scoped="" ref="0xb7b8f588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b8f668"/>
        <function-ref name="set" scoped="" ref="0xb7b8f748"/>
        <function-ref name="clr" scoped="" ref="0xb7b8f828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b93010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b931e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b932c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b933a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b93488"/>
        <function-ref name="get" scoped="" ref="0xb7b93568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b93648"/>
        <function-ref name="set" scoped="" ref="0xb7b93728"/>
        <function-ref name="clr" scoped="" ref="0xb7b93808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b92c88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b92c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b92e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b91010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b910f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b911d0"/>
        <function-ref name="get" scoped="" ref="0xb7b912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b91390"/>
        <function-ref name="set" scoped="" ref="0xb7b91470"/>
        <function-ref name="clr" scoped="" ref="0xb7b91550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b8f988" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b8f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b8fb60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b8fc40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b8fd20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b8fe00"/>
        <function-ref name="get" scoped="" ref="0xb7b8fee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b8e010"/>
        <function-ref name="set" scoped="" ref="0xb7b8e0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b8e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a71f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a71f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a73d0"/>
        <function-ref name="isInput" scoped="" ref="0xb73a74b0"/>
        <function-ref name="toggle" scoped="" ref="0xb73a7590"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a7670"/>
        <function-ref name="get" scoped="" ref="0xb73a7750"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a7830"/>
        <function-ref name="set" scoped="" ref="0xb73a7910"/>
        <function-ref name="clr" scoped="" ref="0xb73a79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a6c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a6e70"/>
        <function-ref name="isInput" scoped="" ref="0xb73a5010"/>
        <function-ref name="toggle" scoped="" ref="0xb73a50f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a51d0"/>
        <function-ref name="get" scoped="" ref="0xb73a52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a5390"/>
        <function-ref name="set" scoped="" ref="0xb73a5470"/>
        <function-ref name="clr" scoped="" ref="0xb73a5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a47f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a49d0"/>
        <function-ref name="isInput" scoped="" ref="0xb73a4ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb73a4b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a4c70"/>
        <function-ref name="get" scoped="" ref="0xb73a4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a4e30"/>
        <function-ref name="set" scoped="" ref="0xb73a4f10"/>
        <function-ref name="clr" scoped="" ref="0xb73a3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a2308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a24e0"/>
        <function-ref name="isInput" scoped="" ref="0xb73a25c0"/>
        <function-ref name="toggle" scoped="" ref="0xb73a26a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a2780"/>
        <function-ref name="get" scoped="" ref="0xb73a2860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a2940"/>
        <function-ref name="set" scoped="" ref="0xb73a2a20"/>
        <function-ref name="clr" scoped="" ref="0xb73a2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a1da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a1da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a0010"/>
        <function-ref name="isInput" scoped="" ref="0xb73a00f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73a01d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a02b0"/>
        <function-ref name="get" scoped="" ref="0xb73a0390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a0470"/>
        <function-ref name="set" scoped="" ref="0xb73a0550"/>
        <function-ref name="clr" scoped="" ref="0xb73a0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb739f8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb739f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb739fab0"/>
        <function-ref name="isInput" scoped="" ref="0xb739fb90"/>
        <function-ref name="toggle" scoped="" ref="0xb739fc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb739fd50"/>
        <function-ref name="get" scoped="" ref="0xb739fe30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb739ff10"/>
        <function-ref name="set" scoped="" ref="0xb739e010"/>
        <function-ref name="clr" scoped="" ref="0xb739e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb739d3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb739d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb739d588"/>
        <function-ref name="isInput" scoped="" ref="0xb739d668"/>
        <function-ref name="toggle" scoped="" ref="0xb739d748"/>
        <function-ref name="isOutput" scoped="" ref="0xb739d828"/>
        <function-ref name="get" scoped="" ref="0xb739d908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb739d9e8"/>
        <function-ref name="set" scoped="" ref="0xb739dac8"/>
        <function-ref name="clr" scoped="" ref="0xb739dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb739ce50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb739ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb739a050"/>
        <function-ref name="isInput" scoped="" ref="0xb739a130"/>
        <function-ref name="toggle" scoped="" ref="0xb739a210"/>
        <function-ref name="isOutput" scoped="" ref="0xb739a2f0"/>
        <function-ref name="get" scoped="" ref="0xb739a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb739a4b0"/>
        <function-ref name="set" scoped="" ref="0xb739a590"/>
        <function-ref name="clr" scoped="" ref="0xb739a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b8a030" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b8a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b8a208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b8a2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b8a3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b8a4a8"/>
        <function-ref name="get" scoped="" ref="0xb7b8a588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b8a668"/>
        <function-ref name="set" scoped="" ref="0xb7b8a748"/>
        <function-ref name="clr" scoped="" ref="0xb7b8a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b89c88" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b89c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b89e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b88010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b880f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b881d0"/>
        <function-ref name="get" scoped="" ref="0xb7b882b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b88390"/>
        <function-ref name="set" scoped="" ref="0xb7b88470"/>
        <function-ref name="clr" scoped="" ref="0xb7b88550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b8cce0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b8cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b8ceb8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b8b010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b8b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b8b1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b8b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b8b390"/>
        <function-ref name="set" scoped="" ref="0xb7b8b470"/>
        <function-ref name="clr" scoped="" ref="0xb7b8b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b8a988" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b8a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b8ab60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b8ac40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b8ad20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b8ae00"/>
        <function-ref name="get" scoped="" ref="0xb7b8aee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b89010"/>
        <function-ref name="set" scoped="" ref="0xb7b890f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b891d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b886b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b88888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b88968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b88a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b88b28"/>
        <function-ref name="get" scoped="" ref="0xb7b88c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b88ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b88dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b88ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b8b6b0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b8b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b8b888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b8b968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b8ba48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b8bb28"/>
        <function-ref name="get" scoped="" ref="0xb7b8bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b8bce8"/>
        <function-ref name="set" scoped="" ref="0xb7b8bdc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b8bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b89330" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b89330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b89508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b895e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b896c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b897a8"/>
        <function-ref name="get" scoped="" ref="0xb7b89888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b89968"/>
        <function-ref name="set" scoped="" ref="0xb7b89a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b89b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b87030" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b87030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b87208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b872e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b873c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b874a8"/>
        <function-ref name="get" scoped="" ref="0xb7b87588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b87668"/>
        <function-ref name="set" scoped="" ref="0xb7b87748"/>
        <function-ref name="clr" scoped="" ref="0xb7b87828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7376da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7376da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7373010"/>
        <function-ref name="isInput" scoped="" ref="0xb73730f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73731d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73732b0"/>
        <function-ref name="get" scoped="" ref="0xb7373390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7373470"/>
        <function-ref name="set" scoped="" ref="0xb7373550"/>
        <function-ref name="clr" scoped="" ref="0xb7373630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73728d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73728d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7372ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7372b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7372c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7372d50"/>
        <function-ref name="get" scoped="" ref="0xb7372e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7372f10"/>
        <function-ref name="set" scoped="" ref="0xb7371010"/>
        <function-ref name="clr" scoped="" ref="0xb73710f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73703b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73703b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7370588"/>
        <function-ref name="isInput" scoped="" ref="0xb7370668"/>
        <function-ref name="toggle" scoped="" ref="0xb7370748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7370828"/>
        <function-ref name="get" scoped="" ref="0xb7370908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73709e8"/>
        <function-ref name="set" scoped="" ref="0xb7370ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7370ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb736fe50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb736fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb736e050"/>
        <function-ref name="isInput" scoped="" ref="0xb736e130"/>
        <function-ref name="toggle" scoped="" ref="0xb736e210"/>
        <function-ref name="isOutput" scoped="" ref="0xb736e2f0"/>
        <function-ref name="get" scoped="" ref="0xb736e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb736e4b0"/>
        <function-ref name="set" scoped="" ref="0xb736e590"/>
        <function-ref name="clr" scoped="" ref="0xb736e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb736d920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb736d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb736daf8"/>
        <function-ref name="isInput" scoped="" ref="0xb736dbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb736dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb736dd98"/>
        <function-ref name="get" scoped="" ref="0xb736de78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb736c010"/>
        <function-ref name="set" scoped="" ref="0xb736c0f0"/>
        <function-ref name="clr" scoped="" ref="0xb736c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb736b490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb736b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb736b668"/>
        <function-ref name="isInput" scoped="" ref="0xb736b748"/>
        <function-ref name="toggle" scoped="" ref="0xb736b828"/>
        <function-ref name="isOutput" scoped="" ref="0xb736b908"/>
        <function-ref name="get" scoped="" ref="0xb736b9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb736bac8"/>
        <function-ref name="set" scoped="" ref="0xb736bba8"/>
        <function-ref name="clr" scoped="" ref="0xb736bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7369010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7369010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73691e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73692c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73693a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7369488"/>
        <function-ref name="get" scoped="" ref="0xb7369568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7369648"/>
        <function-ref name="set" scoped="" ref="0xb7369728"/>
        <function-ref name="clr" scoped="" ref="0xb7369808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7368ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7368ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7368ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7368d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7368e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7367010"/>
        <function-ref name="get" scoped="" ref="0xb73670f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73671d0"/>
        <function-ref name="set" scoped="" ref="0xb73672b0"/>
        <function-ref name="clr" scoped="" ref="0xb7367390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b826b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b826b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b82888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b82968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b82a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b82b28"/>
        <function-ref name="get" scoped="" ref="0xb7b82c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b82ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b82dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b82ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b80330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b80330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b80508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b805e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b806c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b807a8"/>
        <function-ref name="get" scoped="" ref="0xb7b80888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b80968"/>
        <function-ref name="set" scoped="" ref="0xb7b80a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b80b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b833a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b833a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b83578"/>
        <function-ref name="isInput" scoped="" ref="0xb7b83658"/>
        <function-ref name="toggle" scoped="" ref="0xb7b83738"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b83818"/>
        <function-ref name="get" scoped="" ref="0xb7b838f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b839d8"/>
        <function-ref name="set" scoped="" ref="0xb7b83ab8"/>
        <function-ref name="clr" scoped="" ref="0xb7b83b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b81030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b81030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b81208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b812e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b813c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b814a8"/>
        <function-ref name="get" scoped="" ref="0xb7b81588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b81668"/>
        <function-ref name="set" scoped="" ref="0xb7b81748"/>
        <function-ref name="clr" scoped="" ref="0xb7b81828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b80c88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b80c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b80e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7f010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7f1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b7f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7f390"/>
        <function-ref name="set" scoped="" ref="0xb7b7f470"/>
        <function-ref name="clr" scoped="" ref="0xb7b7f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b83cf8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b83cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b83ed0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b82010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b820f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b821d0"/>
        <function-ref name="get" scoped="" ref="0xb7b822b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b82390"/>
        <function-ref name="set" scoped="" ref="0xb7b82470"/>
        <function-ref name="clr" scoped="" ref="0xb7b82550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b81988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b81988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b81b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b81c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b81d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b81e00"/>
        <function-ref name="get" scoped="" ref="0xb7b81ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b80010"/>
        <function-ref name="set" scoped="" ref="0xb7b800f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b7f6b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b7f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7f888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7f968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7fa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7fb28"/>
        <function-ref name="get" scoped="" ref="0xb7b7fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7fce8"/>
        <function-ref name="set" scoped="" ref="0xb7b7fdc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b7fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7342da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7342da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7340010"/>
        <function-ref name="isInput" scoped="" ref="0xb73400f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73401d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73402b0"/>
        <function-ref name="get" scoped="" ref="0xb7340390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7340470"/>
        <function-ref name="set" scoped="" ref="0xb7340550"/>
        <function-ref name="clr" scoped="" ref="0xb7340630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733f8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733fab0"/>
        <function-ref name="isInput" scoped="" ref="0xb733fb90"/>
        <function-ref name="toggle" scoped="" ref="0xb733fc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb733fd50"/>
        <function-ref name="get" scoped="" ref="0xb733fe30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733ff10"/>
        <function-ref name="set" scoped="" ref="0xb733e010"/>
        <function-ref name="clr" scoped="" ref="0xb733e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733d3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733d588"/>
        <function-ref name="isInput" scoped="" ref="0xb733d668"/>
        <function-ref name="toggle" scoped="" ref="0xb733d748"/>
        <function-ref name="isOutput" scoped="" ref="0xb733d828"/>
        <function-ref name="get" scoped="" ref="0xb733d908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733d9e8"/>
        <function-ref name="set" scoped="" ref="0xb733dac8"/>
        <function-ref name="clr" scoped="" ref="0xb733dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733ce50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733b050"/>
        <function-ref name="isInput" scoped="" ref="0xb733b130"/>
        <function-ref name="toggle" scoped="" ref="0xb733b210"/>
        <function-ref name="isOutput" scoped="" ref="0xb733b2f0"/>
        <function-ref name="get" scoped="" ref="0xb733b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733b4b0"/>
        <function-ref name="set" scoped="" ref="0xb733b590"/>
        <function-ref name="clr" scoped="" ref="0xb733b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733a920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733aaf8"/>
        <function-ref name="isInput" scoped="" ref="0xb733abd8"/>
        <function-ref name="toggle" scoped="" ref="0xb733acb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb733ad98"/>
        <function-ref name="get" scoped="" ref="0xb733ae78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7339010"/>
        <function-ref name="set" scoped="" ref="0xb73390f0"/>
        <function-ref name="clr" scoped="" ref="0xb73391d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7338490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7338490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7338668"/>
        <function-ref name="isInput" scoped="" ref="0xb7338748"/>
        <function-ref name="toggle" scoped="" ref="0xb7338828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7338908"/>
        <function-ref name="get" scoped="" ref="0xb73389e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7338ac8"/>
        <function-ref name="set" scoped="" ref="0xb7338ba8"/>
        <function-ref name="clr" scoped="" ref="0xb7338c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7335010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7335010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73351e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73352c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73353a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7335488"/>
        <function-ref name="get" scoped="" ref="0xb7335568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7335648"/>
        <function-ref name="set" scoped="" ref="0xb7335728"/>
        <function-ref name="clr" scoped="" ref="0xb7335808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7334ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7334ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7334ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7334d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7334e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7333010"/>
        <function-ref name="get" scoped="" ref="0xb73330f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73331d0"/>
        <function-ref name="set" scoped="" ref="0xb73332b0"/>
        <function-ref name="clr" scoped="" ref="0xb7333390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b7ae48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b7ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b79050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b79130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b79210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b792f0"/>
        <function-ref name="get" scoped="" ref="0xb7b793d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b794b0"/>
        <function-ref name="set" scoped="" ref="0xb7b79590"/>
        <function-ref name="clr" scoped="" ref="0xb7b79670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b78ac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b78ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b78ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b78d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b78e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b77010"/>
        <function-ref name="get" scoped="" ref="0xb7b770f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b771d0"/>
        <function-ref name="set" scoped="" ref="0xb7b772b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b77390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b7cb38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b7cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7cd10"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7cdf0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7ced0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7a010"/>
        <function-ref name="get" scoped="" ref="0xb7b7a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7a1d0"/>
        <function-ref name="set" scoped="" ref="0xb7b7a2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b7a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b797d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b797d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b799a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b79a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7b79b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b79c48"/>
        <function-ref name="get" scoped="" ref="0xb7b79d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b79e08"/>
        <function-ref name="set" scoped="" ref="0xb7b79ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7b78010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b774f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b774f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b776c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b777a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b77888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b77968"/>
        <function-ref name="get" scoped="" ref="0xb7b77a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b77b28"/>
        <function-ref name="set" scoped="" ref="0xb7b77c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b77ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b7a4f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b7a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7a6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7a7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7a888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7a968"/>
        <function-ref name="get" scoped="" ref="0xb7b7aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7ab28"/>
        <function-ref name="set" scoped="" ref="0xb7b7ac08"/>
        <function-ref name="clr" scoped="" ref="0xb7b7ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b78170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b78170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b78348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b78428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b78508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b785e8"/>
        <function-ref name="get" scoped="" ref="0xb7b786c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b787a8"/>
        <function-ref name="set" scoped="" ref="0xb7b78888"/>
        <function-ref name="clr" scoped="" ref="0xb7b78968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b77e48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b77e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b76050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b76130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b76210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b762f0"/>
        <function-ref name="get" scoped="" ref="0xb7b763d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b764b0"/>
        <function-ref name="set" scoped="" ref="0xb7b76590"/>
        <function-ref name="clr" scoped="" ref="0xb7b76670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb730fda8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb730fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb730c010"/>
        <function-ref name="isInput" scoped="" ref="0xb730c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb730c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb730c2b0"/>
        <function-ref name="get" scoped="" ref="0xb730c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb730c470"/>
        <function-ref name="set" scoped="" ref="0xb730c550"/>
        <function-ref name="clr" scoped="" ref="0xb730c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb730b8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb730b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb730bab0"/>
        <function-ref name="isInput" scoped="" ref="0xb730bb90"/>
        <function-ref name="toggle" scoped="" ref="0xb730bc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb730bd50"/>
        <function-ref name="get" scoped="" ref="0xb730be30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb730bf10"/>
        <function-ref name="set" scoped="" ref="0xb730a010"/>
        <function-ref name="clr" scoped="" ref="0xb730a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73093b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73093b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7309588"/>
        <function-ref name="isInput" scoped="" ref="0xb7309668"/>
        <function-ref name="toggle" scoped="" ref="0xb7309748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7309828"/>
        <function-ref name="get" scoped="" ref="0xb7309908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73099e8"/>
        <function-ref name="set" scoped="" ref="0xb7309ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7309ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7308e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7308e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7307050"/>
        <function-ref name="isInput" scoped="" ref="0xb7307130"/>
        <function-ref name="toggle" scoped="" ref="0xb7307210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73072f0"/>
        <function-ref name="get" scoped="" ref="0xb73073d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73074b0"/>
        <function-ref name="set" scoped="" ref="0xb7307590"/>
        <function-ref name="clr" scoped="" ref="0xb7307670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7306920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7306920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7306af8"/>
        <function-ref name="isInput" scoped="" ref="0xb7306bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb7306cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7306d98"/>
        <function-ref name="get" scoped="" ref="0xb7306e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7305010"/>
        <function-ref name="set" scoped="" ref="0xb73050f0"/>
        <function-ref name="clr" scoped="" ref="0xb73051d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7304490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7304490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7304668"/>
        <function-ref name="isInput" scoped="" ref="0xb7304748"/>
        <function-ref name="toggle" scoped="" ref="0xb7304828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7304908"/>
        <function-ref name="get" scoped="" ref="0xb73049e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7304ac8"/>
        <function-ref name="set" scoped="" ref="0xb7304ba8"/>
        <function-ref name="clr" scoped="" ref="0xb7304c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7302010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7302010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73021e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73022c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73023a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7302488"/>
        <function-ref name="get" scoped="" ref="0xb7302568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7302648"/>
        <function-ref name="set" scoped="" ref="0xb7302728"/>
        <function-ref name="clr" scoped="" ref="0xb7302808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7301ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7301ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7301ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7301d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7301e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7300010"/>
        <function-ref name="get" scoped="" ref="0xb73000f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73001d0"/>
        <function-ref name="set" scoped="" ref="0xb73002b0"/>
        <function-ref name="clr" scoped="" ref="0xb7300390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b73960" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b73960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b73b38"/>
        <function-ref name="isInput" scoped="" ref="0xb7b73c18"/>
        <function-ref name="toggle" scoped="" ref="0xb7b73cf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b73dd8"/>
        <function-ref name="get" scoped="" ref="0xb7b73eb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b72010"/>
        <function-ref name="set" scoped="" ref="0xb7b720f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b65010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b65010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b651e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b652c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b653a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b65488"/>
        <function-ref name="get" scoped="" ref="0xb7b65568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b65648"/>
        <function-ref name="set" scoped="" ref="0xb7b65728"/>
        <function-ref name="clr" scoped="" ref="0xb7b65808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b63618" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b63618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b637f0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b638d0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b639b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b63a90"/>
        <function-ref name="get" scoped="" ref="0xb7b63b70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b63c50"/>
        <function-ref name="set" scoped="" ref="0xb7b63d30"/>
        <function-ref name="clr" scoped="" ref="0xb7b63e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b60d10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b60d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b60ee8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5f010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5f1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b5f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5f390"/>
        <function-ref name="set" scoped="" ref="0xb7b5f470"/>
        <function-ref name="clr" scoped="" ref="0xb7b5f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b5d360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b5d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5d538"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5d618"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5d6f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5d7d8"/>
        <function-ref name="get" scoped="" ref="0xb7b5d8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5d998"/>
        <function-ref name="set" scoped="" ref="0xb7b5da78"/>
        <function-ref name="clr" scoped="" ref="0xb7b5db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b5b960" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b5b960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5bb38"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5bc18"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5bcf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5bdd8"/>
        <function-ref name="get" scoped="" ref="0xb7b5beb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b59010"/>
        <function-ref name="set" scoped="" ref="0xb7b590f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b591d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b57080" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b57080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b57258"/>
        <function-ref name="isInput" scoped="" ref="0xb7b57338"/>
        <function-ref name="toggle" scoped="" ref="0xb7b57418"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b574f8"/>
        <function-ref name="get" scoped="" ref="0xb7b575d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b576b8"/>
        <function-ref name="set" scoped="" ref="0xb7b57798"/>
        <function-ref name="clr" scoped="" ref="0xb7b57878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b556a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b556a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b55878"/>
        <function-ref name="isInput" scoped="" ref="0xb7b55958"/>
        <function-ref name="toggle" scoped="" ref="0xb7b55a38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b55b18"/>
        <function-ref name="get" scoped="" ref="0xb7b55bf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b55cd8"/>
        <function-ref name="set" scoped="" ref="0xb7b55db8"/>
        <function-ref name="clr" scoped="" ref="0xb7b55e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b52d10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b52d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b52ee8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b51010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b510f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b511d0"/>
        <function-ref name="get" scoped="" ref="0xb7b512b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b51390"/>
        <function-ref name="set" scoped="" ref="0xb7b51470"/>
        <function-ref name="clr" scoped="" ref="0xb7b51550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b4f360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b4f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4f538"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4f618"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4f6f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4f7d8"/>
        <function-ref name="get" scoped="" ref="0xb7b4f8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4f998"/>
        <function-ref name="set" scoped="" ref="0xb7b4fa78"/>
        <function-ref name="clr" scoped="" ref="0xb7b4fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b4d960" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b4d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4db38"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4dc18"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4dcf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4ddd8"/>
        <function-ref name="get" scoped="" ref="0xb7b4deb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4c010"/>
        <function-ref name="set" scoped="" ref="0xb7b4c0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b4c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b49010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b491e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b492c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b493a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b49488"/>
        <function-ref name="get" scoped="" ref="0xb7b49568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b49648"/>
        <function-ref name="set" scoped="" ref="0xb7b49728"/>
        <function-ref name="clr" scoped="" ref="0xb7b49808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b47618" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b47618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b477f0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b478d0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b479b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b47a90"/>
        <function-ref name="get" scoped="" ref="0xb7b47b70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b47c50"/>
        <function-ref name="set" scoped="" ref="0xb7b47d30"/>
        <function-ref name="clr" scoped="" ref="0xb7b47e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b28100" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b28100"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7cf11d8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7cf11d8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b282d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7b28428" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b28428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7b28600"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7b286e0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7b287c0"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7b288a0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7b28980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7b181a8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7b181a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b18380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7b19578" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7b19578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7b19750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7b19df0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7b19df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b18010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7b198c0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7b198c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b19a98"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7b19b78"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7b19c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7ce5e18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7ce5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7cee010"/>
        <function-ref name="runTask" scoped="" ref="0xb7cee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7cef010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7cef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7cef1e8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7cef2c8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7cef3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7c822a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7c822a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7c82478"/>
        <function-ref name="runTask" scoped="" ref="0xb7c82558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7c7f810" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7c7f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7c7f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7c83ae8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7c83ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c83cc0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7c83da0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7c83e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7c6ddf0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7c6ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7c71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7c73360" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7c73360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7c73538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7c70930" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7c70930"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7c70b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7b2c958" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7b2c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7b2cb30"/>
        <function-ref name="stopDone" scoped="" ref="0xb7b2cc10"/>
        <function-ref name="start" scoped="" ref="0xb7b2ccf0"/>
        <function-ref name="stop" scoped="" ref="0xb7b2cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7af65c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7af65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7af5010"/>
        <function-ref name="clear" scoped="" ref="0xb7af52d0"/>
        <function-ref name="isValid" scoped="" ref="0xb7af6d18"/>
        <function-ref name="set" scoped="" ref="0xb7af5590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7b131e8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7b131e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7b133c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7b134a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7b13580"/>
        <function-ref name="cancel" scoped="" ref="0xb7b13660"/>
        <function-ref name="sendDone" scoped="" ref="0xb7b13740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7b12120" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7b12120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7b122f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7b0cb40" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7b0cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7b0cd18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7b0cdf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7b0ced8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7b11010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7b110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7afa8e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7afa8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7afaac0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7afaba0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7afac80"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7afad60"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7afae40"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7afaf20"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7b0b018"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7b0b0f8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7b0b1d8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7b0b2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7b13b18" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7b13b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7b13cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7b01658" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7b01658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7b01830"/>
        <function-ref name="noAck" scoped="" ref="0xb7b01910"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7b019f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7b04698" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7b04698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7b04870"/>
        <function-ref name="source" scoped="" ref="0xb7b04950"/>
        <function-ref name="address" scoped="" ref="0xb7b04a30"/>
        <function-ref name="destination" scoped="" ref="0xb7b04b10"/>
        <function-ref name="setSource" scoped="" ref="0xb7b04bf0"/>
        <function-ref name="setDestination" scoped="" ref="0xb7b04cd0"/>
        <function-ref name="type" scoped="" ref="0xb7b04db0"/>
        <function-ref name="setType" scoped="" ref="0xb7b04e90"/>
        <function-ref name="isForMe" scoped="" ref="0xb7b10010"/>
        <function-ref name="setGroup" scoped="" ref="0xb7b100f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb7b101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb7b03188" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb7b03188"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7b03b98"/>
        <function-ref name="clear" scoped="" ref="0xb7b03e58"/>
        <function-ref name="isValid" scoped="" ref="0xb7b038d8"/>
        <function-ref name="set" scoped="" ref="0xb7af6150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7ae3a98" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7ae3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7ae3c70"/>
        <function-ref name="stopDone" scoped="" ref="0xb7ae3d50"/>
        <function-ref name="start" scoped="" ref="0xb7ae3e30"/>
        <function-ref name="stop" scoped="" ref="0xb7ae3f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb7ad7540" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb7ad7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7ad6118"/>
        <function-ref name="get" scoped="" ref="0xb7ad7e48"/>
        <function-ref name="isSet" scoped="" ref="0xb7ad7b88"/>
        <function-ref name="set" scoped="" ref="0xb7ad63d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7ae1578" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7ae1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7ae1750"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7ae1830"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ae1910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ae19f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7ae1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7ae2308" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7ae2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7ae24e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ae25c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ae26a0"/>
        <function-ref name="cancel" scoped="" ref="0xb7ae2780"/>
        <function-ref name="sendDone" scoped="" ref="0xb7ae2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7ae1258" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7ae1258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7ae1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb7add2c0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7add2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7adde88"/>
        <function-ref name="get" scoped="" ref="0xb7addbc8"/>
        <function-ref name="isSet" scoped="" ref="0xb7add908"/>
        <function-ref name="set" scoped="" ref="0xb7ad7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7ae0d58" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7ae0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7adf010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7adf0f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7adf1d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7adf2b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7adf390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7adf470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7adf550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7adf630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7adf710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7adf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7ae2c38" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7ae2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7ae2e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb7ad6850" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7ad6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7ad52d0"/>
        <function-ref name="clear" scoped="" ref="0xb7ad5590"/>
        <function-ref name="isValid" scoped="" ref="0xb7ad5010"/>
        <function-ref name="set" scoped="" ref="0xb7ad5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb7ade048" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7ade048"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7adec10"/>
        <function-ref name="get" scoped="" ref="0xb7ade950"/>
        <function-ref name="isSet" scoped="" ref="0xb7ade690"/>
        <function-ref name="set" scoped="" ref="0xb7adeed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7ae0868" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7ae0868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7ae0a40"/>
        <function-ref name="noAck" scoped="" ref="0xb7ae0b20"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7ae0c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7ae1c20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7ae1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7ae1df8"/>
        <function-ref name="source" scoped="" ref="0xb7ae1ed8"/>
        <function-ref name="address" scoped="" ref="0xb7ae0010"/>
        <function-ref name="destination" scoped="" ref="0xb7ae00f0"/>
        <function-ref name="setSource" scoped="" ref="0xb7ae01d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb7ae02b0"/>
        <function-ref name="type" scoped="" ref="0xb7ae0390"/>
        <function-ref name="setType" scoped="" ref="0xb7ae0470"/>
        <function-ref name="isForMe" scoped="" ref="0xb7ae0550"/>
        <function-ref name="setGroup" scoped="" ref="0xb7ae0630"/>
        <function-ref name="localGroup" scoped="" ref="0xb7ae0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7ad5cc8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7ad5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7ad37a8"/>
        <function-ref name="clear" scoped="" ref="0xb7ad3a68"/>
        <function-ref name="isValid" scoped="" ref="0xb7ad34e8"/>
        <function-ref name="set" scoped="" ref="0xb7ad3d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb7ab6188" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb7ab6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb7ab6a60"/>
        <function-ref name="channelError" scoped="" ref="0xb7ab6440"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb7ab6520"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb7ab6600"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb7ab66e0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb7ab67c0"/>
        <function-ref name="timerTick" scoped="" ref="0xb7ab68a0"/>
        <function-ref name="getSender" scoped="" ref="0xb7ab6980"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb7ab6360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb7ab0c48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb7ab0c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb7ab0e20"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb7ab0f00"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb7abc010"/>
        <function-ref name="timerTick" scoped="" ref="0xb7abc0f0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb7abc1d0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb7abc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb7aae958" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7aae958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0xb7aaeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb7ab3d28" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb7ab3d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb7ab3f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb7abb6c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb7abb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb7abb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb7ac1d98" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb7ac1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb7aca010"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb7aca0f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7aca1d0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb7aca2b0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb7aca390"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb7aca470"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb7aca550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7aca630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7a9c8f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a9c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7a9cac8"/>
        <function-ref name="getDSN" scoped="" ref="0xb7a9cba8"/>
        <function-ref name="setFCF" scoped="" ref="0xb7a9cc88"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7a9cd68"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7a9ce48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7a9cf28"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7aad018"/>
        <function-ref name="setDSN" scoped="" ref="0xb7aad0f8"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7aad1d8"/>
        <function-ref name="getHeader" scoped="" ref="0xb7aad2b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7aad398"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7aad478"/>
        <function-ref name="setType" scoped="" ref="0xb7aad558"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7aad6b8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7aad798"/>
        <function-ref name="setLength" scoped="" ref="0xb7aad878"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7aad958"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7aada38"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7aadb18"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7aadbf8"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7aadcd8"/>
        <function-ref name="getLength" scoped="" ref="0xb7aaddb8"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7aade98"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7aac010"/>
        <function-ref name="getFCF" scoped="" ref="0xb7aac0f0"/>
        <function-ref name="getType" scoped="" ref="0xb7aac2d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7aac3b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7aac490"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7aac570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7aac6b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7aac6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7aac890"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7aac970"/>
        <function-ref name="getPayload" scoped="" ref="0xb7aaca50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7aacb30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7aacc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb7a963b8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb7a963b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7a96590"/>
        <function-ref name="wait" scoped="" ref="0xb7a96670"/>
        <function-ref name="cancel" scoped="" ref="0xb7a96750"/>
        <function-ref name="isFree" scoped="" ref="0xb7a96830"/>
        <function-ref name="getNow" scoped="" ref="0xb7a96910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb7abee80" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb7abee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb7ac5070"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb7ac5150"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb7ac5230"/>
        <function-ref name="getSender" scoped="" ref="0xb7ac5310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb7ab4cd0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7ab4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb7ab4ea8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb7ac0010"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb7ac00f0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb7ac01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0xb7ac64f8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb7ac64f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb7ac66d0"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb7ac6c10"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ac6890"/>
        <function-ref name="setLength" scoped="" ref="0xb7ac6970"/>
        <function-ref name="getLength" scoped="" ref="0xb7ac6a50"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb7ac6b30"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb7ac67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb7a646a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb7a646a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a622d0"/>
        <function-ref name="get" scoped="" ref="0xb7a62010"/>
        <function-ref name="isSet" scoped="" ref="0xb7a64ce8"/>
        <function-ref name="set" scoped="" ref="0xb7a62590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7a69860" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a69860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a69a38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a69b18"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a69bf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a69cd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a69db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb7a653e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a653e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a64010"/>
        <function-ref name="get" scoped="" ref="0xb7a65cf0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a65a30"/>
        <function-ref name="set" scoped="" ref="0xb7a642d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0xb7a62970" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7a62970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a61590"/>
        <function-ref name="get" scoped="" ref="0xb7a612d0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a61010"/>
        <function-ref name="set" scoped="" ref="0xb7a61850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb7a61c28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a61c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a5f818"/>
        <function-ref name="get" scoped="" ref="0xb7a5f558"/>
        <function-ref name="isSet" scoped="" ref="0xb7a5f298"/>
        <function-ref name="set" scoped="" ref="0xb7a5fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb7a5e010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a5ea20"/>
        <function-ref name="clear" scoped="" ref="0xb7a5ece0"/>
        <function-ref name="isValid" scoped="" ref="0xb7a5e760"/>
        <function-ref name="set" scoped="" ref="0xb7a5d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7a68b08" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a68b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7a68ce0"/>
        <function-ref name="noAck" scoped="" ref="0xb7a68dc0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7a68ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb7a670e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a670e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a67cb0"/>
        <function-ref name="get" scoped="" ref="0xb7a679f0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a67730"/>
        <function-ref name="set" scoped="" ref="0xb7a65010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7a69f08" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7a69f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7a680f0"/>
        <function-ref name="source" scoped="" ref="0xb7a681d0"/>
        <function-ref name="address" scoped="" ref="0xb7a682b0"/>
        <function-ref name="destination" scoped="" ref="0xb7a68390"/>
        <function-ref name="setSource" scoped="" ref="0xb7a68470"/>
        <function-ref name="setDestination" scoped="" ref="0xb7a68550"/>
        <function-ref name="type" scoped="" ref="0xb7a68630"/>
        <function-ref name="setType" scoped="" ref="0xb7a68710"/>
        <function-ref name="isForMe" scoped="" ref="0xb7a687f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7a688d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb7a689b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7a5d488" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a5d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a5de98"/>
        <function-ref name="clear" scoped="" ref="0xb7a5b170"/>
        <function-ref name="isValid" scoped="" ref="0xb7a5dbd8"/>
        <function-ref name="set" scoped="" ref="0xb7a5b430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb7a53718" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb7a53718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a51308"/>
        <function-ref name="get" scoped="" ref="0xb7a51048"/>
        <function-ref name="isSet" scoped="" ref="0xb7a53d60"/>
        <function-ref name="set" scoped="" ref="0xb7a515c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7a57a00" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a57a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a57bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a57cb8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a57d98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a57e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a56010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb7a544b0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a544b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a53088"/>
        <function-ref name="get" scoped="" ref="0xb7a54db8"/>
        <function-ref name="isSet" scoped="" ref="0xb7a54af8"/>
        <function-ref name="set" scoped="" ref="0xb7a53348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0xb7a519a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7a519a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a50590"/>
        <function-ref name="get" scoped="" ref="0xb7a502d0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a50010"/>
        <function-ref name="set" scoped="" ref="0xb7a50850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7a4a788" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a4a788"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7a4a960"/>
        <function-ref name="getDSN" scoped="" ref="0xb7a4aa40"/>
        <function-ref name="setFCF" scoped="" ref="0xb7a4ab20"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7a4ac00"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7a4ace0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7a4adc0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7a4aea0"/>
        <function-ref name="setDSN" scoped="" ref="0xb7a49010"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7a490f0"/>
        <function-ref name="getHeader" scoped="" ref="0xb7a491d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7a492b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7a49390"/>
        <function-ref name="setType" scoped="" ref="0xb7a49470"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7a495d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7a496b0"/>
        <function-ref name="setLength" scoped="" ref="0xb7a49790"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7a49870"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a49950"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7a49a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7a49b10"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7a49bf0"/>
        <function-ref name="getLength" scoped="" ref="0xb7a49cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7a49db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7a49e90"/>
        <function-ref name="getFCF" scoped="" ref="0xb7a48010"/>
        <function-ref name="getType" scoped="" ref="0xb7a481f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a482d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7a483b0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7a48490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb7a50c28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a50c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a4e818"/>
        <function-ref name="get" scoped="" ref="0xb7a4e558"/>
        <function-ref name="isSet" scoped="" ref="0xb7a4e298"/>
        <function-ref name="set" scoped="" ref="0xb7a4ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb7a4d010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a4d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a4da20"/>
        <function-ref name="clear" scoped="" ref="0xb7a4dce0"/>
        <function-ref name="isValid" scoped="" ref="0xb7a4d760"/>
        <function-ref name="set" scoped="" ref="0xb7a4b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb7a47118" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7a47118"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7a47760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7a57520" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a57520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7a576f8"/>
        <function-ref name="noAck" scoped="" ref="0xb7a577d8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7a578b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb7a56230" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a56230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a56df8"/>
        <function-ref name="get" scoped="" ref="0xb7a56b38"/>
        <function-ref name="isSet" scoped="" ref="0xb7a56878"/>
        <function-ref name="set" scoped="" ref="0xb7a540d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb7a479d0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb7a479d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7a44048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7a4b488" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a4b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a4be98"/>
        <function-ref name="clear" scoped="" ref="0xb7a4a170"/>
        <function-ref name="isValid" scoped="" ref="0xb7a4bbd8"/>
        <function-ref name="set" scoped="" ref="0xb7a4a430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0xb7a147c0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7a14998"/>
        <function-ref name="getDSN" scoped="" ref="0xb7a14a78"/>
        <function-ref name="setFCF" scoped="" ref="0xb7a14b58"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7a14c38"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7a14d18"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7a14df8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7a14ed8"/>
        <function-ref name="setDSN" scoped="" ref="0xb7a13010"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7a130f0"/>
        <function-ref name="getHeader" scoped="" ref="0xb7a131d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7a132b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7a13390"/>
        <function-ref name="setType" scoped="" ref="0xb7a13470"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7a135d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7a136b0"/>
        <function-ref name="setLength" scoped="" ref="0xb7a13790"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7a13870"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a13950"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7a13a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7a13b10"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7a13bf0"/>
        <function-ref name="getLength" scoped="" ref="0xb7a13cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7a13db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7a13e90"/>
        <function-ref name="getFCF" scoped="" ref="0xb7a12010"/>
        <function-ref name="getType" scoped="" ref="0xb7a121f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a122d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7a123b0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7a12490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7a125e0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7a125e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7a127b8"/>
        <function-ref name="source" scoped="" ref="0xb7a12898"/>
        <function-ref name="address" scoped="" ref="0xb7a12978"/>
        <function-ref name="destination" scoped="" ref="0xb7a12a58"/>
        <function-ref name="setSource" scoped="" ref="0xb7a12b38"/>
        <function-ref name="setDestination" scoped="" ref="0xb7a12c18"/>
        <function-ref name="type" scoped="" ref="0xb7a12cf8"/>
        <function-ref name="setType" scoped="" ref="0xb7a12dd8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7a12eb8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7a11010"/>
        <function-ref name="localGroup" scoped="" ref="0xb7a110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0xb7a0e6b8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a0e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7a0e890"/>
        <function-ref name="getDSN" scoped="" ref="0xb7a0e970"/>
        <function-ref name="setFCF" scoped="" ref="0xb7a0ea50"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7a0eb30"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7a0ec10"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7a0ecf0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7a0edd0"/>
        <function-ref name="setDSN" scoped="" ref="0xb7a0eeb0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7a0d010"/>
        <function-ref name="getHeader" scoped="" ref="0xb7a0d0f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7a0d1d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7a0d2b0"/>
        <function-ref name="setType" scoped="" ref="0xb7a0d390"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7a0d4f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7a0d5d0"/>
        <function-ref name="setLength" scoped="" ref="0xb7a0d6b0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7a0d790"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a0d870"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7a0d950"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7a0da30"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7a0db10"/>
        <function-ref name="getLength" scoped="" ref="0xb7a0dbf0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7a0dcd0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7a0ddb0"/>
        <function-ref name="getFCF" scoped="" ref="0xb7a0de90"/>
        <function-ref name="getType" scoped="" ref="0xb7a0c110"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a0c1f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7a0c2d0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7a0c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb7a065d0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7a065d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7a067a8"/>
        <function-ref name="changed" scoped="" ref="0xb7a06888"/>
        <function-ref name="amGroup" scoped="" ref="0xb7a06968"/>
        <function-ref name="setAddress" scoped="" ref="0xb7a06a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7a0c500" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7a0c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7a0c6d8"/>
        <function-ref name="source" scoped="" ref="0xb7a0c7b8"/>
        <function-ref name="address" scoped="" ref="0xb7a0c898"/>
        <function-ref name="destination" scoped="" ref="0xb7a0c978"/>
        <function-ref name="setSource" scoped="" ref="0xb7a0ca58"/>
        <function-ref name="setDestination" scoped="" ref="0xb7a0cb38"/>
        <function-ref name="type" scoped="" ref="0xb7a0cc18"/>
        <function-ref name="setType" scoped="" ref="0xb7a0ccf8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7a0cdd8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7a0ceb8"/>
        <function-ref name="localGroup" scoped="" ref="0xb7a0b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb79cf830" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb79cf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb79cfa08"/>
        <function-ref name="changed" scoped="" ref="0xb79cfae8"/>
        <function-ref name="amGroup" scoped="" ref="0xb79cfbc8"/>
        <function-ref name="setAddress" scoped="" ref="0xb79cfca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb79c6e80" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb79c6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79c54d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb79bc788" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb79bc788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TOne" ref="0xb7c86b70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79bced8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb79c12f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb79c10f8"/>
        <function-ref name="overflow" scoped="" ref="0xb79c14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb79b1010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb79b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb79b11e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb79b12c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb79b13a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb79b1488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb79b1568"/>
        <function-ref name="setControlB" scoped="" ref="0xb79b1648"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb79b1728"/>
        <function-ref name="getControlB" scoped="" ref="0xb79b1808"/>
        <function-ref name="setControlC" scoped="" ref="0xb79b18e8"/>
        <function-ref name="setControlA" scoped="" ref="0xb79b19c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb79b00b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb79b00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb79ab848"/>
        <function-ref name="test" scoped="" ref="0xb79ab448"/>
        <function-ref name="get" scoped="" ref="0xb79b06f8"/>
        <function-ref name="captured" scoped="" ref="0xb79b0b98"/>
        <function-ref name="reset" scoped="" ref="0xb79b0e38"/>
        <function-ref name="isOn" scoped="" ref="0xb79ab648"/>
        <function-ref name="set" scoped="" ref="0xb79b08f8"/>
        <function-ref name="start" scoped="" ref="0xb79ab048"/>
        <function-ref name="stop" scoped="" ref="0xb79ab248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb79a1c10" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb79a1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb79a6f18"/>
        <function-ref name="fired" scoped="" ref="0xb79a6718"/>
        <function-ref name="get" scoped="" ref="0xb79a6278"/>
        <function-ref name="reset" scoped="" ref="0xb79a6918"/>
        <function-ref name="isOn" scoped="" ref="0xb79a5130"/>
        <function-ref name="set" scoped="" ref="0xb79a6478"/>
        <function-ref name="start" scoped="" ref="0xb79a6b18"/>
        <function-ref name="stop" scoped="" ref="0xb79a6d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb79b3450" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb79b3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb79b9c10"/>
        <function-ref name="test" scoped="" ref="0xb79b9810"/>
        <function-ref name="get" scoped="" ref="0xb79b3a98"/>
        <function-ref name="setScale" scoped="" ref="0xb79b9e10"/>
        <function-ref name="getScale" scoped="" ref="0xb79b20d8"/>
        <function-ref name="reset" scoped="" ref="0xb79b9210"/>
        <function-ref name="overflow" scoped="" ref="0xb79b9010"/>
        <function-ref name="isOn" scoped="" ref="0xb79b9a10"/>
        <function-ref name="set" scoped="" ref="0xb79b3c98"/>
        <function-ref name="start" scoped="" ref="0xb79b9410"/>
        <function-ref name="stop" scoped="" ref="0xb79b9610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb799b938" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb799b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb799bb10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb799bbf0"/>
        <function-ref name="getControlA" scoped="" ref="0xb799bcd0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb799bdb0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb799be90"/>
        <function-ref name="setControlB" scoped="" ref="0xb799a010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb799a0f0"/>
        <function-ref name="getControlB" scoped="" ref="0xb799a1d0"/>
        <function-ref name="setControlC" scoped="" ref="0xb799a2b0"/>
        <function-ref name="setControlA" scoped="" ref="0xb799a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb79970b8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb79970b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7996410"/>
        <function-ref name="fired" scoped="" ref="0xb7997ba0"/>
        <function-ref name="get" scoped="" ref="0xb7997700"/>
        <function-ref name="reset" scoped="" ref="0xb7997da0"/>
        <function-ref name="isOn" scoped="" ref="0xb7996610"/>
        <function-ref name="set" scoped="" ref="0xb7997900"/>
        <function-ref name="start" scoped="" ref="0xb7996010"/>
        <function-ref name="stop" scoped="" ref="0xb7996210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb799a5b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb799a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb7998d58"/>
        <function-ref name="test" scoped="" ref="0xb7998958"/>
        <function-ref name="get" scoped="" ref="0xb799abf8"/>
        <function-ref name="captured" scoped="" ref="0xb79980b8"/>
        <function-ref name="reset" scoped="" ref="0xb7998358"/>
        <function-ref name="isOn" scoped="" ref="0xb7998b58"/>
        <function-ref name="set" scoped="" ref="0xb799adf8"/>
        <function-ref name="start" scoped="" ref="0xb7998558"/>
        <function-ref name="stop" scoped="" ref="0xb7998758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb7996890" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb7996890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7994b98"/>
        <function-ref name="fired" scoped="" ref="0xb7994398"/>
        <function-ref name="get" scoped="" ref="0xb7996ed8"/>
        <function-ref name="reset" scoped="" ref="0xb7994598"/>
        <function-ref name="isOn" scoped="" ref="0xb7994d98"/>
        <function-ref name="set" scoped="" ref="0xb79940f8"/>
        <function-ref name="start" scoped="" ref="0xb7994798"/>
        <function-ref name="stop" scoped="" ref="0xb7994998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb7993030" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb7993030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7992330"/>
        <function-ref name="fired" scoped="" ref="0xb7993b18"/>
        <function-ref name="get" scoped="" ref="0xb7993678"/>
        <function-ref name="reset" scoped="" ref="0xb7993d18"/>
        <function-ref name="isOn" scoped="" ref="0xb7992530"/>
        <function-ref name="set" scoped="" ref="0xb7993878"/>
        <function-ref name="start" scoped="" ref="0xb7993f18"/>
        <function-ref name="stop" scoped="" ref="0xb7992130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb799db40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb799db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb799b2b8"/>
        <function-ref name="test" scoped="" ref="0xb799cea0"/>
        <function-ref name="get" scoped="" ref="0xb799c200"/>
        <function-ref name="setScale" scoped="" ref="0xb799b4b8"/>
        <function-ref name="getScale" scoped="" ref="0xb799b758"/>
        <function-ref name="reset" scoped="" ref="0xb799c8a0"/>
        <function-ref name="overflow" scoped="" ref="0xb799c6a0"/>
        <function-ref name="isOn" scoped="" ref="0xb799b0b8"/>
        <function-ref name="set" scoped="" ref="0xb799c400"/>
        <function-ref name="start" scoped="" ref="0xb799caa0"/>
        <function-ref name="stop" scoped="" ref="0xb799cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79547c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79547c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7cf1040"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7cf1040"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7954998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb7954ba8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7954ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb794b2d8"/>
        <function-ref name="test" scoped="" ref="0xb7953eb0"/>
        <function-ref name="get" scoped="" ref="0xb7953210"/>
        <function-ref name="setScale" scoped="" ref="0xb794b4d8"/>
        <function-ref name="getScale" scoped="" ref="0xb794b778"/>
        <function-ref name="reset" scoped="" ref="0xb79538b0"/>
        <function-ref name="overflow" scoped="" ref="0xb79536b0"/>
        <function-ref name="isOn" scoped="" ref="0xb794b0d8"/>
        <function-ref name="set" scoped="" ref="0xb7953410"/>
        <function-ref name="start" scoped="" ref="0xb7953ab0"/>
        <function-ref name="stop" scoped="" ref="0xb7953cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7956718" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7956718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TOne" ref="0xb7c86b70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7956e68"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7940288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7940088"/>
        <function-ref name="overflow" scoped="" ref="0xb7940488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb79406f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb79406f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb793feb0"/>
        <function-ref name="test" scoped="" ref="0xb793fab0"/>
        <function-ref name="get" scoped="" ref="0xb7940d38"/>
        <function-ref name="setScale" scoped="" ref="0xb793e0d8"/>
        <function-ref name="getScale" scoped="" ref="0xb793e378"/>
        <function-ref name="reset" scoped="" ref="0xb793f4b0"/>
        <function-ref name="overflow" scoped="" ref="0xb793f2b0"/>
        <function-ref name="isOn" scoped="" ref="0xb793fcb0"/>
        <function-ref name="set" scoped="" ref="0xb793f010"/>
        <function-ref name="start" scoped="" ref="0xb793f6b0"/>
        <function-ref name="stop" scoped="" ref="0xb793f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb792e220" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb792e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb792e970"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb792ed70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb792eb70"/>
        <function-ref name="overflow" scoped="" ref="0xb792d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb792f1a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb792f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb792f8f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb792fcf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb792faf0"/>
        <function-ref name="overflow" scoped="" ref="0xb792fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb792b5c8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb792b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb792bc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb792bee8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb792bee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7925680"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7925a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7925880"/>
        <function-ref name="overflow" scoped="" ref="0xb7925c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb79224c0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb79224c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7922b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb791e8e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb791e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb791b208"/>
        <function-ref name="fired" scoped="" ref="0xb791d600"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb791dba0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb791d9c0"/>
        <function-ref name="getdt" scoped="" ref="0xb791b5c8"/>
        <function-ref name="gett0" scoped="" ref="0xb791b3e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb791d7e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb791ef08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb791dec0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb791d1a0"/>
        <function-ref name="stop" scoped="" ref="0xb791d420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb791b828" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb791b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb791be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb791e248" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb791e248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb791e420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb7914a78" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb7914a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb790e200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb790e600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb790e400"/>
        <function-ref name="overflow" scoped="" ref="0xb790e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7916370" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7916370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7916548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb79151b8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb79151b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7914550"/>
        <function-ref name="fired" scoped="" ref="0xb7915da8"/>
        <function-ref name="startAt" scoped="" ref="0xb7914210"/>
        <function-ref name="isRunning" scoped="" ref="0xb7914010"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7914750"/>
        <function-ref name="start" scoped="" ref="0xb7915908"/>
        <function-ref name="stop" scoped="" ref="0xb7915ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7890270" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7890270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb788e5c8"/>
        <function-ref name="fired" scoped="" ref="0xb7890e60"/>
        <function-ref name="startAt" scoped="" ref="0xb788e288"/>
        <function-ref name="isRunning" scoped="" ref="0xb788e088"/>
        <function-ref name="getAlarm" scoped="" ref="0xb788e7c8"/>
        <function-ref name="start" scoped="" ref="0xb78909c0"/>
        <function-ref name="stop" scoped="" ref="0xb7890c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb790be10" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb790be10"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7cf1040"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7cf1040"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7890010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb788ea80" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb788ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb788d200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb788d600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb788d400"/>
        <function-ref name="overflow" scoped="" ref="0xb788d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb72811c8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb72811c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb72813a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7281480"/>
        <function-ref name="getControlA" scoped="" ref="0xb7281560"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7281640"/>
        <function-ref name="setControlB" scoped="" ref="0xb7281720"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7281800"/>
        <function-ref name="getControlB" scoped="" ref="0xb72818e0"/>
        <function-ref name="setControlA" scoped="" ref="0xb72819c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7287b68" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7287b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7286ee8"/>
        <function-ref name="fired" scoped="" ref="0xb72867a8"/>
        <function-ref name="startAt" scoped="" ref="0xb7286ba8"/>
        <function-ref name="isRunning" scoped="" ref="0xb72869a8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb72850f8"/>
        <function-ref name="start" scoped="" ref="0xb7286308"/>
        <function-ref name="stop" scoped="" ref="0xb72865a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7287730" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7287730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7287908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb72853b0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb72853b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7285b00"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7285f00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7285d00"/>
        <function-ref name="overflow" scoped="" ref="0xb7283128"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb727e290" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb727e290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb727e468"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb727e548"/>
        <function-ref name="controlABusy" scoped="" ref="0xb727e628"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb727e708"/>
        <function-ref name="countBusy" scoped="" ref="0xb727e7e8"/>
        <function-ref name="compareABusy" scoped="" ref="0xb727e8c8"/>
        <function-ref name="getAssr" scoped="" ref="0xb727e9a8"/>
        <function-ref name="setAssr" scoped="" ref="0xb727ea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb7281bb0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7281bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7280eb0"/>
        <function-ref name="fired" scoped="" ref="0xb72806b0"/>
        <function-ref name="get" scoped="" ref="0xb7280210"/>
        <function-ref name="reset" scoped="" ref="0xb72808b0"/>
        <function-ref name="isOn" scoped="" ref="0xb727e0d8"/>
        <function-ref name="set" scoped="" ref="0xb7280410"/>
        <function-ref name="start" scoped="" ref="0xb7280ab0"/>
        <function-ref name="stop" scoped="" ref="0xb7280cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb72833a0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb72833a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7282aa8"/>
        <function-ref name="test" scoped="" ref="0xb72826a8"/>
        <function-ref name="get" scoped="" ref="0xb72839e8"/>
        <function-ref name="setScale" scoped="" ref="0xb7282ca8"/>
        <function-ref name="getScale" scoped="" ref="0xb7281010"/>
        <function-ref name="reset" scoped="" ref="0xb72820a8"/>
        <function-ref name="overflow" scoped="" ref="0xb7283e88"/>
        <function-ref name="isOn" scoped="" ref="0xb72828a8"/>
        <function-ref name="set" scoped="" ref="0xb7283be8"/>
        <function-ref name="start" scoped="" ref="0xb72822a8"/>
        <function-ref name="stop" scoped="" ref="0xb72824a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78c9938" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78c9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb78c9b10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb78c9bf0"/>
        <function-ref name="getControlA" scoped="" ref="0xb78c9cd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78c9db0"/>
        <function-ref name="setControlB" scoped="" ref="0xb78c9e90"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb78c7010"/>
        <function-ref name="getControlB" scoped="" ref="0xb78c70f0"/>
        <function-ref name="setControlA" scoped="" ref="0xb78c71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb78c6ad8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb78c6ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb78c6cb0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb78c6d90"/>
        <function-ref name="controlABusy" scoped="" ref="0xb78c6e70"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb78c5010"/>
        <function-ref name="countBusy" scoped="" ref="0xb78c50f0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb78c51d0"/>
        <function-ref name="getAssr" scoped="" ref="0xb78c52b0"/>
        <function-ref name="setAssr" scoped="" ref="0xb78c5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb78c73e8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb78c73e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78c66f8"/>
        <function-ref name="fired" scoped="" ref="0xb78c7ed0"/>
        <function-ref name="get" scoped="" ref="0xb78c7a30"/>
        <function-ref name="reset" scoped="" ref="0xb78c60f8"/>
        <function-ref name="isOn" scoped="" ref="0xb78c68f8"/>
        <function-ref name="set" scoped="" ref="0xb78c7c30"/>
        <function-ref name="start" scoped="" ref="0xb78c62f8"/>
        <function-ref name="stop" scoped="" ref="0xb78c64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78cbaf0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78cbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78c92b8"/>
        <function-ref name="test" scoped="" ref="0xb78caea0"/>
        <function-ref name="get" scoped="" ref="0xb78ca200"/>
        <function-ref name="setScale" scoped="" ref="0xb78c94b8"/>
        <function-ref name="getScale" scoped="" ref="0xb78c9758"/>
        <function-ref name="reset" scoped="" ref="0xb78ca8a0"/>
        <function-ref name="overflow" scoped="" ref="0xb78ca6a0"/>
        <function-ref name="isOn" scoped="" ref="0xb78c90b8"/>
        <function-ref name="set" scoped="" ref="0xb78ca400"/>
        <function-ref name="start" scoped="" ref="0xb78caaa0"/>
        <function-ref name="stop" scoped="" ref="0xb78caca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78c0bb8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78c0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb78c0d90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb78c0e70"/>
        <function-ref name="getControlA" scoped="" ref="0xb78be010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78be0f0"/>
        <function-ref name="setControlB" scoped="" ref="0xb78be1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb78be2b0"/>
        <function-ref name="getControlB" scoped="" ref="0xb78be390"/>
        <function-ref name="setControlA" scoped="" ref="0xb78be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb78bdd40" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb78bdd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb78bdf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb78bc0b8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb78bc0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb78bc290"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb78bc370"/>
        <function-ref name="controlABusy" scoped="" ref="0xb78bc450"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb78bc530"/>
        <function-ref name="countBusy" scoped="" ref="0xb78bc610"/>
        <function-ref name="compareABusy" scoped="" ref="0xb78bc6f0"/>
        <function-ref name="getAssr" scoped="" ref="0xb78bc7d0"/>
        <function-ref name="setAssr" scoped="" ref="0xb78bc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb78be688" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb78be688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78bd990"/>
        <function-ref name="fired" scoped="" ref="0xb78bd190"/>
        <function-ref name="get" scoped="" ref="0xb78becd0"/>
        <function-ref name="reset" scoped="" ref="0xb78bd390"/>
        <function-ref name="isOn" scoped="" ref="0xb78bdb90"/>
        <function-ref name="set" scoped="" ref="0xb78beed0"/>
        <function-ref name="start" scoped="" ref="0xb78bd590"/>
        <function-ref name="stop" scoped="" ref="0xb78bd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78c2e30" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78c2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78c0538"/>
        <function-ref name="test" scoped="" ref="0xb78c0138"/>
        <function-ref name="get" scoped="" ref="0xb78c1488"/>
        <function-ref name="setScale" scoped="" ref="0xb78c0738"/>
        <function-ref name="getScale" scoped="" ref="0xb78c09d8"/>
        <function-ref name="reset" scoped="" ref="0xb78c1b28"/>
        <function-ref name="overflow" scoped="" ref="0xb78c1928"/>
        <function-ref name="isOn" scoped="" ref="0xb78c0338"/>
        <function-ref name="set" scoped="" ref="0xb78c1688"/>
        <function-ref name="start" scoped="" ref="0xb78c1d28"/>
        <function-ref name="stop" scoped="" ref="0xb78c1f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb7874440" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb7874440"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7874618"/>
        <function-ref name="runTask" scoped="" ref="0xb78746f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb7876ce8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7876ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7874068"/>
        <function-ref name="fired" scoped="" ref="0xb7875918"/>
        <function-ref name="startAt" scoped="" ref="0xb7875d18"/>
        <function-ref name="isRunning" scoped="" ref="0xb7875b18"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7874268"/>
        <function-ref name="start" scoped="" ref="0xb7875478"/>
        <function-ref name="stop" scoped="" ref="0xb7875718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7918d38" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7918d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7876650"/>
        <function-ref name="fired" scoped="" ref="0xb788ba50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7876010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb788be10"/>
        <function-ref name="getdt" scoped="" ref="0xb7876a10"/>
        <function-ref name="gett0" scoped="" ref="0xb7876830"/>
        <function-ref name="isRunning" scoped="" ref="0xb788bc30"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb788b370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7876330"/>
        <function-ref name="startOneShot" scoped="" ref="0xb788b5f0"/>
        <function-ref name="stop" scoped="" ref="0xb788b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb784a010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb784a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb784a1e8"/>
        <function-ref name="runTask" scoped="" ref="0xb784a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb784d0c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb784d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb784ca10"/>
        <function-ref name="fired" scoped="" ref="0xb784ddc8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb784c3d0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb784c1f0"/>
        <function-ref name="getdt" scoped="" ref="0xb784cdd0"/>
        <function-ref name="gett0" scoped="" ref="0xb784cbf0"/>
        <function-ref name="isRunning" scoped="" ref="0xb784c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb784d6e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb784c6f0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb784d968"/>
        <function-ref name="stop" scoped="" ref="0xb784dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7871068" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7871068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb784fa50"/>
        <function-ref name="fired" scoped="" ref="0xb7871db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb784f3f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb784f200"/>
        <function-ref name="getdt" scoped="" ref="0xb784fe30"/>
        <function-ref name="gett0" scoped="" ref="0xb784fc40"/>
        <function-ref name="isRunning" scoped="" ref="0xb784f010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb78716a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb784f720"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7871930"/>
        <function-ref name="stop" scoped="" ref="0xb7871bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb78494d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb78494d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7849b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7849df0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7849df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7848570"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7848970"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7848770"/>
        <function-ref name="overflow" scoped="" ref="0xb7848b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb78426a8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb78426a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7842880"/>
        <function-ref name="wait" scoped="" ref="0xb7842960"/>
        <function-ref name="cancel" scoped="" ref="0xb7842a40"/>
        <function-ref name="isFree" scoped="" ref="0xb7842b20"/>
        <function-ref name="getNow" scoped="" ref="0xb7842c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb7841010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7841010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7cf11d8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7cf11d8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7840350"/>
        <function-ref name="fired" scoped="" ref="0xb7841c00"/>
        <function-ref name="startAt" scoped="" ref="0xb7840010"/>
        <function-ref name="isRunning" scoped="" ref="0xb7841e00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7840550"/>
        <function-ref name="start" scoped="" ref="0xb7841760"/>
        <function-ref name="stop" scoped="" ref="0xb7841a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb783c5b8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb783c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb783c790"/>
        <function-ref name="wait" scoped="" ref="0xb783c870"/>
        <function-ref name="cancel" scoped="" ref="0xb783c950"/>
        <function-ref name="isFree" scoped="" ref="0xb783ca30"/>
        <function-ref name="getNow" scoped="" ref="0xb783cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb783cde0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb783cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7839170"/>
        <function-ref name="fired" scoped="" ref="0xb783aa10"/>
        <function-ref name="startAt" scoped="" ref="0xb783ae10"/>
        <function-ref name="isRunning" scoped="" ref="0xb783ac10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7839370"/>
        <function-ref name="start" scoped="" ref="0xb783a570"/>
        <function-ref name="stop" scoped="" ref="0xb783a810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb7835b00" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb7835b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7835cd8"/>
        <function-ref name="suspend" scoped="" ref="0xb7835db8"/>
        <function-ref name="resume" scoped="" ref="0xb7835e98"/>
        <function-ref name="run" scoped="" ref="0xb7838010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb782a350" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb782a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb782a528"/>
        <function-ref name="suspend" scoped="" ref="0xb782a608"/>
        <function-ref name="resume" scoped="" ref="0xb782a6e8"/>
        <function-ref name="run" scoped="" ref="0xb782a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb781b3f8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb781b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb781b5d0"/>
        <function-ref name="getPayload" scoped="" ref="0xb781b6b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb781b790"/>
        <function-ref name="cancel" scoped="" ref="0xb781b870"/>
        <function-ref name="sendDone" scoped="" ref="0xb781b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb781bac8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb781bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb781bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7822278" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7822278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7822450"/>
        <function-ref name="getPayload" scoped="" ref="0xb7822530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7822610"/>
        <function-ref name="cancel" scoped="" ref="0xb78226f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb78227d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb78211a0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb78211a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7821378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7820a50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7820a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0xb7820c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7822ba8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7822ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7822d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb781bdf0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb781bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7820010"/>
        <function-ref name="source" scoped="" ref="0xb78200f0"/>
        <function-ref name="address" scoped="" ref="0xb78201d0"/>
        <function-ref name="destination" scoped="" ref="0xb78202b0"/>
        <function-ref name="setSource" scoped="" ref="0xb7820390"/>
        <function-ref name="setDestination" scoped="" ref="0xb7820470"/>
        <function-ref name="type" scoped="" ref="0xb7820550"/>
        <function-ref name="setType" scoped="" ref="0xb7820630"/>
        <function-ref name="isForMe" scoped="" ref="0xb7820710"/>
        <function-ref name="setGroup" scoped="" ref="0xb78207f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb78208d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb780a140" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb780a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb780a318"/>
        <function-ref name="stopDone" scoped="" ref="0xb780a3f8"/>
        <function-ref name="start" scoped="" ref="0xb780a4d8"/>
        <function-ref name="stop" scoped="" ref="0xb780a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb78097c8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb78097c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb78099a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7809a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7809b60"/>
        <function-ref name="cancel" scoped="" ref="0xb7809c40"/>
        <function-ref name="sendDone" scoped="" ref="0xb7809d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7809e98" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7809e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78080c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb780a700" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb780a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb780a8d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb780a9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb780aa98"/>
        <function-ref name="cancel" scoped="" ref="0xb780ab78"/>
        <function-ref name="sendDone" scoped="" ref="0xb780ac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb78091e0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb78091e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb78093b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7809498"/>
        <function-ref name="start" scoped="" ref="0xb7809578"/>
        <function-ref name="stop" scoped="" ref="0xb7809658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb780ada0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb780ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7809010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb78041d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb78041d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb78043a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7804488"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7804568"/>
        <function-ref name="cancel" scoped="" ref="0xb7804648"/>
        <function-ref name="sendDone" scoped="" ref="0xb7804728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb78048a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb78048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7804a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7805190" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7805190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7805368"/>
        <function-ref name="getPayload" scoped="" ref="0xb7805448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7805528"/>
        <function-ref name="cancel" scoped="" ref="0xb7805608"/>
        <function-ref name="sendDone" scoped="" ref="0xb78056e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0xb7805e18" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0xb7805e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7804010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7804bc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7804bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7804da0"/>
        <function-ref name="getDSN" scoped="" ref="0xb7804e80"/>
        <function-ref name="setFCF" scoped="" ref="0xb7803010"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb78030f0"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb78031d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb78032b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7803390"/>
        <function-ref name="setDSN" scoped="" ref="0xb7803470"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7803550"/>
        <function-ref name="getHeader" scoped="" ref="0xb7803630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7803710"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb78037f0"/>
        <function-ref name="setType" scoped="" ref="0xb78038d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7803a30"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7803b10"/>
        <function-ref name="setLength" scoped="" ref="0xb7803bf0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7803cd0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7803db0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7803e90"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7802010"/>
        <function-ref name="setFramePending" scoped="" ref="0xb78020f0"/>
        <function-ref name="getLength" scoped="" ref="0xb78021d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb78022b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7802390"/>
        <function-ref name="getFCF" scoped="" ref="0xb7802470"/>
        <function-ref name="getType" scoped="" ref="0xb7802650"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7802730"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7802810"/>
        <function-ref name="getFramePending" scoped="" ref="0xb78028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7805830" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7805830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7805a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb77f7a90" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb77f7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77f7c68"/>
        <function-ref name="stopDone" scoped="" ref="0xb77f7d48"/>
        <function-ref name="start" scoped="" ref="0xb77f7e28"/>
        <function-ref name="stop" scoped="" ref="0xb77f7f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb77d7548" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb77d7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb77d7720"/>
        <function-ref name="request" scoped="" ref="0xb77d7800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xb77d5410" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xb77d5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77d55e8"/>
        <function-ref name="ready" scoped="" ref="0xb77d56c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb77d57a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb77d4828" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb77d4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77d4a00"/>
        <function-ref name="getPayload" scoped="" ref="0xb77d4ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77d4bc0"/>
        <function-ref name="cancel" scoped="" ref="0xb77d4ca0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77d4d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb77d4ee0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb77d4ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77d30e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb77e35b0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb77e35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77e3788"/>
        <function-ref name="turnOn" scoped="" ref="0xb77e3868"/>
        <function-ref name="setChannel" scoped="" ref="0xb77e3948"/>
        <function-ref name="done" scoped="" ref="0xb77e3a28"/>
        <function-ref name="standby" scoped="" ref="0xb77e3b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb77e4070" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb77e4070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77e4248"/>
        <function-ref name="getPayload" scoped="" ref="0xb77e4328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77e4408"/>
        <function-ref name="cancel" scoped="" ref="0xb77e44e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb77e45c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb77e4a20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb77e4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb77e4bf8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb77e4cd8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb77e4db8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb77e4e98"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb77e3010"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb77e30f0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb77e31d0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb77e32b0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb77e3390"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb77e3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb77d7960" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb77d7960"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb77d7b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb77d7150" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb77d7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77d7328"/>
        <function-ref name="header" scoped="" ref="0xb77d7408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb77d7cc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb77d7cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77d7ea0"/>
        <function-ref name="turnOn" scoped="" ref="0xb77d5010"/>
        <function-ref name="setChannel" scoped="" ref="0xb77d50f0"/>
        <function-ref name="done" scoped="" ref="0xb77d51d0"/>
        <function-ref name="standby" scoped="" ref="0xb77d52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb77d4250" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb77d4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77d4428"/>
        <function-ref name="stopDone" scoped="" ref="0xb77d4508"/>
        <function-ref name="start" scoped="" ref="0xb77d45e8"/>
        <function-ref name="stop" scoped="" ref="0xb77d46c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb77d3240" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb77d3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb77d3418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb77e4708" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb77e4708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77e48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xb77d5908" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xb77d5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77d5ae0"/>
        <function-ref name="header" scoped="" ref="0xb77d5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb77e3c48" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb77e3c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77e3e20"/>
        <function-ref name="ready" scoped="" ref="0xb77e3f00"/>
        <function-ref name="sendDone" scoped="" ref="0xb77d7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb77d5d20" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb77d5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb77d4010"/>
        <function-ref name="request" scoped="" ref="0xb77d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb77e2398" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb77e2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb77e2570"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb77e2650"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb77e2730"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb77e2810"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb77e28f0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb77e29d0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb77e2ab0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb77e2b90"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb77e2c70"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb77e2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb77cf7f0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb77cf7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77cf9c8"/>
        <function-ref name="stopDone" scoped="" ref="0xb77cfaa8"/>
        <function-ref name="start" scoped="" ref="0xb77cfb88"/>
        <function-ref name="stop" scoped="" ref="0xb77cfc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb77ce850" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb77ce850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77cea28"/>
        <function-ref name="turnOn" scoped="" ref="0xb77ceb08"/>
        <function-ref name="setChannel" scoped="" ref="0xb77cebe8"/>
        <function-ref name="done" scoped="" ref="0xb77cecc8"/>
        <function-ref name="standby" scoped="" ref="0xb77ceda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb77cfdb0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb77cfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77ce010"/>
        <function-ref name="getPayload" scoped="" ref="0xb77ce0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77ce1d0"/>
        <function-ref name="cancel" scoped="" ref="0xb77ce2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77ce390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb77cd7f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb77cd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb77cd9c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb77cdaa8"/>
        <function-ref name="getPayload" scoped="" ref="0xb77cdb88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77cdc68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb77cdd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb77cd3f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb77cd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77cd5c8"/>
        <function-ref name="header" scoped="" ref="0xb77cd6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb77ce4d8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb77ce4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77ce6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb77ceef8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb77ceef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77cd0e0"/>
        <function-ref name="ready" scoped="" ref="0xb77cd1c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77cd2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb77c9970" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb77c9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77c9b48"/>
        <function-ref name="stopDone" scoped="" ref="0xb77c9c28"/>
        <function-ref name="start" scoped="" ref="0xb77c9d08"/>
        <function-ref name="stop" scoped="" ref="0xb77c9de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb77c8010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb77c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb77c81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb77c8d48" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb77c8d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77c8f20"/>
        <function-ref name="turnOn" scoped="" ref="0xb77c7018"/>
        <function-ref name="setChannel" scoped="" ref="0xb77c70f8"/>
        <function-ref name="done" scoped="" ref="0xb77c71d8"/>
        <function-ref name="standby" scoped="" ref="0xb77c72b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb77c8330" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb77c8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77c8508"/>
        <function-ref name="getPayload" scoped="" ref="0xb77c85e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77c86c8"/>
        <function-ref name="cancel" scoped="" ref="0xb77c87a8"/>
        <function-ref name="sendDone" scoped="" ref="0xb77c8888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb77c62e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb77c62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb77c64c0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb77c65a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb77c6680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77c6760"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb77c6840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb77c7eb0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb77c7eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77c60c0"/>
        <function-ref name="header" scoped="" ref="0xb77c61a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb77c13c8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb77c13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77c15a0"/>
        <function-ref name="runTask" scoped="" ref="0xb77c1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb77c89d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb77c89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77c8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb77bc010" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb77bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77bc1e8"/>
        <function-ref name="runTask" scoped="" ref="0xb77bc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb77acaa0" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb77acaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77acc78"/>
        <function-ref name="runTask" scoped="" ref="0xb77acd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb77c79c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb77c79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77c7ba0"/>
        <function-ref name="ready" scoped="" ref="0xb77c7c80"/>
        <function-ref name="sendDone" scoped="" ref="0xb77c7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb77c7400" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb77c7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb77c75d8"/>
        <function-ref name="suspend" scoped="" ref="0xb77c76b8"/>
        <function-ref name="resume" scoped="" ref="0xb77c7798"/>
        <function-ref name="run" scoped="" ref="0xb77c7878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb77a0488" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb77a0488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77a0660"/>
        <function-ref name="getPayload" scoped="" ref="0xb77a0740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77a0820"/>
        <function-ref name="cancel" scoped="" ref="0xb77a0900"/>
        <function-ref name="sendDone" scoped="" ref="0xb77a09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb77a0b60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb77a0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77a0d38"/>
        <function-ref name="header" scoped="" ref="0xb77a0e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb77a18e0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb77a18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77a1ab8"/>
        <function-ref name="getPayload" scoped="" ref="0xb77a1b98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77a1c78"/>
        <function-ref name="cancel" scoped="" ref="0xb77a1d58"/>
        <function-ref name="sendDone" scoped="" ref="0xb77a1e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb779e010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb779e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb779e1e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb779e2c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb779e3a8"/>
        <function-ref name="getSender" scoped="" ref="0xb779e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb77a0010" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb77a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77a01e8"/>
        <function-ref name="header" scoped="" ref="0xb77a02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb779ae50" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb779ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7799050"/>
        <function-ref name="getPayload" scoped="" ref="0xb7799130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7799210"/>
        <function-ref name="cancel" scoped="" ref="0xb77992f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77993d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7799550" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7799550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7799728"/>
        <function-ref name="header" scoped="" ref="0xb7799808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb7791c88" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7791c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7791e60"/>
        <function-ref name="clearAll" scoped="" ref="0xb7796010"/>
        <function-ref name="get" scoped="" ref="0xb77960f0"/>
        <function-ref name="set" scoped="" ref="0xb77961d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb779a010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb779a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb779a1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb779a2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb779a3a8"/>
        <function-ref name="cancel" scoped="" ref="0xb779a488"/>
        <function-ref name="sendDone" scoped="" ref="0xb779a568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb7797010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb7797010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb77971e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb77972c8"/>
        <function-ref name="getNode" scoped="" ref="0xb77973a8"/>
        <function-ref name="evicted" scoped="" ref="0xb7797488"/>
        <function-ref name="getIndex" scoped="" ref="0xb7797568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb779a6b8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb779a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb779a890"/>
        <function-ref name="header" scoped="" ref="0xb779a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb779aab8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb779aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb779ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb7799958" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb7799958"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb7799b30"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb7799c10"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb7799cf0"/>
        <function-ref name="getSender" scoped="" ref="0xb7799dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb7784010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb7784010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb77841e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb77842c8"/>
        <function-ref name="getNode" scoped="" ref="0xb77843a8"/>
        <function-ref name="evicted" scoped="" ref="0xb7784488"/>
        <function-ref name="getIndex" scoped="" ref="0xb7784568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb77807b8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb77807b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7780990"/>
        <function-ref name="clearAll" scoped="" ref="0xb7780a70"/>
        <function-ref name="get" scoped="" ref="0xb7780b50"/>
        <function-ref name="set" scoped="" ref="0xb7780c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb7781e38" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb7781e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb7780050"/>
        <function-ref name="insertNode" scoped="" ref="0xb7780130"/>
        <function-ref name="getNode" scoped="" ref="0xb7780210"/>
        <function-ref name="evicted" scoped="" ref="0xb77802f0"/>
        <function-ref name="getIndex" scoped="" ref="0xb77803d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7781b10" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7781b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7781ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb7785010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7785010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb77851e8"/>
        <function-ref name="clearAll" scoped="" ref="0xb77852c8"/>
        <function-ref name="get" scoped="" ref="0xb77853a8"/>
        <function-ref name="set" scoped="" ref="0xb7785488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7767a10" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7767a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7767be8"/>
        <function-ref name="ready" scoped="" ref="0xb7767cc8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7767da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7767f28" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7767f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7766110"/>
        <function-ref name="header" scoped="" ref="0xb77661f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb77672f0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb77672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77674c8"/>
        <function-ref name="turnOn" scoped="" ref="0xb77675a8"/>
        <function-ref name="setChannel" scoped="" ref="0xb7767688"/>
        <function-ref name="done" scoped="" ref="0xb7767768"/>
        <function-ref name="standby" scoped="" ref="0xb7767848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb7766370" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb7766370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb7766548"/>
        <function-ref name="turnOn" scoped="" ref="0xb7766628"/>
        <function-ref name="setChannel" scoped="" ref="0xb7766708"/>
        <function-ref name="done" scoped="" ref="0xb77667e8"/>
        <function-ref name="standby" scoped="" ref="0xb77668c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7766a48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7766a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb7765390"/>
        <function-ref name="channelError" scoped="" ref="0xb7766d00"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb7766de0"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb7766ec0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb7765010"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb77650f0"/>
        <function-ref name="timerTick" scoped="" ref="0xb77651d0"/>
        <function-ref name="getSender" scoped="" ref="0xb77652b0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb7766c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb77a2eb8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb77a2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77670c0"/>
        <function-ref name="header" scoped="" ref="0xb77671a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb77a29d0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb77a29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77a2ba8"/>
        <function-ref name="ready" scoped="" ref="0xb77a2c88"/>
        <function-ref name="sendDone" scoped="" ref="0xb77a2d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7760508" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7760508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77606e0"/>
        <function-ref name="ready" scoped="" ref="0xb77607c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77608a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0xb77619f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb77619f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb7760390"/>
        <function-ref name="channelError" scoped="" ref="0xb7761ca8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb7761d88"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb7761e68"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb7760010"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb77600f0"/>
        <function-ref name="timerTick" scoped="" ref="0xb77601d0"/>
        <function-ref name="getSender" scoped="" ref="0xb77602b0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb7761bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7760a20" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7760a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7760bf8"/>
        <function-ref name="header" scoped="" ref="0xb7760cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb77612f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb77612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77614c8"/>
        <function-ref name="turnOn" scoped="" ref="0xb77615a8"/>
        <function-ref name="setChannel" scoped="" ref="0xb7761688"/>
        <function-ref name="done" scoped="" ref="0xb7761768"/>
        <function-ref name="standby" scoped="" ref="0xb7761848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb7760e58" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb7760e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb775f050"/>
        <function-ref name="turnOn" scoped="" ref="0xb775f130"/>
        <function-ref name="setChannel" scoped="" ref="0xb775f210"/>
        <function-ref name="done" scoped="" ref="0xb775f2f0"/>
        <function-ref name="standby" scoped="" ref="0xb775f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb775c460" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb775c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb775c638"/>
        <function-ref name="insertNode" scoped="" ref="0xb775c718"/>
        <function-ref name="getNode" scoped="" ref="0xb775c7f8"/>
        <function-ref name="evicted" scoped="" ref="0xb775c8d8"/>
        <function-ref name="getIndex" scoped="" ref="0xb775c9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7762ec0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7762ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77610c0"/>
        <function-ref name="header" scoped="" ref="0xb77611a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb775cb10" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb775cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb775cce8"/>
        <function-ref name="clearAll" scoped="" ref="0xb775cdc8"/>
        <function-ref name="get" scoped="" ref="0xb775cea8"/>
        <function-ref name="set" scoped="" ref="0xb775b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb775b158" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb775b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb775b330"/>
        <function-ref name="suspend" scoped="" ref="0xb775b410"/>
        <function-ref name="resume" scoped="" ref="0xb775b4f0"/>
        <function-ref name="run" scoped="" ref="0xb775b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb77629d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb77629d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7762bb0"/>
        <function-ref name="ready" scoped="" ref="0xb7762c90"/>
        <function-ref name="sendDone" scoped="" ref="0xb7762d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0xb77457b0" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0xb77457b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7745988"/>
        <function-ref name="runTask" scoped="" ref="0xb7745a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb775f5d8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb775f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb775eed0"/>
        <function-ref name="fired" scoped="" ref="0xb775e2f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb775e890"/>
        <function-ref name="isOneShot" scoped="" ref="0xb775e6b0"/>
        <function-ref name="getdt" scoped="" ref="0xb775c2b8"/>
        <function-ref name="gett0" scoped="" ref="0xb775c0d8"/>
        <function-ref name="isRunning" scoped="" ref="0xb775e4d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb775fc00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb775ebb0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb775fe80"/>
        <function-ref name="stop" scoped="" ref="0xb775e110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7742350" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7742350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb773bc48"/>
        <function-ref name="fired" scoped="" ref="0xb773b068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb773b608"/>
        <function-ref name="isOneShot" scoped="" ref="0xb773b428"/>
        <function-ref name="getdt" scoped="" ref="0xb7735048"/>
        <function-ref name="gett0" scoped="" ref="0xb773be28"/>
        <function-ref name="isRunning" scoped="" ref="0xb773b248"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7742978"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb773b928"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7742bf8"/>
        <function-ref name="stop" scoped="" ref="0xb7742e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb773abf8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb773abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7737528"/>
        <function-ref name="fired" scoped="" ref="0xb7739938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7739ed8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7739cf8"/>
        <function-ref name="getdt" scoped="" ref="0xb77378e8"/>
        <function-ref name="gett0" scoped="" ref="0xb7737708"/>
        <function-ref name="isRunning" scoped="" ref="0xb7739b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7739258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7737208"/>
        <function-ref name="startOneShot" scoped="" ref="0xb77394d8"/>
        <function-ref name="stop" scoped="" ref="0xb7739758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb7735d88" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7735d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7734010"/>
        <function-ref name="clearAll" scoped="" ref="0xb77340f0"/>
        <function-ref name="get" scoped="" ref="0xb77341d0"/>
        <function-ref name="set" scoped="" ref="0xb77342b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb772f9d8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb772f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb772fbb0"/>
        <function-ref name="ready" scoped="" ref="0xb772fc90"/>
        <function-ref name="sendDone" scoped="" ref="0xb772fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb772fef0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb772fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb772e0e0"/>
        <function-ref name="header" scoped="" ref="0xb772e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb772e340" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb772e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb772e518"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb772e5f8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb772e6d8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb772e7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb772f558" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb772f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb772f730"/>
        <function-ref name="header" scoped="" ref="0xb772f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb772f070" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb772f070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb772f248"/>
        <function-ref name="ready" scoped="" ref="0xb772f328"/>
        <function-ref name="sendDone" scoped="" ref="0xb772f408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb772ad40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb772ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb772af18"/>
        <function-ref name="ready" scoped="" ref="0xb7729010"/>
        <function-ref name="sendDone" scoped="" ref="0xb77290f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7729270" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7729270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7729448"/>
        <function-ref name="header" scoped="" ref="0xb7729528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb7729678" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb7729678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7729850"/>
        <function-ref name="wait" scoped="" ref="0xb7729930"/>
        <function-ref name="cancel" scoped="" ref="0xb7729a10"/>
        <function-ref name="isFree" scoped="" ref="0xb7729af0"/>
        <function-ref name="getNow" scoped="" ref="0xb7729bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb77252a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb77252a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7725478"/>
        <function-ref name="rand32" scoped="" ref="0xb7725558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb77256d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb77256d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb77258b0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb7725990"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb7725a70"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb7725b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb772a8c0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb772a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb772aa98"/>
        <function-ref name="header" scoped="" ref="0xb772ab78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb772a3d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb772a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb772a5b0"/>
        <function-ref name="ready" scoped="" ref="0xb772a690"/>
        <function-ref name="sendDone" scoped="" ref="0xb772a770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb7726e88" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb7726e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7723070"/>
        <function-ref name="runTask" scoped="" ref="0xb7723150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb770fca8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb770fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb770fe80"/>
        <function-ref name="rand32" scoped="" ref="0xb7712010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb770f420" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb770f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb770fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7713368" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7713368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7713540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb770c010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb770c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb770c1e8"/>
        <function-ref name="rand32" scoped="" ref="0xb770c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb770d720" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb770d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb770dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb770d308" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb770d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb770d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7705490" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7705490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7705668"/>
        <function-ref name="ready" scoped="" ref="0xb7705748"/>
        <function-ref name="sendDone" scoped="" ref="0xb7705828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb77059a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb77059a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7705b80"/>
        <function-ref name="header" scoped="" ref="0xb7705c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7705de0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7705de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb7704010"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb77040f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb77041d0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb77042b0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb7704390"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb7704470"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb7704550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7704630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7705010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7705010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77051e8"/>
        <function-ref name="header" scoped="" ref="0xb77052c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7730b10" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7730b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7730ce8"/>
        <function-ref name="ready" scoped="" ref="0xb7730dc8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7730ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7700b70" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7700b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7700d48"/>
        <function-ref name="ready" scoped="" ref="0xb7700e28"/>
        <function-ref name="sendDone" scoped="" ref="0xb7700f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76ff0a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76ff0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76ff278"/>
        <function-ref name="header" scoped="" ref="0xb76ff358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb76ff4a8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb76ff4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76ff680"/>
        <function-ref name="wait" scoped="" ref="0xb76ff760"/>
        <function-ref name="cancel" scoped="" ref="0xb76ff840"/>
        <function-ref name="isFree" scoped="" ref="0xb76ff920"/>
        <function-ref name="getNow" scoped="" ref="0xb76ffa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb77006f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb77006f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77008c8"/>
        <function-ref name="header" scoped="" ref="0xb77009a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0xb76ffb58" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb76ffb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb76ffd30"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb76ffe10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb76ffef0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb76fe010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb76fe0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb76fe1d0"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb76fe2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb76fe390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7700208" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7700208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77003e0"/>
        <function-ref name="ready" scoped="" ref="0xb77004c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77005a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb770ec88" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb770ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb770ee60"/>
        <function-ref name="stopDone" scoped="" ref="0xb7702010"/>
        <function-ref name="start" scoped="" ref="0xb77020f0"/>
        <function-ref name="stop" scoped="" ref="0xb77021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb76ef7d8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb76ef7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb76ef9b0"/>
        <function-ref name="request" scoped="" ref="0xb76efa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xb76ee6c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xb76ee6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76ee8a0"/>
        <function-ref name="ready" scoped="" ref="0xb76ee980"/>
        <function-ref name="sendDone" scoped="" ref="0xb76eea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76eda80" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76eda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76edc58"/>
        <function-ref name="getPayload" scoped="" ref="0xb76edd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76ede18"/>
        <function-ref name="cancel" scoped="" ref="0xb76edef8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76ec010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76ec170" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76ec170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76ec348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb76f1850" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76f1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76f1a28"/>
        <function-ref name="turnOn" scoped="" ref="0xb76f1b08"/>
        <function-ref name="setChannel" scoped="" ref="0xb76f1be8"/>
        <function-ref name="done" scoped="" ref="0xb76f1cc8"/>
        <function-ref name="standby" scoped="" ref="0xb76f1da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7702310" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7702310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77024e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb77025c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77026a8"/>
        <function-ref name="cancel" scoped="" ref="0xb7702788"/>
        <function-ref name="sendDone" scoped="" ref="0xb7702868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7702cc0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7702cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7702e98"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb76f1010"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb76f10f0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb76f11d0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb76f12b0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb76f1390"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb76f1470"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb76f1550"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb76f1630"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb76f1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb76efbf0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb76efbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb76efdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76ef3e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76ef5b8"/>
        <function-ref name="header" scoped="" ref="0xb76ef698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb76ee010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb76ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76ee1e8"/>
        <function-ref name="turnOn" scoped="" ref="0xb76ee2c8"/>
        <function-ref name="setChannel" scoped="" ref="0xb76ee3a8"/>
        <function-ref name="done" scoped="" ref="0xb76ee488"/>
        <function-ref name="standby" scoped="" ref="0xb76ee568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb76ed4a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb76ed4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb76ed680"/>
        <function-ref name="stopDone" scoped="" ref="0xb76ed760"/>
        <function-ref name="start" scoped="" ref="0xb76ed840"/>
        <function-ref name="stop" scoped="" ref="0xb76ed920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb76ec4a8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb76ec4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb76ec680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb77029a8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb77029a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7702b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xb76eebc0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xb76eebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76eed98"/>
        <function-ref name="header" scoped="" ref="0xb76eee78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb76f1ee8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76f1ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76ef0e0"/>
        <function-ref name="ready" scoped="" ref="0xb76ef1c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb76ef2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb76ed010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb76ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb76ed268"/>
        <function-ref name="request" scoped="" ref="0xb76ed348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb76e6010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb76e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb76e61e8"/>
        <function-ref name="request" scoped="" ref="0xb76e62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb76e7010" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76e71e8"/>
        <function-ref name="turnOn" scoped="" ref="0xb76e72c8"/>
        <function-ref name="setChannel" scoped="" ref="0xb76e73a8"/>
        <function-ref name="done" scoped="" ref="0xb76e7488"/>
        <function-ref name="standby" scoped="" ref="0xb76e7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76e7ba0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76e7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76e7d78"/>
        <function-ref name="header" scoped="" ref="0xb76e7e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb76e76b8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76e76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76e7890"/>
        <function-ref name="ready" scoped="" ref="0xb76e7970"/>
        <function-ref name="sendDone" scoped="" ref="0xb76e7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0xb76e6448" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb76e6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb76e6620"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb76e6b60"/>
        <function-ref name="getPayload" scoped="" ref="0xb76e67e0"/>
        <function-ref name="setLength" scoped="" ref="0xb76e68c0"/>
        <function-ref name="getLength" scoped="" ref="0xb76e69a0"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb76e6a80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb76e6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb76df010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb76df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb76df1e8"/>
        <function-ref name="request" scoped="" ref="0xb76df2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb76d05b8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb76d05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb76d0d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0xb76ce540" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb76ce540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76cd118"/>
        <function-ref name="get" scoped="" ref="0xb76cee48"/>
        <function-ref name="isSet" scoped="" ref="0xb76ceb88"/>
        <function-ref name="set" scoped="" ref="0xb76cd3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb76e1ce8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb76e1ce8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7cf11d8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7cf11d8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76e1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb76cba98" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb76cba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb76ca4c0"/>
        <function-ref name="clear" scoped="" ref="0xb76ca780"/>
        <function-ref name="isValid" scoped="" ref="0xb76ca200"/>
        <function-ref name="set" scoped="" ref="0xb76caa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0xb76d7390" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb76d7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb76d7568"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb76d7648"/>
        <function-ref name="spiWrite" scoped="" ref="0xb76d7728"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb76d7808"/>
        <function-ref name="crcByte" scoped="" ref="0xb76d78e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb76e0040" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76e0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76e0218"/>
        <function-ref name="turnOn" scoped="" ref="0xb76e02f8"/>
        <function-ref name="setChannel" scoped="" ref="0xb76e03d8"/>
        <function-ref name="done" scoped="" ref="0xb76e04b8"/>
        <function-ref name="standby" scoped="" ref="0xb76e0598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb76dd428" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb76dd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76dd600"/>
        <function-ref name="isInput" scoped="" ref="0xb76dd6e0"/>
        <function-ref name="toggle" scoped="" ref="0xb76dd7c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb76dd8a0"/>
        <function-ref name="get" scoped="" ref="0xb76dd980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76dda60"/>
        <function-ref name="set" scoped="" ref="0xb76ddb40"/>
        <function-ref name="clr" scoped="" ref="0xb76ddc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0xb76d22c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb76d22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76d2e88"/>
        <function-ref name="get" scoped="" ref="0xb76d2bc8"/>
        <function-ref name="isSet" scoped="" ref="0xb76d2908"/>
        <function-ref name="set" scoped="" ref="0xb76ce170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb76cade0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb76cade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb76c8468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb76db7e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb76db7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb76db9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb76d7a60" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb76d7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76d7c38"/>
        <function-ref name="isInput" scoped="" ref="0xb76d7d18"/>
        <function-ref name="toggle" scoped="" ref="0xb76d7df8"/>
        <function-ref name="isOutput" scoped="" ref="0xb76d7ed8"/>
        <function-ref name="get" scoped="" ref="0xb76dd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76dd0f0"/>
        <function-ref name="set" scoped="" ref="0xb76dd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb76dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76e0bd0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76e0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76e0da8"/>
        <function-ref name="header" scoped="" ref="0xb76e0e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb76c7460" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb76c7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76c7638"/>
        <function-ref name="wait" scoped="" ref="0xb76c7718"/>
        <function-ref name="cancel" scoped="" ref="0xb76c77f8"/>
        <function-ref name="isFree" scoped="" ref="0xb76c78d8"/>
        <function-ref name="getNow" scoped="" ref="0xb76c79b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb76cd7b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb76cd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76cb398"/>
        <function-ref name="get" scoped="" ref="0xb76cb0d8"/>
        <function-ref name="isSet" scoped="" ref="0xb76cddf8"/>
        <function-ref name="set" scoped="" ref="0xb76cb658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb76e1878" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb76e1878"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7cf11d8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7cf11d8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76e1a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb76dfe08" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb76dfe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb76de010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76de0f0"/>
        <function-ref name="request" scoped="" ref="0xb76de1d0"/>
        <function-ref name="granted" scoped="" ref="0xb76de2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb76de390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb76df490" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb76df490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76df668"/>
        <function-ref name="isInput" scoped="" ref="0xb76df748"/>
        <function-ref name="toggle" scoped="" ref="0xb76df828"/>
        <function-ref name="isOutput" scoped="" ref="0xb76df908"/>
        <function-ref name="get" scoped="" ref="0xb76df9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76dfac8"/>
        <function-ref name="set" scoped="" ref="0xb76dfba8"/>
        <function-ref name="clr" scoped="" ref="0xb76dfc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb76e06e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76e06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76e08c0"/>
        <function-ref name="ready" scoped="" ref="0xb76e09a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb76e0a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb76d6010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb76d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb76d6268"/>
        <function-ref name="disable" scoped="" ref="0xb76d6348"/>
        <function-ref name="captured" scoped="" ref="0xb76d6428"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb76d6508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0xb76d5030" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb76d5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76d5bf8"/>
        <function-ref name="get" scoped="" ref="0xb76d5938"/>
        <function-ref name="isSet" scoped="" ref="0xb76d5678"/>
        <function-ref name="set" scoped="" ref="0xb76d5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb76c8e70" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb76c8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb76c7070"/>
        <function-ref name="suspend" scoped="" ref="0xb76c7150"/>
        <function-ref name="resume" scoped="" ref="0xb76c7230"/>
        <function-ref name="run" scoped="" ref="0xb76c7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0xb76c8610" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb76c8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb76c87e8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb76c8d28"/>
        <function-ref name="getPayload" scoped="" ref="0xb76c89a8"/>
        <function-ref name="setLength" scoped="" ref="0xb76c8a88"/>
        <function-ref name="getLength" scoped="" ref="0xb76c8b68"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb76c8c48"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb76c88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb767fe18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb767fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb767d010"/>
        <function-ref name="isInput" scoped="" ref="0xb767d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb767d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb767d2b0"/>
        <function-ref name="get" scoped="" ref="0xb767d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb767d470"/>
        <function-ref name="set" scoped="" ref="0xb767d550"/>
        <function-ref name="clr" scoped="" ref="0xb767d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0xb767b5d0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb767b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb767b7a8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb767b888"/>
        <function-ref name="spiWrite" scoped="" ref="0xb767b968"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb767ba48"/>
        <function-ref name="crcByte" scoped="" ref="0xb767bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb767f158" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb767f158"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb767f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb767f4a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb767f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb767f680"/>
        <function-ref name="isInput" scoped="" ref="0xb767f760"/>
        <function-ref name="toggle" scoped="" ref="0xb767f840"/>
        <function-ref name="isOutput" scoped="" ref="0xb767f920"/>
        <function-ref name="get" scoped="" ref="0xb767fa00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb767fae0"/>
        <function-ref name="set" scoped="" ref="0xb767fbc0"/>
        <function-ref name="clr" scoped="" ref="0xb767fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb767dec8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb767dec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3580"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb767b228"/>
        <function-ref name="fired" scoped="" ref="0xb767cac8"/>
        <function-ref name="startAt" scoped="" ref="0xb767cec8"/>
        <function-ref name="isRunning" scoped="" ref="0xb767ccc8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb767b428"/>
        <function-ref name="start" scoped="" ref="0xb767c628"/>
        <function-ref name="stop" scoped="" ref="0xb767c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb76809e0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb76809e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7680bb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7680c98"/>
        <function-ref name="request" scoped="" ref="0xb7680d78"/>
        <function-ref name="granted" scoped="" ref="0xb7680e58"/>
        <function-ref name="isOwner" scoped="" ref="0xb767f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb7680068" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb7680068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7680240"/>
        <function-ref name="isInput" scoped="" ref="0xb7680320"/>
        <function-ref name="toggle" scoped="" ref="0xb7680400"/>
        <function-ref name="isOutput" scoped="" ref="0xb76804e0"/>
        <function-ref name="get" scoped="" ref="0xb76805c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76806a0"/>
        <function-ref name="set" scoped="" ref="0xb7680780"/>
        <function-ref name="clr" scoped="" ref="0xb7680860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb767d7a8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb767d7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb767d980"/>
        <function-ref name="disable" scoped="" ref="0xb767da60"/>
        <function-ref name="captured" scoped="" ref="0xb767db40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb767dc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb765fb20" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb765fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb765fcf8"/>
        <function-ref name="isInput" scoped="" ref="0xb765fdd8"/>
        <function-ref name="toggle" scoped="" ref="0xb765feb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb765e010"/>
        <function-ref name="get" scoped="" ref="0xb765e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb765e1d0"/>
        <function-ref name="set" scoped="" ref="0xb765e2b0"/>
        <function-ref name="clr" scoped="" ref="0xb765e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0xb7661928" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb7661928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb7661b00"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb7661be0"/>
        <function-ref name="spiWrite" scoped="" ref="0xb7661cc0"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb7661da0"/>
        <function-ref name="crcByte" scoped="" ref="0xb7661e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb7660108" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7660108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb765f8a8"/>
        <function-ref name="test" scoped="" ref="0xb765f4a8"/>
        <function-ref name="get" scoped="" ref="0xb7660750"/>
        <function-ref name="captured" scoped="" ref="0xb7660bf0"/>
        <function-ref name="reset" scoped="" ref="0xb7660e90"/>
        <function-ref name="isOn" scoped="" ref="0xb765f6a8"/>
        <function-ref name="set" scoped="" ref="0xb7660950"/>
        <function-ref name="start" scoped="" ref="0xb765f0a8"/>
        <function-ref name="stop" scoped="" ref="0xb765f2a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb765e508" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb765e508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb765e6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb765e7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb765e8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb765e980"/>
        <function-ref name="get" scoped="" ref="0xb765ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb765eb40"/>
        <function-ref name="set" scoped="" ref="0xb765ec20"/>
        <function-ref name="clr" scoped="" ref="0xb765ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7661600" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7661600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76617d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb7661010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb7661010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb76611e8"/>
        <function-ref name="disable" scoped="" ref="0xb76612c8"/>
        <function-ref name="captured" scoped="" ref="0xb76613a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb7661488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb76494f0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb76494f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76496c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76497a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb764e9a8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb764e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb764eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb764e668" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb764e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb764e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7649ba8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7649ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7649d80"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7649e60"/>
        <function-ref name="request" scoped="" ref="0xb764c010"/>
        <function-ref name="granted" scoped="" ref="0xb764c0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb764c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb762c2b8" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb762c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb762c490"/>
        <function-ref name="runTask" scoped="" ref="0xb762c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb7647c98" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb7647c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7647e70"/>
        <function-ref name="sendDone" scoped="" ref="0xb7645010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xb7643880" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xb7643880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7643a58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7643b38"/>
        <function-ref name="request" scoped="" ref="0xb7643c18"/>
        <function-ref name="granted" scoped="" ref="0xb7643cf8"/>
        <function-ref name="isOwner" scoped="" ref="0xb7643dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb7647970" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb7647970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb7647b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7647650" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7647650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7647828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb763ad10" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb763ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb763aee8"/>
        <function-ref name="sleep" scoped="" ref="0xb7643390"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb76440f0"/>
        <function-ref name="dataReady" scoped="" ref="0xb7643470"/>
        <function-ref name="initMaster" scoped="" ref="0xb76442b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb7644390"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb7644470"/>
        <function-ref name="read" scoped="" ref="0xb7644550"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb7644630"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb7644710"/>
        <function-ref name="setClock" scoped="" ref="0xb76447f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb76448d0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb76449b0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7644b10"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb7644bf0"/>
        <function-ref name="write" scoped="" ref="0xb7644cd0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb7644db0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb7644e90"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb7643010"/>
        <function-ref name="getClock" scoped="" ref="0xb76430f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb76431d0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb7644010"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb76441d0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb76432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb76453f0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb76453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb76455c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76456a8"/>
        <function-ref name="request" scoped="" ref="0xb7645788"/>
        <function-ref name="granted" scoped="" ref="0xb7645868"/>
        <function-ref name="isOwner" scoped="" ref="0xb7645948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb7636b08" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7636b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7636ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb7636700" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb7636700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb76368d8"/>
        <function-ref name="userId" scoped="" ref="0xb76369b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb7616488" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb7616488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb7616660"/>
        <function-ref name="sleep" scoped="" ref="0xb7615a38"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb7616820"/>
        <function-ref name="dataReady" scoped="" ref="0xb7615b18"/>
        <function-ref name="initMaster" scoped="" ref="0xb76169e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb7616ac0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb7616ba0"/>
        <function-ref name="read" scoped="" ref="0xb7616c80"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb7616d60"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb7616e40"/>
        <function-ref name="setClock" scoped="" ref="0xb7616f20"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb7615018"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb76150f8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7615258"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb7615338"/>
        <function-ref name="write" scoped="" ref="0xb7615418"/>
        <function-ref name="enableSpi" scoped="" ref="0xb76154f8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb76155d8"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb76156b8"/>
        <function-ref name="getClock" scoped="" ref="0xb7615798"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb7615878"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb7616740"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb7616900"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb7615958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb760b7a8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb760b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb760b980"/>
        <function-ref name="isInput" scoped="" ref="0xb760ba60"/>
        <function-ref name="toggle" scoped="" ref="0xb760bb40"/>
        <function-ref name="isOutput" scoped="" ref="0xb760bc20"/>
        <function-ref name="get" scoped="" ref="0xb760bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb760bde0"/>
        <function-ref name="set" scoped="" ref="0xb760bec0"/>
        <function-ref name="clr" scoped="" ref="0xb760a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb760e428" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb760e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb760e600"/>
        <function-ref name="isInput" scoped="" ref="0xb760e6e0"/>
        <function-ref name="toggle" scoped="" ref="0xb760e7c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb760e8a0"/>
        <function-ref name="get" scoped="" ref="0xb760e980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb760ea60"/>
        <function-ref name="set" scoped="" ref="0xb760eb40"/>
        <function-ref name="clr" scoped="" ref="0xb760ec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb760ca80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb760ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb760cc58"/>
        <function-ref name="isInput" scoped="" ref="0xb760cd38"/>
        <function-ref name="toggle" scoped="" ref="0xb760ce18"/>
        <function-ref name="isOutput" scoped="" ref="0xb760cef8"/>
        <function-ref name="get" scoped="" ref="0xb760e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb760e0f0"/>
        <function-ref name="set" scoped="" ref="0xb760e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb760e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb760c620" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb760c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb760c7f8"/>
        <function-ref name="stop" scoped="" ref="0xb760c8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb760a188" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb760a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb760a360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb76114c0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb76114c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb7611698"/>
        <function-ref name="sleep" scoped="" ref="0xb7610b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb7611858"/>
        <function-ref name="dataReady" scoped="" ref="0xb7610bf0"/>
        <function-ref name="initMaster" scoped="" ref="0xb7611a18"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb7611af8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb7611bd8"/>
        <function-ref name="read" scoped="" ref="0xb7611cb8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb7611d98"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb7611e78"/>
        <function-ref name="setClock" scoped="" ref="0xb7610010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb76100f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb76101d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7610330"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb7610410"/>
        <function-ref name="write" scoped="" ref="0xb76104f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb76105d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb76106b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb7610790"/>
        <function-ref name="getClock" scoped="" ref="0xb7610870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb7610950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb7611778"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb7611938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb7610a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb760ed98" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb760ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb760b010"/>
        <function-ref name="isInput" scoped="" ref="0xb760b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb760b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb760b2b0"/>
        <function-ref name="get" scoped="" ref="0xb760b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb760b470"/>
        <function-ref name="set" scoped="" ref="0xb760b550"/>
        <function-ref name="clr" scoped="" ref="0xb760b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb75e5dc0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb75e5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb75b2010"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb75b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb75b26e0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb75b26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb75b28c8"/>
        <function-ref name="configure" scoped="" ref="0xb75b29a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75e5680" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75e5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75e5868"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75e5948"/>
        <function-ref name="request" scoped="" ref="0xb75e5a28"/>
        <function-ref name="granted" scoped="" ref="0xb75e5b08"/>
        <function-ref name="isOwner" scoped="" ref="0xb75e5be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb75b2230" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb75b2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb75b2408"/>
        <function-ref name="userId" scoped="" ref="0xb75b24e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb722ddf8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb722ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb722b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb722b170" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb722b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb722b348"/>
        <function-ref name="isEmpty" scoped="" ref="0xb722b428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb722b508"/>
        <function-ref name="dequeue" scoped="" ref="0xb722b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb722a990" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb722a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb722ab78"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb722ac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb72292f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb72292f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb72294e0"/>
        <function-ref name="configure" scoped="" ref="0xb72295c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb7229720" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb7229720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb72298f8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb72299d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb7229ab8"/>
        <function-ref name="dequeue" scoped="" ref="0xb7229b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb722a250" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb722a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb722a438"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb722a518"/>
        <function-ref name="request" scoped="" ref="0xb722a5f8"/>
        <function-ref name="granted" scoped="" ref="0xb722a6d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb722a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb722ad98" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb722ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb7229010"/>
        <function-ref name="userId" scoped="" ref="0xb72290f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb7229d18" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb7229d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7229ef0"/>
        <function-ref name="runTask" scoped="" ref="0xb7228010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb75ac350" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb75ac350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TOne" ref="0xb7c86b70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb758c750"/>
        <function-ref name="fired" scoped="" ref="0xb758c010"/>
        <function-ref name="startAt" scoped="" ref="0xb758c410"/>
        <function-ref name="isRunning" scoped="" ref="0xb758c210"/>
        <function-ref name="getAlarm" scoped="" ref="0xb758c950"/>
        <function-ref name="start" scoped="" ref="0xb75acaa0"/>
        <function-ref name="stop" scoped="" ref="0xb75acd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb720c758" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb720c758"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7cf2e90"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7cf2e90"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TOne" ref="0xb7c86b70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb720bab0"/>
        <function-ref name="fired" scoped="" ref="0xb720b370"/>
        <function-ref name="startAt" scoped="" ref="0xb720b770"/>
        <function-ref name="isRunning" scoped="" ref="0xb720b570"/>
        <function-ref name="getAlarm" scoped="" ref="0xb720bcb0"/>
        <function-ref name="start" scoped="" ref="0xb720cea8"/>
        <function-ref name="stop" scoped="" ref="0xb720b170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb7208d30" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb7208d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7206048"/>
        <function-ref name="fired" scoped="" ref="0xb7207830"/>
        <function-ref name="get" scoped="" ref="0xb7207390"/>
        <function-ref name="reset" scoped="" ref="0xb7207a30"/>
        <function-ref name="isOn" scoped="" ref="0xb7206248"/>
        <function-ref name="set" scoped="" ref="0xb7207590"/>
        <function-ref name="start" scoped="" ref="0xb7207c30"/>
        <function-ref name="stop" scoped="" ref="0xb7207e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb720bef8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb720bef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7208648"/>
        <function-ref name="test" scoped="" ref="0xb7208248"/>
        <function-ref name="get" scoped="" ref="0xb7209578"/>
        <function-ref name="setScale" scoped="" ref="0xb7208848"/>
        <function-ref name="getScale" scoped="" ref="0xb7208ae8"/>
        <function-ref name="reset" scoped="" ref="0xb7209c18"/>
        <function-ref name="overflow" scoped="" ref="0xb7209a18"/>
        <function-ref name="isOn" scoped="" ref="0xb7208448"/>
        <function-ref name="set" scoped="" ref="0xb7209778"/>
        <function-ref name="start" scoped="" ref="0xb7209e18"/>
        <function-ref name="stop" scoped="" ref="0xb7208048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb7587a70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb7587a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7ca69d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb7586200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7571b48" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7571b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7571d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7571e00"/>
        <function-ref name="led1On" scoped="" ref="0xb7571ee0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb756e010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb756e0f0"/>
        <function-ref name="get" scoped="" ref="0xb756e1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb756e2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb756e630"/>
        <function-ref name="set" scoped="" ref="0xb756e390"/>
        <function-ref name="led0On" scoped="" ref="0xb756e470"/>
        <function-ref name="led2On" scoped="" ref="0xb756e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb756a708" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb756a708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb756a8e0"/>
        <function-ref name="isInput" scoped="" ref="0xb756a9c0"/>
        <function-ref name="toggle" scoped="" ref="0xb756aaa0"/>
        <function-ref name="isOutput" scoped="" ref="0xb756ab80"/>
        <function-ref name="get" scoped="" ref="0xb756ac60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb756ad40"/>
        <function-ref name="set" scoped="" ref="0xb756ae20"/>
        <function-ref name="clr" scoped="" ref="0xb756af00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb756b720" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb756b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb756b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb7569088" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7569088"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7569260"/>
        <function-ref name="isInput" scoped="" ref="0xb7569340"/>
        <function-ref name="toggle" scoped="" ref="0xb7569420"/>
        <function-ref name="isOutput" scoped="" ref="0xb7569500"/>
        <function-ref name="get" scoped="" ref="0xb75695e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75696c0"/>
        <function-ref name="set" scoped="" ref="0xb75697a0"/>
        <function-ref name="clr" scoped="" ref="0xb7569880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb756ba40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb756ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb756bc18"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb756bcf8"/>
        <function-ref name="led1On" scoped="" ref="0xb756bdd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb756beb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb756a010"/>
        <function-ref name="get" scoped="" ref="0xb756a0f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb756a1d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb756a550"/>
        <function-ref name="set" scoped="" ref="0xb756a2b0"/>
        <function-ref name="led0On" scoped="" ref="0xb756a390"/>
        <function-ref name="led2On" scoped="" ref="0xb756a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb75699f8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb75699f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7569bd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7569cb0"/>
        <function-ref name="toggle" scoped="" ref="0xb7569d90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7569e70"/>
        <function-ref name="get" scoped="" ref="0xb7568010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75680f0"/>
        <function-ref name="set" scoped="" ref="0xb75681d0"/>
        <function-ref name="clr" scoped="" ref="0xb75682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb7558900" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7558900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7558ad8"/>
        <function-ref name="isInput" scoped="" ref="0xb7558bb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7558c98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7558d78"/>
        <function-ref name="get" scoped="" ref="0xb7558e58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7557010"/>
        <function-ref name="set" scoped="" ref="0xb75570f0"/>
        <function-ref name="clr" scoped="" ref="0xb75571d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb7557368" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7557368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7557540"/>
        <function-ref name="isInput" scoped="" ref="0xb7557620"/>
        <function-ref name="toggle" scoped="" ref="0xb7557700"/>
        <function-ref name="isOutput" scoped="" ref="0xb75577e0"/>
        <function-ref name="get" scoped="" ref="0xb75578c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75579a0"/>
        <function-ref name="set" scoped="" ref="0xb7557a80"/>
        <function-ref name="clr" scoped="" ref="0xb7557b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb75566b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb75566b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7556890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb7557cf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7557cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7557ed0"/>
        <function-ref name="isInput" scoped="" ref="0xb7556010"/>
        <function-ref name="toggle" scoped="" ref="0xb75560f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75561d0"/>
        <function-ref name="get" scoped="" ref="0xb75562b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7556390"/>
        <function-ref name="set" scoped="" ref="0xb7556470"/>
        <function-ref name="clr" scoped="" ref="0xb7556550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7559188" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7559188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7ca6068"/>
            <typename><typedef-ref name="TMilli" ref="0xb7ca6238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7553a88"/>
        <function-ref name="fired" scoped="" ref="0xb7559e90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7553448"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7553268"/>
        <function-ref name="getdt" scoped="" ref="0xb7553e48"/>
        <function-ref name="gett0" scoped="" ref="0xb7553c68"/>
        <function-ref name="isRunning" scoped="" ref="0xb7553088"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb75597b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7553768"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7559a30"/>
        <function-ref name="stop" scoped="" ref="0xb7559cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75519d0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="OscilloscopeAppC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75519d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7551ba8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7551c88"/>
        <function-ref name="request" scoped="" ref="0xb7551d68"/>
        <function-ref name="granted" scoped="" ref="0xb7551e48"/>
        <function-ref name="isOwner" scoped="" ref="0xb7551f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0xb7550128" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="OscilloscopeAppC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0xb7550128"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0xb7c30a58"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0xb7c30bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7550770"/>
        <function-ref name="writeDone" scoped="" ref="0xb7475578"/>
        <function-ref name="write" scoped="" ref="0xb7550c10"/>
        <function-ref name="readDone" scoped="" ref="0xb74750d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75461a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75461a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7546378"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7546458"/>
        <function-ref name="request" scoped="" ref="0xb7546538"/>
        <function-ref name="granted" scoped="" ref="0xb7546618"/>
        <function-ref name="isOwner" scoped="" ref="0xb75466f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0xb7546b98" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0xb7546b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0xb7c30a58"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0xb7c30bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7545200"/>
        <function-ref name="writeDone" scoped="" ref="0xb7544010"/>
        <function-ref name="write" scoped="" ref="0xb75456a0"/>
        <function-ref name="readDone" scoped="" ref="0xb7545b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb750ec20" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb750ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb750ee08"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb750eee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb750db88" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb750db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb750dd70"/>
        <function-ref name="configure" scoped="" ref="0xb750de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb750d040" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb750d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb750d218"/>
        <function-ref name="requested" scoped="" ref="0xb750d2f8"/>
        <function-ref name="granted" scoped="" ref="0xb750d3d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb750d4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb750d598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb750e4e0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb750e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb750e6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb750e7a8"/>
        <function-ref name="request" scoped="" ref="0xb750e888"/>
        <function-ref name="granted" scoped="" ref="0xb750e968"/>
        <function-ref name="isOwner" scoped="" ref="0xb750ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb750d6d8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb750d6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb750d8b0"/>
        <function-ref name="userId" scoped="" ref="0xb750d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71f1318" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71f1318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71f14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb71f1650" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb71f1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb71f1828"/>
        <function-ref name="isEmpty" scoped="" ref="0xb71f1908"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb71f19e8"/>
        <function-ref name="dequeue" scoped="" ref="0xb71f1ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb71ef010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb71ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb71ef1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb71ef2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb71ee010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb71ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb71ee1f8"/>
        <function-ref name="configure" scoped="" ref="0xb71ee2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb71ee438" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb71ee438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb71ee610"/>
        <function-ref name="isEmpty" scoped="" ref="0xb71ee6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb71ee7d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb71ee8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb71ef418" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb71ef418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb71ef5f0"/>
        <function-ref name="requested" scoped="" ref="0xb71ef6d0"/>
        <function-ref name="granted" scoped="" ref="0xb71ef7b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb71ef890"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb71ef970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb71ee9f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb71ee9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71eebc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71eeca8"/>
        <function-ref name="led1On" scoped="" ref="0xb71eed88"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71eee68"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71ed010"/>
        <function-ref name="get" scoped="" ref="0xb71ed0f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb71ed1d0"/>
        <function-ref name="led0On" scoped="" ref="0xb71ed550"/>
        <function-ref name="set" scoped="" ref="0xb71ed390"/>
        <function-ref name="led2On" scoped="" ref="0xb71ed2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb71ed470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb71f08a0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb71f08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb71f0a88"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb71f0b68"/>
        <function-ref name="request" scoped="" ref="0xb71f0c48"/>
        <function-ref name="granted" scoped="" ref="0xb71f0d28"/>
        <function-ref name="isOwner" scoped="" ref="0xb71f0e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb71efab0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb71efab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb71efc88"/>
        <function-ref name="userId" scoped="" ref="0xb71efd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb71ed6d0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb71ed6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb71ed8a8"/>
        <function-ref name="runTask" scoped="" ref="0xb71ed988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb750b928" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb750b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb750bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb750bc40" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb750bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb750be18"/>
        <function-ref name="requested" scoped="" ref="0xb750bef8"/>
        <function-ref name="granted" scoped="" ref="0xb7502010"/>
        <function-ref name="isOwner" scoped="" ref="0xb75020f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb75021d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb750b530" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb750b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb750b708"/>
        <function-ref name="stop" scoped="" ref="0xb750b7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb7502310" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb7502310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb75024e8"/>
        <function-ref name="userId" scoped="" ref="0xb75025c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0xb74e1908" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0xb74e1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0xb74e1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb74e2030" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb74e2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0xb7c30a58"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0xb7c30bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e2678"/>
        <function-ref name="writeDone" scoped="" ref="0xb74e14b0"/>
        <function-ref name="write" scoped="" ref="0xb74e2b18"/>
        <function-ref name="readDone" scoped="" ref="0xb74e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75006d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75008b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7500998"/>
        <function-ref name="request" scoped="" ref="0xb7500a78"/>
        <function-ref name="granted" scoped="" ref="0xb7500b58"/>
        <function-ref name="isOwner" scoped="" ref="0xb7500c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0xb7500ec0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0xb7500ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0xb7c30a58"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0xb7c30bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ff578"/>
        <function-ref name="writeDone" scoped="" ref="0xb74e33a8"/>
        <function-ref name="write" scoped="" ref="0xb74ffa28"/>
        <function-ref name="readDone" scoped="" ref="0xb74ffed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0xb74e38a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0xb74e38a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74e3a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74e3b70"/>
        <function-ref name="request" scoped="" ref="0xb74e3c50"/>
        <function-ref name="granted" scoped="" ref="0xb74e3d30"/>
        <function-ref name="isOwner" scoped="" ref="0xb74e3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0xb74ad5a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0xb74ad5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0xb74ad780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0xb74ad900" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0xb74ad900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0xb74adad8"/>
        <function-ref name="sendCommand" scoped="" ref="0xb74adbb8"/>
        <function-ref name="setStart" scoped="" ref="0xb74adc98"/>
        <function-ref name="status" scoped="" ref="0xb74add78"/>
        <function-ref name="hasAcks" scoped="" ref="0xb74ade58"/>
        <function-ref name="isEnabled" scoped="" ref="0xb74ac010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb74ac0f0"/>
        <function-ref name="read" scoped="" ref="0xb74ac1d0"/>
        <function-ref name="init" scoped="" ref="0xb74ac2b0"/>
        <function-ref name="enableAck" scoped="" ref="0xb74ac390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb74ac470"/>
        <function-ref name="hasStart" scoped="" ref="0xb74ac550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb74ac630"/>
        <function-ref name="commandComplete" scoped="" ref="0xb74ac790"/>
        <function-ref name="enable" scoped="" ref="0xb74ac870"/>
        <function-ref name="write" scoped="" ref="0xb74ac950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0xb74aca30"/>
        <function-ref name="off" scoped="" ref="0xb74acb10"/>
        <function-ref name="setStop" scoped="" ref="0xb74acbf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0xb74accd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb74acdb0"/>
        <function-ref name="hasStop" scoped="" ref="0xb74ace90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0xb74ab030" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0xb74ab030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74ab208"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74ab2e8"/>
        <function-ref name="led1On" scoped="" ref="0xb74ab3c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74ab4a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74ab588"/>
        <function-ref name="get" scoped="" ref="0xb74ab668"/>
        <function-ref name="led1Off" scoped="" ref="0xb74ab748"/>
        <function-ref name="led2On" scoped="" ref="0xb74abac8"/>
        <function-ref name="set" scoped="" ref="0xb74ab908"/>
        <function-ref name="led2Off" scoped="" ref="0xb74ab828"/>
        <function-ref name="led0On" scoped="" ref="0xb74ab9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0xb74abc48" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0xb74abc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74abe20"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74abf00"/>
        <function-ref name="led1On" scoped="" ref="0xb74aa010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74aa0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74aa1d0"/>
        <function-ref name="get" scoped="" ref="0xb74aa2b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb74aa390"/>
        <function-ref name="led2On" scoped="" ref="0xb74aa710"/>
        <function-ref name="set" scoped="" ref="0xb74aa550"/>
        <function-ref name="led2Off" scoped="" ref="0xb74aa470"/>
        <function-ref name="led0On" scoped="" ref="0xb74aa630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb74df828" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb74df828"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74dfa00"/>
        <function-ref name="stop" scoped="" ref="0xb74dfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0xb74dfcd0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0xb74dfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0xb7c30a58"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0xb7c30bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ae330"/>
        <function-ref name="writeDone" scoped="" ref="0xb74ad150"/>
        <function-ref name="write" scoped="" ref="0xb74ae7d0"/>
        <function-ref name="readDone" scoped="" ref="0xb74aec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0xb74a6998" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0xb74a6998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0xb74a6b70"/>
        <function-ref name="sendCommand" scoped="" ref="0xb74a6c50"/>
        <function-ref name="setStart" scoped="" ref="0xb74a6d30"/>
        <function-ref name="status" scoped="" ref="0xb74a6e10"/>
        <function-ref name="hasAcks" scoped="" ref="0xb74a6ef0"/>
        <function-ref name="isEnabled" scoped="" ref="0xb74a5010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb74a50f0"/>
        <function-ref name="read" scoped="" ref="0xb74a51d0"/>
        <function-ref name="init" scoped="" ref="0xb74a52b0"/>
        <function-ref name="enableAck" scoped="" ref="0xb74a5390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb74a5470"/>
        <function-ref name="hasStart" scoped="" ref="0xb74a5550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb74a5630"/>
        <function-ref name="commandComplete" scoped="" ref="0xb74a5790"/>
        <function-ref name="enable" scoped="" ref="0xb74a5870"/>
        <function-ref name="write" scoped="" ref="0xb74a5950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0xb74a5a30"/>
        <function-ref name="off" scoped="" ref="0xb74a5b10"/>
        <function-ref name="setStop" scoped="" ref="0xb74a5bf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0xb74a5cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb74a5db0"/>
        <function-ref name="hasStop" scoped="" ref="0xb74a5e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0xb74a18b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0xb74a18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0xb74a1a88"/>
        <function-ref name="sendCommand" scoped="" ref="0xb74a1b68"/>
        <function-ref name="setStart" scoped="" ref="0xb74a1c48"/>
        <function-ref name="status" scoped="" ref="0xb74a1d28"/>
        <function-ref name="hasAcks" scoped="" ref="0xb74a1e08"/>
        <function-ref name="isEnabled" scoped="" ref="0xb74a1ee8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb74a0010"/>
        <function-ref name="read" scoped="" ref="0xb74a00f0"/>
        <function-ref name="init" scoped="" ref="0xb74a01d0"/>
        <function-ref name="enableAck" scoped="" ref="0xb74a02b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb74a0390"/>
        <function-ref name="hasStart" scoped="" ref="0xb74a0470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb74a0550"/>
        <function-ref name="commandComplete" scoped="" ref="0xb74a06b0"/>
        <function-ref name="enable" scoped="" ref="0xb74a0790"/>
        <function-ref name="write" scoped="" ref="0xb74a0870"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0xb74a0950"/>
        <function-ref name="off" scoped="" ref="0xb74a0a30"/>
        <function-ref name="setStop" scoped="" ref="0xb74a0b10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0xb74a0bf0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb74a0cd0"/>
        <function-ref name="hasStop" scoped="" ref="0xb74a0db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0xb749f010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0xb749f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb749f1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb749f2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb749f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb749f488"/>
        <function-ref name="get" scoped="" ref="0xb749f568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb749f648"/>
        <function-ref name="set" scoped="" ref="0xb749f728"/>
        <function-ref name="clr" scoped="" ref="0xb749f808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0xb749f980" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0xb749f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb749fb58"/>
        <function-ref name="isInput" scoped="" ref="0xb749fc38"/>
        <function-ref name="toggle" scoped="" ref="0xb749fd18"/>
        <function-ref name="isOutput" scoped="" ref="0xb749fdf8"/>
        <function-ref name="get" scoped="" ref="0xb749fed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb749e010"/>
        <function-ref name="set" scoped="" ref="0xb749e0f0"/>
        <function-ref name="clr" scoped="" ref="0xb749e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74814e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74814e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74816c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7481828" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7481828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7481a00"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7481ae0"/>
        <function-ref name="led1On" scoped="" ref="0xb7481bc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7481ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7481d80"/>
        <function-ref name="get" scoped="" ref="0xb7481e60"/>
        <function-ref name="led1Off" scoped="" ref="0xb7480010"/>
        <function-ref name="led2Off" scoped="" ref="0xb7480390"/>
        <function-ref name="set" scoped="" ref="0xb74800f0"/>
        <function-ref name="led0On" scoped="" ref="0xb74801d0"/>
        <function-ref name="led2On" scoped="" ref="0xb74802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7433010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7433010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb74331e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb74332c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb74333a8"/>
        <function-ref name="cancel" scoped="" ref="0xb7433488"/>
        <function-ref name="sendDone" scoped="" ref="0xb7433568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb74336a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb74336a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7433880"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7433960"/>
        <function-ref name="getPayload" scoped="" ref="0xb7433a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7433b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7433c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7433d40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7433d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7433f18"/>
        <function-ref name="source" scoped="" ref="0xb7432010"/>
        <function-ref name="address" scoped="" ref="0xb74320f0"/>
        <function-ref name="destination" scoped="" ref="0xb74321d0"/>
        <function-ref name="setSource" scoped="" ref="0xb74322b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb7432390"/>
        <function-ref name="type" scoped="" ref="0xb7432470"/>
        <function-ref name="setType" scoped="" ref="0xb7432550"/>
        <function-ref name="isForMe" scoped="" ref="0xb7432630"/>
        <function-ref name="setGroup" scoped="" ref="0xb7432710"/>
        <function-ref name="localGroup" scoped="" ref="0xb74327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb7432950" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb7432950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7432b28"/>
        <function-ref name="noAck" scoped="" ref="0xb7432c08"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7432ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb71acb28" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb71acb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71acd00"/>
        <function-ref name="getPayload" scoped="" ref="0xb71acde0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71acec0"/>
        <function-ref name="cancel" scoped="" ref="0xb71a8010"/>
        <function-ref name="sendDone" scoped="" ref="0xb71a80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb71a8260" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb71a8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71a8438"/>
        <function-ref name="getPayload" scoped="" ref="0xb71a8518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71a85f8"/>
        <function-ref name="cancel" scoped="" ref="0xb71a86d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb71a87b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb71a88f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71a88f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71a8ad0"/>
        <function-ref name="source" scoped="" ref="0xb71a8bb0"/>
        <function-ref name="address" scoped="" ref="0xb71a8c90"/>
        <function-ref name="destination" scoped="" ref="0xb71a8d70"/>
        <function-ref name="setSource" scoped="" ref="0xb71a8e50"/>
        <function-ref name="setDestination" scoped="" ref="0xb71a7010"/>
        <function-ref name="type" scoped="" ref="0xb71a70f0"/>
        <function-ref name="setType" scoped="" ref="0xb71a71d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb71a72b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb71a7390"/>
        <function-ref name="localGroup" scoped="" ref="0xb71a7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb745f278" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb745f278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb745f450"/>
        <function-ref name="getPayload" scoped="" ref="0xb745f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb745f610"/>
        <function-ref name="cancel" scoped="" ref="0xb745f6f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb745f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb7438780" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7438780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7438968"/>
        <function-ref name="getPayload" scoped="" ref="0xb7438a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7438b28"/>
        <function-ref name="cancel" scoped="" ref="0xb7438c08"/>
        <function-ref name="sendDone" scoped="" ref="0xb7438ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7438010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7438010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb74381f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb74382d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb74383b8"/>
        <function-ref name="cancel" scoped="" ref="0xb7438498"/>
        <function-ref name="sendDone" scoped="" ref="0xb7438578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7437a50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7437a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7437c28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7437d08"/>
        <function-ref name="getPayload" scoped="" ref="0xb7437de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7437ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7436010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb7436190" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb7436190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7436368"/>
        <function-ref name="runTask" scoped="" ref="0xb7436448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb74365c8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb74365c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb74367a0"/>
        <function-ref name="runTask" scoped="" ref="0xb7436880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb7438e28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7438e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7437050"/>
        <function-ref name="source" scoped="" ref="0xb7437130"/>
        <function-ref name="address" scoped="" ref="0xb7437210"/>
        <function-ref name="destination" scoped="" ref="0xb74372f0"/>
        <function-ref name="setSource" scoped="" ref="0xb74373d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb74374b0"/>
        <function-ref name="type" scoped="" ref="0xb7437590"/>
        <function-ref name="setType" scoped="" ref="0xb7437670"/>
        <function-ref name="isForMe" scoped="" ref="0xb7437750"/>
        <function-ref name="setGroup" scoped="" ref="0xb7437830"/>
        <function-ref name="localGroup" scoped="" ref="0xb7437910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb742b150" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb742b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb742b328"/>
        <function-ref name="payloadLength" scoped="" ref="0xb742b408"/>
        <function-ref name="getPayload" scoped="" ref="0xb742b4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb742b5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb742b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7430dd8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7430dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb742b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb742b7e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb742b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb742b9c0"/>
        <function-ref name="source" scoped="" ref="0xb742baa0"/>
        <function-ref name="address" scoped="" ref="0xb742bb80"/>
        <function-ref name="destination" scoped="" ref="0xb742bc60"/>
        <function-ref name="setSource" scoped="" ref="0xb742bd40"/>
        <function-ref name="setDestination" scoped="" ref="0xb742be20"/>
        <function-ref name="type" scoped="" ref="0xb742bf00"/>
        <function-ref name="setType" scoped="" ref="0xb742a010"/>
        <function-ref name="isForMe" scoped="" ref="0xb742a0f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb742a1d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb742a2b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7c5a9e0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb7c43450" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c45978" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7c45b28" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c45cb0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7c41010" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7c42b48" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c42cd0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7c42800" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7c43b90" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7c43798" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7c423b0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7c43ed8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7c42088" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7c588e0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c58640" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7c56450" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c56200" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7c58320" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7c58ed0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb7c3fa58" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
              <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7c3f190" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7c3f330" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c3f4b8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7c33b88" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb7c33248" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0xb7c35df8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0xb7c33568" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb7c31010" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb7c26088" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb7c26460" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb7c267d0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb7c26f18" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb7c249e8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7c23010" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb7c26b40" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7c236e8" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb7c23348" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7c27cf0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb7c242a0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb7c24610" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0xb7c2f820" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0xb7c2f820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb7c2e620" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10;</short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0xb7c30d98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb7c2fc40" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0xb7c30d98"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7c2fdd0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0xb7c2e010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7c2e1b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7c2c880" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10;</short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c2c0f8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7c2c288" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0xb7c2c410" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7c2c5b8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7c2d2a8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10;</short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0xb7c30d98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb7c2e968" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0xb7c30d98"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7c2eaf8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0xb7c2ec80" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7c2ee28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb7c2dd70" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10;</short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c2d5e8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7c2d778" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0xb7c2d900" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7c2daa8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7c3d320" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7c3d320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7c39258" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7c3b650" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7c3a690" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7c3a100" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7c3a290" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7c3bdb0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb7c39a70" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7c39698" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7c3ba20" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7c3d9d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7c3d730" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7c3aee0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7c3a9b8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7c3ab48" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7c3b010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7c3dd00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7c3b318" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7c08848" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7bfe5d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7bfe378" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb7c00010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7c005e0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7c00368" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb7c00bb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7c00938" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7bfe010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7bef530" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7bef848" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7bf0ee0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7befe80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7bef218" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7befb60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7bf08c0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7bf0bd0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7ceb5e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7cebdc8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7ceb9f8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7ce55f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7ce5a00" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7c7f698" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7c6dc78" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7cb7368"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7c707b8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb7af80c8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7af80c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7af81e0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7af81e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb7af7268" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;</short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7af81e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7af8d78" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb7af7790" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;</short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7af75c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb7af8a00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;</short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7af8630" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7af7e80" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;</short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7af81e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7af7af0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7af7c80" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7af81e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb7b0fb38" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b0f8d8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb7b0e1f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b0fe88" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7b0c9c8" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b0c358" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7b0c4e0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7b0c010" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7b0ea88" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b0e548" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7b0e6d0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0xb7afe668" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0xb7afcb58" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7afc960" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0xb7afa770" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0xb7afa4d8" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0xb7afd080" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0xb7afd850" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7afd3d0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0xb7afd568" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0xb7afecf8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0xb7afe9a0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0xb7afc608" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7afc120" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0xb7afc2b8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0xb7afa188" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0xb7afcea8" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0xb7afdd90" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7afdbb0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0xb7afe318" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0xb7afe010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb7b02780" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b023c8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb7b02e28" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b02ae8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb7b014e0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b011b0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb7b05900" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b055a0" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb7b099a0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b09710" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7b0adb8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7b093c0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b09120" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb7b08bd8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b085d8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7b08768" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb7b08290" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b09ce8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7b09e78" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb7b078d8" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b07680" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7b05250" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b07c18" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb7b07da0" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb7b07338" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b08f20" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7b04170" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7b05c48" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7b05dd8" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb7b04520" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb7adc608" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7adc608"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb7ada720" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ada598" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7ada238" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7adc608"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ada010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb7adcbf8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7adca58" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7adadd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7adc608"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7adaa80" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7adac10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7adc608"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0xb7ab8870" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="channelError" ref="0xb7ab9d78" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0xb7abaef8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0xb7ab9438" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab9288" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0xb7ab8bd0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0xb7ab8130" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="timerTick" ref="0xb7ab6010" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb7ab99a0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab97b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0xb7ab84c0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb7ab2328" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb7ab26e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb7ab0748" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab0598" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0xb7ab0ad0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb7ab2c10" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab2a60" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb7ab0210" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab0010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0xb7aae7e0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aae550" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb7ab3bb0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb7abb548" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7abb368" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb7ac1c20" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb7ac18a8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7ac1548" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7ac16f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7ac4808" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac4620" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb7ac24b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10;</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac2230" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb7ac2c58" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7ac2820" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7ac29d0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb7ac42b0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0xb7ac4eb0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac4b70" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0xb7ac4cf8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7ac11e0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac1010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb7aa15a0" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa13d8" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb7aa39b0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa3820" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb7aa8710" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa8370" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb7aa8500" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb7aa77a8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa75c0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0xb7a9d010" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9fcd0" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0xb7a9fe58" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb7a9f458" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9f120" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a9f2b0" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb7aa7250" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.&#10;</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa7010" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb7aa1060" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa3d10" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb7aa3e98" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb7aa64e0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.&#10;</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7aa60d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7aa6280" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb7aabe68" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0xb7c548f0"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0xb7c534b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aabca0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb7aa0d80" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa0bd8" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb7aa8c58" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa8a80" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7a9dc90" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9d978" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0xb7a9db00" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb7aa41b8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa4010" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb7aa6c38" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7aa6850" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7aa6a00" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0xb7aaaa20" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aaa708" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7aaa890" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0xb7a9f968" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9f7c8" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7a9c220" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9c030" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb7aa0860" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa0520" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7aa06b0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb7aa7d48" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa7b10" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb7aa34b8" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa3190" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb7aa3318" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0xb7aaa3a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aaa1f8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb7aa1c48" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa1908" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb7aa1a98" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb7aa4878" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa4520" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7aa46a8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb7aa8010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aaad90" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb7a9d618" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7c4d618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9d478" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7a9c778" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9c598" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb7aa01b8" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa0010" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb7aa4e10" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa4c68" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb7a98ec0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="wait" ref="0xb7a987f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb7a98608" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7a98b68" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb7a982c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb7a96240" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb7abe968" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7abe640" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb7abe7c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb7abed08" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb7abfdb8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7abfc20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb7abe2d0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet. &#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7abe140" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb7ab4280" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab40a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb7ab5d18" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab5b68" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb7ab45f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb7ab4b58" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab4970" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</short>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0xb7ac76a8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb7ac6380" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac6190" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7ac71d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac9f18" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0xb7ac9ba8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac9888" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7ac9a10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0xb7ac9520" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).&#10;</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac9300" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0xb7ac7a18" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0xb7ac7de8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.&#10;</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7a459f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7a459f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb7a45eb0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb7a07d88" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0xb7a06458" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7a06108" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb7a07a20" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb7a07670" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7c4d7e8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7a07800" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79be3a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79be3a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb79be4b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79be4b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb79be988" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79be4b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb79bc0f8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb79beda8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb79bc4c8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb79ae010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb79ad168" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb79af928" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb79ad968" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb79ad618" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb79ad4b0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb79ae960" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb79ae7f8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb79ade18" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb79adcb0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb79afc48" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb79aee08" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb79aeca0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb79ae4b8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb79ae350" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb79aa930" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79aa930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb79a8e08" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb79a8c20" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb79a8560" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb79aada0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79aa930"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0xb79a9810" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79aa930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79a9630" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79aa930"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79a9b48" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb79a88e8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb79a92e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79aa930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79a9100" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79aa930"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79a9e78" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79a81c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb79a48b0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79a48b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb79a13a8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb79a3598" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb79a4d28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79a48b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79a38d0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb79a1730" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb79a3268" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79a48b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79a3088" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79a48b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79a3c00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79a1010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb79b77b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b77b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb79b4938" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0xb79b4280" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb79b7c10" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b77b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb79b4e50" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb79b4c78" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb79b3200" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79b6850" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb79b6518" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb79b4610" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb79b61d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b77b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79b6010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b77b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79b6b88" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79b6eb8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7913b58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7913b58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7913c70" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7910a78" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7912a38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb7910700" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb79101d8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          </variable>
          <variable name="dt" ref="0xb7910368" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7912e70" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb7910eb0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0xb7912348" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb79120b0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7913c70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7912700" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb78f7ef8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb78f76f8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb78f8720" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb78f7ba8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb78f7a40" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb78f73a8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78f7240" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb78f43c0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb78f4258" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb78f8a40" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb78f8ee8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78f8d80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb78ee078" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb78f0088" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb78f0480" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb78f0878" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb78ee478" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb78f0c70" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb78f17e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7c9a190"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7c9a3c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb78f1d10" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7c9a190"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7c9a3c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb78f1b20" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7c9a190"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7c9a3c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10;</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb7835028" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb78355b8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resume" ref="0xb7835988" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="run" ref="0xb7836ad0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically. &#10;</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb781d550" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb781ee80" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb781d030" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb781b248" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb781cc70" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb781cdf8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb781c928" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb781dc38" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb781d898" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb781c4d8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb781c010" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb781c198" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb77e79d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.&#10;</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb77e7720" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb77e73e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb77ed6b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77ed338" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb77ec158" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb77edcc0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb77ed9f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb77f0678" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb77f0da0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb77ef320" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb77ef0f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb77ef6b8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="standby" ref="0xb77f0a08" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb77ea9b8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
              <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77ea708" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb77ea398" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77ea030" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7c46518"/>
                <typename><typedef-ref name="message_t" ref="0xb7c46e60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb77917d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb77915c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb7791b10" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7792d70" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb7792bd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7791288" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb77910f8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb7795cb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb7795a18" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb7794808" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7794520" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb77941d0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb7794030" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb7794e28" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb7794b40" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb77956d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7795468" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7c4d9c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb7725128" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb7728d50" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f4b818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb7710978" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb7710978"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb770f1c8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb7710978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb7710d78" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb7710978"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10;</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb76d1b68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb76d1b68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb76d1c80" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb76d1c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb76d02f8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb76d1c80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb76d00c0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb76d1c80"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0xb76d87b8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0xb76d8cd0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb76d8b08" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0xb76d7218" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb76d7030" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0xb76d8418" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.&#10;</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb76d8198" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0xb76d9e40" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0xb76d9ac8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb76d9c50" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb76db668" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb76db430" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb76d45c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0xb76d4e30" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0xb76d4b00" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb76d4910" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb76d42a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb764a768" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb764a010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb764a1b8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb764a348" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7649378" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb764aac8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb764ac70" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb764ae00" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f4b2a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7649010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0xb7641418" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb763dd50" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb763f510" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb763c228" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb763c0c0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb76410c8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb763d1d0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb763d068" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb7640a00" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb7640898" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb7641ac8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb763ab60" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb763a9f8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb7640d28" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb763c9f0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb763c888" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb763a060" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb763da28" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb763d8c0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb763a6b0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb763f9c0" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb763f858" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7640010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7641e00" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb763f1f0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb763f088" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb763d570" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb763c548" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb763cd10" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb763a388" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb763fce0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb7641758" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb7640558" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7640350" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb7636188" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0xb7636588" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb760c010" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb760c4a8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb75e3f28" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb75e0410" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb75de6d0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0xb75de2f8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb75d6598" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75db3c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb75d6360" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75db3c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb75d7578" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb75d7b58" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75db3c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb75d78d0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75db3c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb75d6010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb75db3c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7538a90" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7ce70f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0xb7537378" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0xb7538660" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb7538ea0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb7537850" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0xb75051f0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0xb74f6b48" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10;</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0xb74d6f18" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0xb74d5248" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setStart" ref="0xb74d5a08" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb74d58a0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0xb74d6c00" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0xb74d3cc8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0xb74d1828" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb74d2198" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0xb74d2030" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb74cf328" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="init" ref="0xb74d65d8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0xb74d6470" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0xb74d39b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0xb74d3848" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb74d2540" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasStart" ref="0xb74d5d28" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb74d2b90" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0xb74d5560" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enable" ref="0xb74d1508" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb74d13a0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb74cf010" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb74d1e88" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f4dcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0xb74d2868" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="off" ref="0xb74d68e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setStop" ref="0xb74d31f0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb74d3088" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0xb74d1068" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb74d2ed8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb74d1b50" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasStop" ref="0xb74d3508" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cf2468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
