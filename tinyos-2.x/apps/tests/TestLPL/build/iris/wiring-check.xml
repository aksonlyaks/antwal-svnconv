<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="56:TestLplAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7aeb938"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7beb6a8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7beb6a8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7af2260"/></to>
    </wire>
    <wire loc="58:TestLplAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7acec80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7a85df8"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:TestLplAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7ac7630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7a854c8"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:TestLplAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7ab8188"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7a86bc0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7a86bc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7a55a78"/></to>
    </wire>
    <wire loc="61:TestLplAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7ae2cd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7aa3bb0"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7aa3bb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a9ff20"/></to>
    </wire>
    <wire loc="62:TestLplAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0xb7abf850"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7452c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb7452c30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb76f0b28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestLplAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7aaf318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7a52d58"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7a52d58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb773b808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7249b98"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb75d8c18"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb761eb90"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb768b608"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76a7238"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb76d5040"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7876928"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7af25a8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7c835c8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7c835c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7c15400"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7af2ad8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb754f980"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7af2ad8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb75d87a8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7af2ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7be7ef8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7be7ef8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7bddd10"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7af2e48"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7bdf770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb78ad010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7bdf078"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b02210"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7bdc400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b03ec0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7bdc090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7a896b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7bdc090"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7bd70a8"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7bd70a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7bd4ce8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7bd7410"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7bdf770"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7bceb68"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7bc7188"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7bc7188"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b7d170"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7bd2520"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7bd7410"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7bace78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b2d540"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7bbae98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b67968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b67968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73968d8"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7bb3068"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b5d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b5d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb735fe50"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7bafe78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b55988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b55988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb732ce50"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7bc6508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b7c4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b7c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74273b0"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7bb0af8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b566b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b566b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb732f8d8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7bc5808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b77228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b77228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7401da8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7bbf980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b6fba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b6fba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73c83b0"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7bb8bd8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b656b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b656b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7391920"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7bb2d98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b5b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b5b030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7359010"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7bc9428"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b7f410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b7f410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7434c98"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7bc3508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b76e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b76e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73fae50"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7bbc6c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b6c890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b6c890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73c2490"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7bb6980"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b62330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b62330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb738cac8"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7badb00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b536b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b536b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7326010"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7baad98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b25908"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7bb5cb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b5e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b5e010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73638d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b7d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb742fda8"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7bc1268"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b74ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b74ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73f4010"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7babaa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b2bc48"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7bc05e8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b70870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b70870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73cdda8"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7bb9858"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b66330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b66330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73943b0"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7bb39d8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b5dc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b5dc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb735d920"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7bae808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b54330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b54330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb732a920"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7bc6e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b7ce48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b7ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7426e50"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7bc4190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b77b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b77b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73fd8d8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7bbd348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b6d5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b6d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73c6e50"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7bb75e8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b64030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b64030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb738f490"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7bb17a8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b5b988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b5b988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7358ac8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7bc9d98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b7fd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b7fd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74327f8"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7bc3e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b757d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b757d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73f8920"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7bbb068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b6b250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b6b250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73c0010"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7bac508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b52030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b52030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7325ac8"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7bba428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b67010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b67010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7399da8"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7bb46c8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b5e968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b5e968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73603b0"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7baf508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b55030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b55030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb732d3b0"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7ba97a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b22010"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7bc7af8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b7dac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b7dac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74298d8"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7bc1bd8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b734f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b734f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73f3ac8"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7bb0188"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b57ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b57ce0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7332da8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7bbf010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b6f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b6f250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73ca8d8"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7bb8268"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b66c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b66c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7393e50"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7bb2428"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b5c6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b5c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb735b490"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7bad190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b54c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b54c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7328490"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7bcaa08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b80a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b80a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74351d0"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7bc4b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b764f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b764f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73fb3b0"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7bbdcb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b6df28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b6df28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73c4920"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7bb6010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b64988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b64988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb738d010"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7baa428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7b27308"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7bb5348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b5f600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b5f600"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7366da8"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7bbb9d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b6bba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b6bba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73bfac8"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7bc87a8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b7e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b7e790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7430308"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7bc2878"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b74170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b74170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73f6490"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c15b98"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7c11568"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7c059b8"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7bfd3a0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb7809e60"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7a896b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7a9fc00"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7a9eb88"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb7a8b928"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7a8b928"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7bc9d98"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7a9c510"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb7a8a368"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7a8a368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7bc9428"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7a9ce80"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb7a8acf8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7a8acf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7bcaa08"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7a55a78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb773c7e8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a690c0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a468a8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a468a8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79c2488"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7a854c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7a542f0"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7a542f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb776bcb8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7a84410"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7a53208"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7a53208"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb776ac60"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a7dd78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a53528"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a53528"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79cf928"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7a6e870"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7a52d58"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7a85df8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7a54c20"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7a54c20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb776a688"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a6e380"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a52868"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a52868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79cec00"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7a734c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a53bd0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7a53bd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79ce010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb7a6ac50"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a48488"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a48488"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79c4010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb773c7e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb77320d0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb7a490b8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb79ca718"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb79ca718"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb79b8b00"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb79cf928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79bde90"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a50e18"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79cb4b0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79cb4b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79ba890"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb773b808"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7730078"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79c4010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79b2488"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a4bb68"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79cd230"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79cd230"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79bc620"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79cec00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79bd9b0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb79ce010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7976960"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79c2488"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79b18a8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a03428"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7978b40"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7978b40"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7971cc0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a18238"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79cf928"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb79fdcb0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb778b5c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb77676d0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7a1a420"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7768a08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7976960"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7976960"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb796fb20"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7768010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb77515d0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb77515d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb774c298"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb77686e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7751c70"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7751c70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb774c938"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7750618"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb76aeb28"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb76aeb28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb76a8700"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7750ce8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb773b4d8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb773b4d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7732d30"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb76ac268"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb7a2d610"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76ad6b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb773cda8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb773cda8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7732690"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb773a3a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb76e8ca0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb76e8ca0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb76d6a38"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb773a990"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb76e5318"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb76e5318"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb76d5360"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7739090"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb76e59b8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb76e59b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb76d5a00"/></to>
    </wire>
    <wire loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7739490"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79c89a8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79c89a8"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79b6e20"/></to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7738630"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7978b40"/></to>
    </wire>
    <wire loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7736408"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79cec00"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb76d8628"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79cf928"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb76dc680"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7673a68"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb7673a68"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb766b010"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76d8228"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76ad240"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76ad240"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76a8da8"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb76df340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb7672418"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb7672418"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb766b900"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb76add90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7672010"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7672010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb766b4f8"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7670b80"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb7a257d8"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7672b38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7645cb0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb7645cb0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb763d320"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7670070"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7642240"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7642240"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb763d808"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb76704a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb75e0ba8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb75e0ba8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb75d7010"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7641030"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7a21050"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76426c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb761f5e8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb761f5e8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7610040"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7642bd8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb761fad0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb761fad0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7610528"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7615960"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb7a329b8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7615010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb75e88c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xb75e88c8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xb75e6090"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7615528"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb75df808"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb75df808"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb75d7ba0"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb75e5e40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb7a19c40"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xb75e6090"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb75df320"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb75df320"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb75d76b8"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb75e69a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb75dfc10"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb75dfc10"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb75d6010"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0xb75de060"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0xb7a39998"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79c7c28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79b30c0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb79afba8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7978b40"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb79a9e20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7926ab0"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7926ab0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7884010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb79ac6f8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb787a490"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb787a490"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7872010"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7969b50"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7930260"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7884930"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7923570"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb78955d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb791c8e0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb791c8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb78b0528"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78994f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7911180"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7911180"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78f75d0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb79099c8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78f5370"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb7903ec0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb78f3010"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78fc938"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb78f2b30"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78fc938"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb78ef338"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78fc938"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb78eeac8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78ad3f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7911180"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7872010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb77920f0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb7874010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77bbc78"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7876928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb786ca00"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb786ca00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7861e48"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb7797cc8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77d6340"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb77c0320"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb7865ee8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb7865ee8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb77da2b0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7792a10"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb78647a0"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb78647a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77d9ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xb77d9ab0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb72a6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xb7861e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72a9318"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xb77da2b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb72a9750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb72a5010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7819e40"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7819e40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb780ee68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb72a4d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7817c90"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb7817c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb780bc90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0xb72a2820"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb7815768"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7815768"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb780a768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb72a1ee0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb7813e90"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb7813e90"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb78061d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0xb77bfa40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb7794be8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb778b5c8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb77849e8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb778bf10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb756bec8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb77832e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb778bf10"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb777cd90"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb77738a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7751010"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb7750030"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb774b2d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7750618"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb774b9a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7750ce8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb774bcc8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7978b40"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7730c00"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb773a3a8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb772f260"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb773a990"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb772f930"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7739090"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0xb772fd30"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7739490"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb772eed8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7738630"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb772cce8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7736408"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb772b2d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb76f9330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb76f9330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb76f0b28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <from><interface-ref name="transition" scoped="" ref="0xb7725e50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb76f0b28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb7874010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb76d5d78"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb76df340"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb76d44d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb77738a0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb76d4aa0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76dc680"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76d3010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76d8228"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb76d3410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb76d8628"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb76ce3c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb76c9010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb76baaa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb769f870"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb768f870"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb768f870"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb768b930"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb769b2e0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7675d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7675d98"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb768a288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76a75d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb76ad6b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb76a7ca8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb76add90"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb76a6160"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb76ac268"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb766aa90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7672b38"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7669010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7670070"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb7669448"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb76704a8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb766a040"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7670b80"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7669ba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb766dcd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb766dcd8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb76f0b28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb7667a30"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb768f870"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7666168"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7648778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7648778"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb768a288"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb7666728"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb77738a0"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0xb764fe38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb763dc88"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb76426c0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb763a010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7641030"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb763c270"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7642bd8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb763c678"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb778b5c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7638b70"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb7624270"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7624270"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb761d898"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb7636778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb7621918"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb761d010"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7625010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb761eb90"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76109a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7615010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7610ec0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7615528"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb760f9a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7615960"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb760f2f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb778b5c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7600790"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb75e6e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb75e7230"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb75e69a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xb75e8230"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb75e79b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xb7600d48"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb75e5450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb75e9710"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb75f5f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb75e7648"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb75e5e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb75e8da0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xb75e6588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xb75e93f8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb75e5b08"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0xb75b7ce0"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0xb75de060"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb75c4708"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79cd230"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb75be9a0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79cb4b0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb75bdc20"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb79ca718"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb75bbe90"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79c7c28"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb75b8198"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79c4010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb75b74f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7926ab0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb75b6b80"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb778b5c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb756bec8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb748fb80"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb75d6490"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb756d0b8"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb756d0b8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7bc5808"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb75cd640"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb756da30"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb756da30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7535da8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb75cb5d8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb756c158"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb756c158"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb753b3e8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0xb75c6370"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0xb75685d0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0xb75685d0"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0xb754fca8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb75c6a40"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb756c4a8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb756c4a8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb7bc1bd8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb75d0428"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb756ce18"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb756ce18"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7bc6508"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb75c2d80"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb756b7a8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb756b7a8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb754f390"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb75b65b8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb77738a0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb75bfc68"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb7468880"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb753b3e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb7532010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xb748fb80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb72303a0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb754b010"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7bb6010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb754b980"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7bb8bd8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb754e520"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7903ec0"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb75356f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb7532338"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb753b0a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7533cc0"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7535da8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75329d0"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xb7530ce0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb74cc9b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb74cc9b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7245010"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb751e980"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb7494518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb7494518"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb7245b58"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb75221c0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb74fd1c8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb74fd1c8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb74f89f0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb751ed88"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7c01750"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb7514700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb74f1508"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7c01750"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb74f2e30"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7bc5808"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb74f57e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb7bc4190"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb74f4188"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7bc4b00"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb74f4af8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb7bc3508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb7494110"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb7245750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb7244030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb74949c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xb7244458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb7249ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xb7244a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb722fb98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7911180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb722c9a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb78fc938"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10;&#10; The porttion of a mica-family initialisation that is mote-specific.&#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; The porttion of a mica-family initialisation that is mote-specific.&#10;&#10; &#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10;&#10; The micaZ portion of a mica-family initialisation that is&#10;&#10; mote-specific.&#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; The micaZ portion of a mica-family initialisation that is&#10;&#10; mote-specific.&#10;&#10; &#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10;&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10;&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10;&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10;&#10; interface so that other components can adjust their calibration as&#10;&#10; needed.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10;&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 17 2005&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10;&#10; The TinyOS scheduler.</short>
        <long>&#10;&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10;&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10;&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10;&#10; FIFO, parameter-free). For details and information on how to&#10;&#10; replace the scheduler, refer to TEP 106.&#10;&#10;&#10;&#10; @author  Phil Levis&#10;&#10; @date    August 7 2005&#10;&#10; @see     TEP 106: Tasks and Schedulers&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10;&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10;&#10; the Atmega128.</short>
        <long>&#10;&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10;&#10; the Atmega128. Power state calculation code copied from Rob&#10;&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Robert Szewczyk&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; @date   October 30, 2007&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TestLplC" loc="43:TestLplC.nc">
      <documentation loc="43:TestLplC.nc">
        <short>&#10;&#10; Simple test code for low-power-listening.</short>
        <long>&#10;&#10; Simple test code for low-power-listening. Sends a sequence of packets,&#10;&#10; changing the low-power-listening settings every ~32s. See README.txt&#10;&#10; for more details.&#10;&#10;&#10;&#10;  @author Philip Levis, David Gay&#10;&#10;  @date   Oct 27 2006&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10;&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10;&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;&#10;&#10; @author Phil Buonadonna&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10;&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Philip Levis&#10;&#10;&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
        <short>&#10;&#10; The number of alarm ticks per one microsecond (0.9216)&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10;&#10; Component that stores the node's active message address and group ID.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Component that stores the node's active message address and group ID.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10;&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10;&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10;&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10;&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10;&#10; command to figure out the exact frequency.&#10;&#10;&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10;&#10; HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10;&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10;&#10; used at boot time.&#10;&#10; @param timer_size Integer type of the timer&#10;&#10; @param prescaler Desired prescaler value&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10; @param frequency_tag The frequency tag for this Counter&#10;&#10; @param timer_size The width of this Counter&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TOne" ref="0xb7c174a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;&#10;   Counter.&#10;&#10; @param to_size_type The type for the width of the transformed Counter.&#10;&#10; @param from_precision_tag A type indicating the precision of the original&#10;&#10;   Counter.&#10;&#10; @param from_size_type The type for the width of the original Counter.&#10;&#10; @param bit_shift_right Original time units will be 2 to the power &#10;&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @param upper_count_type A type large enough to store the upper bits --&#10;&#10;   those needed above from_size_type after its shift right to fill&#10;&#10;   to_size_type.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10;&#10; Counter being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10;&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10;&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10;&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10;&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10;&#10; timer. </short>
        <long>&#10;&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10;&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10;&#10; there is only one compare register for timer 0, which is used to&#10;&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10;&#10; AlarmMilliC or CounterMillIC component.&#10;&#10; &#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10; &#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10;&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb785f348"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10;&#10; Simple wrapper around the actual timer implementation that automatically&#10;&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Simple wrapper around the actual timer implementation that automatically&#10;&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10;&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10;&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10;&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10;&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10;&#10; interrupt) of that mode.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm and&#10;&#10; Timer being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;&#10;   virtualized.&#10;&#10; @param max_timers Number of virtual timers to create.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10;&#10; Counter being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="LowPowerListeningLayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <module/>
    </component>
    <component qname="LowPowerListeningLayerC.TimerMilliC" loc="36(LowPowerListeningLayerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LowPowerListeningLayerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10;&#10; Components should never wire to this component.</short>
        <long>&#10;&#10; Components should never wire to this component. This is the&#10;&#10; underlying configuration of virtualized millisecond timers. &#10;&#10; It auto-wires wires the timer&#10;&#10; implementation (TimerC) to the boot sequence and exports the&#10;&#10; various Timer interfaces.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Cory Sharp&#10;&#10; @date   May 16 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10;&#10; The standard TinyOS random number generator.</short>
        <long>&#10;&#10; The standard TinyOS random number generator. If your system requires a &#10;&#10; specific random number generator, it should wire to that component&#10;&#10; directly. &#10;&#10;&#10;&#10; @author  Barbara Hohlt &#10;&#10; @author  Phil Levis &#10;&#10; @date    March 1 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;&#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;&#10;  linear congruential generator, &#10;&#10;&#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;&#10;&#10;  for A = 16807.&#10;&#10;&#10;&#10;&#10;&#10; @author Barbara Hohlt &#10;&#10; @date   March 1 2005&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10;&#10; The HAL of the SPI bus on the atm128.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; The HAL of the SPI bus on the atm128.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon&#10;&#10; @author Joe Polastre&#10;&#10; @date   September 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10;&#10; Primitives for accessing the SPI module on ATmega128&#10;&#10; microcontroller. </short>
        <long>&#10;&#10; Primitives for accessing the SPI module on ATmega128&#10;&#10; microcontroller.  This module assumes the bus has been reserved and&#10;&#10; checks that the bus owner is in fact the person using the bus.&#10;&#10; SpiPacket provides an asynchronous send interface where the&#10;&#10; transmit data length is equal to the receive data length, while&#10;&#10; SpiByte provides an interface for sending a single byte&#10;&#10; synchronously. SpiByte allows a component to send a few bytes&#10;&#10; in a simple fashion: if more than a handful need to be sent,&#10;&#10; SpiPacket should be used.&#10;&#10;&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Joe Polastre&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10;&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10;&#10; Implementation of the SPI bus abstraction for the atm128&#10;&#10; microcontroller.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Implementation of the SPI bus abstraction for the atm128&#10;&#10; microcontroller.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10;&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the array is checked and the next user (in FCFS order)&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10;&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; An queue is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the queue is checked and the next user&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10;&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10;&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10;&#10; command to figure out the exact frequency.&#10;&#10; &#60;p>&#10;&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10;&#10; a radically different frequency.&#10;&#10; &#60;p>&#10;&#10; Upto three of these alarms can be created (one per hardware compare&#10;&#10; register).&#10;&#10;&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10; @param frequency_tag The frequency tag for this Alarm&#10;&#10; @param timer_size The width of this Alarm&#10;&#10; @param mindt The shortest time in the future this Alarm can be set&#10;&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;&#10;   register one above the current counter value is unreliable. Has to be&#10;&#10;   large enough that the Alarm time does not pass between the computation&#10;&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;&#10;   assembly code...&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TOne" ref="0xb7c174a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="TestLplAppC.TimerMilliC" loc="36(TestLplAppC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TestLplAppC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7ba2398" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7ba2528" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7ba26b8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b98088" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b98228" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b983c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7b98560" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b4df20" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b4c0d8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b4c278" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7b4c410" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10;&#10; used at boot time.&#10;&#10; @param timer_size Integer type of the timer&#10;&#10; @param prescaler Desired prescaler value&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb78ab1d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78ab1d8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb78ab368" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10; @param frequency_tag The frequency tag for this Counter&#10;&#10; @param timer_size The width of this Counter&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb78a2ad8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb78a2ad8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb78a2d90" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78a2d90"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;&#10;   Counter.&#10;&#10; @param to_size_type The type for the width of the transformed Counter.&#10;&#10; @param from_precision_tag A type indicating the precision of the original&#10;&#10;   Counter.&#10;&#10; @param from_size_type The type for the width of the original Counter.&#10;&#10; @param bit_shift_right Original time units will be 2 to the power &#10;&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @param upper_count_type A type large enough to store the upper bits --&#10;&#10;   those needed above from_size_type after its shift right to fill&#10;&#10;   to_size_type.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb7893450" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb7893450"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb7893708" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb7893708"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb78938d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb78938d0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb7893b88" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb7893b88"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb7893d28" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb7892010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb7892010"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10;&#10; Counter being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb78815f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb78815f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10; &#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb785f348" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb785f348"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb785f4c8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10;&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7856f28" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7856f28"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb78550b8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm and&#10;&#10; Timer being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb77d5a10" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb77d5a10"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;&#10;   virtualized.&#10;&#10; @param max_timers Number of virtual timers to create.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb77bab50" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb77bab50"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb77bacd8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10;&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the array is checked and the next user (in FCFS order)&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10;&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb74cbbd8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0xb74bf0f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; An queue is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the queue is checked and the next user&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10;&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10;&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10;&#10; command to figure out the exact frequency.&#10;&#10; &#60;p>&#10;&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10;&#10; a radically different frequency.&#10;&#10; &#60;p>&#10;&#10; Upto three of these alarms can be created (one per hardware compare&#10;&#10; register).&#10;&#10;&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10; @param frequency_tag The frequency tag for this Alarm&#10;&#10; @param timer_size The width of this Alarm&#10;&#10; @param mindt The shortest time in the future this Alarm can be set&#10;&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;&#10;   register one above the current counter value is unreliable. Has to be&#10;&#10;   large enough that the Alarm time does not pass between the computation&#10;&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;&#10;   assembly code...&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb7487420" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb7487420"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb74876d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb74876d8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb7487868" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7c8b060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7c8b060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb7be99a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7be99a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7be9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7beb6a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7beb6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7beb880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7bdf770" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7bdf770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bdf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7be7ef8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7be7ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7be60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7bdf078" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7bdf078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7bdf250"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7bdf330"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7bdf410"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7bdf4f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7bdf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7bdc090" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7bdc090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bdc268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7bddd10" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7bddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bddee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7bdc400" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7bdc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bdc5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7bd7410" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7bd7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bd75e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7bd70a8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7bd70a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bd7280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7bd2520" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7bd2520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bd26f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7bceb68" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7bceb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bced40"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcee20"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcef00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd2010"/>
        <function-ref name="get" scoped="" ref="0xb7bd20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd21d0"/>
        <function-ref name="set" scoped="" ref="0xb7bd22b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7bd4ce8" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7bd4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bd4ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7bace78" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7bace78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bab308"/>
        <function-ref name="isInput" scoped="" ref="0xb7bab3e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bab4c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bab5a8"/>
        <function-ref name="get" scoped="" ref="0xb7bab688"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bab768"/>
        <function-ref name="set" scoped="" ref="0xb7bab848"/>
        <function-ref name="clr" scoped="" ref="0xb7bab928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7bbae98" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7bbae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb90c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb91a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb9280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb9360"/>
        <function-ref name="get" scoped="" ref="0xb7bb9440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb9520"/>
        <function-ref name="set" scoped="" ref="0xb7bb9600"/>
        <function-ref name="clr" scoped="" ref="0xb7bb96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7bb3068" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7bb3068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb3240"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb3320"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb3400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb34e0"/>
        <function-ref name="get" scoped="" ref="0xb7bb35c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb36a0"/>
        <function-ref name="set" scoped="" ref="0xb7bb3780"/>
        <function-ref name="clr" scoped="" ref="0xb7bb3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7bafe78" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7bafe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bae070"/>
        <function-ref name="isInput" scoped="" ref="0xb7bae150"/>
        <function-ref name="toggle" scoped="" ref="0xb7bae230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bae310"/>
        <function-ref name="get" scoped="" ref="0xb7bae3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bae4d0"/>
        <function-ref name="set" scoped="" ref="0xb7bae5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bae690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7bc6508" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7bc6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc66e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc67c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc68a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc6980"/>
        <function-ref name="get" scoped="" ref="0xb7bc6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc6b40"/>
        <function-ref name="set" scoped="" ref="0xb7bc6c20"/>
        <function-ref name="clr" scoped="" ref="0xb7bc6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7bb0af8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7bb0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb0cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb0db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb0e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7baf010"/>
        <function-ref name="get" scoped="" ref="0xb7baf0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7baf1d0"/>
        <function-ref name="set" scoped="" ref="0xb7baf2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7baf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7bc5808" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7bc5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc59e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc5ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc5ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc5c80"/>
        <function-ref name="get" scoped="" ref="0xb7bc5d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc5e40"/>
        <function-ref name="set" scoped="" ref="0xb7bc5f20"/>
        <function-ref name="clr" scoped="" ref="0xb7bc4018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7bbf980" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7bbf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbfb58"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbfc38"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbfd18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbfdf8"/>
        <function-ref name="get" scoped="" ref="0xb7bbfed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbd010"/>
        <function-ref name="set" scoped="" ref="0xb7bbd0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7bbd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7bb8bd8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7bb8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb8db0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb8e90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb7010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb70f0"/>
        <function-ref name="get" scoped="" ref="0xb7bb71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb72b0"/>
        <function-ref name="set" scoped="" ref="0xb7bb7390"/>
        <function-ref name="clr" scoped="" ref="0xb7bb7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7bb2d98" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7bb2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb1010"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb10f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb11d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb12b0"/>
        <function-ref name="get" scoped="" ref="0xb7bb1390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb1470"/>
        <function-ref name="set" scoped="" ref="0xb7bb1550"/>
        <function-ref name="clr" scoped="" ref="0xb7bb1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7bc9428" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7bc9428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc9600"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc96e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc97c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc98a0"/>
        <function-ref name="get" scoped="" ref="0xb7bc9980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc9a60"/>
        <function-ref name="set" scoped="" ref="0xb7bc9b40"/>
        <function-ref name="clr" scoped="" ref="0xb7bc9c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7bc3508" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7bc3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc36e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc37c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc38a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc3980"/>
        <function-ref name="get" scoped="" ref="0xb7bc3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc3b40"/>
        <function-ref name="set" scoped="" ref="0xb7bc3c20"/>
        <function-ref name="clr" scoped="" ref="0xb7bc3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7bbc6c8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7bbc6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbc8a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbc980"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbca60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbcb40"/>
        <function-ref name="get" scoped="" ref="0xb7bbcc20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbcd00"/>
        <function-ref name="set" scoped="" ref="0xb7bbcde0"/>
        <function-ref name="clr" scoped="" ref="0xb7bbcec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7bb6980" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7bb6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb6b58"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb6c38"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb6d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb6df8"/>
        <function-ref name="get" scoped="" ref="0xb7bb6ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb5010"/>
        <function-ref name="set" scoped="" ref="0xb7bb50f0"/>
        <function-ref name="clr" scoped="" ref="0xb7bb51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7badb00" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7badb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7badcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7baddb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bade98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bac010"/>
        <function-ref name="get" scoped="" ref="0xb7bac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bac1d0"/>
        <function-ref name="set" scoped="" ref="0xb7bac2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7baad98" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7baad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba9010"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba90f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba91d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba92b0"/>
        <function-ref name="get" scoped="" ref="0xb7ba9390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba9470"/>
        <function-ref name="set" scoped="" ref="0xb7ba9550"/>
        <function-ref name="clr" scoped="" ref="0xb7ba9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7bb5cb8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7bb5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb5e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb4010"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb40f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb41d0"/>
        <function-ref name="get" scoped="" ref="0xb7bb42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb4390"/>
        <function-ref name="set" scoped="" ref="0xb7bb4470"/>
        <function-ref name="clr" scoped="" ref="0xb7bb4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7bc7188" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7bc7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc7360"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc7440"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc7520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc7600"/>
        <function-ref name="get" scoped="" ref="0xb7bc76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc77c0"/>
        <function-ref name="set" scoped="" ref="0xb7bc78a0"/>
        <function-ref name="clr" scoped="" ref="0xb7bc7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7bc1268" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7bc1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc1440"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc1520"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc1600"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc16e0"/>
        <function-ref name="get" scoped="" ref="0xb7bc17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc18a0"/>
        <function-ref name="set" scoped="" ref="0xb7bc1980"/>
        <function-ref name="clr" scoped="" ref="0xb7bc1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7babaa0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7babaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7babc78"/>
        <function-ref name="isInput" scoped="" ref="0xb7babd58"/>
        <function-ref name="toggle" scoped="" ref="0xb7babe38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7babf18"/>
        <function-ref name="get" scoped="" ref="0xb7baa010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7baa0f0"/>
        <function-ref name="set" scoped="" ref="0xb7baa1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7baa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7bc05e8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7bc05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc07c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc08a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc0980"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc0a60"/>
        <function-ref name="get" scoped="" ref="0xb7bc0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc0c20"/>
        <function-ref name="set" scoped="" ref="0xb7bc0d00"/>
        <function-ref name="clr" scoped="" ref="0xb7bc0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7bb9858" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7bb9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb9a30"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb9b10"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb9bf0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb9cd0"/>
        <function-ref name="get" scoped="" ref="0xb7bb9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb9e90"/>
        <function-ref name="set" scoped="" ref="0xb7bb8010"/>
        <function-ref name="clr" scoped="" ref="0xb7bb80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7bb39d8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7bb39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb3bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb3c90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb3d70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb3e50"/>
        <function-ref name="get" scoped="" ref="0xb7bb2010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb20f0"/>
        <function-ref name="set" scoped="" ref="0xb7bb21d0"/>
        <function-ref name="clr" scoped="" ref="0xb7bb22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7bae808" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7bae808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bae9e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7baeac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7baeba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7baec80"/>
        <function-ref name="get" scoped="" ref="0xb7baed60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7baee40"/>
        <function-ref name="set" scoped="" ref="0xb7baef20"/>
        <function-ref name="clr" scoped="" ref="0xb7bad018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7bc6e78" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7bc6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc5070"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc5150"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc5230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc5310"/>
        <function-ref name="get" scoped="" ref="0xb7bc53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc54d0"/>
        <function-ref name="set" scoped="" ref="0xb7bc55b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bc5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7bc4190" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7bc4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc4368"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc4448"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc4528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc4608"/>
        <function-ref name="get" scoped="" ref="0xb7bc46e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc47c8"/>
        <function-ref name="set" scoped="" ref="0xb7bc48a8"/>
        <function-ref name="clr" scoped="" ref="0xb7bc4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7bbd348" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7bbd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbd520"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbd600"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbd6e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbd7c0"/>
        <function-ref name="get" scoped="" ref="0xb7bbd8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbd980"/>
        <function-ref name="set" scoped="" ref="0xb7bbda60"/>
        <function-ref name="clr" scoped="" ref="0xb7bbdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7bb75e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7bb75e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb77c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb78a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb7980"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb7a60"/>
        <function-ref name="get" scoped="" ref="0xb7bb7b40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb7c20"/>
        <function-ref name="set" scoped="" ref="0xb7bb7d00"/>
        <function-ref name="clr" scoped="" ref="0xb7bb7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7bb17a8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7bb17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb1980"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb1a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb1b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb1c20"/>
        <function-ref name="get" scoped="" ref="0xb7bb1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb1de0"/>
        <function-ref name="set" scoped="" ref="0xb7bb1ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7bb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7bc9d98" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7bc9d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc8010"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc80f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc81d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc82b0"/>
        <function-ref name="get" scoped="" ref="0xb7bc8390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc8470"/>
        <function-ref name="set" scoped="" ref="0xb7bc8550"/>
        <function-ref name="clr" scoped="" ref="0xb7bc8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7bc3e78" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7bc3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc20e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc21c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc22a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc2380"/>
        <function-ref name="get" scoped="" ref="0xb7bc2460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc2540"/>
        <function-ref name="set" scoped="" ref="0xb7bc2620"/>
        <function-ref name="clr" scoped="" ref="0xb7bc2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7bbb068" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7bbb068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbb240"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbb320"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbb400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbb4e0"/>
        <function-ref name="get" scoped="" ref="0xb7bbb5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbb6a0"/>
        <function-ref name="set" scoped="" ref="0xb7bbb780"/>
        <function-ref name="clr" scoped="" ref="0xb7bbb860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7bac508" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7bac508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bac6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bac7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bac8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bac980"/>
        <function-ref name="get" scoped="" ref="0xb7baca60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bacb40"/>
        <function-ref name="set" scoped="" ref="0xb7bacc20"/>
        <function-ref name="clr" scoped="" ref="0xb7bacd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7bba428" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7bba428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bba700"/>
        <function-ref name="isInput" scoped="" ref="0xb7bba7e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bba8c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bba9a0"/>
        <function-ref name="get" scoped="" ref="0xb7bbaa80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbab60"/>
        <function-ref name="set" scoped="" ref="0xb7bbac40"/>
        <function-ref name="clr" scoped="" ref="0xb7bbad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7bb46c8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7bb46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb48a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb4980"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb4a60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb4b40"/>
        <function-ref name="get" scoped="" ref="0xb7bb4c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb4d00"/>
        <function-ref name="set" scoped="" ref="0xb7bb4de0"/>
        <function-ref name="clr" scoped="" ref="0xb7bb4ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7baf508" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7baf508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7baf6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7baf7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7baf8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7baf980"/>
        <function-ref name="get" scoped="" ref="0xb7bafa60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bafb40"/>
        <function-ref name="set" scoped="" ref="0xb7bafc20"/>
        <function-ref name="clr" scoped="" ref="0xb7bafd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7ba97a8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7ba97a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ba9980"/>
        <function-ref name="isInput" scoped="" ref="0xb7ba9a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7ba9b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ba9c20"/>
        <function-ref name="get" scoped="" ref="0xb7ba9d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ba9de0"/>
        <function-ref name="set" scoped="" ref="0xb7ba9ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7ba8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7bc7af8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7bc7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc7cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc7db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc7e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc6010"/>
        <function-ref name="get" scoped="" ref="0xb7bc60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc61d0"/>
        <function-ref name="set" scoped="" ref="0xb7bc62b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bc6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7bc1bd8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7bc1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc1db0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc1e90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc0010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc00f0"/>
        <function-ref name="get" scoped="" ref="0xb7bc01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc02b0"/>
        <function-ref name="set" scoped="" ref="0xb7bc0390"/>
        <function-ref name="clr" scoped="" ref="0xb7bc0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7bb0188" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7bb0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb0360"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb0440"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb0520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb0600"/>
        <function-ref name="get" scoped="" ref="0xb7bb06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb07c0"/>
        <function-ref name="set" scoped="" ref="0xb7bb08a0"/>
        <function-ref name="clr" scoped="" ref="0xb7bb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7bbf010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7bbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbf1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbf2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbf488"/>
        <function-ref name="get" scoped="" ref="0xb7bbf568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbf648"/>
        <function-ref name="set" scoped="" ref="0xb7bbf728"/>
        <function-ref name="clr" scoped="" ref="0xb7bbf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7bb8268" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7bb8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb8440"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb8520"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb8600"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb86e0"/>
        <function-ref name="get" scoped="" ref="0xb7bb87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb88a0"/>
        <function-ref name="set" scoped="" ref="0xb7bb8980"/>
        <function-ref name="clr" scoped="" ref="0xb7bb8a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7bb2428" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7bb2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb2600"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb26e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb27c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb28a0"/>
        <function-ref name="get" scoped="" ref="0xb7bb2980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb2a60"/>
        <function-ref name="set" scoped="" ref="0xb7bb2b40"/>
        <function-ref name="clr" scoped="" ref="0xb7bb2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7bad190" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7bad190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bad368"/>
        <function-ref name="isInput" scoped="" ref="0xb7bad448"/>
        <function-ref name="toggle" scoped="" ref="0xb7bad528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bad608"/>
        <function-ref name="get" scoped="" ref="0xb7bad6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bad7c8"/>
        <function-ref name="set" scoped="" ref="0xb7bad8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7bad988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7bcaa08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7bcaa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bcabe0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bcacc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bcada0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bcae80"/>
        <function-ref name="get" scoped="" ref="0xb7bc9010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc90f0"/>
        <function-ref name="set" scoped="" ref="0xb7bc91d0"/>
        <function-ref name="clr" scoped="" ref="0xb7bc92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7bc4b00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7bc4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc4cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc4db8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc4e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc3010"/>
        <function-ref name="get" scoped="" ref="0xb7bc30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc31d0"/>
        <function-ref name="set" scoped="" ref="0xb7bc32b0"/>
        <function-ref name="clr" scoped="" ref="0xb7bc3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7bbdcb8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7bbdcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbde90"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbc010"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbc1d0"/>
        <function-ref name="get" scoped="" ref="0xb7bbc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bbc390"/>
        <function-ref name="set" scoped="" ref="0xb7bbc470"/>
        <function-ref name="clr" scoped="" ref="0xb7bbc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7bb6010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7bb6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb61e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb62c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb63a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb6488"/>
        <function-ref name="get" scoped="" ref="0xb7bb6568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb6648"/>
        <function-ref name="set" scoped="" ref="0xb7bb6728"/>
        <function-ref name="clr" scoped="" ref="0xb7bb6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7baa428" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7baa428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7baa600"/>
        <function-ref name="isInput" scoped="" ref="0xb7baa6e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7baa7c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7baa8a0"/>
        <function-ref name="get" scoped="" ref="0xb7baa980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7baaa60"/>
        <function-ref name="set" scoped="" ref="0xb7baab40"/>
        <function-ref name="clr" scoped="" ref="0xb7baac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7bb5348" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7bb5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bb5520"/>
        <function-ref name="isInput" scoped="" ref="0xb7bb5600"/>
        <function-ref name="toggle" scoped="" ref="0xb7bb56e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bb57c0"/>
        <function-ref name="get" scoped="" ref="0xb7bb58a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bb5980"/>
        <function-ref name="set" scoped="" ref="0xb7bb5a60"/>
        <function-ref name="clr" scoped="" ref="0xb7bb5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7bbb9d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7bbb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bbbbb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bbbc90"/>
        <function-ref name="toggle" scoped="" ref="0xb7bbbd70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bbbe50"/>
        <function-ref name="get" scoped="" ref="0xb7bba010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bba0f0"/>
        <function-ref name="set" scoped="" ref="0xb7bba1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7bba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7bc87a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7bc87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc8980"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc8a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc8b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc8c20"/>
        <function-ref name="get" scoped="" ref="0xb7bc8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc8de0"/>
        <function-ref name="set" scoped="" ref="0xb7bc8ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7bc7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7bc2878" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7bc2878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bc2a50"/>
        <function-ref name="isInput" scoped="" ref="0xb7bc2b30"/>
        <function-ref name="toggle" scoped="" ref="0xb7bc2c10"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bc2cf0"/>
        <function-ref name="get" scoped="" ref="0xb7bc2dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bc2eb0"/>
        <function-ref name="set" scoped="" ref="0xb7bc1010"/>
        <function-ref name="clr" scoped="" ref="0xb7bc10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b7fd68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b7fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7e010"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7e0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7e2b0"/>
        <function-ref name="get" scoped="" ref="0xb7b7e390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7e470"/>
        <function-ref name="set" scoped="" ref="0xb7b7e550"/>
        <function-ref name="clr" scoped="" ref="0xb7b7e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b7dac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b7dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7dca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7dd80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7de60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7c010"/>
        <function-ref name="get" scoped="" ref="0xb7b7c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7c1d0"/>
        <function-ref name="set" scoped="" ref="0xb7b7c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b7c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b80a28" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b80a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b80c00"/>
        <function-ref name="isInput" scoped="" ref="0xb7b80ce0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b80dc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b80ea0"/>
        <function-ref name="get" scoped="" ref="0xb7b7f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7f0f0"/>
        <function-ref name="set" scoped="" ref="0xb7b7f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b7f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b7e790" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b7e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7e968"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7ea48"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7eb28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7ec08"/>
        <function-ref name="get" scoped="" ref="0xb7b7ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7edc8"/>
        <function-ref name="set" scoped="" ref="0xb7b7eea8"/>
        <function-ref name="clr" scoped="" ref="0xb7b7d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b7c4f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b7c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7c6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7c7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7c888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7c968"/>
        <function-ref name="get" scoped="" ref="0xb7b7ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7cb28"/>
        <function-ref name="set" scoped="" ref="0xb7b7cc08"/>
        <function-ref name="clr" scoped="" ref="0xb7b7cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b7f410" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b7f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7f5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7f6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7f7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7f888"/>
        <function-ref name="get" scoped="" ref="0xb7b7f968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7fa48"/>
        <function-ref name="set" scoped="" ref="0xb7b7fb28"/>
        <function-ref name="clr" scoped="" ref="0xb7b7fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b7d170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b7d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7d348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7d428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7d508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7d5e8"/>
        <function-ref name="get" scoped="" ref="0xb7b7d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7d7a8"/>
        <function-ref name="set" scoped="" ref="0xb7b7d888"/>
        <function-ref name="clr" scoped="" ref="0xb7b7d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b7ce48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b7ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7b050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7b130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7b210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7b2f0"/>
        <function-ref name="get" scoped="" ref="0xb7b7b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7b4b0"/>
        <function-ref name="set" scoped="" ref="0xb7b7b590"/>
        <function-ref name="clr" scoped="" ref="0xb7b7b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74351d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74351d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74353a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7435488"/>
        <function-ref name="toggle" scoped="" ref="0xb7435568"/>
        <function-ref name="isOutput" scoped="" ref="0xb7435648"/>
        <function-ref name="get" scoped="" ref="0xb7435728"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7435808"/>
        <function-ref name="set" scoped="" ref="0xb74358e8"/>
        <function-ref name="clr" scoped="" ref="0xb74359c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7434c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7434c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7434e70"/>
        <function-ref name="isInput" scoped="" ref="0xb7433010"/>
        <function-ref name="toggle" scoped="" ref="0xb74330f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74331d0"/>
        <function-ref name="get" scoped="" ref="0xb74332b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7433390"/>
        <function-ref name="set" scoped="" ref="0xb7433470"/>
        <function-ref name="clr" scoped="" ref="0xb7433550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74327f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74327f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74329d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7432ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7432b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7432c70"/>
        <function-ref name="get" scoped="" ref="0xb7432d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7432e30"/>
        <function-ref name="set" scoped="" ref="0xb7432f10"/>
        <function-ref name="clr" scoped="" ref="0xb7431010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7430308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7430308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74304e0"/>
        <function-ref name="isInput" scoped="" ref="0xb74305c0"/>
        <function-ref name="toggle" scoped="" ref="0xb74306a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7430780"/>
        <function-ref name="get" scoped="" ref="0xb7430860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7430940"/>
        <function-ref name="set" scoped="" ref="0xb7430a20"/>
        <function-ref name="clr" scoped="" ref="0xb7430b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb742fda8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb742fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb742d010"/>
        <function-ref name="isInput" scoped="" ref="0xb742d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb742d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb742d2b0"/>
        <function-ref name="get" scoped="" ref="0xb742d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb742d470"/>
        <function-ref name="set" scoped="" ref="0xb742d550"/>
        <function-ref name="clr" scoped="" ref="0xb742d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74298d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74298d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7429ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7429b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7429c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7429d50"/>
        <function-ref name="get" scoped="" ref="0xb7429e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7429f10"/>
        <function-ref name="set" scoped="" ref="0xb7428010"/>
        <function-ref name="clr" scoped="" ref="0xb74280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74273b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74273b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7427588"/>
        <function-ref name="isInput" scoped="" ref="0xb7427668"/>
        <function-ref name="toggle" scoped="" ref="0xb7427748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7427828"/>
        <function-ref name="get" scoped="" ref="0xb7427908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74279e8"/>
        <function-ref name="set" scoped="" ref="0xb7427ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7427ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7426e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7426e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7425050"/>
        <function-ref name="isInput" scoped="" ref="0xb7425130"/>
        <function-ref name="toggle" scoped="" ref="0xb7425210"/>
        <function-ref name="isOutput" scoped="" ref="0xb74252f0"/>
        <function-ref name="get" scoped="" ref="0xb74253d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74254b0"/>
        <function-ref name="set" scoped="" ref="0xb7425590"/>
        <function-ref name="clr" scoped="" ref="0xb7425670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b764f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b764f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b766c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b767a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b76888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b76968"/>
        <function-ref name="get" scoped="" ref="0xb7b76a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b76b28"/>
        <function-ref name="set" scoped="" ref="0xb7b76c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b76ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b74170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b74170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b74348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b74428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b74508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b745e8"/>
        <function-ref name="get" scoped="" ref="0xb7b746c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b747a8"/>
        <function-ref name="set" scoped="" ref="0xb7b74888"/>
        <function-ref name="clr" scoped="" ref="0xb7b74968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b77228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b77228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b77400"/>
        <function-ref name="isInput" scoped="" ref="0xb7b774e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b775c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b776a0"/>
        <function-ref name="get" scoped="" ref="0xb7b77780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b77860"/>
        <function-ref name="set" scoped="" ref="0xb7b77940"/>
        <function-ref name="clr" scoped="" ref="0xb7b77a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b76e48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b76e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b75050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b75130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b75210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b752f0"/>
        <function-ref name="get" scoped="" ref="0xb7b753d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b754b0"/>
        <function-ref name="set" scoped="" ref="0xb7b75590"/>
        <function-ref name="clr" scoped="" ref="0xb7b75670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b74ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b74ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b74ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b74d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b74e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b73010"/>
        <function-ref name="get" scoped="" ref="0xb7b730f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b731d0"/>
        <function-ref name="set" scoped="" ref="0xb7b732b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b73390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b77b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b77b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b77d58"/>
        <function-ref name="isInput" scoped="" ref="0xb7b77e38"/>
        <function-ref name="toggle" scoped="" ref="0xb7b77f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b76010"/>
        <function-ref name="get" scoped="" ref="0xb7b760f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b761d0"/>
        <function-ref name="set" scoped="" ref="0xb7b762b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b76390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b757d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b757d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b759a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b75a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7b75b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b75c48"/>
        <function-ref name="get" scoped="" ref="0xb7b75d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b75e08"/>
        <function-ref name="set" scoped="" ref="0xb7b75ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7b74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b734f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b734f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b736c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b737a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b73888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b73968"/>
        <function-ref name="get" scoped="" ref="0xb7b73a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b73b28"/>
        <function-ref name="set" scoped="" ref="0xb7b73c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b73ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7401da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7401da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73fe010"/>
        <function-ref name="isInput" scoped="" ref="0xb73fe0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73fe1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73fe2b0"/>
        <function-ref name="get" scoped="" ref="0xb73fe390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73fe470"/>
        <function-ref name="set" scoped="" ref="0xb73fe550"/>
        <function-ref name="clr" scoped="" ref="0xb73fe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73fd8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73fd8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73fdab0"/>
        <function-ref name="isInput" scoped="" ref="0xb73fdb90"/>
        <function-ref name="toggle" scoped="" ref="0xb73fdc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb73fdd50"/>
        <function-ref name="get" scoped="" ref="0xb73fde30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73fdf10"/>
        <function-ref name="set" scoped="" ref="0xb73fc010"/>
        <function-ref name="clr" scoped="" ref="0xb73fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73fb3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73fb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73fb588"/>
        <function-ref name="isInput" scoped="" ref="0xb73fb668"/>
        <function-ref name="toggle" scoped="" ref="0xb73fb748"/>
        <function-ref name="isOutput" scoped="" ref="0xb73fb828"/>
        <function-ref name="get" scoped="" ref="0xb73fb908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73fb9e8"/>
        <function-ref name="set" scoped="" ref="0xb73fbac8"/>
        <function-ref name="clr" scoped="" ref="0xb73fbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73fae50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73fae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73f9050"/>
        <function-ref name="isInput" scoped="" ref="0xb73f9130"/>
        <function-ref name="toggle" scoped="" ref="0xb73f9210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73f92f0"/>
        <function-ref name="get" scoped="" ref="0xb73f93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73f94b0"/>
        <function-ref name="set" scoped="" ref="0xb73f9590"/>
        <function-ref name="clr" scoped="" ref="0xb73f9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73f8920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73f8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73f8af8"/>
        <function-ref name="isInput" scoped="" ref="0xb73f8bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb73f8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73f8d98"/>
        <function-ref name="get" scoped="" ref="0xb73f8e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73f7010"/>
        <function-ref name="set" scoped="" ref="0xb73f70f0"/>
        <function-ref name="clr" scoped="" ref="0xb73f71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73f6490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73f6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73f6668"/>
        <function-ref name="isInput" scoped="" ref="0xb73f6748"/>
        <function-ref name="toggle" scoped="" ref="0xb73f6828"/>
        <function-ref name="isOutput" scoped="" ref="0xb73f6908"/>
        <function-ref name="get" scoped="" ref="0xb73f69e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73f6ac8"/>
        <function-ref name="set" scoped="" ref="0xb73f6ba8"/>
        <function-ref name="clr" scoped="" ref="0xb73f6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73f4010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73f41e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73f42c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73f43a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73f4488"/>
        <function-ref name="get" scoped="" ref="0xb73f4568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73f4648"/>
        <function-ref name="set" scoped="" ref="0xb73f4728"/>
        <function-ref name="clr" scoped="" ref="0xb73f4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73f3ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73f3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73f3ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb73f3d80"/>
        <function-ref name="toggle" scoped="" ref="0xb73f3e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb73f2010"/>
        <function-ref name="get" scoped="" ref="0xb73f20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73f21d0"/>
        <function-ref name="set" scoped="" ref="0xb73f22b0"/>
        <function-ref name="clr" scoped="" ref="0xb73f2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b6fba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b6fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6fd80"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6fe60"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6d0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b6d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6d2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b6d390"/>
        <function-ref name="clr" scoped="" ref="0xb7b6d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b6c890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b6c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6ca68"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6cb48"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6cc28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6cd08"/>
        <function-ref name="get" scoped="" ref="0xb7b6cde8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6cec8"/>
        <function-ref name="set" scoped="" ref="0xb7b6b010"/>
        <function-ref name="clr" scoped="" ref="0xb7b6b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b70870" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b70870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b70a48"/>
        <function-ref name="isInput" scoped="" ref="0xb7b70b28"/>
        <function-ref name="toggle" scoped="" ref="0xb7b70c08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b70ce8"/>
        <function-ref name="get" scoped="" ref="0xb7b70dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b70ea8"/>
        <function-ref name="set" scoped="" ref="0xb7b6f010"/>
        <function-ref name="clr" scoped="" ref="0xb7b6f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b6d5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b6d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6d7a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6d888"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6d968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6da48"/>
        <function-ref name="get" scoped="" ref="0xb7b6db28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6dc08"/>
        <function-ref name="set" scoped="" ref="0xb7b6dce8"/>
        <function-ref name="clr" scoped="" ref="0xb7b6ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b6b250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b6b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6b428"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6b508"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6b5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6b6c8"/>
        <function-ref name="get" scoped="" ref="0xb7b6b7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6b888"/>
        <function-ref name="set" scoped="" ref="0xb7b6b968"/>
        <function-ref name="clr" scoped="" ref="0xb7b6ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b6f250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b6f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6f428"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6f508"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6f5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6f6c8"/>
        <function-ref name="get" scoped="" ref="0xb7b6f7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6f888"/>
        <function-ref name="set" scoped="" ref="0xb7b6f968"/>
        <function-ref name="clr" scoped="" ref="0xb7b6fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b6df28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b6df28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6c110"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6c1f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6c2d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6c3b0"/>
        <function-ref name="get" scoped="" ref="0xb7b6c490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6c570"/>
        <function-ref name="set" scoped="" ref="0xb7b6c650"/>
        <function-ref name="clr" scoped="" ref="0xb7b6c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b6bba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b6bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6bd80"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6be60"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6a0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b6a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6a2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b6a390"/>
        <function-ref name="clr" scoped="" ref="0xb7b6a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73cdda8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73cdda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73cb010"/>
        <function-ref name="isInput" scoped="" ref="0xb73cb0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73cb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73cb2b0"/>
        <function-ref name="get" scoped="" ref="0xb73cb390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73cb470"/>
        <function-ref name="set" scoped="" ref="0xb73cb550"/>
        <function-ref name="clr" scoped="" ref="0xb73cb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73ca8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73ca8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73caab0"/>
        <function-ref name="isInput" scoped="" ref="0xb73cab90"/>
        <function-ref name="toggle" scoped="" ref="0xb73cac70"/>
        <function-ref name="isOutput" scoped="" ref="0xb73cad50"/>
        <function-ref name="get" scoped="" ref="0xb73cae30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73caf10"/>
        <function-ref name="set" scoped="" ref="0xb73c9010"/>
        <function-ref name="clr" scoped="" ref="0xb73c90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73c83b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73c83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73c8588"/>
        <function-ref name="isInput" scoped="" ref="0xb73c8668"/>
        <function-ref name="toggle" scoped="" ref="0xb73c8748"/>
        <function-ref name="isOutput" scoped="" ref="0xb73c8828"/>
        <function-ref name="get" scoped="" ref="0xb73c8908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73c89e8"/>
        <function-ref name="set" scoped="" ref="0xb73c8ac8"/>
        <function-ref name="clr" scoped="" ref="0xb73c8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73c6e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73c5050"/>
        <function-ref name="isInput" scoped="" ref="0xb73c5130"/>
        <function-ref name="toggle" scoped="" ref="0xb73c5210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73c52f0"/>
        <function-ref name="get" scoped="" ref="0xb73c53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73c54b0"/>
        <function-ref name="set" scoped="" ref="0xb73c5590"/>
        <function-ref name="clr" scoped="" ref="0xb73c5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73c4920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73c4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73c4af8"/>
        <function-ref name="isInput" scoped="" ref="0xb73c4bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb73c4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73c4d98"/>
        <function-ref name="get" scoped="" ref="0xb73c4e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73c3010"/>
        <function-ref name="set" scoped="" ref="0xb73c30f0"/>
        <function-ref name="clr" scoped="" ref="0xb73c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73c2490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73c2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73c2668"/>
        <function-ref name="isInput" scoped="" ref="0xb73c2748"/>
        <function-ref name="toggle" scoped="" ref="0xb73c2828"/>
        <function-ref name="isOutput" scoped="" ref="0xb73c2908"/>
        <function-ref name="get" scoped="" ref="0xb73c29e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73c2ac8"/>
        <function-ref name="set" scoped="" ref="0xb73c2ba8"/>
        <function-ref name="clr" scoped="" ref="0xb73c2c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73c0010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73c01e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73c02c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73c03a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73c0488"/>
        <function-ref name="get" scoped="" ref="0xb73c0568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73c0648"/>
        <function-ref name="set" scoped="" ref="0xb73c0728"/>
        <function-ref name="clr" scoped="" ref="0xb73c0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73bfac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73bfac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73bfca0"/>
        <function-ref name="isInput" scoped="" ref="0xb73bfd80"/>
        <function-ref name="toggle" scoped="" ref="0xb73bfe60"/>
        <function-ref name="isOutput" scoped="" ref="0xb73be010"/>
        <function-ref name="get" scoped="" ref="0xb73be0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73be1d0"/>
        <function-ref name="set" scoped="" ref="0xb73be2b0"/>
        <function-ref name="clr" scoped="" ref="0xb73be390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b66330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b66330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b66508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b665e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b666c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b667a8"/>
        <function-ref name="get" scoped="" ref="0xb7b66888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b66968"/>
        <function-ref name="set" scoped="" ref="0xb7b66a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b66b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b64030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b64030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b64208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b642e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b643c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b644a8"/>
        <function-ref name="get" scoped="" ref="0xb7b64588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b64668"/>
        <function-ref name="set" scoped="" ref="0xb7b64748"/>
        <function-ref name="clr" scoped="" ref="0xb7b64828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b67010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b671e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b672c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b673a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b67488"/>
        <function-ref name="get" scoped="" ref="0xb7b67568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b67648"/>
        <function-ref name="set" scoped="" ref="0xb7b67728"/>
        <function-ref name="clr" scoped="" ref="0xb7b67808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b66c88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b66c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b66e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b65010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b650f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b651d0"/>
        <function-ref name="get" scoped="" ref="0xb7b652b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b65390"/>
        <function-ref name="set" scoped="" ref="0xb7b65470"/>
        <function-ref name="clr" scoped="" ref="0xb7b65550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b64988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b64988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b64b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b64c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b64d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b64e00"/>
        <function-ref name="get" scoped="" ref="0xb7b64ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b62010"/>
        <function-ref name="set" scoped="" ref="0xb7b620f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b67968" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b67968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b67b40"/>
        <function-ref name="isInput" scoped="" ref="0xb7b67c20"/>
        <function-ref name="toggle" scoped="" ref="0xb7b67d00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b67de0"/>
        <function-ref name="get" scoped="" ref="0xb7b67ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b66010"/>
        <function-ref name="set" scoped="" ref="0xb7b660f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b661d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b656b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b656b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b65888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b65968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b65a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b65b28"/>
        <function-ref name="get" scoped="" ref="0xb7b65c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b65ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b65dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b65ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b62330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b62330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b62508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b625e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b626c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b627a8"/>
        <function-ref name="get" scoped="" ref="0xb7b62888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b62968"/>
        <function-ref name="set" scoped="" ref="0xb7b62a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b62b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7399da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7399da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7397010"/>
        <function-ref name="isInput" scoped="" ref="0xb73970f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73971d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73972b0"/>
        <function-ref name="get" scoped="" ref="0xb7397390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7397470"/>
        <function-ref name="set" scoped="" ref="0xb7397550"/>
        <function-ref name="clr" scoped="" ref="0xb7397630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73968d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73968d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7396ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7396b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7396c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7396d50"/>
        <function-ref name="get" scoped="" ref="0xb7396e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7396f10"/>
        <function-ref name="set" scoped="" ref="0xb7395010"/>
        <function-ref name="clr" scoped="" ref="0xb73950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73943b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73943b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7394588"/>
        <function-ref name="isInput" scoped="" ref="0xb7394668"/>
        <function-ref name="toggle" scoped="" ref="0xb7394748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7394828"/>
        <function-ref name="get" scoped="" ref="0xb7394908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73949e8"/>
        <function-ref name="set" scoped="" ref="0xb7394ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7394ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7393e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7393e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7392050"/>
        <function-ref name="isInput" scoped="" ref="0xb7392130"/>
        <function-ref name="toggle" scoped="" ref="0xb7392210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73922f0"/>
        <function-ref name="get" scoped="" ref="0xb73923d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73924b0"/>
        <function-ref name="set" scoped="" ref="0xb7392590"/>
        <function-ref name="clr" scoped="" ref="0xb7392670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7391920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7391920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7391af8"/>
        <function-ref name="isInput" scoped="" ref="0xb7391bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb7391cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7391d98"/>
        <function-ref name="get" scoped="" ref="0xb7391e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7390010"/>
        <function-ref name="set" scoped="" ref="0xb73900f0"/>
        <function-ref name="clr" scoped="" ref="0xb73901d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb738f490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb738f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb738f668"/>
        <function-ref name="isInput" scoped="" ref="0xb738f748"/>
        <function-ref name="toggle" scoped="" ref="0xb738f828"/>
        <function-ref name="isOutput" scoped="" ref="0xb738f908"/>
        <function-ref name="get" scoped="" ref="0xb738f9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb738fac8"/>
        <function-ref name="set" scoped="" ref="0xb738fba8"/>
        <function-ref name="clr" scoped="" ref="0xb738fc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb738d010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb738d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb738d1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb738d2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb738d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb738d488"/>
        <function-ref name="get" scoped="" ref="0xb738d568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb738d648"/>
        <function-ref name="set" scoped="" ref="0xb738d728"/>
        <function-ref name="clr" scoped="" ref="0xb738d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb738cac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb738cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb738cca0"/>
        <function-ref name="isInput" scoped="" ref="0xb738cd80"/>
        <function-ref name="toggle" scoped="" ref="0xb738ce60"/>
        <function-ref name="isOutput" scoped="" ref="0xb738b010"/>
        <function-ref name="get" scoped="" ref="0xb738b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb738b1d0"/>
        <function-ref name="set" scoped="" ref="0xb738b2b0"/>
        <function-ref name="clr" scoped="" ref="0xb738b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b5e968" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b5e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5eb40"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5ec20"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5ed00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5ede0"/>
        <function-ref name="get" scoped="" ref="0xb7b5eec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5d010"/>
        <function-ref name="set" scoped="" ref="0xb7b5d0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b5d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b5c6b0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b5c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5c888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5c968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5ca48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5cb28"/>
        <function-ref name="get" scoped="" ref="0xb7b5cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5cce8"/>
        <function-ref name="set" scoped="" ref="0xb7b5cdc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b5cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b5f600" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b5f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5f7d8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5f8b8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5f998"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5fa78"/>
        <function-ref name="get" scoped="" ref="0xb7b5fb58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5fc38"/>
        <function-ref name="set" scoped="" ref="0xb7b5fd18"/>
        <function-ref name="clr" scoped="" ref="0xb7b5fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b5d330" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b5d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5d508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5d5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5d7a8"/>
        <function-ref name="get" scoped="" ref="0xb7b5d888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5d968"/>
        <function-ref name="set" scoped="" ref="0xb7b5da48"/>
        <function-ref name="clr" scoped="" ref="0xb7b5db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b5b030" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b5b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5b208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5b2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5b4a8"/>
        <function-ref name="get" scoped="" ref="0xb7b5b588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5b668"/>
        <function-ref name="set" scoped="" ref="0xb7b5b748"/>
        <function-ref name="clr" scoped="" ref="0xb7b5b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b5e010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5e1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5e2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5e488"/>
        <function-ref name="get" scoped="" ref="0xb7b5e568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5e648"/>
        <function-ref name="set" scoped="" ref="0xb7b5e728"/>
        <function-ref name="clr" scoped="" ref="0xb7b5e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b5dc88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b5dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5de60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5c010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5c1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b5c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5c390"/>
        <function-ref name="set" scoped="" ref="0xb7b5c470"/>
        <function-ref name="clr" scoped="" ref="0xb7b5c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b5b988" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b5b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5bb60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5bc40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5bd20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5be00"/>
        <function-ref name="get" scoped="" ref="0xb7b5bee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5a010"/>
        <function-ref name="set" scoped="" ref="0xb7b5a0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b5a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7366da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7366da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7364010"/>
        <function-ref name="isInput" scoped="" ref="0xb73640f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73641d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73642b0"/>
        <function-ref name="get" scoped="" ref="0xb7364390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7364470"/>
        <function-ref name="set" scoped="" ref="0xb7364550"/>
        <function-ref name="clr" scoped="" ref="0xb7364630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73638d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73638d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7363ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7363b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7363c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7363d50"/>
        <function-ref name="get" scoped="" ref="0xb7363e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7363f10"/>
        <function-ref name="set" scoped="" ref="0xb7361010"/>
        <function-ref name="clr" scoped="" ref="0xb73610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73603b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73603b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7360588"/>
        <function-ref name="isInput" scoped="" ref="0xb7360668"/>
        <function-ref name="toggle" scoped="" ref="0xb7360748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7360828"/>
        <function-ref name="get" scoped="" ref="0xb7360908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73609e8"/>
        <function-ref name="set" scoped="" ref="0xb7360ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7360ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb735fe50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb735fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb735e050"/>
        <function-ref name="isInput" scoped="" ref="0xb735e130"/>
        <function-ref name="toggle" scoped="" ref="0xb735e210"/>
        <function-ref name="isOutput" scoped="" ref="0xb735e2f0"/>
        <function-ref name="get" scoped="" ref="0xb735e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb735e4b0"/>
        <function-ref name="set" scoped="" ref="0xb735e590"/>
        <function-ref name="clr" scoped="" ref="0xb735e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb735d920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb735d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb735daf8"/>
        <function-ref name="isInput" scoped="" ref="0xb735dbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb735dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb735dd98"/>
        <function-ref name="get" scoped="" ref="0xb735de78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb735c010"/>
        <function-ref name="set" scoped="" ref="0xb735c0f0"/>
        <function-ref name="clr" scoped="" ref="0xb735c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb735b490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb735b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb735b668"/>
        <function-ref name="isInput" scoped="" ref="0xb735b748"/>
        <function-ref name="toggle" scoped="" ref="0xb735b828"/>
        <function-ref name="isOutput" scoped="" ref="0xb735b908"/>
        <function-ref name="get" scoped="" ref="0xb735b9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb735bac8"/>
        <function-ref name="set" scoped="" ref="0xb735bba8"/>
        <function-ref name="clr" scoped="" ref="0xb735bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7359010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7359010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73591e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73592c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73593a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7359488"/>
        <function-ref name="get" scoped="" ref="0xb7359568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7359648"/>
        <function-ref name="set" scoped="" ref="0xb7359728"/>
        <function-ref name="clr" scoped="" ref="0xb7359808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7358ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7358ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7358ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7358d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7358e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7357010"/>
        <function-ref name="get" scoped="" ref="0xb73570f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73571d0"/>
        <function-ref name="set" scoped="" ref="0xb73572b0"/>
        <function-ref name="clr" scoped="" ref="0xb7357390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b55030" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b55030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b55208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b552e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b553c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b554a8"/>
        <function-ref name="get" scoped="" ref="0xb7b55588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b55668"/>
        <function-ref name="set" scoped="" ref="0xb7b55748"/>
        <function-ref name="clr" scoped="" ref="0xb7b55828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b54c88" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b54c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b54e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b53010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b530f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b531d0"/>
        <function-ref name="get" scoped="" ref="0xb7b532b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b53390"/>
        <function-ref name="set" scoped="" ref="0xb7b53470"/>
        <function-ref name="clr" scoped="" ref="0xb7b53550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b57ce0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b57eb8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b56010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b560f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b561d0"/>
        <function-ref name="get" scoped="" ref="0xb7b562b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b56390"/>
        <function-ref name="set" scoped="" ref="0xb7b56470"/>
        <function-ref name="clr" scoped="" ref="0xb7b56550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b55988" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b55988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b55b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b55c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b55d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b55e00"/>
        <function-ref name="get" scoped="" ref="0xb7b55ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b54010"/>
        <function-ref name="set" scoped="" ref="0xb7b540f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b541d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b536b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b536b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b53888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b53968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b53a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b53b28"/>
        <function-ref name="get" scoped="" ref="0xb7b53c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b53ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b53dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b53ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b566b0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b566b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b56888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b56968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b56a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b56b28"/>
        <function-ref name="get" scoped="" ref="0xb7b56c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b56ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b56dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b56ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b54330" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b54330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b54508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b545e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b546c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b547a8"/>
        <function-ref name="get" scoped="" ref="0xb7b54888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b54968"/>
        <function-ref name="set" scoped="" ref="0xb7b54a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b54b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b52030" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b52030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b52208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b522e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b523c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b524a8"/>
        <function-ref name="get" scoped="" ref="0xb7b52588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b52668"/>
        <function-ref name="set" scoped="" ref="0xb7b52748"/>
        <function-ref name="clr" scoped="" ref="0xb7b52828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7332da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7332da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7330010"/>
        <function-ref name="isInput" scoped="" ref="0xb73300f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73301d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73302b0"/>
        <function-ref name="get" scoped="" ref="0xb7330390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7330470"/>
        <function-ref name="set" scoped="" ref="0xb7330550"/>
        <function-ref name="clr" scoped="" ref="0xb7330630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb732f8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb732f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732fab0"/>
        <function-ref name="isInput" scoped="" ref="0xb732fb90"/>
        <function-ref name="toggle" scoped="" ref="0xb732fc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb732fd50"/>
        <function-ref name="get" scoped="" ref="0xb732fe30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732ff10"/>
        <function-ref name="set" scoped="" ref="0xb732e010"/>
        <function-ref name="clr" scoped="" ref="0xb732e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb732d3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb732d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732d588"/>
        <function-ref name="isInput" scoped="" ref="0xb732d668"/>
        <function-ref name="toggle" scoped="" ref="0xb732d748"/>
        <function-ref name="isOutput" scoped="" ref="0xb732d828"/>
        <function-ref name="get" scoped="" ref="0xb732d908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732d9e8"/>
        <function-ref name="set" scoped="" ref="0xb732dac8"/>
        <function-ref name="clr" scoped="" ref="0xb732dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb732ce50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb732ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732b050"/>
        <function-ref name="isInput" scoped="" ref="0xb732b130"/>
        <function-ref name="toggle" scoped="" ref="0xb732b210"/>
        <function-ref name="isOutput" scoped="" ref="0xb732b2f0"/>
        <function-ref name="get" scoped="" ref="0xb732b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732b4b0"/>
        <function-ref name="set" scoped="" ref="0xb732b590"/>
        <function-ref name="clr" scoped="" ref="0xb732b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb732a920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb732a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732aaf8"/>
        <function-ref name="isInput" scoped="" ref="0xb732abd8"/>
        <function-ref name="toggle" scoped="" ref="0xb732acb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb732ad98"/>
        <function-ref name="get" scoped="" ref="0xb732ae78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7329010"/>
        <function-ref name="set" scoped="" ref="0xb73290f0"/>
        <function-ref name="clr" scoped="" ref="0xb73291d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7328490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7328490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7328668"/>
        <function-ref name="isInput" scoped="" ref="0xb7328748"/>
        <function-ref name="toggle" scoped="" ref="0xb7328828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7328908"/>
        <function-ref name="get" scoped="" ref="0xb73289e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7328ac8"/>
        <function-ref name="set" scoped="" ref="0xb7328ba8"/>
        <function-ref name="clr" scoped="" ref="0xb7328c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7326010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7326010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73261e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73262c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73263a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7326488"/>
        <function-ref name="get" scoped="" ref="0xb7326568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7326648"/>
        <function-ref name="set" scoped="" ref="0xb7326728"/>
        <function-ref name="clr" scoped="" ref="0xb7326808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7325ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7325ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7325ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7325d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7325e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7324010"/>
        <function-ref name="get" scoped="" ref="0xb73240f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73241d0"/>
        <function-ref name="set" scoped="" ref="0xb73242b0"/>
        <function-ref name="clr" scoped="" ref="0xb7324390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b4e0c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b4e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4e298"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4e378"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4e458"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4e538"/>
        <function-ref name="get" scoped="" ref="0xb7b4e618"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4e6f8"/>
        <function-ref name="set" scoped="" ref="0xb7b4e7d8"/>
        <function-ref name="clr" scoped="" ref="0xb7b4e8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b417a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b41978"/>
        <function-ref name="isInput" scoped="" ref="0xb7b41a58"/>
        <function-ref name="toggle" scoped="" ref="0xb7b41b38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b41c18"/>
        <function-ref name="get" scoped="" ref="0xb7b41cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b41dd8"/>
        <function-ref name="set" scoped="" ref="0xb7b41eb8"/>
        <function-ref name="clr" scoped="" ref="0xb7b40010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b3fe18" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b3fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3d010"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3d2b0"/>
        <function-ref name="get" scoped="" ref="0xb7b3d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3d470"/>
        <function-ref name="set" scoped="" ref="0xb7b3d550"/>
        <function-ref name="clr" scoped="" ref="0xb7b3d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b3b490" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b3b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3b668"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3b748"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3b828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3b908"/>
        <function-ref name="get" scoped="" ref="0xb7b3b9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3bac8"/>
        <function-ref name="set" scoped="" ref="0xb7b3bba8"/>
        <function-ref name="clr" scoped="" ref="0xb7b3bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b39ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b39ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b39ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b39d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b39e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b38010"/>
        <function-ref name="get" scoped="" ref="0xb7b380f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b381d0"/>
        <function-ref name="set" scoped="" ref="0xb7b382b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b38390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b351f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b351f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b353d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b354b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b35590"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b35670"/>
        <function-ref name="get" scoped="" ref="0xb7b35750"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b35830"/>
        <function-ref name="set" scoped="" ref="0xb7b35910"/>
        <function-ref name="clr" scoped="" ref="0xb7b359f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b33898" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b33898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b33a70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b33b50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b33c30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b33d10"/>
        <function-ref name="get" scoped="" ref="0xb7b33df0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b33ed0"/>
        <function-ref name="set" scoped="" ref="0xb7b32010"/>
        <function-ref name="clr" scoped="" ref="0xb7b320f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b31ef8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b31ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b300e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b301c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b302a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b30380"/>
        <function-ref name="get" scoped="" ref="0xb7b30460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b30540"/>
        <function-ref name="set" scoped="" ref="0xb7b30620"/>
        <function-ref name="clr" scoped="" ref="0xb7b30700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b2d540" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b2d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2d718"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2d7f8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2d8d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2d9b8"/>
        <function-ref name="get" scoped="" ref="0xb7b2da98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2db78"/>
        <function-ref name="set" scoped="" ref="0xb7b2dc58"/>
        <function-ref name="clr" scoped="" ref="0xb7b2dd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b2bc48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b2bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2be20"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2bf00"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2a0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b2a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2a2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b2a390"/>
        <function-ref name="clr" scoped="" ref="0xb7b2a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b27308" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b27308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b274e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b275c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b276a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b27780"/>
        <function-ref name="get" scoped="" ref="0xb7b27860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b27940"/>
        <function-ref name="set" scoped="" ref="0xb7b27a20"/>
        <function-ref name="clr" scoped="" ref="0xb7b27b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b25908" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b25908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b25ae0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b25bc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b25ca0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b25d80"/>
        <function-ref name="get" scoped="" ref="0xb7b25e60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b24010"/>
        <function-ref name="set" scoped="" ref="0xb7b240f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7b22010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7b22010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b221e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b222c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b223a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b22488"/>
        <function-ref name="get" scoped="" ref="0xb7b22568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b22648"/>
        <function-ref name="set" scoped="" ref="0xb7b22728"/>
        <function-ref name="clr" scoped="" ref="0xb7b22808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b03ec0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b03ec0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b020c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7b02210" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b02210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7b023e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7b024c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7b025a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7b02688"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7b02768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7af2e48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7af2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7af1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7af2260" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7af2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7af2438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7af2ad8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7af2ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7af2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7af25a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7af25a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7af2780"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7af2860"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7af2940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7c87268" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7c87268"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7c87440"/>
        <function-ref name="runTask" scoped="" ref="0xb7c87520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7c835c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7c835c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c837a0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7c83880"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7c83960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7c15b98" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7c15b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7c15d70"/>
        <function-ref name="runTask" scoped="" ref="0xb7c15e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7c11568" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7c11568"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7c11740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7c15400" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7c15400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c155d8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7c156b8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7c15798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7bfd3a0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7bfd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7bfd578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7c059b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7c059b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7c05b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7c01750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7c01750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7c01928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb7ab8188" loc="50:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7ab8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7ab8360"/>
        <function-ref name="stopDone" scoped="" ref="0xb7ab8440"/>
        <function-ref name="start" scoped="" ref="0xb7ab8520"/>
        <function-ref name="stop" scoped="" ref="0xb7ab8600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7aeb938" loc="46:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7aeb938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7aebb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb7ac7630" loc="48:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7ac7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7ac7808"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ac78e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ac79c8"/>
        <function-ref name="cancel" scoped="" ref="0xb7ac7aa8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7ac7b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0xb7aaf318" loc="51:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7aaf318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7aaf4f0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7aaf5d0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7aaf6b0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7aaf790"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7aaf870"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7aaf950"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7aafa30"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7aafb10"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7aafbf0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7aafcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb7acec80" loc="47:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7acec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7acee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0xb7abf850" loc="49:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0xb7abf850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7abe170"/>
        <function-ref name="fired" scoped="" ref="0xb7ac6570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7ac6b10"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7ac6930"/>
        <function-ref name="getdt" scoped="" ref="0xb7abe530"/>
        <function-ref name="gett0" scoped="" ref="0xb7abe350"/>
        <function-ref name="isRunning" scoped="" ref="0xb7ac6750"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7abfe78"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7ac6e30"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7ac6110"/>
        <function-ref name="stop" scoped="" ref="0xb7ac6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7ae2cd0" loc="45:TestLplC.nc">
      <component-ref qname="TestLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7ae2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7ae2ea8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7aeb010"/>
        <function-ref name="led1On" scoped="" ref="0xb7aeb0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7aeb1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7aeb2b0"/>
        <function-ref name="get" scoped="" ref="0xb7aeb390"/>
        <function-ref name="led1Off" scoped="" ref="0xb7aeb470"/>
        <function-ref name="led2Off" scoped="" ref="0xb7aeb7f0"/>
        <function-ref name="set" scoped="" ref="0xb7aeb550"/>
        <function-ref name="led0On" scoped="" ref="0xb7aeb630"/>
        <function-ref name="led2On" scoped="" ref="0xb7aeb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7aa3bb0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7aa3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7aa3d88"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7aa3e68"/>
        <function-ref name="led1On" scoped="" ref="0xb7aa2010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7aa20f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7aa21d0"/>
        <function-ref name="get" scoped="" ref="0xb7aa22b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb7aa2390"/>
        <function-ref name="led2Off" scoped="" ref="0xb7aa2710"/>
        <function-ref name="set" scoped="" ref="0xb7aa2470"/>
        <function-ref name="led0On" scoped="" ref="0xb7aa2550"/>
        <function-ref name="led2On" scoped="" ref="0xb7aa2630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb7a9eb88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7a9eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9ed60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9ee40"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9ef20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9c018"/>
        <function-ref name="get" scoped="" ref="0xb7a9c0f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9c1d8"/>
        <function-ref name="set" scoped="" ref="0xb7a9c2b8"/>
        <function-ref name="clr" scoped="" ref="0xb7a9c398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7a9fc00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7a9fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a9fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb7a9c510" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7a9c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9c6e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9c7c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9c8a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9c988"/>
        <function-ref name="get" scoped="" ref="0xb7a9ca68"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9cb48"/>
        <function-ref name="set" scoped="" ref="0xb7a9cc28"/>
        <function-ref name="clr" scoped="" ref="0xb7a9cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7a9ff20" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7a9ff20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7a9e110"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7a9e1f0"/>
        <function-ref name="led1On" scoped="" ref="0xb7a9e2d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7a9e3b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7a9e490"/>
        <function-ref name="get" scoped="" ref="0xb7a9e570"/>
        <function-ref name="led1Off" scoped="" ref="0xb7a9e650"/>
        <function-ref name="led2Off" scoped="" ref="0xb7a9e9d0"/>
        <function-ref name="set" scoped="" ref="0xb7a9e730"/>
        <function-ref name="led0On" scoped="" ref="0xb7a9e810"/>
        <function-ref name="led2On" scoped="" ref="0xb7a9e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb7a9ce80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7a9ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9b070"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9b150"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9b230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9b310"/>
        <function-ref name="get" scoped="" ref="0xb7a9b3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9b4d0"/>
        <function-ref name="set" scoped="" ref="0xb7a9b5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a9b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb7a8b928" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7a8b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8bb00"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8bbe0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8bcc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8bda0"/>
        <function-ref name="get" scoped="" ref="0xb7a8be80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8a010"/>
        <function-ref name="set" scoped="" ref="0xb7a8a0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a8a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb7a8a368" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7a8a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8a540"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8a620"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8a700"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8a7e0"/>
        <function-ref name="get" scoped="" ref="0xb7a8a8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8a9a0"/>
        <function-ref name="set" scoped="" ref="0xb7a8aa80"/>
        <function-ref name="clr" scoped="" ref="0xb7a8ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb7a896b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7a896b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a89890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb7a8acf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7a8acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8aed0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a89010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a890f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a891d0"/>
        <function-ref name="get" scoped="" ref="0xb7a892b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a89390"/>
        <function-ref name="set" scoped="" ref="0xb7a89470"/>
        <function-ref name="clr" scoped="" ref="0xb7a89550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7a86bc0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7a86bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7a86d98"/>
        <function-ref name="stopDone" scoped="" ref="0xb7a86e78"/>
        <function-ref name="start" scoped="" ref="0xb7a85010"/>
        <function-ref name="stop" scoped="" ref="0xb7a850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7a690c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a69ad0"/>
        <function-ref name="clear" scoped="" ref="0xb7a69d90"/>
        <function-ref name="isValid" scoped="" ref="0xb7a69810"/>
        <function-ref name="set" scoped="" ref="0xb7a68068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7a854c8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7a854c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7a856a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a85780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a85860"/>
        <function-ref name="cancel" scoped="" ref="0xb7a85940"/>
        <function-ref name="sendDone" scoped="" ref="0xb7a85a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7a84410" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7a84410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a845e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7a7dd78" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a7dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a83010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a830f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a831d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a832b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a83390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7a6e870" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7a6e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7a6ea48"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7a6eb28"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7a6ec08"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7a6ece8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7a6edc8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7a6eea8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7a7c010"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7a7c0f0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7a7c1d0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7a7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7a85df8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7a85df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a84010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7a6e380" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a6e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7a6e558"/>
        <function-ref name="noAck" scoped="" ref="0xb7a6e638"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7a6e718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7a734c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7a734c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7a736a0"/>
        <function-ref name="source" scoped="" ref="0xb7a73780"/>
        <function-ref name="address" scoped="" ref="0xb7a73860"/>
        <function-ref name="destination" scoped="" ref="0xb7a73940"/>
        <function-ref name="setSource" scoped="" ref="0xb7a73a20"/>
        <function-ref name="setDestination" scoped="" ref="0xb7a73b00"/>
        <function-ref name="type" scoped="" ref="0xb7a73be0"/>
        <function-ref name="setType" scoped="" ref="0xb7a73cc0"/>
        <function-ref name="isForMe" scoped="" ref="0xb7a73da0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7a73e80"/>
        <function-ref name="localGroup" scoped="" ref="0xb7a82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb7a6ac50" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb7a6ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a726b0"/>
        <function-ref name="clear" scoped="" ref="0xb7a72970"/>
        <function-ref name="isValid" scoped="" ref="0xb7a723f0"/>
        <function-ref name="set" scoped="" ref="0xb7a72c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7a55a78" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7a55a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7a55c50"/>
        <function-ref name="stopDone" scoped="" ref="0xb7a55d30"/>
        <function-ref name="start" scoped="" ref="0xb7a55e10"/>
        <function-ref name="stop" scoped="" ref="0xb7a55ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb7a490b8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb7a490b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a49c80"/>
        <function-ref name="get" scoped="" ref="0xb7a499c0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a49700"/>
        <function-ref name="set" scoped="" ref="0xb7a48010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7a53528" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a53528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a53700"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a537e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a538c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a539a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a53a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7a542f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7a542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7a544c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a545a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a54688"/>
        <function-ref name="cancel" scoped="" ref="0xb7a54768"/>
        <function-ref name="sendDone" scoped="" ref="0xb7a54848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7a53208" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7a53208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a533e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb7a50e18" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a50e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a4fa08"/>
        <function-ref name="get" scoped="" ref="0xb7a4f748"/>
        <function-ref name="isSet" scoped="" ref="0xb7a4f488"/>
        <function-ref name="set" scoped="" ref="0xb7a4fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7a52d58" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7a52d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7a51010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7a510f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7a511d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7a512b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7a51390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7a51470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7a51550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7a51630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7a51710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7a517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7a54c20" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7a54c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a54df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb7a48488" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a48488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a48e98"/>
        <function-ref name="clear" scoped="" ref="0xb7a46170"/>
        <function-ref name="isValid" scoped="" ref="0xb7a48bd8"/>
        <function-ref name="set" scoped="" ref="0xb7a46430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb7a4bb68" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a4bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a50780"/>
        <function-ref name="get" scoped="" ref="0xb7a504c0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a50200"/>
        <function-ref name="set" scoped="" ref="0xb7a50a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7a52868" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a52868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7a52a40"/>
        <function-ref name="noAck" scoped="" ref="0xb7a52b20"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7a52c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7a53bd0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7a53bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7a53da8"/>
        <function-ref name="source" scoped="" ref="0xb7a53e88"/>
        <function-ref name="address" scoped="" ref="0xb7a52010"/>
        <function-ref name="destination" scoped="" ref="0xb7a520f0"/>
        <function-ref name="setSource" scoped="" ref="0xb7a521d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb7a522b0"/>
        <function-ref name="type" scoped="" ref="0xb7a52390"/>
        <function-ref name="setType" scoped="" ref="0xb7a52470"/>
        <function-ref name="isForMe" scoped="" ref="0xb7a52550"/>
        <function-ref name="setGroup" scoped="" ref="0xb7a52630"/>
        <function-ref name="localGroup" scoped="" ref="0xb7a52710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7a468a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a468a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a45348"/>
        <function-ref name="clear" scoped="" ref="0xb7a45608"/>
        <function-ref name="isValid" scoped="" ref="0xb7a45088"/>
        <function-ref name="set" scoped="" ref="0xb7a458c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb7a257d8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb7a257d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb7a380f0"/>
        <function-ref name="channelError" scoped="" ref="0xb7a25a90"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb7a25b70"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb7a25c50"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb7a25d30"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb7a25e10"/>
        <function-ref name="timerTick" scoped="" ref="0xb7a25ef0"/>
        <function-ref name="getSender" scoped="" ref="0xb7a38010"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb7a259b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb7a1c3c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb7a1c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb7a1c598"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb7a1c678"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb7a1c758"/>
        <function-ref name="timerTick" scoped="" ref="0xb7a1c838"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb7a1c918"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb7a1c9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb7a1a420" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7a1a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0xb7a1a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb7a19c40" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb7a19c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb7a19e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb7a2b368" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb7a2b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb7a2b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb7a329b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb7a329b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb7a32b90"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb7a32c70"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a32d50"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb7a32e30"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb7a32f10"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb7a3e010"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb7a3e0f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a3e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7a03428" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a03428"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7a03600"/>
        <function-ref name="getDSN" scoped="" ref="0xb7a036e0"/>
        <function-ref name="setFCF" scoped="" ref="0xb7a037c0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7a038a0"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7a03980"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7a03a60"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7a03b40"/>
        <function-ref name="setDSN" scoped="" ref="0xb7a03c20"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7a03d00"/>
        <function-ref name="getHeader" scoped="" ref="0xb7a03de0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7a03ec0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7a24010"/>
        <function-ref name="setType" scoped="" ref="0xb7a240f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7a24250"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7a24330"/>
        <function-ref name="setLength" scoped="" ref="0xb7a24410"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7a244f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a245d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7a246b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7a24790"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7a24870"/>
        <function-ref name="getLength" scoped="" ref="0xb7a24950"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7a24a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7a24b10"/>
        <function-ref name="getFCF" scoped="" ref="0xb7a24bf0"/>
        <function-ref name="getType" scoped="" ref="0xb7a24dd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a24eb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7a18010"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7a180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7a18238" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a18238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a18410"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a184f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a185d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a186b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a18790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb79fdcb0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb79fdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb79fde88"/>
        <function-ref name="wait" scoped="" ref="0xb7a02010"/>
        <function-ref name="cancel" scoped="" ref="0xb7a020f0"/>
        <function-ref name="isFree" scoped="" ref="0xb7a021d0"/>
        <function-ref name="getNow" scoped="" ref="0xb7a022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb7a2d610" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb7a2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb7a2d7e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb7a2d8c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb7a2d9a8"/>
        <function-ref name="getSender" scoped="" ref="0xb7a2da88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb7a21050" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7a21050"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb7a21228"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb7a21308"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb7a213e8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb7a214c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0xb7a39998" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb7a39998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb7a39b70"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb7a3f0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a39d30"/>
        <function-ref name="setLength" scoped="" ref="0xb7a39e10"/>
        <function-ref name="getLength" scoped="" ref="0xb7a39ef0"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb7a3f010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb7a39c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb79ca718" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb79ca718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79c8308"/>
        <function-ref name="get" scoped="" ref="0xb79c8048"/>
        <function-ref name="isSet" scoped="" ref="0xb79cad60"/>
        <function-ref name="set" scoped="" ref="0xb79c85c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb79cf928" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79cf928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79cfb00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79cfbe0"/>
        <function-ref name="getPayload" scoped="" ref="0xb79cfcc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79cfda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79cfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb79cb4b0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79cb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79ca088"/>
        <function-ref name="get" scoped="" ref="0xb79cbdb8"/>
        <function-ref name="isSet" scoped="" ref="0xb79cbaf8"/>
        <function-ref name="set" scoped="" ref="0xb79ca348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0xb79c89a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79c89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79c7590"/>
        <function-ref name="get" scoped="" ref="0xb79c72d0"/>
        <function-ref name="isSet" scoped="" ref="0xb79c7010"/>
        <function-ref name="set" scoped="" ref="0xb79c7850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb79c7c28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79c7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79c5818"/>
        <function-ref name="get" scoped="" ref="0xb79c5558"/>
        <function-ref name="isSet" scoped="" ref="0xb79c5298"/>
        <function-ref name="set" scoped="" ref="0xb79c5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb79c4010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79c4a20"/>
        <function-ref name="clear" scoped="" ref="0xb79c4ce0"/>
        <function-ref name="isValid" scoped="" ref="0xb79c4760"/>
        <function-ref name="set" scoped="" ref="0xb79c2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb79cec00" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79cec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb79cedd8"/>
        <function-ref name="noAck" scoped="" ref="0xb79ceeb8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb79cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb79cd230" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79cd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79cddf8"/>
        <function-ref name="get" scoped="" ref="0xb79cdb38"/>
        <function-ref name="isSet" scoped="" ref="0xb79cd878"/>
        <function-ref name="set" scoped="" ref="0xb79cb0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb79ce010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb79ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb79ce1e8"/>
        <function-ref name="source" scoped="" ref="0xb79ce2c8"/>
        <function-ref name="address" scoped="" ref="0xb79ce3a8"/>
        <function-ref name="destination" scoped="" ref="0xb79ce488"/>
        <function-ref name="setSource" scoped="" ref="0xb79ce568"/>
        <function-ref name="setDestination" scoped="" ref="0xb79ce648"/>
        <function-ref name="type" scoped="" ref="0xb79ce728"/>
        <function-ref name="setType" scoped="" ref="0xb79ce808"/>
        <function-ref name="isForMe" scoped="" ref="0xb79ce8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb79ce9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb79ceaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb79c2488" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79c2488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79c2e98"/>
        <function-ref name="clear" scoped="" ref="0xb79c1170"/>
        <function-ref name="isValid" scoped="" ref="0xb79c2bd8"/>
        <function-ref name="set" scoped="" ref="0xb79c1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb79b8b00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb79b8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79b6780"/>
        <function-ref name="get" scoped="" ref="0xb79b64c0"/>
        <function-ref name="isSet" scoped="" ref="0xb79b6200"/>
        <function-ref name="set" scoped="" ref="0xb79b6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb79bde90" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79bde90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79bc080"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79bc160"/>
        <function-ref name="getPayload" scoped="" ref="0xb79bc240"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79bc320"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79bc400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb79ba890" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79ba890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79b8470"/>
        <function-ref name="get" scoped="" ref="0xb79b81b0"/>
        <function-ref name="isSet" scoped="" ref="0xb79baed8"/>
        <function-ref name="set" scoped="" ref="0xb79b8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0xb79b6e20" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79b6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79b5a08"/>
        <function-ref name="get" scoped="" ref="0xb79b5748"/>
        <function-ref name="isSet" scoped="" ref="0xb79b5488"/>
        <function-ref name="set" scoped="" ref="0xb79b5cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb79afba8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb79afba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb79afd80"/>
        <function-ref name="getDSN" scoped="" ref="0xb79afe60"/>
        <function-ref name="setFCF" scoped="" ref="0xb79ae010"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb79ae0f0"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb79ae1d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb79ae2b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb79ae390"/>
        <function-ref name="setDSN" scoped="" ref="0xb79ae470"/>
        <function-ref name="createAckReply" scoped="" ref="0xb79ae550"/>
        <function-ref name="getHeader" scoped="" ref="0xb79ae630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb79ae710"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb79ae7f0"/>
        <function-ref name="setType" scoped="" ref="0xb79ae8d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb79aea30"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb79aeb10"/>
        <function-ref name="setLength" scoped="" ref="0xb79aebf0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb79aecd0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb79aedb0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb79aee90"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb79ad010"/>
        <function-ref name="setFramePending" scoped="" ref="0xb79ad0f0"/>
        <function-ref name="getLength" scoped="" ref="0xb79ad1d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb79ad2b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb79ad390"/>
        <function-ref name="getFCF" scoped="" ref="0xb79ad470"/>
        <function-ref name="getType" scoped="" ref="0xb79ad650"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb79ad730"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb79ad810"/>
        <function-ref name="getFramePending" scoped="" ref="0xb79ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb79b30c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79b30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79b3c88"/>
        <function-ref name="get" scoped="" ref="0xb79b39c8"/>
        <function-ref name="isSet" scoped="" ref="0xb79b3708"/>
        <function-ref name="set" scoped="" ref="0xb79b2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb79b2488" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79b2488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79b2e98"/>
        <function-ref name="clear" scoped="" ref="0xb79b1170"/>
        <function-ref name="isValid" scoped="" ref="0xb79b2bd8"/>
        <function-ref name="set" scoped="" ref="0xb79b1430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb79a9e20" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb79a9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79ac488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb79bd9b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79bd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb79bdb88"/>
        <function-ref name="noAck" scoped="" ref="0xb79bdc68"/>
        <function-ref name="wasAcked" scoped="" ref="0xb79bdd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb79bc620" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79bc620"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79ba1f8"/>
        <function-ref name="get" scoped="" ref="0xb79bcf28"/>
        <function-ref name="isSet" scoped="" ref="0xb79bcc68"/>
        <function-ref name="set" scoped="" ref="0xb79ba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb79ac6f8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb79ac6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79acd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb79b18a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79b18a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79af2d0"/>
        <function-ref name="clear" scoped="" ref="0xb79af590"/>
        <function-ref name="isValid" scoped="" ref="0xb79af010"/>
        <function-ref name="set" scoped="" ref="0xb79af850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0xb7978b40" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7978b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7978d18"/>
        <function-ref name="getDSN" scoped="" ref="0xb7978df8"/>
        <function-ref name="setFCF" scoped="" ref="0xb7978ed8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7977010"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb79770f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb79771d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb79772b0"/>
        <function-ref name="setDSN" scoped="" ref="0xb7977390"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7977470"/>
        <function-ref name="getHeader" scoped="" ref="0xb7977550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7977630"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7977710"/>
        <function-ref name="setType" scoped="" ref="0xb79777f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7977950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7977a30"/>
        <function-ref name="setLength" scoped="" ref="0xb7977b10"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7977bf0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7977cd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7977db0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7977e90"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7976010"/>
        <function-ref name="getLength" scoped="" ref="0xb79760f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb79761d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb79762b0"/>
        <function-ref name="getFCF" scoped="" ref="0xb7976390"/>
        <function-ref name="getType" scoped="" ref="0xb7976570"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7976650"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7976730"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7976810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7976960" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7976960"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7976b38"/>
        <function-ref name="source" scoped="" ref="0xb7976c18"/>
        <function-ref name="address" scoped="" ref="0xb7976cf8"/>
        <function-ref name="destination" scoped="" ref="0xb7976dd8"/>
        <function-ref name="setSource" scoped="" ref="0xb7976eb8"/>
        <function-ref name="setDestination" scoped="" ref="0xb7975010"/>
        <function-ref name="type" scoped="" ref="0xb79750f0"/>
        <function-ref name="setType" scoped="" ref="0xb79751d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb79752b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7975390"/>
        <function-ref name="localGroup" scoped="" ref="0xb7975470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0xb7971cc0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7971cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7971e98"/>
        <function-ref name="getDSN" scoped="" ref="0xb7970010"/>
        <function-ref name="setFCF" scoped="" ref="0xb79700f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb79701d0"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb79702b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7970390"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7970470"/>
        <function-ref name="setDSN" scoped="" ref="0xb7970550"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7970630"/>
        <function-ref name="getHeader" scoped="" ref="0xb7970710"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb79707f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb79708d0"/>
        <function-ref name="setType" scoped="" ref="0xb79709b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7970b10"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7970bf0"/>
        <function-ref name="setLength" scoped="" ref="0xb7970cd0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7970db0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7970e90"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb796f010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb796f0f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb796f1d0"/>
        <function-ref name="getLength" scoped="" ref="0xb796f2b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb796f390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb796f470"/>
        <function-ref name="getFCF" scoped="" ref="0xb796f550"/>
        <function-ref name="getType" scoped="" ref="0xb796f730"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb796f810"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb796f8f0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb796f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb7969b50" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7969b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7969d28"/>
        <function-ref name="changed" scoped="" ref="0xb7969e08"/>
        <function-ref name="amGroup" scoped="" ref="0xb7969ee8"/>
        <function-ref name="setAddress" scoped="" ref="0xb796d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb796fb20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb796fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb796fcf8"/>
        <function-ref name="source" scoped="" ref="0xb796fdd8"/>
        <function-ref name="address" scoped="" ref="0xb796feb8"/>
        <function-ref name="destination" scoped="" ref="0xb796e010"/>
        <function-ref name="setSource" scoped="" ref="0xb796e0f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb796e1d0"/>
        <function-ref name="type" scoped="" ref="0xb796e2b0"/>
        <function-ref name="setType" scoped="" ref="0xb796e390"/>
        <function-ref name="isForMe" scoped="" ref="0xb796e470"/>
        <function-ref name="setGroup" scoped="" ref="0xb796e550"/>
        <function-ref name="localGroup" scoped="" ref="0xb796e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb7930260" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7930260"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7930438"/>
        <function-ref name="changed" scoped="" ref="0xb7930518"/>
        <function-ref name="amGroup" scoped="" ref="0xb79305f8"/>
        <function-ref name="setAddress" scoped="" ref="0xb79306d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7926ab0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7926ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7925120"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb791c8e0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb791c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TOne" ref="0xb7c174a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7920048"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7920448"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7920248"/>
        <function-ref name="overflow" scoped="" ref="0xb7920648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb79099c8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb79099c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb7909ba0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7909c80"/>
        <function-ref name="getControlA" scoped="" ref="0xb7909d60"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb7909e40"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7909f20"/>
        <function-ref name="setControlB" scoped="" ref="0xb790f018"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb790f0f8"/>
        <function-ref name="getControlB" scoped="" ref="0xb790f1d8"/>
        <function-ref name="setControlC" scoped="" ref="0xb790f2b8"/>
        <function-ref name="setControlA" scoped="" ref="0xb790f398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7903ec0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7903ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb7908688"/>
        <function-ref name="test" scoped="" ref="0xb7908288"/>
        <function-ref name="get" scoped="" ref="0xb790e520"/>
        <function-ref name="captured" scoped="" ref="0xb790e9c0"/>
        <function-ref name="reset" scoped="" ref="0xb790ec60"/>
        <function-ref name="isOn" scoped="" ref="0xb7908488"/>
        <function-ref name="set" scoped="" ref="0xb790e720"/>
        <function-ref name="start" scoped="" ref="0xb790ee60"/>
        <function-ref name="stop" scoped="" ref="0xb7908088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb78fc938" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb78fc938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7902cb0"/>
        <function-ref name="fired" scoped="" ref="0xb79024b0"/>
        <function-ref name="get" scoped="" ref="0xb7902010"/>
        <function-ref name="reset" scoped="" ref="0xb79026b0"/>
        <function-ref name="isOn" scoped="" ref="0xb7902eb0"/>
        <function-ref name="set" scoped="" ref="0xb7902210"/>
        <function-ref name="start" scoped="" ref="0xb79028b0"/>
        <function-ref name="stop" scoped="" ref="0xb7902ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7911180" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7911180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7917888"/>
        <function-ref name="test" scoped="" ref="0xb7917488"/>
        <function-ref name="get" scoped="" ref="0xb79117c8"/>
        <function-ref name="setScale" scoped="" ref="0xb7917a88"/>
        <function-ref name="getScale" scoped="" ref="0xb7917d28"/>
        <function-ref name="reset" scoped="" ref="0xb7911e68"/>
        <function-ref name="overflow" scoped="" ref="0xb7911c68"/>
        <function-ref name="isOn" scoped="" ref="0xb7917688"/>
        <function-ref name="set" scoped="" ref="0xb79119c8"/>
        <function-ref name="start" scoped="" ref="0xb7917088"/>
        <function-ref name="stop" scoped="" ref="0xb7917288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78f5370" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78f5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb78f5548"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb78f5628"/>
        <function-ref name="getControlA" scoped="" ref="0xb78f5708"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb78f57e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78f58c8"/>
        <function-ref name="setControlB" scoped="" ref="0xb78f59a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb78f5a88"/>
        <function-ref name="getControlB" scoped="" ref="0xb78f5b68"/>
        <function-ref name="setControlC" scoped="" ref="0xb78f5c48"/>
        <function-ref name="setControlA" scoped="" ref="0xb78f5d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb78f2b30" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb78f2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78f1ea0"/>
        <function-ref name="fired" scoped="" ref="0xb78f16a0"/>
        <function-ref name="get" scoped="" ref="0xb78f1200"/>
        <function-ref name="reset" scoped="" ref="0xb78f18a0"/>
        <function-ref name="isOn" scoped="" ref="0xb78ef0b8"/>
        <function-ref name="set" scoped="" ref="0xb78f1400"/>
        <function-ref name="start" scoped="" ref="0xb78f1aa0"/>
        <function-ref name="stop" scoped="" ref="0xb78f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb78f3010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb78f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb78f2810"/>
        <function-ref name="test" scoped="" ref="0xb78f2410"/>
        <function-ref name="get" scoped="" ref="0xb78f3658"/>
        <function-ref name="captured" scoped="" ref="0xb78f3af8"/>
        <function-ref name="reset" scoped="" ref="0xb78f3d98"/>
        <function-ref name="isOn" scoped="" ref="0xb78f2610"/>
        <function-ref name="set" scoped="" ref="0xb78f3858"/>
        <function-ref name="start" scoped="" ref="0xb78f2010"/>
        <function-ref name="stop" scoped="" ref="0xb78f2210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb78ef338" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb78ef338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78ee648"/>
        <function-ref name="fired" scoped="" ref="0xb78efe20"/>
        <function-ref name="get" scoped="" ref="0xb78ef980"/>
        <function-ref name="reset" scoped="" ref="0xb78ee048"/>
        <function-ref name="isOn" scoped="" ref="0xb78ee848"/>
        <function-ref name="set" scoped="" ref="0xb78efb80"/>
        <function-ref name="start" scoped="" ref="0xb78ee248"/>
        <function-ref name="stop" scoped="" ref="0xb78ee448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb78eeac8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb78eeac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78eddc8"/>
        <function-ref name="fired" scoped="" ref="0xb78ed5c8"/>
        <function-ref name="get" scoped="" ref="0xb78ed128"/>
        <function-ref name="reset" scoped="" ref="0xb78ed7c8"/>
        <function-ref name="isOn" scoped="" ref="0xb78eb010"/>
        <function-ref name="set" scoped="" ref="0xb78ed328"/>
        <function-ref name="start" scoped="" ref="0xb78ed9c8"/>
        <function-ref name="stop" scoped="" ref="0xb78edbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78f75d0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78f75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78f6cd8"/>
        <function-ref name="test" scoped="" ref="0xb78f68d8"/>
        <function-ref name="get" scoped="" ref="0xb78f7c18"/>
        <function-ref name="setScale" scoped="" ref="0xb78f6ed8"/>
        <function-ref name="getScale" scoped="" ref="0xb78f5190"/>
        <function-ref name="reset" scoped="" ref="0xb78f62d8"/>
        <function-ref name="overflow" scoped="" ref="0xb78f60d8"/>
        <function-ref name="isOn" scoped="" ref="0xb78f6ad8"/>
        <function-ref name="set" scoped="" ref="0xb78f7e18"/>
        <function-ref name="start" scoped="" ref="0xb78f64d8"/>
        <function-ref name="stop" scoped="" ref="0xb78f66d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb78ad010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb78ad010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7c8a428"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7c8a428"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb78ad1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb78ad3f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78ad3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78a5af8"/>
        <function-ref name="test" scoped="" ref="0xb78a56f8"/>
        <function-ref name="get" scoped="" ref="0xb78ada40"/>
        <function-ref name="setScale" scoped="" ref="0xb78a5cf8"/>
        <function-ref name="getScale" scoped="" ref="0xb78a4010"/>
        <function-ref name="reset" scoped="" ref="0xb78a50f8"/>
        <function-ref name="overflow" scoped="" ref="0xb78adee0"/>
        <function-ref name="isOn" scoped="" ref="0xb78a58f8"/>
        <function-ref name="set" scoped="" ref="0xb78adc40"/>
        <function-ref name="start" scoped="" ref="0xb78a52f8"/>
        <function-ref name="stop" scoped="" ref="0xb78a54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb78b0528" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb78b0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TOne" ref="0xb7c174a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78b0c78"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7899088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78b0e78"/>
        <function-ref name="overflow" scoped="" ref="0xb7899288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb78994f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78994f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7898c10"/>
        <function-ref name="test" scoped="" ref="0xb7898810"/>
        <function-ref name="get" scoped="" ref="0xb7899b38"/>
        <function-ref name="setScale" scoped="" ref="0xb7898e10"/>
        <function-ref name="getScale" scoped="" ref="0xb78960d8"/>
        <function-ref name="reset" scoped="" ref="0xb7898210"/>
        <function-ref name="overflow" scoped="" ref="0xb7898010"/>
        <function-ref name="isOn" scoped="" ref="0xb7898a10"/>
        <function-ref name="set" scoped="" ref="0xb7899d38"/>
        <function-ref name="start" scoped="" ref="0xb7898410"/>
        <function-ref name="stop" scoped="" ref="0xb7898610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb78955d0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb78955d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7895d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7885138"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7895f20"/>
        <function-ref name="overflow" scoped="" ref="0xb7885338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7923570" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7923570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7923cc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78950d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7923ec0"/>
        <function-ref name="overflow" scoped="" ref="0xb78952d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7884010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7884010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7884658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7884930" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7884930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78830a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78834a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78832a8"/>
        <function-ref name="overflow" scoped="" ref="0xb78836a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb787a490" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb787a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb787aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb7874010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb7874010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7873928"/>
        <function-ref name="fired" scoped="" ref="0xb7874d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb78732e8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7873108"/>
        <function-ref name="getdt" scoped="" ref="0xb7873ce8"/>
        <function-ref name="gett0" scoped="" ref="0xb7873b08"/>
        <function-ref name="isRunning" scoped="" ref="0xb7874ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7874638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7873608"/>
        <function-ref name="startOneShot" scoped="" ref="0xb78748b8"/>
        <function-ref name="stop" scoped="" ref="0xb7874b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7872010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7872010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7872658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7876928" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7876928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7876b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb78647a0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb78647a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7864ef0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7863328"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7863128"/>
        <function-ref name="overflow" scoped="" ref="0xb7863528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb786ca00" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb786ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb786cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb7865ee8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb7865ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7864278"/>
        <function-ref name="fired" scoped="" ref="0xb786ab20"/>
        <function-ref name="startAt" scoped="" ref="0xb786af20"/>
        <function-ref name="isRunning" scoped="" ref="0xb786ad20"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7864478"/>
        <function-ref name="start" scoped="" ref="0xb786a680"/>
        <function-ref name="stop" scoped="" ref="0xb786a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb77da2b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77da2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77d95f8"/>
        <function-ref name="fired" scoped="" ref="0xb77daea0"/>
        <function-ref name="startAt" scoped="" ref="0xb77d92b8"/>
        <function-ref name="isRunning" scoped="" ref="0xb77d90b8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77d97f8"/>
        <function-ref name="start" scoped="" ref="0xb77daa00"/>
        <function-ref name="stop" scoped="" ref="0xb77daca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7861e48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7861e48"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7c8a428"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7c8a428"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb77da050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb77d9ab0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77d9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77d8228"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77d8628"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77d8428"/>
        <function-ref name="overflow" scoped="" ref="0xb77d8828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb72a4d80" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb72a4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb72a2010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb72a20f0"/>
        <function-ref name="getControlA" scoped="" ref="0xb72a21d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb72a22b0"/>
        <function-ref name="setControlB" scoped="" ref="0xb72a2390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb72a2470"/>
        <function-ref name="getControlB" scoped="" ref="0xb72a2550"/>
        <function-ref name="setControlA" scoped="" ref="0xb72a2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb72a9750" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb72a9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb72a8ab0"/>
        <function-ref name="fired" scoped="" ref="0xb72a8370"/>
        <function-ref name="startAt" scoped="" ref="0xb72a8770"/>
        <function-ref name="isRunning" scoped="" ref="0xb72a8570"/>
        <function-ref name="getAlarm" scoped="" ref="0xb72a8cb0"/>
        <function-ref name="start" scoped="" ref="0xb72a9ea0"/>
        <function-ref name="stop" scoped="" ref="0xb72a8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72a9318" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72a9318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72a94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb72a6010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb72a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb72a6760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb72a6b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb72a6960"/>
        <function-ref name="overflow" scoped="" ref="0xb72a6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb72a1ee0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb72a1ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb72a00e0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb72a01c0"/>
        <function-ref name="controlABusy" scoped="" ref="0xb72a02a0"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb72a0380"/>
        <function-ref name="countBusy" scoped="" ref="0xb72a0460"/>
        <function-ref name="compareABusy" scoped="" ref="0xb72a0540"/>
        <function-ref name="getAssr" scoped="" ref="0xb72a0620"/>
        <function-ref name="setAssr" scoped="" ref="0xb72a0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb72a2820" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb72a2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb72a1b28"/>
        <function-ref name="fired" scoped="" ref="0xb72a1328"/>
        <function-ref name="get" scoped="" ref="0xb72a2e68"/>
        <function-ref name="reset" scoped="" ref="0xb72a1528"/>
        <function-ref name="isOn" scoped="" ref="0xb72a1d28"/>
        <function-ref name="set" scoped="" ref="0xb72a1088"/>
        <function-ref name="start" scoped="" ref="0xb72a1728"/>
        <function-ref name="stop" scoped="" ref="0xb72a1928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb72a5010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb72a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb72a4728"/>
        <function-ref name="test" scoped="" ref="0xb72a4328"/>
        <function-ref name="get" scoped="" ref="0xb72a5658"/>
        <function-ref name="setScale" scoped="" ref="0xb72a4928"/>
        <function-ref name="getScale" scoped="" ref="0xb72a4bc8"/>
        <function-ref name="reset" scoped="" ref="0xb72a5cf8"/>
        <function-ref name="overflow" scoped="" ref="0xb72a5af8"/>
        <function-ref name="isOn" scoped="" ref="0xb72a4528"/>
        <function-ref name="set" scoped="" ref="0xb72a5858"/>
        <function-ref name="start" scoped="" ref="0xb72a5ef8"/>
        <function-ref name="stop" scoped="" ref="0xb72a4128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7817c90" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7817c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb7817e68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7815010"/>
        <function-ref name="getControlA" scoped="" ref="0xb78150f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78151d0"/>
        <function-ref name="setControlB" scoped="" ref="0xb78152b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7815390"/>
        <function-ref name="getControlB" scoped="" ref="0xb7815470"/>
        <function-ref name="setControlA" scoped="" ref="0xb7815550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb7813e90" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb7813e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb7812080"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb7812160"/>
        <function-ref name="controlABusy" scoped="" ref="0xb7812240"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb7812320"/>
        <function-ref name="countBusy" scoped="" ref="0xb7812400"/>
        <function-ref name="compareABusy" scoped="" ref="0xb78124e0"/>
        <function-ref name="getAssr" scoped="" ref="0xb78125c0"/>
        <function-ref name="setAssr" scoped="" ref="0xb78126a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7815768" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7815768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7813ab0"/>
        <function-ref name="fired" scoped="" ref="0xb78132b0"/>
        <function-ref name="get" scoped="" ref="0xb7815db0"/>
        <function-ref name="reset" scoped="" ref="0xb78134b0"/>
        <function-ref name="isOn" scoped="" ref="0xb7813cb0"/>
        <function-ref name="set" scoped="" ref="0xb7813010"/>
        <function-ref name="start" scoped="" ref="0xb78136b0"/>
        <function-ref name="stop" scoped="" ref="0xb78138b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7819e40" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7819e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7817610"/>
        <function-ref name="test" scoped="" ref="0xb7817210"/>
        <function-ref name="get" scoped="" ref="0xb78184d8"/>
        <function-ref name="setScale" scoped="" ref="0xb7817810"/>
        <function-ref name="getScale" scoped="" ref="0xb7817ab0"/>
        <function-ref name="reset" scoped="" ref="0xb7818b78"/>
        <function-ref name="overflow" scoped="" ref="0xb7818978"/>
        <function-ref name="isOn" scoped="" ref="0xb7817410"/>
        <function-ref name="set" scoped="" ref="0xb78186d8"/>
        <function-ref name="start" scoped="" ref="0xb7818d78"/>
        <function-ref name="stop" scoped="" ref="0xb7817010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb780bc90" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb780bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb780be68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb780a010"/>
        <function-ref name="getControlA" scoped="" ref="0xb780a0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb780a1d0"/>
        <function-ref name="setControlB" scoped="" ref="0xb780a2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb780a390"/>
        <function-ref name="getControlB" scoped="" ref="0xb780a470"/>
        <function-ref name="setControlA" scoped="" ref="0xb780a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb7809e60" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7809e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7806050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb78061d8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb78061d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb78063b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb7806490"/>
        <function-ref name="controlABusy" scoped="" ref="0xb7806570"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb7806650"/>
        <function-ref name="countBusy" scoped="" ref="0xb7806730"/>
        <function-ref name="compareABusy" scoped="" ref="0xb7806810"/>
        <function-ref name="getAssr" scoped="" ref="0xb78068f0"/>
        <function-ref name="setAssr" scoped="" ref="0xb78069d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb780a768" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb780a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7809ab0"/>
        <function-ref name="fired" scoped="" ref="0xb78092b0"/>
        <function-ref name="get" scoped="" ref="0xb780adb0"/>
        <function-ref name="reset" scoped="" ref="0xb78094b0"/>
        <function-ref name="isOn" scoped="" ref="0xb7809cb0"/>
        <function-ref name="set" scoped="" ref="0xb7809010"/>
        <function-ref name="start" scoped="" ref="0xb78096b0"/>
        <function-ref name="stop" scoped="" ref="0xb78098b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb780ee68" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb780ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb780b610"/>
        <function-ref name="test" scoped="" ref="0xb780b210"/>
        <function-ref name="get" scoped="" ref="0xb780d4d8"/>
        <function-ref name="setScale" scoped="" ref="0xb780b810"/>
        <function-ref name="getScale" scoped="" ref="0xb780bab0"/>
        <function-ref name="reset" scoped="" ref="0xb780db78"/>
        <function-ref name="overflow" scoped="" ref="0xb780d978"/>
        <function-ref name="isOn" scoped="" ref="0xb780b410"/>
        <function-ref name="set" scoped="" ref="0xb780d6d8"/>
        <function-ref name="start" scoped="" ref="0xb780dd78"/>
        <function-ref name="stop" scoped="" ref="0xb780b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb77bfa40" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb77bfa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77bfc18"/>
        <function-ref name="runTask" scoped="" ref="0xb77bfcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb77c0320" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77c0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77bf668"/>
        <function-ref name="fired" scoped="" ref="0xb77c0f10"/>
        <function-ref name="startAt" scoped="" ref="0xb77bf328"/>
        <function-ref name="isRunning" scoped="" ref="0xb77bf128"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77bf868"/>
        <function-ref name="start" scoped="" ref="0xb77c0a70"/>
        <function-ref name="stop" scoped="" ref="0xb77c0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77d6340" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77d6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77c1c48"/>
        <function-ref name="fired" scoped="" ref="0xb77c1068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb77c1608"/>
        <function-ref name="isOneShot" scoped="" ref="0xb77c1428"/>
        <function-ref name="getdt" scoped="" ref="0xb77c0048"/>
        <function-ref name="gett0" scoped="" ref="0xb77c1e28"/>
        <function-ref name="isRunning" scoped="" ref="0xb77c1248"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb77d6968"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb77c1928"/>
        <function-ref name="startOneShot" scoped="" ref="0xb77d6be8"/>
        <function-ref name="stop" scoped="" ref="0xb77d6e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb7794be8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb7794be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7794dc0"/>
        <function-ref name="runTask" scoped="" ref="0xb7794ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb7797cc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb7797cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7794650"/>
        <function-ref name="fired" scoped="" ref="0xb77969f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7794010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7796db0"/>
        <function-ref name="getdt" scoped="" ref="0xb7794a10"/>
        <function-ref name="gett0" scoped="" ref="0xb7794830"/>
        <function-ref name="isRunning" scoped="" ref="0xb7796bd0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7796310"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7794330"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7796590"/>
        <function-ref name="stop" scoped="" ref="0xb7796810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77bbc78" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77bbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7797670"/>
        <function-ref name="fired" scoped="" ref="0xb77999d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7797010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7799db8"/>
        <function-ref name="getdt" scoped="" ref="0xb7797a50"/>
        <function-ref name="gett0" scoped="" ref="0xb7797860"/>
        <function-ref name="isRunning" scoped="" ref="0xb7799bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb77992c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7797340"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7799558"/>
        <function-ref name="stop" scoped="" ref="0xb77997e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb77920f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb77920f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7792738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7792a10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7792a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7791200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7791600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7791400"/>
        <function-ref name="overflow" scoped="" ref="0xb7791800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb778b5c8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb778b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb778b7a0"/>
        <function-ref name="wait" scoped="" ref="0xb778b880"/>
        <function-ref name="cancel" scoped="" ref="0xb778b960"/>
        <function-ref name="isFree" scoped="" ref="0xb778ba40"/>
        <function-ref name="getNow" scoped="" ref="0xb778bb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb778bf10" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb778bf10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7789278"/>
        <function-ref name="fired" scoped="" ref="0xb778ab20"/>
        <function-ref name="startAt" scoped="" ref="0xb778af20"/>
        <function-ref name="isRunning" scoped="" ref="0xb778ad20"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7789478"/>
        <function-ref name="start" scoped="" ref="0xb778a680"/>
        <function-ref name="stop" scoped="" ref="0xb778a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb77849e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb77849e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7784bc0"/>
        <function-ref name="wait" scoped="" ref="0xb7784ca0"/>
        <function-ref name="cancel" scoped="" ref="0xb7784d80"/>
        <function-ref name="isFree" scoped="" ref="0xb7784e60"/>
        <function-ref name="getNow" scoped="" ref="0xb7783010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb77832e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77832e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7782638"/>
        <function-ref name="fired" scoped="" ref="0xb7783ed0"/>
        <function-ref name="startAt" scoped="" ref="0xb77822f8"/>
        <function-ref name="isRunning" scoped="" ref="0xb77820f8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7782838"/>
        <function-ref name="start" scoped="" ref="0xb7783a30"/>
        <function-ref name="stop" scoped="" ref="0xb7783cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb777cd90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb777cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7781010"/>
        <function-ref name="suspend" scoped="" ref="0xb77810f0"/>
        <function-ref name="resume" scoped="" ref="0xb77811d0"/>
        <function-ref name="run" scoped="" ref="0xb77812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb77738a0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb77738a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7773a78"/>
        <function-ref name="suspend" scoped="" ref="0xb7773b58"/>
        <function-ref name="resume" scoped="" ref="0xb7773c38"/>
        <function-ref name="run" scoped="" ref="0xb7773d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7768010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7768010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77681e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb77682c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77683a8"/>
        <function-ref name="cancel" scoped="" ref="0xb7768488"/>
        <function-ref name="sendDone" scoped="" ref="0xb7768568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb77686e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb77686e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77688b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb776bcb8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb776bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb776be90"/>
        <function-ref name="getPayload" scoped="" ref="0xb776a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb776a0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb776a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb776a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb776ac60" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb776ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb776ae38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb77676d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb77676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0xb77678a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb776a688" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb776a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb776a860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb7768a08" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7768a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7768be0"/>
        <function-ref name="source" scoped="" ref="0xb7768cc0"/>
        <function-ref name="address" scoped="" ref="0xb7768da0"/>
        <function-ref name="destination" scoped="" ref="0xb7768e80"/>
        <function-ref name="setSource" scoped="" ref="0xb7767010"/>
        <function-ref name="setDestination" scoped="" ref="0xb77670f0"/>
        <function-ref name="type" scoped="" ref="0xb77671d0"/>
        <function-ref name="setType" scoped="" ref="0xb77672b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb7767390"/>
        <function-ref name="setGroup" scoped="" ref="0xb7767470"/>
        <function-ref name="localGroup" scoped="" ref="0xb7767550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7751010" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7751010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77511e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb77512c8"/>
        <function-ref name="start" scoped="" ref="0xb77513a8"/>
        <function-ref name="stop" scoped="" ref="0xb7751488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7750618" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7750618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77507f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb77508d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77509b0"/>
        <function-ref name="cancel" scoped="" ref="0xb7750a90"/>
        <function-ref name="sendDone" scoped="" ref="0xb7750b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7750ce8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7750ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7750ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb77515d0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb77515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77517a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7751888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7751968"/>
        <function-ref name="cancel" scoped="" ref="0xb7751a48"/>
        <function-ref name="sendDone" scoped="" ref="0xb7751b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7750030" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7750030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7750208"/>
        <function-ref name="stopDone" scoped="" ref="0xb77502e8"/>
        <function-ref name="start" scoped="" ref="0xb77503c8"/>
        <function-ref name="stop" scoped="" ref="0xb77504a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7751c70" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7751c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7751e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb774b2d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb774b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb774b4a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb774b588"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb774b668"/>
        <function-ref name="cancel" scoped="" ref="0xb774b748"/>
        <function-ref name="sendDone" scoped="" ref="0xb774b828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb774b9a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb774b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb774bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb774c298" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb774c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb774c470"/>
        <function-ref name="getPayload" scoped="" ref="0xb774c550"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb774c630"/>
        <function-ref name="cancel" scoped="" ref="0xb774c710"/>
        <function-ref name="sendDone" scoped="" ref="0xb774c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0xb774cf20" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0xb774cf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb774b110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb774bcc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb774bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb774bea0"/>
        <function-ref name="getDSN" scoped="" ref="0xb774a010"/>
        <function-ref name="setFCF" scoped="" ref="0xb774a0f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb774a1d0"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb774a2b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb774a390"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb774a470"/>
        <function-ref name="setDSN" scoped="" ref="0xb774a550"/>
        <function-ref name="createAckReply" scoped="" ref="0xb774a630"/>
        <function-ref name="getHeader" scoped="" ref="0xb774a710"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb774a7f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb774a8d0"/>
        <function-ref name="setType" scoped="" ref="0xb774a9b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb774ab10"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb774abf0"/>
        <function-ref name="setLength" scoped="" ref="0xb774acd0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb774adb0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb774ae90"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7749010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb77490f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb77491d0"/>
        <function-ref name="getLength" scoped="" ref="0xb77492b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7749390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7749470"/>
        <function-ref name="getFCF" scoped="" ref="0xb7749550"/>
        <function-ref name="getType" scoped="" ref="0xb7749730"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7749810"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb77498f0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb77499d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb774c938" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb774c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb774cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb773c7e8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb773c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb773c9c0"/>
        <function-ref name="stopDone" scoped="" ref="0xb773caa0"/>
        <function-ref name="start" scoped="" ref="0xb773cb80"/>
        <function-ref name="stop" scoped="" ref="0xb773cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb773a990" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb773a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb773ab68"/>
        <function-ref name="getPayload" scoped="" ref="0xb773ac48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb773ad28"/>
        <function-ref name="cancel" scoped="" ref="0xb773ae08"/>
        <function-ref name="sendDone" scoped="" ref="0xb773aee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7739090" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7739090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7739268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb773cda8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb773cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb773b010"/>
        <function-ref name="getPayload" scoped="" ref="0xb773b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb773b1d0"/>
        <function-ref name="cancel" scoped="" ref="0xb773b2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb773b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb773b808" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb773b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb773b9e0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb773bac0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb773bba0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb773bc80"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb773bd60"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb773be40"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb773bf20"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb773a018"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb773a0f8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb773a1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSleepInterval" ref="0xb7739490" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb7739490"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7738068"/>
        <function-ref name="get" scoped="" ref="0xb7739d98"/>
        <function-ref name="isSet" scoped="" ref="0xb7739ad8"/>
        <function-ref name="set" scoped="" ref="0xb7738328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb773a3a8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb773a3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb773a580"/>
        <function-ref name="stopDone" scoped="" ref="0xb773a660"/>
        <function-ref name="start" scoped="" ref="0xb773a740"/>
        <function-ref name="stop" scoped="" ref="0xb773a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb773b4d8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb773b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb773b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7738630" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7738630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7738808"/>
        <function-ref name="getDSN" scoped="" ref="0xb77388e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb77389c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7738aa8"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7738b88"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7738c68"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7738d48"/>
        <function-ref name="setDSN" scoped="" ref="0xb7738e28"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7738f08"/>
        <function-ref name="getHeader" scoped="" ref="0xb7737010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb77370f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb77371d0"/>
        <function-ref name="setType" scoped="" ref="0xb77372b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7737410"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb77374f0"/>
        <function-ref name="setLength" scoped="" ref="0xb77375d0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb77376b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7737790"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7737870"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7737950"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7737a30"/>
        <function-ref name="getLength" scoped="" ref="0xb7737b10"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7737bf0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7737cd0"/>
        <function-ref name="getFCF" scoped="" ref="0xb7737db0"/>
        <function-ref name="getType" scoped="" ref="0xb7736010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb77360f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb77361d0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb77362b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb7736408" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7736408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb77365e0"/>
        <function-ref name="noAck" scoped="" ref="0xb77366c0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb77367a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb77320d0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb77320d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77322a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7732388"/>
        <function-ref name="start" scoped="" ref="0xb7732468"/>
        <function-ref name="stop" scoped="" ref="0xb7732548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb772f260" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb772f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb772f438"/>
        <function-ref name="getPayload" scoped="" ref="0xb772f518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb772f5f8"/>
        <function-ref name="cancel" scoped="" ref="0xb772f6d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb772f7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb772f930" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb772f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb772fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7732690" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7732690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7732868"/>
        <function-ref name="getPayload" scoped="" ref="0xb7732948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7732a28"/>
        <function-ref name="cancel" scoped="" ref="0xb7732b08"/>
        <function-ref name="sendDone" scoped="" ref="0xb7732be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7730078" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7730078"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7730250"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7730330"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7730410"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb77304f0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb77305d0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb77306b0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7730790"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7730870"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7730950"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7730a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSleepInterval" ref="0xb772fd30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb772fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb772e910"/>
        <function-ref name="get" scoped="" ref="0xb772e650"/>
        <function-ref name="isSet" scoped="" ref="0xb772e390"/>
        <function-ref name="set" scoped="" ref="0xb772ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7730c00" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7730c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7730dd8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7730eb8"/>
        <function-ref name="start" scoped="" ref="0xb772f010"/>
        <function-ref name="stop" scoped="" ref="0xb772f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7732d30" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7732d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7732f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb772eed8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb772eed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb772d0c0"/>
        <function-ref name="getDSN" scoped="" ref="0xb772d1a0"/>
        <function-ref name="setFCF" scoped="" ref="0xb772d280"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb772d360"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb772d440"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb772d520"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb772d600"/>
        <function-ref name="setDSN" scoped="" ref="0xb772d6e0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb772d7c0"/>
        <function-ref name="getHeader" scoped="" ref="0xb772d8a0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb772d980"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb772da60"/>
        <function-ref name="setType" scoped="" ref="0xb772db40"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb772dca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb772dd80"/>
        <function-ref name="setLength" scoped="" ref="0xb772de60"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb772c010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb772c0f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb772c1d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb772c2b0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb772c390"/>
        <function-ref name="getLength" scoped="" ref="0xb772c470"/>
        <function-ref name="setDestPan" scoped="" ref="0xb772c550"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb772c630"/>
        <function-ref name="getFCF" scoped="" ref="0xb772c710"/>
        <function-ref name="getType" scoped="" ref="0xb772c8f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb772c9d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb772cab0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb772cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0xb7725e50" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0xb7725e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7724050"/>
        <function-ref name="runTask" scoped="" ref="0xb7724130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb772cce8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb772cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb772cec0"/>
        <function-ref name="noAck" scoped="" ref="0xb772b010"/>
        <function-ref name="wasAcked" scoped="" ref="0xb772b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb772b2d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/LowPowerListeningLayerP.nc">
      <component-ref qname="LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb772b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb772abf0"/>
        <function-ref name="fired" scoped="" ref="0xb772a010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb772a5b0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb772a3d0"/>
        <function-ref name="getdt" scoped="" ref="0xb7728010"/>
        <function-ref name="gett0" scoped="" ref="0xb772add0"/>
        <function-ref name="isRunning" scoped="" ref="0xb772a1f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb772b8f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb772a8d0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb772bb78"/>
        <function-ref name="stop" scoped="" ref="0xb772bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb76f9330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LowPowerListeningLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb76f9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb76f8c28"/>
        <function-ref name="fired" scoped="" ref="0xb76f8048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb76f85e8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb76f8408"/>
        <function-ref name="getdt" scoped="" ref="0xb76f1010"/>
        <function-ref name="gett0" scoped="" ref="0xb76f8e08"/>
        <function-ref name="isRunning" scoped="" ref="0xb76f8228"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb76f9958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb76f8908"/>
        <function-ref name="startOneShot" scoped="" ref="0xb76f9bd8"/>
        <function-ref name="stop" scoped="" ref="0xb76f9e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb76f0b28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb76f0b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb76ee4c8"/>
        <function-ref name="fired" scoped="" ref="0xb76ef8c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb76efe60"/>
        <function-ref name="isOneShot" scoped="" ref="0xb76efc80"/>
        <function-ref name="getdt" scoped="" ref="0xb76ee888"/>
        <function-ref name="gett0" scoped="" ref="0xb76ee6a8"/>
        <function-ref name="isRunning" scoped="" ref="0xb76efaa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb76ef1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb76ee1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb76ef460"/>
        <function-ref name="stop" scoped="" ref="0xb76ef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb76e8ca0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb76e8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb76e8e78"/>
        <function-ref name="stopDone" scoped="" ref="0xb76e5010"/>
        <function-ref name="start" scoped="" ref="0xb76e50f0"/>
        <function-ref name="stop" scoped="" ref="0xb76e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb76df340" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76df340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76df518"/>
        <function-ref name="turnOn" scoped="" ref="0xb76df5f8"/>
        <function-ref name="setChannel" scoped="" ref="0xb76df6d8"/>
        <function-ref name="done" scoped="" ref="0xb76df7b8"/>
        <function-ref name="standby" scoped="" ref="0xb76df898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb76e5318" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb76e5318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76e54f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb76e55d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76e56b0"/>
        <function-ref name="cancel" scoped="" ref="0xb76e5790"/>
        <function-ref name="sendDone" scoped="" ref="0xb76e5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb76d8628" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb76d8628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76d8800"/>
        <function-ref name="payloadLength" scoped="" ref="0xb76d88e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb76d89c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76d8aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb76d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb76d8228" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76d8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76d8400"/>
        <function-ref name="header" scoped="" ref="0xb76d84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb76e59b8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb76e59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76e5b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb76dc680" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76dc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76dc858"/>
        <function-ref name="ready" scoped="" ref="0xb76dc938"/>
        <function-ref name="sendDone" scoped="" ref="0xb76dca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb76d6a38" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb76d6a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb76d6c10"/>
        <function-ref name="stopDone" scoped="" ref="0xb76d6cf0"/>
        <function-ref name="start" scoped="" ref="0xb76d6dd0"/>
        <function-ref name="stop" scoped="" ref="0xb76d6eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb76d5040" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb76d5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76d5218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb76d5d78" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76d5d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76d4010"/>
        <function-ref name="turnOn" scoped="" ref="0xb76d40f0"/>
        <function-ref name="setChannel" scoped="" ref="0xb76d41d0"/>
        <function-ref name="done" scoped="" ref="0xb76d42b0"/>
        <function-ref name="standby" scoped="" ref="0xb76d4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb76d5360" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb76d5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76d5538"/>
        <function-ref name="getPayload" scoped="" ref="0xb76d5618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76d56f8"/>
        <function-ref name="cancel" scoped="" ref="0xb76d57d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76d58b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb76d3410" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb76d3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76d35e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb76d36c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb76d37a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76d3888"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb76d3968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb76d3010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76d31e8"/>
        <function-ref name="header" scoped="" ref="0xb76d32c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb76ce3c8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb76ce3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76ce5a0"/>
        <function-ref name="runTask" scoped="" ref="0xb76ce680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb76d5a00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb76d5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76d5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb76c9010" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb76c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76c91e8"/>
        <function-ref name="runTask" scoped="" ref="0xb76c92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb76baaa0" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb76baaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76bac78"/>
        <function-ref name="runTask" scoped="" ref="0xb76bad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb76d4aa0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76d4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76d4c78"/>
        <function-ref name="ready" scoped="" ref="0xb76d4d58"/>
        <function-ref name="sendDone" scoped="" ref="0xb76d4e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb76d44d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb76d44d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb76d46b0"/>
        <function-ref name="suspend" scoped="" ref="0xb76d4790"/>
        <function-ref name="resume" scoped="" ref="0xb76d4870"/>
        <function-ref name="run" scoped="" ref="0xb76d4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76ad6b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76ad6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76ad890"/>
        <function-ref name="getPayload" scoped="" ref="0xb76ad970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76ada50"/>
        <function-ref name="cancel" scoped="" ref="0xb76adb30"/>
        <function-ref name="sendDone" scoped="" ref="0xb76adc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76add90" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76add90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76ac010"/>
        <function-ref name="header" scoped="" ref="0xb76ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb76aeb28" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb76aeb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76aed00"/>
        <function-ref name="getPayload" scoped="" ref="0xb76aede0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76aeec0"/>
        <function-ref name="cancel" scoped="" ref="0xb76ad010"/>
        <function-ref name="sendDone" scoped="" ref="0xb76ad0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb76ac268" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb76ac268"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb76ac440"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb76ac520"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb76ac600"/>
        <function-ref name="getSender" scoped="" ref="0xb76ac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76ad240" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76ad240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76ad418"/>
        <function-ref name="header" scoped="" ref="0xb76ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76a75d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76a75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76a77a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb76a7888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76a7968"/>
        <function-ref name="cancel" scoped="" ref="0xb76a7a48"/>
        <function-ref name="sendDone" scoped="" ref="0xb76a7b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76a7ca8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76a7ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76a7e80"/>
        <function-ref name="header" scoped="" ref="0xb76a6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb769b2e0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb769b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb769b4b8"/>
        <function-ref name="clearAll" scoped="" ref="0xb769b598"/>
        <function-ref name="get" scoped="" ref="0xb769b678"/>
        <function-ref name="set" scoped="" ref="0xb769b758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb76a8700" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb76a8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76a88d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb76a89b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76a8a98"/>
        <function-ref name="cancel" scoped="" ref="0xb76a8b78"/>
        <function-ref name="sendDone" scoped="" ref="0xb76a8c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb769f870" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb769f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb769fa48"/>
        <function-ref name="insertNode" scoped="" ref="0xb769fb28"/>
        <function-ref name="getNode" scoped="" ref="0xb769fc08"/>
        <function-ref name="evicted" scoped="" ref="0xb769fce8"/>
        <function-ref name="getIndex" scoped="" ref="0xb769fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76a8da8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76a8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76a7010"/>
        <function-ref name="header" scoped="" ref="0xb76a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76a7238" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76a7238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76a7410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb76a6160" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb76a6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb76a6338"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb76a6418"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb76a64f8"/>
        <function-ref name="getSender" scoped="" ref="0xb76a65d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb768f870" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb768f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb768fa48"/>
        <function-ref name="insertNode" scoped="" ref="0xb768fb28"/>
        <function-ref name="getNode" scoped="" ref="0xb768fc08"/>
        <function-ref name="evicted" scoped="" ref="0xb768fce8"/>
        <function-ref name="getIndex" scoped="" ref="0xb768fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb768a288" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb768a288"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb768a460"/>
        <function-ref name="clearAll" scoped="" ref="0xb768a540"/>
        <function-ref name="get" scoped="" ref="0xb768a620"/>
        <function-ref name="set" scoped="" ref="0xb768a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb768b930" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb768b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb768bb08"/>
        <function-ref name="insertNode" scoped="" ref="0xb768bbe8"/>
        <function-ref name="getNode" scoped="" ref="0xb768bcc8"/>
        <function-ref name="evicted" scoped="" ref="0xb768bda8"/>
        <function-ref name="getIndex" scoped="" ref="0xb768be88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb768b608" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb768b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb768b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb7675d98" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7675d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7690010"/>
        <function-ref name="clearAll" scoped="" ref="0xb76900f0"/>
        <function-ref name="get" scoped="" ref="0xb76901d0"/>
        <function-ref name="set" scoped="" ref="0xb76902b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7672b38" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7672b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7672d10"/>
        <function-ref name="ready" scoped="" ref="0xb7672df0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7672ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7670070" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7670070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7670248"/>
        <function-ref name="header" scoped="" ref="0xb7670328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb7672418" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb7672418"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76725f0"/>
        <function-ref name="turnOn" scoped="" ref="0xb76726d0"/>
        <function-ref name="setChannel" scoped="" ref="0xb76727b0"/>
        <function-ref name="done" scoped="" ref="0xb7672890"/>
        <function-ref name="standby" scoped="" ref="0xb7672970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb76704a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb76704a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb7670680"/>
        <function-ref name="turnOn" scoped="" ref="0xb7670760"/>
        <function-ref name="setChannel" scoped="" ref="0xb7670840"/>
        <function-ref name="done" scoped="" ref="0xb7670920"/>
        <function-ref name="standby" scoped="" ref="0xb7670a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7670b80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7670b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb766f470"/>
        <function-ref name="channelError" scoped="" ref="0xb7670e38"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb7670f18"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb766f010"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb766f0f0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb766f1d0"/>
        <function-ref name="timerTick" scoped="" ref="0xb766f2b0"/>
        <function-ref name="getSender" scoped="" ref="0xb766f390"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb7670d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7672010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7672010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76721e8"/>
        <function-ref name="header" scoped="" ref="0xb76722c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7673a68" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7673a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7673c40"/>
        <function-ref name="ready" scoped="" ref="0xb7673d20"/>
        <function-ref name="sendDone" scoped="" ref="0xb7673e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb766aa90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb766aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb766ac68"/>
        <function-ref name="ready" scoped="" ref="0xb766ad48"/>
        <function-ref name="sendDone" scoped="" ref="0xb766ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0xb766a040" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb766a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb766a918"/>
        <function-ref name="channelError" scoped="" ref="0xb766a2f8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb766a3d8"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb766a4b8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb766a598"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb766a678"/>
        <function-ref name="timerTick" scoped="" ref="0xb766a758"/>
        <function-ref name="getSender" scoped="" ref="0xb766a838"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb766a218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7669010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7669010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76691e8"/>
        <function-ref name="header" scoped="" ref="0xb76692c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb766b900" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb766b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb766bad8"/>
        <function-ref name="turnOn" scoped="" ref="0xb766bbb8"/>
        <function-ref name="setChannel" scoped="" ref="0xb766bc98"/>
        <function-ref name="done" scoped="" ref="0xb766bd78"/>
        <function-ref name="standby" scoped="" ref="0xb766be58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb7669448" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb7669448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb7669620"/>
        <function-ref name="turnOn" scoped="" ref="0xb7669700"/>
        <function-ref name="setChannel" scoped="" ref="0xb76697e0"/>
        <function-ref name="done" scoped="" ref="0xb76698c0"/>
        <function-ref name="standby" scoped="" ref="0xb76699a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb7667a30" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb7667a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb7667c08"/>
        <function-ref name="insertNode" scoped="" ref="0xb7667ce8"/>
        <function-ref name="getNode" scoped="" ref="0xb7667dc8"/>
        <function-ref name="evicted" scoped="" ref="0xb7667ea8"/>
        <function-ref name="getIndex" scoped="" ref="0xb7666010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb766b4f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb766b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb766b6d0"/>
        <function-ref name="header" scoped="" ref="0xb766b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb7666168" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7666168"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7666340"/>
        <function-ref name="clearAll" scoped="" ref="0xb7666420"/>
        <function-ref name="get" scoped="" ref="0xb7666500"/>
        <function-ref name="set" scoped="" ref="0xb76665e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb7666728" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb7666728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7666900"/>
        <function-ref name="suspend" scoped="" ref="0xb76669e0"/>
        <function-ref name="resume" scoped="" ref="0xb7666ac0"/>
        <function-ref name="run" scoped="" ref="0xb7666ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb766b010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb766b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb766b1e8"/>
        <function-ref name="ready" scoped="" ref="0xb766b2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb766b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0xb764fe38" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0xb764fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb764d050"/>
        <function-ref name="runTask" scoped="" ref="0xb764d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb7669ba8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7669ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb76674c8"/>
        <function-ref name="fired" scoped="" ref="0xb76688d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7668e70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7668c90"/>
        <function-ref name="getdt" scoped="" ref="0xb7667888"/>
        <function-ref name="gett0" scoped="" ref="0xb76676a8"/>
        <function-ref name="isRunning" scoped="" ref="0xb7668ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb76681f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb76671a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7668470"/>
        <function-ref name="stop" scoped="" ref="0xb76686f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb766dcd8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb766dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb764a650"/>
        <function-ref name="fired" scoped="" ref="0xb764ba30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb764a010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb764bdf0"/>
        <function-ref name="getdt" scoped="" ref="0xb764aa10"/>
        <function-ref name="gett0" scoped="" ref="0xb764a830"/>
        <function-ref name="isRunning" scoped="" ref="0xb764bc10"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb764b350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb764a330"/>
        <function-ref name="startOneShot" scoped="" ref="0xb764b5d0"/>
        <function-ref name="stop" scoped="" ref="0xb764b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb7648778" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7648778"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7648950"/>
        <function-ref name="clearAll" scoped="" ref="0xb7648a30"/>
        <function-ref name="get" scoped="" ref="0xb7648b10"/>
        <function-ref name="set" scoped="" ref="0xb7648bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76426c0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76426c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7642898"/>
        <function-ref name="ready" scoped="" ref="0xb7642978"/>
        <function-ref name="sendDone" scoped="" ref="0xb7642a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7642bd8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7642bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7642db0"/>
        <function-ref name="header" scoped="" ref="0xb7642e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7641030" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7641030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb7641208"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb76412e8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb76413c8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb76414a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7642240" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7642240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7642418"/>
        <function-ref name="header" scoped="" ref="0xb76424f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7645cb0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7645cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7645e88"/>
        <function-ref name="ready" scoped="" ref="0xb7642010"/>
        <function-ref name="sendDone" scoped="" ref="0xb76420f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb763dc88" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb763dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb763de60"/>
        <function-ref name="ready" scoped="" ref="0xb763c010"/>
        <function-ref name="sendDone" scoped="" ref="0xb763c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb763c270" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb763c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb763c448"/>
        <function-ref name="header" scoped="" ref="0xb763c528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb763c678" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb763c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb763c850"/>
        <function-ref name="wait" scoped="" ref="0xb763c930"/>
        <function-ref name="cancel" scoped="" ref="0xb763ca10"/>
        <function-ref name="isFree" scoped="" ref="0xb763caf0"/>
        <function-ref name="getNow" scoped="" ref="0xb763cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb7638b70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7638b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7638d48"/>
        <function-ref name="rand32" scoped="" ref="0xb7638e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb763a010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb763a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb763a1e8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb763a2c8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb763a3a8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb763a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb763d808" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb763d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb763d9e0"/>
        <function-ref name="header" scoped="" ref="0xb763dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb763d320" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb763d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb763d4f8"/>
        <function-ref name="ready" scoped="" ref="0xb763d5d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb763d6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb7636778" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb7636778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7636950"/>
        <function-ref name="runTask" scoped="" ref="0xb7636a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb7624270" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7624270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7624448"/>
        <function-ref name="rand32" scoped="" ref="0xb7624528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb7621918" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb7621918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7624010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7625010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7625010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76251e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb761d898" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb761d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb761da70"/>
        <function-ref name="rand32" scoped="" ref="0xb761db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb761d010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb761d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb761d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb761eb90" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb761eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb761ed68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7615010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7615010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76151e8"/>
        <function-ref name="ready" scoped="" ref="0xb76152c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76153a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7615528" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7615528"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7615700"/>
        <function-ref name="header" scoped="" ref="0xb76157e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7615960" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7615960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb7615b38"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb7615c18"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7615cf8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb7615dd8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb7615eb8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb7614010"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb76140f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb76141d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb761fad0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb761fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb761fca8"/>
        <function-ref name="header" scoped="" ref="0xb761fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb761f5e8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb761f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb761f7c0"/>
        <function-ref name="ready" scoped="" ref="0xb761f8a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb761f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76109a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76109a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7610b80"/>
        <function-ref name="ready" scoped="" ref="0xb7610c60"/>
        <function-ref name="sendDone" scoped="" ref="0xb7610d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7610ec0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7610ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb760f0c0"/>
        <function-ref name="header" scoped="" ref="0xb760f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb760f2f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb760f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb760f4c8"/>
        <function-ref name="wait" scoped="" ref="0xb760f5a8"/>
        <function-ref name="cancel" scoped="" ref="0xb760f688"/>
        <function-ref name="isFree" scoped="" ref="0xb760f768"/>
        <function-ref name="getNow" scoped="" ref="0xb760f848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7610528" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7610528"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7610700"/>
        <function-ref name="header" scoped="" ref="0xb76107e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0xb760f9a0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb760f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb760fb78"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb760fc58"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb760fd38"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb760fe18"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb760fef8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb760e010"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb760e0f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb760e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7610040" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7610040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7610218"/>
        <function-ref name="ready" scoped="" ref="0xb76102f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76103d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7600790" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7600790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7600968"/>
        <function-ref name="stopDone" scoped="" ref="0xb7600a48"/>
        <function-ref name="start" scoped="" ref="0xb7600b28"/>
        <function-ref name="stop" scoped="" ref="0xb7600c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb75e7230" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb75e7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb75e7408"/>
        <function-ref name="request" scoped="" ref="0xb75e74e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xb75e6090" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xb75e6090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75e6268"/>
        <function-ref name="ready" scoped="" ref="0xb75e6348"/>
        <function-ref name="sendDone" scoped="" ref="0xb75e6428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb75e5450" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb75e5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75e5628"/>
        <function-ref name="getPayload" scoped="" ref="0xb75e5708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb75e57e8"/>
        <function-ref name="cancel" scoped="" ref="0xb75e58c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75e59a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb75e5b08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb75e5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb75e5ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb75e8230" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb75e8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb75e8408"/>
        <function-ref name="turnOn" scoped="" ref="0xb75e84e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb75e85c8"/>
        <function-ref name="done" scoped="" ref="0xb75e86a8"/>
        <function-ref name="standby" scoped="" ref="0xb75e8788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7600d48" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7600d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7600f20"/>
        <function-ref name="getPayload" scoped="" ref="0xb75e9018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb75e90f8"/>
        <function-ref name="cancel" scoped="" ref="0xb75e91d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75e92b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb75e9710" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb75e9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb75e98e8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb75e99c8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb75e9aa8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb75e9b88"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb75e9c68"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb75e9d48"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb75e9e28"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb75e9f08"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb75e8010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb75e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb75e7648" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb75e7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb75e7820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb75e8da0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb75e8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb75e7010"/>
        <function-ref name="header" scoped="" ref="0xb75e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb75e79b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb75e79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb75e7b88"/>
        <function-ref name="turnOn" scoped="" ref="0xb75e7c68"/>
        <function-ref name="setChannel" scoped="" ref="0xb75e7d48"/>
        <function-ref name="done" scoped="" ref="0xb75e7e28"/>
        <function-ref name="standby" scoped="" ref="0xb75e7f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb75e6e38" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb75e6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb75e5050"/>
        <function-ref name="stopDone" scoped="" ref="0xb75e5130"/>
        <function-ref name="start" scoped="" ref="0xb75e5210"/>
        <function-ref name="stop" scoped="" ref="0xb75e52f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb75e5e40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb75e5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb75e4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb75e93f8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb75e93f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb75e95d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xb75e6588" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xb75e6588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb75e6760"/>
        <function-ref name="header" scoped="" ref="0xb75e6840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb75e88c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb75e88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75e8aa0"/>
        <function-ref name="ready" scoped="" ref="0xb75e8b80"/>
        <function-ref name="sendDone" scoped="" ref="0xb75e8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb75e69a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb75e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb75e6bf8"/>
        <function-ref name="request" scoped="" ref="0xb75e6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb75f5f20" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb75f5f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb75f2110"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb75f21f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb75f22d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb75f23b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb75f2490"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb75f2570"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb75f2650"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb75f2730"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb75f2810"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb75f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb75dfc10" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb75dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb75dfde8"/>
        <function-ref name="request" scoped="" ref="0xb75dfec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb75e0ba8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb75e0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb75e0d80"/>
        <function-ref name="turnOn" scoped="" ref="0xb75e0e60"/>
        <function-ref name="setChannel" scoped="" ref="0xb75df010"/>
        <function-ref name="done" scoped="" ref="0xb75df0f0"/>
        <function-ref name="standby" scoped="" ref="0xb75df1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb75df808" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb75df808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb75df9e0"/>
        <function-ref name="header" scoped="" ref="0xb75dfac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb75df320" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb75df320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75df4f8"/>
        <function-ref name="ready" scoped="" ref="0xb75df5d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75df6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0xb75de060" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb75de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb75de238"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb75de778"/>
        <function-ref name="getPayload" scoped="" ref="0xb75de3f8"/>
        <function-ref name="setLength" scoped="" ref="0xb75de4d8"/>
        <function-ref name="getLength" scoped="" ref="0xb75de5b8"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb75de698"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb75de318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb75d6010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb75d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb75d61e8"/>
        <function-ref name="request" scoped="" ref="0xb75d62c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb75bfc68" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb75bfc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb75c43f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0xb75bdc20" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb75bdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75bb7f8"/>
        <function-ref name="get" scoped="" ref="0xb75bb538"/>
        <function-ref name="isSet" scoped="" ref="0xb75bb278"/>
        <function-ref name="set" scoped="" ref="0xb75bbab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb75d8c18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb75d8c18"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb75d8df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb75b8198" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb75b8198"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb75b8ba8"/>
        <function-ref name="clear" scoped="" ref="0xb75b8e68"/>
        <function-ref name="isValid" scoped="" ref="0xb75b88e8"/>
        <function-ref name="set" scoped="" ref="0xb75b7150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0xb75c6370" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb75c6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb75c6548"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb75c6628"/>
        <function-ref name="spiWrite" scoped="" ref="0xb75c6708"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb75c67e8"/>
        <function-ref name="crcByte" scoped="" ref="0xb75c68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb75d7010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb75d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb75d71e8"/>
        <function-ref name="turnOn" scoped="" ref="0xb75d72c8"/>
        <function-ref name="setChannel" scoped="" ref="0xb75d73a8"/>
        <function-ref name="done" scoped="" ref="0xb75d7488"/>
        <function-ref name="standby" scoped="" ref="0xb75d7568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb75d0428" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb75d0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75d0600"/>
        <function-ref name="isInput" scoped="" ref="0xb75d06e0"/>
        <function-ref name="toggle" scoped="" ref="0xb75d07c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75d08a0"/>
        <function-ref name="get" scoped="" ref="0xb75d0980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75d0a60"/>
        <function-ref name="set" scoped="" ref="0xb75d0b40"/>
        <function-ref name="clr" scoped="" ref="0xb75d0c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0xb75be9a0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb75be9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75bd590"/>
        <function-ref name="get" scoped="" ref="0xb75bd2d0"/>
        <function-ref name="isSet" scoped="" ref="0xb75bd010"/>
        <function-ref name="set" scoped="" ref="0xb75bd850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb75b74f0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb75b74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb75b7b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb75cb5d8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb75cb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75cb7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb75c6a40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb75c6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75c6c18"/>
        <function-ref name="isInput" scoped="" ref="0xb75c6cf8"/>
        <function-ref name="toggle" scoped="" ref="0xb75c6dd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb75c6eb8"/>
        <function-ref name="get" scoped="" ref="0xb75d0010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75d00f0"/>
        <function-ref name="set" scoped="" ref="0xb75d01d0"/>
        <function-ref name="clr" scoped="" ref="0xb75d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb75d7ba0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb75d7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb75d7d78"/>
        <function-ref name="header" scoped="" ref="0xb75d7e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb75b6b80" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb75b6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75b6d58"/>
        <function-ref name="wait" scoped="" ref="0xb75b6e38"/>
        <function-ref name="cancel" scoped="" ref="0xb75b6f18"/>
        <function-ref name="isFree" scoped="" ref="0xb75b4010"/>
        <function-ref name="getNow" scoped="" ref="0xb75b40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb75bbe90" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb75bbe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75baa78"/>
        <function-ref name="get" scoped="" ref="0xb75ba7b8"/>
        <function-ref name="isSet" scoped="" ref="0xb75ba4f8"/>
        <function-ref name="set" scoped="" ref="0xb75bad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb75d87a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb75d87a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7c8a5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb75d8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb75cd640" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb75cd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75cd818"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75cd8f8"/>
        <function-ref name="request" scoped="" ref="0xb75cd9d8"/>
        <function-ref name="granted" scoped="" ref="0xb75cdab8"/>
        <function-ref name="isOwner" scoped="" ref="0xb75cdb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb75d6490" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb75d6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75d6668"/>
        <function-ref name="isInput" scoped="" ref="0xb75d6748"/>
        <function-ref name="toggle" scoped="" ref="0xb75d6828"/>
        <function-ref name="isOutput" scoped="" ref="0xb75d6908"/>
        <function-ref name="get" scoped="" ref="0xb75d69e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75d6ac8"/>
        <function-ref name="set" scoped="" ref="0xb75d6ba8"/>
        <function-ref name="clr" scoped="" ref="0xb75d6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb75d76b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb75d76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75d7890"/>
        <function-ref name="ready" scoped="" ref="0xb75d7970"/>
        <function-ref name="sendDone" scoped="" ref="0xb75d7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb75c2d80" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb75c2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb75c5010"/>
        <function-ref name="disable" scoped="" ref="0xb75c50f0"/>
        <function-ref name="captured" scoped="" ref="0xb75c51d0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb75c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0xb75c4708" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb75c4708"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75be308"/>
        <function-ref name="get" scoped="" ref="0xb75be048"/>
        <function-ref name="isSet" scoped="" ref="0xb75c4d50"/>
        <function-ref name="set" scoped="" ref="0xb75be5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb75b65b8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb75b65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb75b6790"/>
        <function-ref name="suspend" scoped="" ref="0xb75b6870"/>
        <function-ref name="resume" scoped="" ref="0xb75b6950"/>
        <function-ref name="run" scoped="" ref="0xb75b6a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0xb75b7ce0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb75b7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb75b7eb8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb75b6470"/>
        <function-ref name="getPayload" scoped="" ref="0xb75b60f0"/>
        <function-ref name="setLength" scoped="" ref="0xb75b61d0"/>
        <function-ref name="getLength" scoped="" ref="0xb75b62b0"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb75b6390"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb75b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb756ce18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb756ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb756b010"/>
        <function-ref name="isInput" scoped="" ref="0xb756b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb756b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb756b2b0"/>
        <function-ref name="get" scoped="" ref="0xb756b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb756b470"/>
        <function-ref name="set" scoped="" ref="0xb756b550"/>
        <function-ref name="clr" scoped="" ref="0xb756b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0xb75685d0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb75685d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb75687a8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb7568888"/>
        <function-ref name="spiWrite" scoped="" ref="0xb7568968"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb7568a48"/>
        <function-ref name="crcByte" scoped="" ref="0xb7568b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb756c158" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb756c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb756c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb756c4a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb756c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb756c680"/>
        <function-ref name="isInput" scoped="" ref="0xb756c760"/>
        <function-ref name="toggle" scoped="" ref="0xb756c840"/>
        <function-ref name="isOutput" scoped="" ref="0xb756c920"/>
        <function-ref name="get" scoped="" ref="0xb756ca00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb756cae0"/>
        <function-ref name="set" scoped="" ref="0xb756cbc0"/>
        <function-ref name="clr" scoped="" ref="0xb756cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb756bec8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb756bec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7a55060"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7568228"/>
        <function-ref name="fired" scoped="" ref="0xb756aac8"/>
        <function-ref name="startAt" scoped="" ref="0xb756aec8"/>
        <function-ref name="isRunning" scoped="" ref="0xb756acc8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7568428"/>
        <function-ref name="start" scoped="" ref="0xb756a628"/>
        <function-ref name="stop" scoped="" ref="0xb756a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb756da30" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb756da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb756dc08"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb756dce8"/>
        <function-ref name="request" scoped="" ref="0xb756ddc8"/>
        <function-ref name="granted" scoped="" ref="0xb756dea8"/>
        <function-ref name="isOwner" scoped="" ref="0xb756c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb756d0b8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb756d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb756d290"/>
        <function-ref name="isInput" scoped="" ref="0xb756d370"/>
        <function-ref name="toggle" scoped="" ref="0xb756d450"/>
        <function-ref name="isOutput" scoped="" ref="0xb756d530"/>
        <function-ref name="get" scoped="" ref="0xb756d610"/>
        <function-ref name="makeOutput" scoped="" ref="0xb756d6f0"/>
        <function-ref name="set" scoped="" ref="0xb756d7d0"/>
        <function-ref name="clr" scoped="" ref="0xb756d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb756b7a8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb756b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb756b980"/>
        <function-ref name="disable" scoped="" ref="0xb756ba60"/>
        <function-ref name="captured" scoped="" ref="0xb756bb40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb756bc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb754b010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb754b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb754b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb754b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb754b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb754b488"/>
        <function-ref name="get" scoped="" ref="0xb754b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb754b648"/>
        <function-ref name="set" scoped="" ref="0xb754b728"/>
        <function-ref name="clr" scoped="" ref="0xb754b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0xb754fca8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb754fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb754fe80"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb754e010"/>
        <function-ref name="spiWrite" scoped="" ref="0xb754e0f0"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb754e1d0"/>
        <function-ref name="crcByte" scoped="" ref="0xb754e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb754e520" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb754e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb754cce8"/>
        <function-ref name="test" scoped="" ref="0xb754c8e8"/>
        <function-ref name="get" scoped="" ref="0xb754eb68"/>
        <function-ref name="captured" scoped="" ref="0xb754c048"/>
        <function-ref name="reset" scoped="" ref="0xb754c2e8"/>
        <function-ref name="isOn" scoped="" ref="0xb754cae8"/>
        <function-ref name="set" scoped="" ref="0xb754ed68"/>
        <function-ref name="start" scoped="" ref="0xb754c4e8"/>
        <function-ref name="stop" scoped="" ref="0xb754c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb754b980" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb754b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb754bb58"/>
        <function-ref name="isInput" scoped="" ref="0xb754bc38"/>
        <function-ref name="toggle" scoped="" ref="0xb754bd18"/>
        <function-ref name="isOutput" scoped="" ref="0xb754bdf8"/>
        <function-ref name="get" scoped="" ref="0xb754bed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb754a010"/>
        <function-ref name="set" scoped="" ref="0xb754a0f0"/>
        <function-ref name="clr" scoped="" ref="0xb754a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb754f980" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb754f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb754fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb754f390" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb754f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb754f568"/>
        <function-ref name="disable" scoped="" ref="0xb754f648"/>
        <function-ref name="captured" scoped="" ref="0xb754f728"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb754f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb75356f0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb75356f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75358c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75359a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb753b3e8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb753b3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb753b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb753b0a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb753b0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb753b280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7535da8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7535da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7539010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75390f0"/>
        <function-ref name="request" scoped="" ref="0xb75391d0"/>
        <function-ref name="granted" scoped="" ref="0xb75392b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb7539390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb7514700" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb7514700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb75148d8"/>
        <function-ref name="runTask" scoped="" ref="0xb75149b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb7532338" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb7532338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7532510"/>
        <function-ref name="sendDone" scoped="" ref="0xb75325f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xb7530ce0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xb7530ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7530eb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb752f010"/>
        <function-ref name="request" scoped="" ref="0xb752f0f0"/>
        <function-ref name="granted" scoped="" ref="0xb752f1d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb752f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb7532010" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb7532010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75321e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7533cc0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7533cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7533e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb75221c0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb75221c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb7522398"/>
        <function-ref name="sleep" scoped="" ref="0xb75307f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb7522558"/>
        <function-ref name="dataReady" scoped="" ref="0xb75308d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb7522718"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb75227f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb75228d8"/>
        <function-ref name="read" scoped="" ref="0xb75229b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb7522a98"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb7522b78"/>
        <function-ref name="setClock" scoped="" ref="0xb7522c58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb7522d38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb7522e18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7530010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb75300f0"/>
        <function-ref name="write" scoped="" ref="0xb75301d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb75302b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb7530390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb7530470"/>
        <function-ref name="getClock" scoped="" ref="0xb7530550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb7530630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb7522478"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb7522638"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb7530710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75329d0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75329d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7532ba8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7532c88"/>
        <function-ref name="request" scoped="" ref="0xb7532d68"/>
        <function-ref name="granted" scoped="" ref="0xb7532e48"/>
        <function-ref name="isOwner" scoped="" ref="0xb7532f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb751ed88" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb751ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7521010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb751e980" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb751e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb751eb58"/>
        <function-ref name="userId" scoped="" ref="0xb751ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb74fd1c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb74fd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb74fd3a0"/>
        <function-ref name="sleep" scoped="" ref="0xb74fc7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb74fd560"/>
        <function-ref name="dataReady" scoped="" ref="0xb74fc8d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb74fd720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb74fd800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb74fd8e0"/>
        <function-ref name="read" scoped="" ref="0xb74fd9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb74fdaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb74fdb80"/>
        <function-ref name="setClock" scoped="" ref="0xb74fdc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb74fdd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb74fde20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb74fc010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb74fc0f0"/>
        <function-ref name="write" scoped="" ref="0xb74fc1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb74fc2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb74fc390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb74fc470"/>
        <function-ref name="getClock" scoped="" ref="0xb74fc550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb74fc630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb74fd480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb74fd640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb74fc710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb74f4af8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb74f4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74f4cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb74f4db0"/>
        <function-ref name="toggle" scoped="" ref="0xb74f4e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb74f1010"/>
        <function-ref name="get" scoped="" ref="0xb74f10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74f11d0"/>
        <function-ref name="set" scoped="" ref="0xb74f12b0"/>
        <function-ref name="clr" scoped="" ref="0xb74f1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb74f57e8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb74f57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74f59c0"/>
        <function-ref name="isInput" scoped="" ref="0xb74f5aa0"/>
        <function-ref name="toggle" scoped="" ref="0xb74f5b80"/>
        <function-ref name="isOutput" scoped="" ref="0xb74f5c60"/>
        <function-ref name="get" scoped="" ref="0xb74f5d40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74f5e20"/>
        <function-ref name="set" scoped="" ref="0xb74f5f00"/>
        <function-ref name="clr" scoped="" ref="0xb74f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb74f2e30" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb74f2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74f5050"/>
        <function-ref name="isInput" scoped="" ref="0xb74f5130"/>
        <function-ref name="toggle" scoped="" ref="0xb74f5210"/>
        <function-ref name="isOutput" scoped="" ref="0xb74f52f0"/>
        <function-ref name="get" scoped="" ref="0xb74f53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74f54b0"/>
        <function-ref name="set" scoped="" ref="0xb74f5590"/>
        <function-ref name="clr" scoped="" ref="0xb74f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb74f29d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb74f29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74f2ba8"/>
        <function-ref name="stop" scoped="" ref="0xb74f2c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb74f1508" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb74f1508"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb74f16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb74f89f0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb74f89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb74f8bc8"/>
        <function-ref name="sleep" scoped="" ref="0xb74f60f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb74f8d88"/>
        <function-ref name="dataReady" scoped="" ref="0xb74f61d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb74f7010"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb74f70f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb74f71d0"/>
        <function-ref name="read" scoped="" ref="0xb74f72b0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb74f7390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb74f7470"/>
        <function-ref name="setClock" scoped="" ref="0xb74f7550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb74f7630"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb74f7710"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb74f7870"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb74f7950"/>
        <function-ref name="write" scoped="" ref="0xb74f7a30"/>
        <function-ref name="enableSpi" scoped="" ref="0xb74f7b10"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb74f7bf0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb74f7cd0"/>
        <function-ref name="getClock" scoped="" ref="0xb74f7db0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb74f7e90"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb74f8ca8"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb74f8e68"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb74f6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb74f4188" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb74f4188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74f4360"/>
        <function-ref name="isInput" scoped="" ref="0xb74f4440"/>
        <function-ref name="toggle" scoped="" ref="0xb74f4520"/>
        <function-ref name="isOutput" scoped="" ref="0xb74f4600"/>
        <function-ref name="get" scoped="" ref="0xb74f46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74f47c0"/>
        <function-ref name="set" scoped="" ref="0xb74f48a0"/>
        <function-ref name="clr" scoped="" ref="0xb74f4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb7494110" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb7494110"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb74942f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb74943d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb74949c8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb74949c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb7494bb0"/>
        <function-ref name="configure" scoped="" ref="0xb7494c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb74cc9b8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb74cc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74ccba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74ccc80"/>
        <function-ref name="request" scoped="" ref="0xb74ccd60"/>
        <function-ref name="granted" scoped="" ref="0xb74cce40"/>
        <function-ref name="isOwner" scoped="" ref="0xb74ccf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb7494518" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb7494518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb74946f0"/>
        <function-ref name="userId" scoped="" ref="0xb74947d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7249b98" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7249b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7249d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb7249ed0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb7249ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb72460c0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb72461a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb7246280"/>
        <function-ref name="dequeue" scoped="" ref="0xb7246360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb7245750" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb7245750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb7245938"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb7245a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb7244030" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb7244030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb7244218"/>
        <function-ref name="configure" scoped="" ref="0xb72442f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb7244458" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb7244458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb7244630"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7244710"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb72447f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb72448d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7245010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7245010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb72451f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb72452d8"/>
        <function-ref name="request" scoped="" ref="0xb72453b8"/>
        <function-ref name="granted" scoped="" ref="0xb7245498"/>
        <function-ref name="isOwner" scoped="" ref="0xb7245578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb7245b58" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb7245b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb7245d30"/>
        <function-ref name="userId" scoped="" ref="0xb7245e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb7244a50" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb7244a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7244c28"/>
        <function-ref name="runTask" scoped="" ref="0xb7244d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb748fb80" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb748fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TOne" ref="0xb7c174a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb746eee8"/>
        <function-ref name="fired" scoped="" ref="0xb746e7a8"/>
        <function-ref name="startAt" scoped="" ref="0xb746eba8"/>
        <function-ref name="isRunning" scoped="" ref="0xb746e9a8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb746d0f8"/>
        <function-ref name="start" scoped="" ref="0xb746e308"/>
        <function-ref name="stop" scoped="" ref="0xb746e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb72303a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb72303a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7c8a290"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7c8a290"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TOne" ref="0xb7c174a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb722f750"/>
        <function-ref name="fired" scoped="" ref="0xb722f010"/>
        <function-ref name="startAt" scoped="" ref="0xb722f410"/>
        <function-ref name="isRunning" scoped="" ref="0xb722f210"/>
        <function-ref name="getAlarm" scoped="" ref="0xb722f950"/>
        <function-ref name="start" scoped="" ref="0xb7230af0"/>
        <function-ref name="stop" scoped="" ref="0xb7230d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb722c9a0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb722c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb722bcb0"/>
        <function-ref name="fired" scoped="" ref="0xb722b4b0"/>
        <function-ref name="get" scoped="" ref="0xb722b010"/>
        <function-ref name="reset" scoped="" ref="0xb722b6b0"/>
        <function-ref name="isOn" scoped="" ref="0xb722beb0"/>
        <function-ref name="set" scoped="" ref="0xb722b210"/>
        <function-ref name="start" scoped="" ref="0xb722b8b0"/>
        <function-ref name="stop" scoped="" ref="0xb722bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb722fb98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb722fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb722c2b8"/>
        <function-ref name="test" scoped="" ref="0xb722eea0"/>
        <function-ref name="get" scoped="" ref="0xb722e200"/>
        <function-ref name="setScale" scoped="" ref="0xb722c4b8"/>
        <function-ref name="getScale" scoped="" ref="0xb722c758"/>
        <function-ref name="reset" scoped="" ref="0xb722e8a0"/>
        <function-ref name="overflow" scoped="" ref="0xb722e6a0"/>
        <function-ref name="isOn" scoped="" ref="0xb722c0b8"/>
        <function-ref name="set" scoped="" ref="0xb722e400"/>
        <function-ref name="start" scoped="" ref="0xb722eaa0"/>
        <function-ref name="stop" scoped="" ref="0xb722eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb7468880" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb7468880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c39410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c395e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb7467010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7452c30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TestLplAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7452c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c3ac58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7c3ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb744f558"/>
        <function-ref name="fired" scoped="" ref="0xb7451958"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7451ef8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7451d18"/>
        <function-ref name="getdt" scoped="" ref="0xb744f918"/>
        <function-ref name="gett0" scoped="" ref="0xb744f738"/>
        <function-ref name="isRunning" scoped="" ref="0xb7451b38"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7451278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb744f238"/>
        <function-ref name="startOneShot" scoped="" ref="0xb74514f8"/>
        <function-ref name="stop" scoped="" ref="0xb7451778"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7be97f0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10;&#10; Initialize this component.</short>
          <long>&#10;&#10; Initialize this component. Initialization should not assume that&#10;&#10; any component is running: init() cannot call any commands besides&#10;&#10; those that initialize other components.  &#10;&#10; &#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10;&#10; @see TEP 107: Boot Sequence&#10;&#10;&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10;&#10; Interface that notifies components when TinyOS has booted&#10;&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Interface that notifies components when TinyOS has booted&#10;&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 5 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7beb530" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10;&#10; Signaled when the system has booted successfully.</short>
          <long>&#10;&#10; Signaled when the system has booted successfully. Components can&#10;&#10; assume the system has been initialized properly. Services may&#10;&#10; need to be started to work, however.&#10;&#10;&#10;&#10; @see StdControl&#10;&#10; @see SplitConrol&#10;&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10;&#10; This interface provides functions to compute ATmega128 configuration&#10;&#10; values that are clock-rate dependent.</short>
        <long>&#10;&#10; This interface provides functions to compute ATmega128 configuration&#10;&#10; values that are clock-rate dependent. These include:&#60;ul>&#10;&#10; &#60;li>the ADC prescaler value necessary for full precision&#10;&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10;&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;&#10;   AlarmMicroXXC components to get more accurate timing&#10;&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;&#10;   interface will measure this value at boot time and use it to compute&#10;&#10;   the values above)&#10;&#10; &#60;/ul>&#10;&#10;&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7be0ec8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Return the value to use for the baudrate register to achieve a&#10;&#10; particular baud rate.</short>
          <long>&#10;&#10; Return the value to use for the baudrate register to achieve a&#10;&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10;&#10; double speed).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7be0c68" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb7be3ed0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Return CPU cycles per 1/32768s.&#10;&#10;</short>
          <long>&#10;&#10; Return CPU cycles per 1/32768s.&#10;&#10; @return CPU cycles.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7be2750" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Convert n microseconds into a value suitable for use with&#10;&#10; AlarmMicro32C Alarms.&#10;&#10;</short>
          <long>&#10;&#10; Convert n microseconds into a value suitable for use with&#10;&#10; AlarmMicro32C Alarms.&#10;&#10; @param n Time in microseconds.&#10;&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7be24d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb7be0010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;&#10;</short>
          <long>&#10;&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;&#10; @param n A time expressed in AlarmMicro time units.&#10;&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7be2d28" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7be0680" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Return the smallest ADC prescaler value which guaranteers full&#10;&#10; ADC precision.&#10;&#10;</short>
          <long>&#10;&#10; Return the smallest ADC prescaler value which guaranteers full&#10;&#10; ADC precision.&#10;&#10; @return ADC prescaler value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7bce060" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7bce378" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7bcfa20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7bce9b0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7bcfd38" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7bce690" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7bcf400" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7bcf710" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10;&#10; The interface to a TinyOS task scheduler.&#10;&#10;&#10;&#10;</short>
        <long> &#10;&#10; The interface to a TinyOS task scheduler.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 19 2005&#10;&#10; @see TEP 106: Tasks and Schedulers&#10;&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7c847c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10;&#10; Initialize the scheduler.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7c83450" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10;&#10; Enter an infinite task-running loop.</short>
          <long>&#10;&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10;&#10; state when the processor is idle (task queue empty, waiting for&#10;&#10; interrupts). This call never returns.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7c84e10" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10;&#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;&#10;&#10;</short>
          <long> &#10;&#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;&#10;                ran, FALSE indicates there was no task to run.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7c7c7f0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10;&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10;&#10; Post this task to the TinyOS scheduler. At some later time,&#10;&#10; depending on the scheduling policy, the scheduler will signal the&#10;&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10;&#10;&#10; @return SUCCESS if task was successfuly&#10;&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10;&#10; implementation of this interface (the class of task).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7c7ce28" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10;&#10; Event from the scheduler to run this task.</short>
          <long>&#10;&#10; Event from the scheduler to run this task. Following the TinyOS&#10;&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10;&#10; execute atomically with respect to one another, but can be&#10;&#10; preempted by async commands/events.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10;&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10;&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10;&#10; describes how an MCU computes this state and how the Scheduler uses&#10;&#10; this interface to manage system power draw.&#10;&#10; &#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @date   Oct 26, 2005&#10;&#10;&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7c113f0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7bfd228" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10;&#10; Called when computing the low power state, in order to allow&#10;&#10; a high-level component to institute a lower bound.</short>
          <long>&#10;&#10; Called when computing the low power state, in order to allow&#10;&#10; a high-level component to institute a lower bound. Because&#10;&#10; this command originates deep within the basic TinyOS scheduling&#10;&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10;&#10; details.&#10;&#10;&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;&#10;            requirements of this component&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7c4ceb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10;&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10;&#10; may have changed.</short>
        <long>&#10;&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10;&#10; may have changed. TEP 112 describes how an MCU computes this state&#10;&#10; and how the Scheduler uses this interface to manage system power&#10;&#10; draw.&#10;&#10; &#10;&#10; @author Philip Levis&#10;&#10; @date   Oct 26, 2005&#10;&#10; @see    TEP 112: Microcontroller Power Management&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7c015d8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10;&#10; Called by any component to tell TinyOS that the MCU low&#10;&#10; power state may have changed.</short>
          <long> &#10;&#10; Called by any component to tell TinyOS that the MCU low&#10;&#10; power state may have changed. Generally, this should be&#10;&#10; called whenever a peripheral/timer is started/stopped. &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10;&#10; should be used for switching between the on and off power states of&#10;&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10;&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10;&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10;&#10; must be signalled.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7abaf08" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10;&#10; Notify caller that the component has been started and is ready to&#10;&#10; receive other commands.&#10;&#10;&#10;&#10;</short>
          <long> &#10;&#10; Notify caller that the component has been started and is ready to&#10;&#10; receive other commands.&#10;&#10;&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;&#10;                        turned on, FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7abac58" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7ab8010" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10;&#10; Notify caller that the component has been stopped.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Notify caller that the component has been stopped.&#10;&#10;&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;&#10;                        turned off, FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7ab9ce0" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7aba6f0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents. </short>
          <long>&#10;&#10; Start this component and all of its subcomponents.  Return&#10;&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10;&#10; event being signalled.&#10;&#10;&#10;&#10; @return SUCCESS if the device is already in the process of &#10;&#10;         starting or the device was off and the device is now ready to turn &#10;&#10;         on.  After receiving this return value, you should expect a &#10;&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;&#10;         EBUSY if the component is in the middle of powering down&#10;&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;&#10;         EALREADY if the device is already on &#60;br>&#10;&#10;         FAIL Otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7ab9778" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents. </short>
          <long>&#10;&#10; Start this component and all of its subcomponents.  Return&#10;&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10;&#10; event being signalled.&#10;&#10;&#10;&#10; @return SUCCESS if the device is already in the process of &#10;&#10;         stopping or the device was on and the device is now ready to turn &#10;&#10;         off.  After receiving this return value, you should expect a &#10;&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;&#10;         EBUSY if the component is in the middle of powering up&#10;&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;&#10;         EALREADY if the device is already off &#60;br>&#10;&#10;         FAIL Otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7ac9010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10;&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10;&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10;&#10; Packet interface of the component providing AMSend. If send&#10;&#10; returns SUCCESS, then the component will signal the sendDone&#10;&#10; event in the future; if send returns an error, it will not&#10;&#10; signal the event.  Note that a component may accept a send&#10;&#10; request which it later finds it cannot satisfy; in this case, it&#10;&#10; will signal sendDone with error code.&#10;&#10;&#10;&#10; @param addr   address to which to send the packet&#10;&#10; @param 'message_t* ONE msg'    the packet&#10;&#10; @param len    the length of the data in the packet payload&#10;&#10; @return       SUCCESS if the request to send succeeded and a&#10;&#10;               sendDone will be signaled later, EBUSY if the&#10;&#10;               abstraction cannot send now but will be able to&#10;&#10;               later, or FAIL if the communication layer is not&#10;&#10;               in a state that can send (e.g., off).&#10;&#10; @see          sendDone&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7aca6f8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7aca8a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7acaa30" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7ac74b8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10;</short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10;&#10; (minus the length parameter) and is included in this interface&#10;&#10; as a convenience.&#10;&#10;&#10;&#10; @param  'message_t* ONE msg'    the packet&#10;&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac7010" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7ac7198" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7ac8a30" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. This command behaves identically to&#10;&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10;&#10; interface as a convenience.&#10;&#10;&#10;&#10; @return the maximum payload length&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7ac9980" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10;&#10; Cancel a requested transmission.</short>
          <long>&#10;&#10; Cancel a requested transmission. Returns SUCCESS if the &#10;&#10; transmission was canceled properly (not sent in its&#10;&#10; entirety). Note that the component may not know&#10;&#10; if the send was successfully canceled, if the radio is&#10;&#10; handling much of the logic; in this case, a component&#10;&#10; should be conservative and return an appropriate error code.&#10;&#10; A successful call to cancel must always result in a &#10;&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; &#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10;&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10;&#10; @see    sendDone&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac9578" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7ac83b8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10;&#10; Signaled in response to an accepted send request.</short>
          <long> &#10;&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10;&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10;&#10; the send was successful.&#10;&#10;&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10;&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;&#10;               ECANCEL if it was cancelled&#10;&#10; @see send&#10;&#10; @see cancel&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ac9ee8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7ac8088" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10;&#10; Low Power Listening interface&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Low Power Listening interface&#10;&#10;&#10;&#10; @author Jonathan Hui&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0xb7ab5c98" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return the local node's sleep interval, in [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0xb7ab10c8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t* ONE msg'&#10;&#10; @return the destination node's duty cycle configured in this message&#10;&#10;     in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab2e90" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0xb7aaf1a0" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10;&#10; in units of [percentage*100]&#10;&#10;</short>
          <long>&#10;&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10;&#10; in units of [percentage*100]&#10;&#10; @param sleepInterval The sleep interval in units of [ms]&#10;&#10; @return The duty cycle in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0xb7ab1ed8" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0xb7ab4b78" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0xb7ab35d0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx sleep interval.&#10;&#10;</short>
          <long>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx sleep interval.&#10;&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10;&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab3140" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0xb7ab32d8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0xb7ab45b8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;&#10;</short>
          <long>&#10;&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;&#10; For example, to get a 0.05% duty cycle,&#10;&#10; &#60;code>&#10;&#10;   call LowPowerListening.setDutyCycle(5);&#10;&#10; &#60;/code>&#10;&#10;&#10;&#10; For a 100% duty cycle (always on),&#10;&#10; &#60;code>&#10;&#10;   call LowPowerListening.setDutyCycle(10000);&#10;&#10; &#60;/code>&#10;&#10;&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10;&#10; &#10;&#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0xb7ab4248" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0xb7ab28e0" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx duty cycle rate.&#10;&#10;</short>
          <long>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx duty cycle rate.&#10;&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10;&#10; &#10;&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10;&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;&#10;     [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab23e8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0xb7ab2580" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0xb7ab1930" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Convert a duty cycle, in units of [percentage*100], to&#10;&#10; the sleep interval of the mote in milliseconds&#10;&#10;</short>
          <long>&#10;&#10; Convert a duty cycle, in units of [percentage*100], to&#10;&#10; the sleep interval of the mote in milliseconds&#10;&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10;&#10; @return The equivalent sleep interval, in units of [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0xb7ab1670" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0xb7ab3d68" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t* ONE msg'&#10;&#10; @return the destination node's sleep interval configured in this message&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ab3b88" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0xb7ab56f0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Set this this node's radio sleep interval, in milliseconds.&#10;&#10;</short>
          <long>&#10;&#10; Set this this node's radio sleep interval, in milliseconds.&#10;&#10; Once every interval, the node will sleep and perform an Rx check &#10;&#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10;&#10; always on.&#10;&#10;&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10;&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0xb7ab53d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0xb7aceb08" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10;&#10; Receive a packet buffer, returning a buffer for the signaling&#10;&#10; component to use for the next reception.</short>
          <long>&#10;&#10; Receive a packet buffer, returning a buffer for the signaling&#10;&#10; component to use for the next reception. The return value&#10;&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10;&#10; component copies out the data it needs.&#10;&#10;&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10;&#10; common bugs in TinyOS code. For example, if a component both calls a&#10;&#10; send on the passed message and returns it, then it is possible&#10;&#10; the buffer will be reused before the send occurs, overwriting&#10;&#10; the component's data. This would cause the mote to possibly&#10;&#10; instead send a packet it most recently received.&#10;&#10;&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10;&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10;&#10; @param  len      the length of the data region pointed to by payload&#10;&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;&#10;                  received packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
              <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7ace230" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7ace3d0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7ace558" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10;&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10;&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10;&#10; timing, you may wish to use a (platform-specific) component offering&#10;&#10; an Alarm interface.&#10;&#10;&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7ac5738" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7ac5738"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7ac0980" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Return the current time.&#10;&#10;</short>
          <long>&#10;&#10; Return the current time.&#10;&#10; @return Current time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7ac22d8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7ac1968" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10;&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10;&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10;&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10;&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10;&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10;&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10;&#10; values represent times in the past, i.e., the time at which getNow()&#10;&#10; would last of returned that value.&#10;&#10;&#10;&#10; @param t0 Base time for timer.&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7ac13c8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7ac1558" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7ac2e70" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Check if this is a one-shot timer.&#10;&#10;</short>
          <long>&#10;&#10; Check if this is a one-shot timer.&#10;&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb7abf600" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10;&#10; Return the delay or period for the previously started timer. The next&#10;&#10; fired event will occur at gett0() + getdt().&#10;&#10; @return Timer's interval.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7abf010" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Return the time anchor for the previously started timer or the time of&#10;&#10; the previous event for periodic timers.</short>
          <long>&#10;&#10; Return the time anchor for the previously started timer or the time of&#10;&#10; the previous event for periodic timers. The next fired event will occur&#10;&#10; at gett0() + getdt().&#10;&#10; @return Timer's base time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7ac28c8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Check if timer is running.</short>
          <long>&#10;&#10; Check if timer is running. Periodic timers run until stopped or&#10;&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10;&#10;&#10; @return TRUE if the timer is still running.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7ac3030" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10;&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10;&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10;&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10;&#10; event in dt units).&#10;&#10;&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7ac5d60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7ac0410" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10;&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10;&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10;&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10;&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10;&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10;&#10; values represent times in the past, i.e., the time at which getNow()&#10;&#10; would last of returned that value.&#10;&#10;&#10;&#10; @param t0 Base time for timer.&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7ac1ea8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7ac0068" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7ac3818" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10;&#10; Set a single-short timer to some time units in the future. Replaces&#10;&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10;&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10;&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7ac3570" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7ac3d38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Cancel a timer.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10;&#10; Constants for manipulating LEDs.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Constants for manipulating LEDs.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb7ae6130" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn off LED 0.</short>
          <long>&#10;&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb7ae6720" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;&#10;</short>
          <long>&#10;&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;&#10; The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb7ae6ca8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn on LED 1.</short>
          <long>&#10;&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb7ae5840" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;&#10;</short>
          <long>&#10;&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;&#10; The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb7ae49c8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;&#10;</short>
          <long>&#10;&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;&#10; The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7ae2260" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10;&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10;&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10;&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10;&#10; will determine whether LED 2 is on:&#10;&#10;&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10;&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10;&#10; those LEDs should always be off (their bit is zero). Also see&#10;&#10; &#60;tt>set()&#60;/tt>.&#10;&#10;&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb7ae5250" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn off LED 1.</short>
          <long>&#10;&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7ae2b58" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10;&#10; Set the current LED configuration using a bitmask.  Each bit&#10;&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10;&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10;&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10;&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10;&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10;&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10;&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb7ae27b0" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7ae7b78" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn on LED 0.</short>
          <long>&#10;&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb7ae5dc8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn on LED 2.</short>
          <long>&#10;&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb7ae43d8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn off LED 2.</short>
          <long>&#10;&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb7a6c318" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7a6c318"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7a6c430" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7a6c430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb7a6b868" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10;&#10;&#10; Return the time stamp for the given message. Please check with the&#10;&#10; isValid command if this value can be relied upon. If this command is&#10;&#10; called after transmission, then the transmit time of the packet&#10;&#10; is returned (the time when the frame synchronization byte was&#10;&#10; transmitted). If this command is called after the message is received,&#10;&#10; the tne receive time of the message is returned. It is recommended that&#10;&#10; the timestamp command be called only from the receive or sendDone event&#10;&#10; handler.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7a6c430"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6b4c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb7a6a010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10;&#10;&#10; Sets the isValid flag to FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6be18" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb7a6ceb0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10;&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10;&#10; circumstances the radio chip might not be able to correctly assign a&#10;&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10;&#10; multiple interrupts can occur before they could be serviced, and even&#10;&#10; if capture registers are used, it is not possible to get the time stamp&#10;&#10; for the first or last unserviced event), in which case the time stamp&#10;&#10; value should not be used. It is recommended that the isValid command be&#10;&#10; called from the receive or sendDone event handler.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6cad0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7a6a958" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10;&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10;&#10; specified value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7a6c430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6a5c0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7a6a750" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7a6c430"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10;&#10; The basic message data type accessors.</short>
        <long> &#10;&#10; The basic message data type accessors. Protocols may use&#10;&#10; additional packet interfaces for their protocol specific&#10;&#10; data/metadata.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 5 2005&#10;&#10; @see    TEP 116: Packet Protocols&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb7a80480" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Clear out this packet. </short>
          <long>&#10;&#10; Clear out this packet.  Note that this is a deep operation and&#10;&#10; total operation: calling clear() on any layer will completely&#10;&#10; clear the packet for reuse.&#10;&#10; @param  'message_t* ONE msg'    the packet to clear&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a80220" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb7a80d30" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Return the length of the payload of msg.</short>
          <long>&#10;&#10; Return the length of the payload of msg. This value may be less&#10;&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10;&#10; the MTU. If a communication component does not support variably&#10;&#10; sized data regions, then payloadLength() will always return&#10;&#10; the same value as maxPayloadLength(). &#10;&#10;&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10;&#10; @return        the length of its current payload&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a809f0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a7dc00" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10;</short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10; If the caller intends to write to the payload region then&#10;&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10;&#10; length. If the caller (only) wants to read from the payload&#10;&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10;&#10; payloadLength(). If the payload region is smaller than &#10;&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10;&#10; the payload region starts within a packet is fixed, i.e. for&#10;&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10;&#10; pointer or NULL.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg'   the packet &#10;&#10; @param len   the length of payload required&#10;&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a7d578" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a7d700" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7a7d010" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. Note that, depending on protocol fields, a given&#10;&#10; request to send a packet may not be able to send the maximum&#10;&#10; payload length (e.g., if there are variable length&#10;&#10; fields). Protocols may provide specialized interfaces for these&#10;&#10; circumstances.&#10;&#10;&#10;&#10; @return   the maximum size payload allowed by this layer&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7a7e838" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Set the length field of the packet.</short>
          <long>&#10;&#10; Set the length field of the packet. This value is not checked&#10;&#10; for validity (e.g., if it is larger than the maximum payload&#10;&#10; size). This command is not used when sending packets, as calls&#10;&#10; to send include a length parameter. Rather, it is used by&#10;&#10; components, such as queues, that need to buffer requests to&#10;&#10; send.  This command allows the component to store the length&#10;&#10; specified in the request and later recover it when actually&#10;&#10; sending.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg'   the packet&#10;&#10; @param len   the value to set its length field to&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a7e2f0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a7e478" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10;&#10; This interface allows a component to enable or disable acknowledgments&#10;&#10; on a per-packet basis.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; This interface allows a component to enable or disable acknowledgments&#10;&#10; on a per-packet basis.&#10;&#10;&#10;&#10; @author Jonathan Hui&#10;&#10; @author Philip Levis&#10;&#10; @author Joe Polastre&#10;&#10; @date   June 21 2006&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb7a71d68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10;&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10;&#10; acknowledgments.&#10;&#10;</short>
          <long>&#10;&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10;&#10; acknowledgments.&#10;&#10; The acknowledgment is synchronous as the caller can check whether the&#10;&#10; ack was received through the wasAcked() command as soon as a send operation&#10;&#10; completes.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10;&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10;&#10; if the communication layer cannot enable them at this time, FAIL&#10;&#10; if it does not support them.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a71998" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb7a6f770" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10;&#10; Tell a protocol that when it sends this packet, it should not use&#10;&#10; synchronous acknowledgments.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Tell a protocol that when it sends this packet, it should not use&#10;&#10; synchronous acknowledgments.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10;&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10;&#10; if the communication layer cannot disable them at this time, FAIL&#10;&#10; if it cannot support unacknowledged communication.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6f428" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb7a6e208" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10;&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;&#10;</short>
          <long>&#10;&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;&#10; If acknowledgments on the packet had been disabled through noAck(),&#10;&#10; then the return value is undefined. If a packet&#10;&#10; layer does not support acknowledgements, this command must return always&#10;&#10; return FALSE.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10;&#10; @return Whether the packet was acknowledged.&#10;&#10;&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6fd60" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10;&#10; The Active Message accessors, which provide the AM local address and&#10;&#10; functionality for querying packets.</short>
        <long>&#10;&#10; The Active Message accessors, which provide the AM local address and&#10;&#10; functionality for querying packets. Active Messages are a single-hop&#10;&#10; communication protocol. Therefore, fields such as source and destination&#10;&#10; represent the single-hop source and destination. Multihop sources and&#10;&#10; destinations are defined by the corresponding multihop protocol (if any).&#10;&#10; Also see the Packet interface.&#10;&#10;&#10;&#10; @author Philip Levis &#10;&#10; @date   January 18 2005&#10;&#10; @see    Packet&#10;&#10; @see    AMSend&#10;&#10; @see    TEP 116: Packet Protocols&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb7a74398" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Get the AM group of the AM packet.</short>
          <long>&#10;&#10; Get the AM group of the AM packet. The AM group is a logical&#10;&#10; identifier that distinguishes sets of nodes which may share&#10;&#10; a physical communication medium but wish to not communicate.&#10;&#10; The AM group logically separates the sets of nodes. When&#10;&#10; a node sends a packet, it fills in its AM group, and typically&#10;&#10; nodes only receive packets whose AM group field matches their&#10;&#10; own.&#10;&#10;&#10;&#10; @param 'message_t* ONE amsg' the packet&#10;&#10; @return the AM group of this packet&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a74030" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb7a79820" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the AM address of the source of the AM packet.&#10;&#10;</short>
          <long>&#10;&#10; Return the AM address of the source of the AM packet.&#10;&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10;&#10; are undefined.&#10;&#10; @param 'message_t* ONE amsg'  the packet&#10;&#10; @return      the source address of the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a79588" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7a7a790" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the node's active message address associated with this AM stack.&#10;&#10;</short>
          <long>&#10;&#10; Return the node's active message address associated with this AM stack.&#10;&#10; @return The address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7a79010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the AM address of the destination of the AM packet.&#10;&#10;</short>
          <long>&#10;&#10; Return the AM address of the destination of the AM packet.&#10;&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10;&#10; are undefined.&#10;&#10; @param 'message_t* ONE amsg'    the packet&#10;&#10; @return        the destination address of the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a7ad10" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb7a78e88" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10;&#10; Set the AM address of the source field of the AM packet.  As&#10;&#10; the AM address is set as part of sending with the AMSend&#10;&#10; interface, this command is not used for sending packets.  Rather,&#10;&#10; it is used when a component, such as a queue, needs to buffer a&#10;&#10; request to send. The component can save the source address&#10;&#10; and then recover it when actually sending. As an AM layer generally&#10;&#10; sets the source address to be the local address, this interface&#10;&#10; is not commonly used except when a system is bypassing the AM&#10;&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10;&#10; not an AM packet, the results of this command are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @param  addr   the address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a78878" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a78a08" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb7a78308" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10;&#10; Set the AM address of the destination field of the AM packet.  As&#10;&#10; the AM address is set as part of sending with the AMSend&#10;&#10; interface, this command is not used for sending packets.  Rather,&#10;&#10; it is used when a component, such as a queue, needs to buffer a&#10;&#10; request to send. The component can save the destination address&#10;&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10;&#10; not an AM packet, the results of this command are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @param  addr   the address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a79d90" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a79f20" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb7a75010" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the AM type of the AM packet.&#10;&#10;</short>
          <long>&#10;&#10; Return the AM type of the AM packet.&#10;&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10;&#10; are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @return        the AM type&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a76d90" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7a75a90" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM type of the AM packet. </short>
          <long>&#10;&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10;&#10; of sending with the AMSend interface, this command is not used&#10;&#10; for sending packets. Instead, it is used when a component, such&#10;&#10; as a queue, needs to buffer a request to send. The component can&#10;&#10; save the AM type in the packet then recover it when actually&#10;&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10;&#10; this command are undefined.&#10;&#10; &#10;&#10; @param  'message_t* ONE amsg'    the packet&#10;&#10; @param  t       the AM type&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a75578" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb7a75700" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb7a76820" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10;&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10;&#10; partially a shortcut for testing whether the return value of&#10;&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10;&#10; may, however, include additional logic. For example, there&#10;&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10;&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10;&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10;&#10; the results of this command are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @return        whether the packet is addressed to this AM stack&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a76418" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7a74d48" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM group field of a packet.</short>
          <long>&#10;&#10; Set the AM group field of a packet. Note that most data link&#10;&#10; stacks will set this field automatically on a send request, which&#10;&#10; may overwrite changes made with this command.&#10;&#10;&#10;&#10; @param 'message_t* ONE amsg' the packet&#10;&#10; @param group the packet's new AM group value&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7a74908" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7a74a98" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb7a73350" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Provides the current AM group of this communication interface.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Provides the current AM group of this communication interface.&#10;&#10;&#10;&#10; @return The AM group.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb7a4e850" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a4e850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb7a4b010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Clears the isSet flag.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4de28" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7a4d880" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Returns the stored value of this field in the message.</short>
          <long>&#10;&#10; Returns the stored value of this field in the message. If the&#10;&#10; value is not set, then the returned value is undefined.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a4e850"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4d658" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb7a4d0a0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Returns TRUE if the value is set for this message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4eee8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7a4b910" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Sets the isSet false to TRUE and the time stamp value to the &#10;&#10; specified value.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a4e850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4b5b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7a4b748" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a4e850"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0xb7a26a70" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged (exponential decay) number of neighbors &#10;&#10; whose messages this component receives during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="channelError" ref="0xb7a28718" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; This event should be fired if we notice some anomalies in the operation&#10;&#10; of the channel, such as not receiving acknowledgements, missing&#10;&#10; sequence numbers or packets with corrupted CRC.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0xb7a290f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the frequency (in milliseconds) when the traffic averages&#10;&#10; should be updated. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0xb7a29890" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the amount of time this message has occupied the channel.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a296e0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0xb7a25070" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged error events during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0xb7a28d28" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged (exponential decay) transmit channel time &#10;&#10; during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="timerTick" ref="0xb7a25660" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; This command is periodically called when the timer is fired and&#10;&#10; the averages are updated&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb7a280c0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the sender address of the message so we can calculate the&#10;&#10; average number of neighbors that send messages per update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a29e80" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0xb7a26448" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged (exponential decay) receive channel time &#10;&#10; during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb7a20d20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; This command should return the approximate transmit delay between&#10;&#10; setting an alarm, waiting for the fire event, calling send and&#10;&#10; obtaining the timestamp for the transmitted message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb7a1f488" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; Must return a binary exponent so that the collision avoidance layer&#10;&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10;&#10; window.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb7a1dc20" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; Returns the size of the collision window for this received message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1da68" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0xb7a1c248" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; This event should be called periodically to indicate the passing of&#10;&#10; time (maybe we should use a timer)&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb7a1fc38" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; This command must return the time when the message was transmitted.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1fa80" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb7a1d460" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; Returns the start of the collision window for this received message,&#10;&#10; so transmit times in this range would be considered possible collisions.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1d260" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0xb7a1a2a8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10;&#10; This command is called when the message first enters the radio stack&#10;&#10; via the Send.send command.</short>
          <long>&#10;&#10; This command is called when the message first enters the radio stack&#10;&#10; via the Send.send command. This should clear the packet if the user&#10;&#10; forgot to do so (or return EINVAL to be strict).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1a010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb7a19ac8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10;&#10; We need to put something here, but this is not going to get called&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb7a2b1f0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10;&#10; This command is called when the message is transmitted to&#10;&#10; check if it needs software clear channel assesment.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2b010" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb7a32840" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; This command is called when a sent packet did not receive an&#10;&#10; acknowledgement.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb7a32260" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Creates an acknowledgement packet for the given data packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a33ed8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a320a8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7a36458" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10;&#10; to be received after this packet was transmitted.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a36270" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb7a34698" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10;&#10;</short>
          <long>&#10;&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10;&#10; The AckedSend layer will filter out all received acknowledgement&#10;&#10; packets and uses  only the matching one for the acknowledgement.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a34418" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb7a33150" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet.</short>
          <long>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet. The acknowledgement packect was already verified &#10;&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a34c70" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a34e20" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb7a37c80" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns the acknowledgement timeout (in the radio clock units),&#10;&#10; in which a sent packet must be acknowledged.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0xb7a36d70" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a36a28" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0xb7a36bb0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7a33908" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the received packet needs software acknowledgements&#10;&#10; to be sent back to the sender.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a33730" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10;&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10;&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10;&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10;&#10; 16-bit destination pan, source and destination addresses. It also &#10;&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10;&#10; Note, that this interface does not support the CRC-16 value, which&#10;&#10; should be verified before the data can be trusted.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb7a0a620" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10;&#10; valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0a450" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb7a0c590" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the data sequence number&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0c400" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb7a13858" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the frame control field.</short>
          <long>&#10;&#10; Sets the frame control field. This method should not be used, &#10;&#10; createDataFrame and createAckFrame should be used instead.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a134a8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb7a13638" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb7a11010" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the message is an acknowledgement frame supported&#10;&#10; by this interface (based on the value of the FCF).&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a12dc8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0xb7a051b8" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the value of the 6LowPan network field.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a07dc8" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0xb7a05010" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb7a070b0" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the source address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a08d38" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a08ec8" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb7a12808" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the FCF to create a data frame supported by this interface.&#10;&#10;</short>
          <long>&#10;&#10; Sets the FCF to create a data frame supported by this interface.&#10;&#10; You may call setAckRequired and setFramePending commands after this.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a125c8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb7a0ce60" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the data sequence number&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0cb40" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb7a0ccc8" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb7a0f280" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Creates an acknowledgement packet for the given data packet.&#10;&#10;</short>
          <long>&#10;&#10; Creates an acknowledgement packet for the given data packet.&#10;&#10; This also sets the DSN value. The data message must be a &#10;&#10; data frame, the ack message will be overwritten.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a11dc0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a0f010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb7a165e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the IEEE 802.15.4 header including the length field.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0xb7adeb40"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0xb7add710"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a16418" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb7a08780" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the source address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a085d8" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb7a12010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the message is a data frame supported by &#10;&#10; this interface (based on the value of the FCF).&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a13e18" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7a04330" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the active message type&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a04010" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0xb7a04198" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb7a0e3b0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0e208" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb7a0fc30" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet.</short>
          <long>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet. The data message must be a data packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a0f840" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a0f9f0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0xb7a14718" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the length field&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a14400" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7a14588" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0xb7a07810" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the value of the 6LowPan network field.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a07670" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7a04ae0" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10;&#10; is set and the destination address is not the broadcast address.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a048f0" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb7a08010" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the destination address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a09c60" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a09df0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb7a11808" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the FCF to create an acknowledgement frame supported by&#10;&#10; this interface.</short>
          <long>&#10;&#10; Sets the FCF to create an acknowledgement frame supported by&#10;&#10; this interface. You may call setFramePending after this.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a115c8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb7a0dda0" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the frame pending field in the FCF.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0da78" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb7a0dc00" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0xb7a16d50" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the raw value (unadjusted) of the length field&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a16ba8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb7a0af18" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the destination PAN id, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0abd8" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb7a0ad68" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb7a0ecc0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the ACK required field in the FCF, should never be set&#10;&#10; for acknowledgement frames.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0e968" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a0eaf0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb7a14ee8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the frame control field.</short>
          <long>&#10;&#10; Returns the frame control field. This method should not be used, &#10;&#10; isDataFrame and isAckFrame should be used instead.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a14cd8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb7a05a10" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the active message type of the message&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7ad6010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a05870" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7a032b0" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10;&#10; is set and the destionation address is this node.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a030d0" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb7a096a8" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the destination address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a094f8" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb7a0d4c0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a0d318" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb79fd5a0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; This event is fired when the specified timeout period expires.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="wait" ref="0xb79ff9c8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Waits till the specified timeout period expires.</short>
          <long>&#10;&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb79ff7d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb79fd010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Cancels the running alarm.</short>
          <long>&#10;&#10; Cancels the running alarm. The alarm must be pending.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb79ff260" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10;&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10;&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10;&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb79fdb38" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Returns the current time as measured by the radio stack.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb7a2fe78" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; Sets the sequence number of the packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2fb50" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb7a2fcd8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb7a2d498" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; This command is called when the unqiue layer detects a missing (jump &#10;&#10; in the data sequence number) or a duplicate packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb7a30dd0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; Returns the sequence number of the packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a30c38" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb7a2f598" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; Returns the sender of the packet. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2f408" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb7a220d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; Returns the amount of maximum backoff when there is congestion&#10;&#10; (the channel was busy for the first try)&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a23ec8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb7a238c8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; Returns the initial amount of maximum backoff for this message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a23718" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb7a226d0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; Returns the minimum ticks before the message could be sent.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb7a22ec0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; The provided message was just received, and this command should return &#10;&#10; the time till no transmission should be initiated.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a22cd0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10;&#10; This interface needs to be implemented by the MAC to control the behaviour &#10;&#10; of the RF230LayerC component.&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0xb7a3a478" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Gets the number of bytes we should read before the RadioReceive.header&#10;&#10; event is fired.</short>
          <long>&#10;&#10; Gets the number of bytes we should read before the RadioReceive.header&#10;&#10; event is fired. If the length of the packet is less than this amount, &#10;&#10; then that event is fired earlier. The last touch event is not signaled &#10;&#10; for packets whose length is less than or equal to this header length.&#10;&#10; The header length must be at least 1.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb7a39820" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns TRUE if before sending this message we should make sure that&#10;&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a39628" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a3bd38" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns a pointer to the start of the PHY payload that contains &#10;&#10; getLength()-2 number of bytes.</short>
          <long>&#10;&#10; Returns a pointer to the start of the PHY payload that contains &#10;&#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10;&#10; but automatically appended / verified.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3ba90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0xb7a3b4d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Sets the length of the PHY payload.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3b1b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a3b338" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0xb7a3dbe0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns the length of the PHY payload (including the FCF field).&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the PHY payload (including the FCF field).&#10;&#10; This value must be in the range [3, 127].&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3d9b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0xb7a3aa30" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns the maximum PHY length that can be set via the setLength command&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0xb7a39070" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; This command is used at power up to set the default channel.&#10;&#10;</short>
          <long>&#10;&#10; This command is used at power up to set the default channel.&#10;&#10; The default CC2420 channel is 26.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10;&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10;&#10; A LocalTime interface counts time in some units. If you need to detect&#10;&#10; time overflow, you should use a component offering the Counter&#10;&#10; interface.&#10;&#10;&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10;&#10; e.g., unintentionally mixing components expecting milliseconds with&#10;&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79a94d8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79a94d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb79a9bd0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10;&#10; Return current time.</short>
          <long> &#10;&#10; Return current time. Time starts counting at boot - some time sources&#10;&#10; may stop counting while the processor is in low-power mode.&#10;&#10;&#10;&#10; @return Current time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb796ada0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return the active message address of this node&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0xb79699d8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10; Notification that the address or group settings changed.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7969410" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return the group address of this node&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb796a7c0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10; Set the active message address of this node&#10;&#10;</short>
          <long>&#10;&#10; Set the active message address of this node&#10;&#10; @param group The node's group ID&#10;&#10; @param addr The node's active message address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb796a400" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7ad61e0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb796a590" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10;&#10; A Counter counts time in some units and in some width, signaling&#10;&#10; overflow.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A Counter counts time in some units and in some width, signaling&#10;&#10; overflow.&#10;&#10;&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10;&#10; bits used to represent time values. Width is indicated by including&#10;&#10; the appropriate size integer type as a Counter parameter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb791ebb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb791ebb8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb791ecd0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb791ecd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb791d458" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10;&#10; Return counter value.</short>
          <long> &#10;&#10; Return counter value. Counters start at boot - some time sources may&#10;&#10; stop counting while the processor is in low-power mode.&#10;&#10; @return Current counter value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb791ecd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb791c028" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10;&#10; Cancel a pending overflow interrupt.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb791daa0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10;&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10;&#10; block is exits. </short>
          <long> &#10;&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10;&#10; block is exits.  FALSE otherwise.&#10;&#10; @return Counter pending overflow status.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb791c620" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10;&#10; Signals that the current time has overflowed. </short>
          <long>&#10;&#10; Signals that the current time has overflowed.  That is, the current&#10;&#10; time has wrapped around from its maximum value to zero.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10;&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb790c990" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb790bae8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb790c350" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb7909360" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb7909010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb790be30" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb790b2f0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb790b188" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb7909810" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb79096a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb790c670" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb790b798" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb790b630" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb790ce38" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb790ccd0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10;&#10; HPL Interface to Atmega128 capture capabilities.&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega128 capture capabilities.&#10;&#10; @param size_type Integer type of capture register&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb7907828" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7907828"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb7903c70" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Sets the capture edge.&#10;&#10;</short>
          <long> &#10;&#10; Sets the capture edge.&#10;&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb7903a80" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb7905e80" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Did a capture interrupt occur?&#10;&#10;</short>
          <long> &#10;&#10; Did a capture interrupt occur?&#10;&#10; @return TRUE if capture triggered, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7907f20" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Get the time to be captured.&#10;&#10;</short>
          <long> &#10;&#10; Get the time to be captured.&#10;&#10; @return  the capture time&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7907828"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0xb7906ea0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Signalled on capture interrupt.&#10;&#10;</short>
          <long> &#10;&#10; Signalled on capture interrupt.&#10;&#10; @param t     the time of the capture event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7907828"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7906cb8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7907828"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79051f8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb79034c0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Is capture interrupt on? &#10;&#10;</short>
          <long> &#10;&#10; Is capture interrupt on? &#10;&#10; @return TRUE if capture enabled, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb79066e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Set the time to be captured.&#10;&#10;</short>
          <long> &#10;&#10; Set the time to be captured.&#10;&#10; @param t     the time of the next capture event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7907828"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7906500" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7907828"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7905528" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7905858" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10;&#10; HPL Interface to Atmega128 compare registers.&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega128 compare registers.&#10;&#10; @param size_type Integer type of compare register&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb7900bf8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7900bf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb78fddf0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Did compare interrupt occur? &#10;&#10;</short>
          <long> &#10;&#10; Did compare interrupt occur? &#10;&#10; @return TRUE if compare triggered, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb78ffe20" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb78ff348" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Get the compare time to fire on.&#10;&#10;</short>
          <long> &#10;&#10; Get the compare time to fire on.&#10;&#10; @return  the compare time value&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7900bf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0xb78fd168" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb78fc458" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Is compare interrupt on?&#10;&#10;</short>
          <long> &#10;&#10; Is compare interrupt on?&#10;&#10; @return TRUE if compare enabled, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb78ffaf0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Set the compare time to fire on.&#10;&#10;</short>
          <long> &#10;&#10; Set the compare time to fire on.&#10;&#10; @param t     the compare time to set&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7900bf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb78ff910" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7900bf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb78fd498" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb78fd7c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10;&#10; Basic interface to the hardware timers on an ATmega128.  &#10;&#10;</short>
        <long>&#10;&#10; Basic interface to the hardware timers on an ATmega128.  &#10;&#10; &#60;p>&#10;&#10; This interface is designed to be independent of whether the underlying &#10;&#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10;&#10; specified via a generics parameter.  Because this is exposing a common &#10;&#10; subset of functionality that all ATmega128 hardware timers share, all &#10;&#10; that is exposed is access to the overflow capability.  Compare and capture&#10;&#10; functionality are exposed on separate interfaces to allow easy &#10;&#10; configurability via wiring.&#10;&#10; &#60;p>&#10;&#10; This interface provides four major groups of functionality:&#60;ol>&#10;&#10;      &#60;li>Timer Value: get/set current time&#10;&#10;      &#60;li>Overflow Interrupt event&#10;&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb7916620" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7916620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb7912158" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0xb79137e8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Did an overflow interrupt occur?&#10;&#10;</short>
          <long> &#10;&#10; Did an overflow interrupt occur?&#10;&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7916d00" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Get the current time.&#10;&#10;</short>
          <long> &#10;&#10; Get the current time.&#10;&#10; @return  the current time&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7916620"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb7912900" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Turn on the clock.&#10;&#10;</short>
          <long> &#10;&#10; Turn on the clock.&#10;&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb7912718" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb7912f18" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Get prescaler setting.&#10;&#10;</short>
          <long> &#10;&#10; Get prescaler setting.&#10;&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0xb7914b38" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7914800" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7913e00" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Is overflow interrupt on? &#10;&#10;</short>
          <long> &#10;&#10; Is overflow interrupt on? &#10;&#10; @return TRUE if overflow enabled, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb79144b8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Set the current time.&#10;&#10;</short>
          <long> &#10;&#10; Set the current time.&#10;&#10; @param t     the time to set&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7916620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79142f0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7916620"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7914e70" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79131c8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10;&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10;&#10; bits used to represent time values. Width is indicated by including&#10;&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7868900" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7868900"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7868a18" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb78655a0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Return the current time.&#10;&#10;</short>
          <long>&#10;&#10; Return the current time.&#10;&#10; @return Current time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7867e50" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Signaled when the alarm expires.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb7865010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10;&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10;&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10;&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10;&#10; values represent times in the past, i.e., the time at which getNow()&#10;&#10; would last of returned that value.&#10;&#10;&#10;&#10; @param t0 Base time for alarm.&#10;&#10; @param dt Alarm time as offset from t0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7866a38" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          </variable>
          <variable name="dt" ref="0xb7866bc8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb78664e0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Check if alarm is running.</short>
          <long>&#10;&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10;&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10;&#10; already started executing, but not reached your code yet).&#10;&#10;&#10;&#10; @return TRUE if the alarm is still running.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb7865bf8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Return the time the currently running alarm will fire or the time that&#10;&#10; the previously running alarm was set to fire.&#10;&#10;</short>
          <long>&#10;&#10; Return the time the currently running alarm will fire or the time that&#10;&#10; the previously running alarm was set to fire.&#10;&#10; @return Alarm time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0xb7867328" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10;&#10; Set a single-short alarm to some time units in the future. Replaces&#10;&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10;&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10;&#10;&#10; @param dt Time until the alarm fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7867088" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7868a18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7867900" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Cancel an alarm.</short>
          <long>&#10;&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10;&#10; already been signaled (even if your code has not yet started&#10;&#10; executing).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10;&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb7847b60" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb7847360" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb7849350" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb7847810" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb78476a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb7847010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7849e58" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb7846030" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb7847ea8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb7849670" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb7849b18" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78499b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb783f7a8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10;&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb7841c78" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Turn on timer 2 asynchronous mode&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb7840360" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10;&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb7840a08" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10;&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb783fe58" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10;&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb783f108" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10;&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb7842e88" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Read timer2 asynchronous status register (ASSR)&#10;&#10;</short>
          <long>&#10;&#10; Read timer2 asynchronous status register (ASSR)&#10;&#10; @return Current value of ASSR&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7c2d608"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7c2d838"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb7841688" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Set timer2 asynchronous status register (ASSR)&#10;&#10;</short>
          <long>&#10;&#10; Set timer2 asynchronous status register (ASSR)&#10;&#10; @param x New value for ASSR&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7c2d608"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7c2d838"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb7841490" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7c2d608"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7c2d838"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10;&#10; This interface is useful in building state machines when the state &#10;&#10; transitions should be executed atomically but with interrupts enabled. &#10;&#10;</short>
        <long>&#10;&#10; This interface is useful in building state machines when the state &#10;&#10; transitions should be executed atomically but with interrupts enabled. &#10;&#10; All state transitions should take place in the run event handler or&#10;&#10; in blocks protected by the suspend and resume commands.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb777eda8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10;&#10; Makes sure that the run event is called at least once more. If the &#10;&#10; run event is currently not executing, then it  is called immediately &#10;&#10; and this command returns only after the completion of the run event. &#10;&#10; If the run event is currently executed, then this method returns at &#10;&#10; once, and makes sure that the run event is called once more when &#10;&#10; it is finished. If this method is called from a task, then by the &#10;&#10; above rules, the run event will be called from a task as well.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb777c618" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; Enters a critical section of the code and meakes sure that the&#10;&#10; run event is not called while in this section.</short>
          <long>&#10;&#10; Enters a critical section of the code and meakes sure that the&#10;&#10; run event is not called while in this section. No long running&#10;&#10; computation should be called from the critical session, and&#10;&#10; in particular no user event should be fired. This call is only&#10;&#10; possible from task context, otherwise we cannot guarantee that&#10;&#10; the run event is not currently running. The suspend calls&#10;&#10; can be nested. It is very important that the same number of&#10;&#10; resume commands must be called in all control paths, e.g. be very&#10;&#10; careful with the return and break commands.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resume" ref="0xb777cc18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; Leaves the critical section.</short>
          <long>&#10;&#10; Leaves the critical section. This call is conly possible from &#10;&#10; task context. If there were scheduled executions of the run&#10;&#10; event, then those will be called before this command returns.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="run" ref="0xb777e638" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; This method is executed atomically. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7765810" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10;&#10; the maximum available size, use the Packet interface of the&#10;&#10; component providing Send. If send returns SUCCESS, then the&#10;&#10; component will signal the sendDone event in the future; if send&#10;&#10; returns an error, it will not signal sendDone.  Note that a&#10;&#10; component may accept a send request which it later finds it&#10;&#10; cannot satisfy; in this case, it will signal sendDone with an&#10;&#10; appropriate error code.&#10;&#10;&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10;&#10; @param   len     the length of the packet payload&#10;&#10; @return          SUCCESS if the request was accepted and will issue&#10;&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;&#10;                  the request now but will be able to later, FAIL&#10;&#10;                  if the stack is in a state that cannot accept requests&#10;&#10;                  (e.g., it's off).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7765150" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77652d8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7762dc8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet which&#10;&#10; at least a certain length. </short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet which&#10;&#10; at least a certain length.  If the payload region is smaller than&#10;&#10; the len parameter, then getPayload returns NULL. This command&#10;&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10;&#10; included in this interface as a convenience.&#10;&#10;&#10;&#10; @param   'message_t* ONE msg'    the packet&#10;&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7762898" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7762a20" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7762338" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. This command behaves identically to&#10;&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10;&#10; interface as a convenience.&#10;&#10;&#10;&#10; @return  the maximum payload length&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7764270" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10;&#10; Cancel a requested transmission.</short>
          <long>&#10;&#10; Cancel a requested transmission. Returns SUCCESS if the &#10;&#10; transmission was cancelled properly (not sent in its&#10;&#10; entirety). Note that the component may not know&#10;&#10; if the send was successfully cancelled, if the radio is&#10;&#10; handling much of the logic; in this case, a component&#10;&#10; should be conservative and return an appropriate error code.&#10;&#10;&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10;&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;&#10;                 otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7765d70" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7764ca0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10;&#10; Signaled in response to an accepted send request.</short>
          <long> &#10;&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10;&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10;&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; &#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10;&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77647d0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7764958" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb76e17d8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; Moves to radio into sleep state with the lowest power consumption but &#10;&#10; highest wakeup time.</short>
          <long>&#10;&#10; Moves to radio into sleep state with the lowest power consumption but &#10;&#10; highest wakeup time. The radio cannot send or receive in this state &#10;&#10; and releases all access to shared resources (e.g. SPI bus). &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb76e0418" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; Goes into receive state.</short>
          <long>&#10;&#10; Goes into receive state. The radio continuously receive messages &#10;&#10; and able to transmit.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb76e0bc8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; Sets the current channel.</short>
          <long>&#10;&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10;&#10; to change the channel this time (some other operation is in progress)&#10;&#10; SUCCESS otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb76e0998" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb76df1c8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; This event is signaled exactly once for each sucessfully posted state &#10;&#10; transition and setChannel command when it is completed.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="standby" ref="0xb76e1da0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; The same as the turnOff command, except it is not as deep sleep, and&#10;&#10; it is quicker to recover from this state.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb76d80b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10;&#10; Signals the reception of a message, but only for those messages for&#10;&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10;&#10; Signals the reception of a message, but only for those messages for&#10;&#10; which SUCCESS was returned in the header event. The usual owner rules &#10;&#10; apply to the message pointers.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
              <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76dad88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb76da7d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10;&#10; This event is fired when the header is received/downloaded and the &#10;&#10; higher layers are consulted whether it needs to be downloaded and &#10;&#10; further processed.</short>
          <long>&#10;&#10; This event is fired when the header is received/downloaded and the &#10;&#10; higher layers are consulted whether it needs to be downloaded and &#10;&#10; further processed. Return FALSE if the message should be discarded.&#10;&#10; In particular, the message buffer layer returns FALSE if there is&#10;&#10; no space for a new message, so this message will not get acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76da458" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb76dd608" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10;&#10; Starts the transmission of the given message.</short>
          <long>&#10;&#10; Starts the transmission of the given message. This command must not&#10;&#10; be called while another send is in progress (so one must wait for the&#10;&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10;&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10;&#10; the SPI bus access could not be acquired). In this case the send &#10;&#10; command could be retried from a tasklet. Returns SUCCESS if the &#10;&#10; transmission could be started. In this case sendDone will be fired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76dd278" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7acf090"/>
                <typename><typedef-ref name="message_t" ref="0xb7acf9d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb76dc508" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10;&#10; This event is fired when the component is most likely able to accept &#10;&#10; a send request.</short>
          <long>&#10;&#10; This event is fired when the component is most likely able to accept &#10;&#10; a send request. If the send command has returned with a failure, then&#10;&#10; this event will be called at least once in the near future.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb76dde58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10;&#10; Signals the completion of the send command, exactly once for each &#10;&#10; successfull send command.</short>
          <long>&#10;&#10; Signals the completion of the send command, exactly once for each &#10;&#10; successfull send command. If the returned error code is SUCCESS, then &#10;&#10; the message was sent (may not have been acknowledged), otherwise &#10;&#10; the message was not transmitted over the air.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb76ddb80" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10;&#10; This interface provides one bit storage for each neighbor in a very&#10;&#10; fast and conveint way (without using shifts for example). &#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb769cbb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Clears the flag for the given index.</short>
          <long>&#10;&#10; Clears the flag for the given index. The flag is automatically&#10;&#10; cleared after the Neighborhood.evicted event is fired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb769c9a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb769b168" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Clears the flag for all indices&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb769dcc0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Returns the value of the flag for the given index&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb769db20" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb769c418" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Sets the flag for the given index&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb769c288" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10;&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10;&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10;&#10; component maintains only the nodeids and ages of the neighbors, and&#10;&#10; evicts old entries from the table when necessary.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb76a2e80" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Returns the age of the given entry.</short>
          <long>&#10;&#10; Returns the age of the given entry. The age is incremented by one&#10;&#10; every time a new node is inserted into the neighborhood table that&#10;&#10; is not already at the very end. If the age would get too large to&#10;&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76a2bd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb76a0e58" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10;&#10; Adds a new node into the neighborhood table. If this node was already&#10;&#10; in the table, then it is just brought to the front (its age is reset&#10;&#10; to zero). If the node was not in the table, then the oldest is evicted&#10;&#10; and its entry is replaced with this node. The index of the entry&#10;&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb76a0b70" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb76a05d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Returns the node address for the given entry.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76a0438" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb769f6f8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; This event is fired when the oldest entry is replaced with a new&#10;&#10; node.</short>
          <long>&#10;&#10; This event is fired when the oldest entry is replaced with a new&#10;&#10; node. The same interface is used by many users, so all of them&#10;&#10; will receive this event and can clear the corresponding entry.&#10;&#10; After this event is fired, all flags for this entry are cleared&#10;&#10; (see the NeighborhoodFlag interface)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb769f408" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb76a2650" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10;&#10; Returns the index of the neighbor in the table. If the node was not &#10;&#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10;&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb76a23e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7ad63b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10;&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;&#10;&#10;</short>
        <long> &#10;&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;&#10;&#10; @author Barbara Hohlt &#10;&#10; @date   March 1 2005 &#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb76389f8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10;</short>
          <long> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10; @return Returns low 16 bits of the pseudorandom number.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb7638420" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10;</short>
          <long> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10; @return Returns the 32-bit pseudorandom number.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ee4818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb7622c88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb7622c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb76216c0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10;&#10; Initialize this component.</short>
          <long>&#10;&#10; Initialize this component. Initialization should not assume that&#10;&#10; any component is running: init() cannot call any commands besides&#10;&#10; those that initialize other components. This command behaves&#10;&#10; identically to Init.init, except that it takes a parameter.&#10;&#10;&#10;&#10; @param   param   the initialization parameter&#10;&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb7622c88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb76213b8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb7622c88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb75f83b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10;&#10; Signals the completion of the clear channel assesment send command.&#10;&#10;</short>
          <long>&#10;&#10; Signals the completion of the clear channel assesment send command.&#10;&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10;&#10; clear, and FAIL means that the clear channel assesment could not&#10;&#10; be finished or the operation was cancelled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb75f80f8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb75f9b78" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10;&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10;&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10;&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10;&#10; The check will be performed only in the RX_READY state.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10;&#10; BusyWait is a low-level interface intended for busy waiting for short&#10;&#10; durations.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; BusyWait is a low-level interface intended for busy waiting for short&#10;&#10; durations.&#10;&#10;&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10;&#10; used to represent time values. Width is indicated by including the&#10;&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;&#10;   interface.&#10;&#10; @param size_type An integer type representing time values for this &#10;&#10;   BusyWait interface.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb75bf010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb75bf010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb75bf128" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb75bf128"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb75bf9a8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10;&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10;&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10;&#10; cost of using an Alarm or Timer would be too high.&#10;&#10; @param dt Time to busy wait for.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb75bf128"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb75bf770" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb75bf128"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10;&#10; There should be standard interfaces/commands for these&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0xb75c7280" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; Finishes the split-phase SPI data transfer by waiting till &#10;&#10; the write command comletes and returning the received data.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0xb75c7a28" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; This command first reads the SPI register and then writes&#10;&#10; there the new data, then returns&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75c7858" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0xb75c61f8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; This is the standard SpiByte.write command but a little&#10;&#10; faster as we shuold not need to adjust the power state there.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75c6010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0xb75c9c38" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; Starts a split-phase SPI data transfer with the given data.&#10;&#10;</short>
          <long>&#10;&#10; Starts a split-phase SPI data transfer with the given data.&#10;&#10; A spiSplitRead command must follow this command even if the&#10;&#10; result is unimportant. The SpiByte interface should be &#10;&#10; extended with this protocol.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75c99b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0xb75c93e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; Calculates the crc.</short>
          <long>&#10;&#10; Calculates the crc. For some unknown reason the standard&#10;&#10; tinyos crcByte command swiches endianness.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0xb75c9068" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb75c91f0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Jonathan Hui&#10;&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb75cb460" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10;&#10; Synchronous transmit and receive (can be in interrupt context)&#10;&#10;</short>
          <long>&#10;&#10; Synchronous transmit and receive (can be in interrupt context)&#10;&#10; @param tx Byte to transmit&#10;&#10; @param rx Received byte is stored here.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb75cb220" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The Resource interface can be used to gain access to&#10;&#10; shared resources. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The Resource interface can be used to gain access to&#10;&#10; shared resources.  It is always offered as a parameterized&#10;&#10; interface, and its users gain access to the resource through some&#10;&#10; predefined arbitration policy.&#10;&#10;&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10; @version $Revision: 1.5 $&#10;&#10; @date $Date: 2007/04/15 20:05:03 $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb75cedb0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; Release a shared resource you previously acquired.  &#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Release a shared resource you previously acquired.  &#10;&#10;&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;&#10;         FAIL You tried to release but you are not the&#10;&#10;              owner of the resource &#10;&#10;&#10;&#10; @note This command should never be called between putting in a request 	  &#10;&#10;       and waiting for a granted event.  Doing so will result in a&#10;&#10;       potential race condition.  There are ways to guarantee that no&#10;&#10;       race will occur, but they are clumsy and overly complicated.&#10;&#10;       Since it doesn't logically make since to be calling&#10;&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;&#10;       we have opted to keep thing simple and warn you about the potential &#10;&#10;       race.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb75ce010" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; Request immediate access to a shared resource.</short>
          <long>&#10;&#10; Request immediate access to a shared resource. You must call release()&#10;&#10; when you are done with it.&#10;&#10;&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;&#10;            FAIL The request cannot be fulfilled&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0xb75cf930" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; Request access to a shared resource.</short>
          <long>&#10;&#10; Request access to a shared resource. You must call release()&#10;&#10; when you are done with it.&#10;&#10;&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;&#10;                 event will be signaled once you have control of the&#10;&#10;                 resource.&#60;br>&#10;&#10;         EBUSY You have already requested this resource and a&#10;&#10;               granted event is pending&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0xb75ce558" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; You are now in control of the resource.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb75cd488" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10;  Check if the user of this interface is the current&#10;&#10;  owner of the Resource&#10;&#10; </short>
          <long>&#10;&#10;  Check if the user of this interface is the current&#10;&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;&#10;             FALSE It is not the owner&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb75c3ec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0xb75c2bd0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10;&#10; Disable further captures.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0xb75c2668" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10;&#10; Fired when an edge interrupt occurs.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Fired when an edge interrupt occurs.&#10;&#10;&#10;&#10; @param val The value of the 32kHz timer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb75c2478" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb75c3b98" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10;&#10; Enable an edge based timer capture event.&#10;&#10;&#10;&#10;</short>
          <long> &#10;&#10; Enable an edge based timer capture event.&#10;&#10;&#10;&#10; @return Whether the timer capture has been enabled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10;&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10;&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10;&#10; interface provides a split-phase send command which can be used for&#10;&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10;&#10; from the SPI requires writing bytes. The send call allows NULL&#10;&#10; parameters for receive or send only operations. This interface is&#10;&#10; for buffer based transfers where the microcontroller is the master&#10;&#10; (clocking) device.&#10;&#10;&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10;&#10; before sending commands with SPIPacket. In the case of multiple&#10;&#10; devices attached to a single SPI bus, chip select pins are often also&#10;&#10; used.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Jonathan Hui&#10;&#10; @author Joe Polastre&#10;&#10; Revision:  $Revision: 1.7 $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7536770" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10;&#10; Send a message over the SPI bus.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Send a message over the SPI bus.&#10;&#10;&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;&#10;              parameter is NULL, then the SPI will send zeroes.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;&#10;              be stored. If this parameter is NULL, then the SPI will&#10;&#10;              discard incoming bytes.&#10;&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;&#10;              will overflow a buffer.&#10;&#10;&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb7536010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb75361b8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7536348" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7535578" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10;&#10; Notification that the send command has completed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Notification that the send command has completed.&#10;&#10;&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10;&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10;&#10; @param len    The request length of the transfer, but not necessarily&#10;&#10;               the number of bytes that were actually transferred&#10;&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;&#10;               otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb7536cf8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb7536ea0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7535068" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ee42a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7535200" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10;&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10;&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10;&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @date   September 8 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0xb752a128" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb7525188" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb7528928" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb7525640" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb75254d8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb752edb0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb75275f0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb7527488" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb7529e28" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb7529cc0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb752aa38" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10;&#10; Read the SPI data register &#10;&#10;</short>
          <long> &#10;&#10; Read the SPI data register &#10;&#10; @return last data byte&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb7522010" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb7524e00" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb7528160" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb7525e08" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb7525ca0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb7524468" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb7527e48" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb7527ce0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb7524ab8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb7528dd8" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb7528c70" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb75291e8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10;&#10; Write the SPI data register &#10;&#10;</short>
          <long> &#10;&#10; Write the SPI data register &#10;&#10; @param data   next data byte&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7529010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb7528608" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb75284a0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb7527990" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb7525960" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb7524140" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb7524790" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb7527140" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb752a468" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb7529980" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10;&#10; Interrupt signalling SPI data cycle is complete. &#10;&#10;</short>
          <long>&#10;&#10; Interrupt signalling SPI data cycle is complete. &#10;&#10; @param data   data byte from data register&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7529778" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10;&#10; status of an arbiter. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10;&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10;&#10; and can be used for a variety of different purposes.  Normally it will be&#10;&#10; used in conjunction with the Resource interface for performing run time&#10;&#10; checks on access rights to a particular shared resource.&#10;&#10;&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb751e1d0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10;&#10; Check whether a resource is currently allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Check whether a resource is currently allocated.&#10;&#10;&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;&#10;              to any of its users&#60;br>&#10;&#10;         FALSE Otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0xb751e808" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10;&#10; Get the id of the client currently using a resource.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the id of the client currently using a resource.&#10;&#10; &#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;&#10;         0xFF if no one currently owns the resource&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ee6cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10;&#10; should be used for switching between the on and off power states of&#10;&#10; the component providing it.  This interface differs from the&#10;&#10; StdControl interface only in the fact that any of its commands can&#10;&#10; be called from asynchronous context.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb74f2160" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Start this component and all of its subcomponents.&#10;&#10;&#10;&#10; @return SUCCESS if the component was either already on or was &#10;&#10;         successfully turned on&#60;br>&#10;&#10;         FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb74f2858" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10;&#10; Stop the component and any pertinent subcomponents (not all&#10;&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Stop the component and any pertinent subcomponents (not all&#10;&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;&#10;&#10; @return SUCCESS if the component was either already off or was &#10;&#10;         successfully turned off&#60;br>&#10;&#10;         FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10;&#10; Resource interface in order to receive events based on other users&#10;&#10; requests.&#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10;&#10; Resource interface in order to receive events based on other users&#10;&#10; requests.&#10;&#10; &#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10; @version $Revision: 1.4 $&#10;&#10; @date $Date: 2006/12/12 18:23:15 $&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb74c51d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.request() command.</short>
          <long>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.request() command. You may want to&#10;&#10; consider releasing a resource based on this event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb74c5900" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.immediateRequest() command. You may&#10;&#10; want to consider releasing a resource based on this event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10; &#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10;&#10; users of a shared resource to configure that resource just before being&#10;&#10; granted access to it. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10; &#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10;&#10; users of a shared resource to configure that resource just before being&#10;&#10; granted access to it.  It will always be parameterized along side &#10;&#10; a parameterized Resource interface, with the ids from one mapping directly&#10;&#10; onto the ids of the other.&#10;&#10;&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb74c27e0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10;&#10; Used to unconfigure a resource just before releasing it.&#10;&#10;</short>
          <long>&#10;&#10; Used to unconfigure a resource just before releasing it.&#10;&#10; Must always be used in conjuntion with the Resource interface.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0xb74c21b0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10;&#10; Used to configure a resource just before being granted access to it.&#10;&#10;</short>
          <long>&#10;&#10; Used to configure a resource just before being granted access to it.&#10;&#10; Must always be used in conjuntion with the Resource interface.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;&#10;  A queue interface for managing client ids when performing resource &#10;&#10;  arbitration.</short>
        <long>&#10;&#10;  A queue interface for managing client ids when performing resource &#10;&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;&#10;  client, with the actual queing policy determined by the implementation&#10;&#10;  of the interface.&#10;&#10;&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb74b9b48" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Enqueue a cleint id&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Enqueue a cleint id&#10;&#10;&#10;&#10; @param cleintId - the cleint id to enqueue&#10;&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;&#10;         EBUSY   if it has already been enqueued.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c80e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74c0c18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb74b9900" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74c0c18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb74bb4b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Check to see if the queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Check to see if the queue is empty.&#10;&#10;&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;&#10;         FALSE if there is at least one entry in the queue&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb74bbce0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Check to see if a given cleint id has already been enqueued&#10;&#10; and is waiting to be processed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Check to see if a given cleint id has already been enqueued&#10;&#10; and is waiting to be processed.&#10;&#10;&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;&#10;         FALSE if it does not&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c8b648"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74c0c18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb74bba50" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74c0c18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb74b9368" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Retreive the cleint id of the next resource in the queue. &#10;&#10;</short>
          <long>&#10;&#10; Retreive the cleint id of the next resource in the queue. &#10;&#10; If the queue is empty, the return value is undefined.&#10;&#10;&#10;&#10; @return The cleint id at the head of the queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb74c0c18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
