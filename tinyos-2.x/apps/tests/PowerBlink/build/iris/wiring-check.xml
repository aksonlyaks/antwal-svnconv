<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="24:RandRWAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7c53ac8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb79b18c0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb79b18c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb79ad0a0"/></to>
    </wire>
    <wire loc="26:RandRWAppC.nc">
      <from><interface-ref name="ConfigStorage" scoped="" ref="0xb7c3f300"/></from>
      <to><interface-ref name="ConfigStorage" scoped="" ref="0xb795d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ConfigStorage" scoped="" ref="0xb795d010"/></from>
      <to><interface-ref name="ConfigStorage" scoped="" ref="0xb7c1a5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:RandRWAppC.nc">
      <from><interface-ref name="ConfigMount" scoped="" ref="0xb7c3d3f0"/></from>
      <to><interface-ref name="Mount" scoped="" ref="0xb7c33b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Mount" scoped="" ref="0xb7c33b80"/></from>
      <to><interface-ref name="Mount" scoped="" ref="0xb7c1bf08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:RandRWAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7c4c3e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb795ad00"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb795ad00"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7954bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0xb7baac58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0xb79628a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0xb7c4a130"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb7ba5888"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7b631a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/WireConfigStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0xb7c08888"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0xb7b65d88"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/WireConfigStorageP.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0xb7c03c78"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0xb7bb04d0"/></to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/WireConfigStorageP.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0xb7c072e0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0xb7bb19d8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0xb7b65d88"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0xb7b55900"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/WireConfigStorageP.nc">
      <from><interface-ref name="BConfig" scoped="" ref="0xb7ba8208"/></from>
      <to><interface-ref name="BConfig" scoped="" ref="0xb7c14b10"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0xb7bb0bb0"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0xb7b65d88"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7b5ed40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7968040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7968040"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7794a20"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7b631a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb79af4e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb79af4e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7795ea8"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb7b5cbc0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb79686d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb79686d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb7793150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb79b1c30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7797918"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb79b1c30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b555e0"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0xb7b48e20"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0xb7b029d8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0xb7b029d8"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0xb7affc68"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb7b441c0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb79c1010"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0xb7b3b560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0xb7b3a400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7ad4030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7ad0a60"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7ad0a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb79c2cd0"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0xb7ad46e8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0xb7acf188"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0xb7acf188"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0xb7acb628"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7ad4a00"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7acf4b0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7acf4b0"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7acb950"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb79e3c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7acb2d8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0xb7ac5640"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0xb7aaa980"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7aaa980"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a63ba8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0xb7ac9010"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0xb7a9a6c8"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7a9a6c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a49250"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0xb7ac8348"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0xb7a9c980"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7a9c980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a4b5d0"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0xb7ac9980"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0xb7a9b348"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7a9b348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a4bf28"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb7ac8dc8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb79c1010"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0xb7ab38c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7a8ee78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a13360"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7a9c010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a4cbb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a4cbb8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7868050"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7a95188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a425d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a425d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7832308"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7a91e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a3bc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a3bc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb77ffe50"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7aa86c8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a61890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a61890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78fb490"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7a92b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a3c968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a3c968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78028d8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7aa79d8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a5d550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a5d550"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78d4de8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7aa1b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a54f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a54f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb789b3b0"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7a9bcb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a4a890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a4a890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78631b0"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7a94e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a40250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a40250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb782c3b0"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7aab5f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a64840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a64840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7904da8"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7aa57a8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a5b250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a5b250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78cde50"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7a9f808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a52ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a52ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7896490"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7a999d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a485d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a485d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb785e308"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7a8fb00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a38988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a38988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb77f9010"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7a8cd98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a0a618"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7a98d98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a43250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a43250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7836c98"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7aa9348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a625d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a625d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78ffe50"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7aa3508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a59f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a59f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78c7010"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7a8daa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a10960"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7aa2808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a55bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a55bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78a0da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a4b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7867ae8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7a95af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a42f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a42f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7831da8"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7a90808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a3a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a3a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb77fd920"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7aa7068"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a60250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a60250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78f9010"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7aa6428"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a5dea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a5dea8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78d08d8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7aa0508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a53890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a53890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb789ae50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a49250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7862c98"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7a93808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a40ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a40ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb782be50"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7aaa010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a63250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a63250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb79028d8"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7aa4188"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a5bba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a5bba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78cb920"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7a9e190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a515d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a515d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7894010"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7a8e508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a37330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a37330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb77f8ac8"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7a9d508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a4c260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a4c260"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb786a540"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7a967a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a43ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a43ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78347f8"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7a91508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a3b330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a3b330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78003b0"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7a8b7a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a08d10"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7aa9cb8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a62f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a62f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78fd920"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7aa3e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a58890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a58890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78c6ac8"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7a92190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a3c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a3c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7806da8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7aa1190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a545d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a545d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb789d8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a4bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7865650"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7a94508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a41890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a41890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb782f8d8"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7a8f190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a38030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a38030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb77fb490"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7aacc70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a65ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a65ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7905308"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7aa6d98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a5c840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a5c840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78ce3b0"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7aa0e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a52250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a52250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7898920"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7a99068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a49ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a49ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78607f8"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7a8c428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a0d010"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7a98428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a448e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a448e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78371f8"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7a9eb00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a51f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a51f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7893ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a63ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb79003b0"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7aa4b78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a595d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a595d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb78c9490"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79e88d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79e0ce8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb79e3548"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb79d1a88"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb79df3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79d1760"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb79df070"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79416b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb79df070"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb79e6bc0"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb79e6bc0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb79d8340"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb79e6f28"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb79e3c40"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb79d86b8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7aa9348"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb79d7068"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb79e6f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0xb79bf848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb79ad3e8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7ce7010"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7ce7010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7c7bae8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb79ad918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79e88d0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb79adc88"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb79b1c30"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c7a2a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7c77810"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7c6b360"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb79afc20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb7794618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb7793610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb7968b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xb7793a38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb7797c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xb7792c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79416b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79548d8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb79538c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb79439b0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb79439b0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7aaa010"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7952268"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb7942368"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7942368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7aab5f0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7952bd8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb7942cf8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7942cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7aacc70"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="RandRWC" loc="16:RandRWC.nc">
      <documentation loc="16:RandRWC.nc">
        <short>&#10; Config storage test application.</short>
        <long>&#10; Config storage test application. Does a pattern of random reads and&#10; writes, based on mote id. See README.txt for more details.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="RandRWAppC.ConfigStorageC" loc="23(RandRWAppC.ConfigStorageC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc">
      <documentation loc="23(RandRWAppC.ConfigStorageC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc">
        <short>&#10; Implementation of the config storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10;</short>
        <long>&#10; Implementation of the config storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for config storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ConfigStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ConfigStorageP" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="BlockStorageP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10;</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="At45dbC" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10;</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="25(HplAt45dbC.HplAt45dbByteC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10;</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAt45dbIOC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10;</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10;</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc">
      <documentation loc="20(HplAt45dbIOC.NoArbiterC):/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="At45dbC.Arbiter" loc="79(At45dbC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(At45dbC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="32(At45dbC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(At45dbC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
      <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.&#10;&#10;</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ConfigStorageC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc" abstract="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc">
        <short>&#10; Implementation of the config storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10;</short>
        <long>&#10; Implementation of the config storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for config storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0xb7c325f0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc">
          <component-ref qname="ConfigStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0xb7c4a130"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10;</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0xb7afc010" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7a89d28" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7a89eb8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7a86068" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7a7d430" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7a7d5d0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7a7d770" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7a7d908" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7a34d18" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7a34eb8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7a31088" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7a31220" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb79aecb8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0xb799d4c8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0xb798c8e8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7cebe50"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7cebe50"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="ConfigMount" ref="0xb7c3d3f0" loc="21:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigMount" scoped="" ref="0xb7c3d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mount"/>
      </instance>
      <interface-functions>
        <function-ref name="mount" scoped="" ref="0xb7c3d5c8"/>
        <function-ref name="mountDone" scoped="" ref="0xb7c3d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7c53ac8" loc="18:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7c53ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7c53ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7c4c3e0" loc="19:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7c4c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7c4c5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7c4c698"/>
        <function-ref name="led1On" scoped="" ref="0xb7c4c778"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7c4c858"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7c4c938"/>
        <function-ref name="get" scoped="" ref="0xb7c4ca18"/>
        <function-ref name="led1Off" scoped="" ref="0xb7c4caf8"/>
        <function-ref name="led2Off" scoped="" ref="0xb7c4ce78"/>
        <function-ref name="set" scoped="" ref="0xb7c4cbd8"/>
        <function-ref name="led0On" scoped="" ref="0xb7c4ccb8"/>
        <function-ref name="led2On" scoped="" ref="0xb7c4cd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigStorage" ref="0xb7c3f300" loc="20:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigStorage" scoped="" ref="0xb7c3f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConfigStorage"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7c3f4d8"/>
        <function-ref name="writeDone" scoped="" ref="0xb7c3f5b8"/>
        <function-ref name="commit" scoped="" ref="0xb7c3f698"/>
        <function-ref name="valid" scoped="" ref="0xb7c3f778"/>
        <function-ref name="write" scoped="" ref="0xb7c3f858"/>
        <function-ref name="getSize" scoped="" ref="0xb7c3f938"/>
        <function-ref name="commitDone" scoped="" ref="0xb7c3fa18"/>
        <function-ref name="readDone" scoped="" ref="0xb7c3faf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mount" ref="0xb7c33b80" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc">
      <component-ref qname="RandRWAppC.ConfigStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mount" scoped="" ref="0xb7c33b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mount"/>
      </instance>
      <interface-functions>
        <function-ref name="mount" scoped="" ref="0xb7c33d58"/>
        <function-ref name="mountDone" scoped="" ref="0xb7c33e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigStorage" ref="0xb795d010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageC.nc">
      <component-ref qname="RandRWAppC.ConfigStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigStorage" scoped="" ref="0xb795d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConfigStorage"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb795d1e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb795d2c8"/>
        <function-ref name="commit" scoped="" ref="0xb795d3a8"/>
        <function-ref name="valid" scoped="" ref="0xb795d488"/>
        <function-ref name="write" scoped="" ref="0xb795d568"/>
        <function-ref name="getSize" scoped="" ref="0xb795d648"/>
        <function-ref name="commitDone" scoped="" ref="0xb795d728"/>
        <function-ref name="readDone" scoped="" ref="0xb795d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0xb7c08888" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <component-ref qname="ConfigStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0xb7c08888"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0xb7c17870"/>
        <function-ref name="syncDone" scoped="" ref="0xb7c08b40"/>
        <function-ref name="flushDone" scoped="" ref="0xb7c08c20"/>
        <function-ref name="read" scoped="" ref="0xb7c08d00"/>
        <function-ref name="writeDone" scoped="" ref="0xb7c08de0"/>
        <function-ref name="copyPage" scoped="" ref="0xb7c08ec0"/>
        <function-ref name="erase" scoped="" ref="0xb7c17010"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7c170f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0xb7c171d0"/>
        <function-ref name="flush" scoped="" ref="0xb7c172b0"/>
        <function-ref name="syncAll" scoped="" ref="0xb7c17390"/>
        <function-ref name="flushAll" scoped="" ref="0xb7c17470"/>
        <function-ref name="write" scoped="" ref="0xb7c17550"/>
        <function-ref name="sync" scoped="" ref="0xb7c176b0"/>
        <function-ref name="computeCrc" scoped="" ref="0xb7c17790"/>
        <function-ref name="readDone" scoped="" ref="0xb7c08a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BConfig" ref="0xb7c14b10" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <component-ref qname="ConfigStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0xb7c14b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0xb7c14ce8"/>
        <function-ref name="flipped" scoped="" ref="0xb7c14dc8"/>
        <function-ref name="isConfig" scoped="" ref="0xb7c14ea8"/>
        <function-ref name="writeHook" scoped="" ref="0xb7c18010"/>
        <function-ref name="remap" scoped="" ref="0xb7c180f0"/>
        <function-ref name="writeContinue" scoped="" ref="0xb7c181d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mount" ref="0xb7c1bf08" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <component-ref qname="ConfigStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mount" scoped="" ref="0xb7c1bf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mount"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="mount" scoped="" ref="0xb7c1a0f0"/>
        <function-ref name="mountDone" scoped="" ref="0xb7c1a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0xb7c03c78" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <component-ref qname="ConfigStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0xb7c03c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7c03e50"/>
        <function-ref name="computeCrcDone" scoped="" ref="0xb7c12010"/>
        <function-ref name="computeCrc" scoped="" ref="0xb7c120f0"/>
        <function-ref name="getSize" scoped="" ref="0xb7c121d0"/>
        <function-ref name="readDone" scoped="" ref="0xb7c122b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0xb7c072e0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <component-ref qname="ConfigStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0xb7c072e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0xb7c074b8"/>
        <function-ref name="writeDone" scoped="" ref="0xb7c07598"/>
        <function-ref name="erase" scoped="" ref="0xb7c07678"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7c07758"/>
        <function-ref name="write" scoped="" ref="0xb7c07838"/>
        <function-ref name="sync" scoped="" ref="0xb7c07918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigStorage" ref="0xb7c1a5b0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/ConfigStorageP.nc">
      <component-ref qname="ConfigStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigStorage" scoped="" ref="0xb7c1a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConfigStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7c1a788"/>
        <function-ref name="writeDone" scoped="" ref="0xb7c1a868"/>
        <function-ref name="commit" scoped="" ref="0xb7c1a948"/>
        <function-ref name="valid" scoped="" ref="0xb7c1aa28"/>
        <function-ref name="write" scoped="" ref="0xb7c1ab08"/>
        <function-ref name="getSize" scoped="" ref="0xb7c1abe8"/>
        <function-ref name="commitDone" scoped="" ref="0xb7c1acc8"/>
        <function-ref name="readDone" scoped="" ref="0xb7c1ada8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0xb7bb0bb0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0xb7bb0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0xb7baebf0"/>
        <function-ref name="syncDone" scoped="" ref="0xb7bb0e68"/>
        <function-ref name="flushDone" scoped="" ref="0xb7bae010"/>
        <function-ref name="read" scoped="" ref="0xb7bae0f0"/>
        <function-ref name="writeDone" scoped="" ref="0xb7bae1d0"/>
        <function-ref name="copyPage" scoped="" ref="0xb7bae2b0"/>
        <function-ref name="erase" scoped="" ref="0xb7bae390"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7bae470"/>
        <function-ref name="computeCrcDone" scoped="" ref="0xb7bae550"/>
        <function-ref name="flush" scoped="" ref="0xb7bae630"/>
        <function-ref name="syncAll" scoped="" ref="0xb7bae710"/>
        <function-ref name="flushAll" scoped="" ref="0xb7bae7f0"/>
        <function-ref name="write" scoped="" ref="0xb7bae8d0"/>
        <function-ref name="sync" scoped="" ref="0xb7baea30"/>
        <function-ref name="computeCrc" scoped="" ref="0xb7baeb10"/>
        <function-ref name="readDone" scoped="" ref="0xb7bb0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0xb7bb19d8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0xb7bb19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0xb7bb1bb0"/>
        <function-ref name="writeDone" scoped="" ref="0xb7bb1c90"/>
        <function-ref name="erase" scoped="" ref="0xb7bb1d70"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7bb1e50"/>
        <function-ref name="write" scoped="" ref="0xb7bb0010"/>
        <function-ref name="sync" scoped="" ref="0xb7bb00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0xb7bb04d0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0xb7bb04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7bb06a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0xb7bb0788"/>
        <function-ref name="computeCrc" scoped="" ref="0xb7bb0868"/>
        <function-ref name="getSize" scoped="" ref="0xb7bb0948"/>
        <function-ref name="readDone" scoped="" ref="0xb7bb0a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0xb7ba8208" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0xb7ba8208"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0xb7ba83e0"/>
        <function-ref name="flipped" scoped="" ref="0xb7ba84c0"/>
        <function-ref name="isConfig" scoped="" ref="0xb7ba85a0"/>
        <function-ref name="writeHook" scoped="" ref="0xb7ba8680"/>
        <function-ref name="remap" scoped="" ref="0xb7ba8760"/>
        <function-ref name="writeContinue" scoped="" ref="0xb7ba8840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0xb7baac58" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0xb7baac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0xb7baae30"/>
        <function-ref name="remap" scoped="" ref="0xb7baaf10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb7ba5888" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7ba5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7ba5a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7ba5b40"/>
        <function-ref name="request" scoped="" ref="0xb7ba5c20"/>
        <function-ref name="granted" scoped="" ref="0xb7ba5d00"/>
        <function-ref name="isOwner" scoped="" ref="0xb7ba5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0xb7b65d88" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0xb7b65d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0xb7b64db0"/>
        <function-ref name="syncDone" scoped="" ref="0xb7b640f0"/>
        <function-ref name="flushDone" scoped="" ref="0xb7b641d0"/>
        <function-ref name="read" scoped="" ref="0xb7b642b0"/>
        <function-ref name="writeDone" scoped="" ref="0xb7b64390"/>
        <function-ref name="copyPage" scoped="" ref="0xb7b64470"/>
        <function-ref name="erase" scoped="" ref="0xb7b64550"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7b64630"/>
        <function-ref name="computeCrcDone" scoped="" ref="0xb7b64710"/>
        <function-ref name="flush" scoped="" ref="0xb7b647f0"/>
        <function-ref name="syncAll" scoped="" ref="0xb7b648d0"/>
        <function-ref name="flushAll" scoped="" ref="0xb7b649b0"/>
        <function-ref name="write" scoped="" ref="0xb7b64a90"/>
        <function-ref name="sync" scoped="" ref="0xb7b64bf0"/>
        <function-ref name="computeCrc" scoped="" ref="0xb7b64cd0"/>
        <function-ref name="readDone" scoped="" ref="0xb7b64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb7b5ed40" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7b5ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7b5ef18"/>
        <function-ref name="requested" scoped="" ref="0xb7b62010"/>
        <function-ref name="granted" scoped="" ref="0xb7b620f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb7b621d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb7b622b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7b631a8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7b631a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7b63380"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7b63460"/>
        <function-ref name="request" scoped="" ref="0xb7b63540"/>
        <function-ref name="granted" scoped="" ref="0xb7b63620"/>
        <function-ref name="isOwner" scoped="" ref="0xb7b63700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb7b5cbc0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb7b5cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb7b5cd98"/>
        <function-ref name="userId" scoped="" ref="0xb7b5ce78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0xb7b48e20" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0xb7b48e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0xb7b540f0"/>
        <function-ref name="waitCompare" scoped="" ref="0xb7b560f0"/>
        <function-ref name="crcDone" scoped="" ref="0xb7b561d0"/>
        <function-ref name="flushDone" scoped="" ref="0xb7b562b0"/>
        <function-ref name="read" scoped="" ref="0xb7b56390"/>
        <function-ref name="erase" scoped="" ref="0xb7b56470"/>
        <function-ref name="writeDone" scoped="" ref="0xb7b56550"/>
        <function-ref name="waitIdleDone" scoped="" ref="0xb7b56630"/>
        <function-ref name="waitCompareDone" scoped="" ref="0xb7b56710"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7b567f0"/>
        <function-ref name="waitIdle" scoped="" ref="0xb7b568d0"/>
        <function-ref name="flush" scoped="" ref="0xb7b569b0"/>
        <function-ref name="write" scoped="" ref="0xb7b56a90"/>
        <function-ref name="compareDone" scoped="" ref="0xb7b56bf0"/>
        <function-ref name="compare" scoped="" ref="0xb7b56cd0"/>
        <function-ref name="crc" scoped="" ref="0xb7b56db0"/>
        <function-ref name="readBuffer" scoped="" ref="0xb7b56e90"/>
        <function-ref name="fillDone" scoped="" ref="0xb7b54010"/>
        <function-ref name="readDone" scoped="" ref="0xb7b56010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0xb7b55900" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0xb7b55900"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0xb7b57950"/>
        <function-ref name="syncDone" scoped="" ref="0xb7b55bb8"/>
        <function-ref name="flushDone" scoped="" ref="0xb7b55c98"/>
        <function-ref name="read" scoped="" ref="0xb7b55d78"/>
        <function-ref name="writeDone" scoped="" ref="0xb7b55e58"/>
        <function-ref name="copyPage" scoped="" ref="0xb7b57010"/>
        <function-ref name="erase" scoped="" ref="0xb7b570f0"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7b571d0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0xb7b572b0"/>
        <function-ref name="flush" scoped="" ref="0xb7b57390"/>
        <function-ref name="syncAll" scoped="" ref="0xb7b57470"/>
        <function-ref name="flushAll" scoped="" ref="0xb7b57550"/>
        <function-ref name="write" scoped="" ref="0xb7b57630"/>
        <function-ref name="sync" scoped="" ref="0xb7b57790"/>
        <function-ref name="computeCrc" scoped="" ref="0xb7b57870"/>
        <function-ref name="readDone" scoped="" ref="0xb7b55ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb7b441c0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb7b441c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c9e808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c9e9d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb7b44910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0xb7b3b560" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0xb7b3b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7b3b738"/>
        <function-ref name="runTask" scoped="" ref="0xb7b3b818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0xb7b3a400" loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0xb7b3a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7b3a5d8"/>
        <function-ref name="runTask" scoped="" ref="0xb7b3a6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b555e0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b555e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b557b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0xb7b029d8" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0xb7b029d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7ceae90"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7ceae90"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0xb7b01cd0"/>
        <function-ref name="waitCompare" scoped="" ref="0xb7b02c90"/>
        <function-ref name="crcDone" scoped="" ref="0xb7b02d70"/>
        <function-ref name="flushDone" scoped="" ref="0xb7b02e50"/>
        <function-ref name="read" scoped="" ref="0xb7b01010"/>
        <function-ref name="erase" scoped="" ref="0xb7b010f0"/>
        <function-ref name="writeDone" scoped="" ref="0xb7b011d0"/>
        <function-ref name="waitIdleDone" scoped="" ref="0xb7b012b0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0xb7b01390"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7b01470"/>
        <function-ref name="waitIdle" scoped="" ref="0xb7b01550"/>
        <function-ref name="flush" scoped="" ref="0xb7b01630"/>
        <function-ref name="write" scoped="" ref="0xb7b01710"/>
        <function-ref name="compareDone" scoped="" ref="0xb7b01870"/>
        <function-ref name="compare" scoped="" ref="0xb7b01950"/>
        <function-ref name="crc" scoped="" ref="0xb7b01a30"/>
        <function-ref name="readBuffer" scoped="" ref="0xb7b01b10"/>
        <function-ref name="fillDone" scoped="" ref="0xb7b01bf0"/>
        <function-ref name="readDone" scoped="" ref="0xb7b02bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0xb7affc68" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0xb7affc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0xb7afee98"/>
        <function-ref name="waitCompare" scoped="" ref="0xb7afff20"/>
        <function-ref name="crcDone" scoped="" ref="0xb7afe018"/>
        <function-ref name="flushDone" scoped="" ref="0xb7afe0f8"/>
        <function-ref name="read" scoped="" ref="0xb7afe1d8"/>
        <function-ref name="erase" scoped="" ref="0xb7afe2b8"/>
        <function-ref name="writeDone" scoped="" ref="0xb7afe398"/>
        <function-ref name="waitIdleDone" scoped="" ref="0xb7afe478"/>
        <function-ref name="waitCompareDone" scoped="" ref="0xb7afe558"/>
        <function-ref name="eraseDone" scoped="" ref="0xb7afe638"/>
        <function-ref name="waitIdle" scoped="" ref="0xb7afe718"/>
        <function-ref name="flush" scoped="" ref="0xb7afe7f8"/>
        <function-ref name="write" scoped="" ref="0xb7afe8d8"/>
        <function-ref name="compareDone" scoped="" ref="0xb7afea38"/>
        <function-ref name="compare" scoped="" ref="0xb7afeb18"/>
        <function-ref name="crc" scoped="" ref="0xb7afebf8"/>
        <function-ref name="readBuffer" scoped="" ref="0xb7afecd8"/>
        <function-ref name="fillDone" scoped="" ref="0xb7afedb8"/>
        <function-ref name="fill" scoped="" ref="0xb7affe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0xb7ad4a00" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7ad4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0xb7ad4bd8"/>
        <function-ref name="waitIdle" scoped="" ref="0xb7ad4cb8"/>
        <function-ref name="idle" scoped="" ref="0xb7ad4d98"/>
        <function-ref name="select" scoped="" ref="0xb7ad4e78"/>
        <function-ref name="deselect" scoped="" ref="0xb7ad3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb7ad4030" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7ad4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7ad4208"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7ad42e8"/>
        <function-ref name="request" scoped="" ref="0xb7ad43c8"/>
        <function-ref name="granted" scoped="" ref="0xb7ad44a8"/>
        <function-ref name="isOwner" scoped="" ref="0xb7ad4588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0xb7ad46e8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0xb7ad46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb7ad48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0xb7acf4b0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7acf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0xb7acf688"/>
        <function-ref name="waitIdle" scoped="" ref="0xb7acf768"/>
        <function-ref name="idle" scoped="" ref="0xb7acf848"/>
        <function-ref name="select" scoped="" ref="0xb7acf928"/>
        <function-ref name="deselect" scoped="" ref="0xb7acfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7ad0a60" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7ad0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7ad0c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7ad0d18"/>
        <function-ref name="request" scoped="" ref="0xb7ad0df8"/>
        <function-ref name="granted" scoped="" ref="0xb7ad0ed8"/>
        <function-ref name="isOwner" scoped="" ref="0xb7acf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0xb7acf188" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0xb7acf188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb7acf360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0xb7ac8348" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0xb7ac8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac8520"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac8600"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac86e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac87c0"/>
        <function-ref name="get" scoped="" ref="0xb7ac88a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac8980"/>
        <function-ref name="set" scoped="" ref="0xb7ac8a60"/>
        <function-ref name="clr" scoped="" ref="0xb7ac8b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb7ac8dc8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb7ac8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c9e808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c9e9d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb7ac4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0xb7ac9980" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0xb7ac9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac9b58"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac9c38"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac9d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac9df8"/>
        <function-ref name="get" scoped="" ref="0xb7ac9ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac8010"/>
        <function-ref name="set" scoped="" ref="0xb7ac80f0"/>
        <function-ref name="clr" scoped="" ref="0xb7ac81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0xb7ac5640" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0xb7ac5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac5818"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac58f8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac59d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac5ab8"/>
        <function-ref name="get" scoped="" ref="0xb7ac5b98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac5c78"/>
        <function-ref name="set" scoped="" ref="0xb7ac5d58"/>
        <function-ref name="clr" scoped="" ref="0xb7ac5e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0xb7acb950" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0xb7acb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0xb7acbb28"/>
        <function-ref name="waitIdle" scoped="" ref="0xb7acbc08"/>
        <function-ref name="idle" scoped="" ref="0xb7acbce8"/>
        <function-ref name="select" scoped="" ref="0xb7acbdc8"/>
        <function-ref name="deselect" scoped="" ref="0xb7acbea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0xb7ac9010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0xb7ac9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac91e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac92c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac93a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac9488"/>
        <function-ref name="get" scoped="" ref="0xb7ac9568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac9648"/>
        <function-ref name="set" scoped="" ref="0xb7ac9728"/>
        <function-ref name="clr" scoped="" ref="0xb7ac9808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0xb7ab38c0" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0xb7ab38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7ab3a98"/>
        <function-ref name="runTask" scoped="" ref="0xb7ab3b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7acb2d8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7acb2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7acb4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0xb7acb628" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0xb7acb628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb7acb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7a8ee78" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7a8ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8d308"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8d3e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8d4c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8d5a8"/>
        <function-ref name="get" scoped="" ref="0xb7a8d688"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8d768"/>
        <function-ref name="set" scoped="" ref="0xb7a8d848"/>
        <function-ref name="clr" scoped="" ref="0xb7a8d928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7a9c010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7a9c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9c488"/>
        <function-ref name="get" scoped="" ref="0xb7a9c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9c648"/>
        <function-ref name="set" scoped="" ref="0xb7a9c728"/>
        <function-ref name="clr" scoped="" ref="0xb7a9c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7a95188" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7a95188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a95360"/>
        <function-ref name="isInput" scoped="" ref="0xb7a95440"/>
        <function-ref name="toggle" scoped="" ref="0xb7a95520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a95600"/>
        <function-ref name="get" scoped="" ref="0xb7a956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a957c0"/>
        <function-ref name="set" scoped="" ref="0xb7a958a0"/>
        <function-ref name="clr" scoped="" ref="0xb7a95980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7a91e78" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7a91e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a90070"/>
        <function-ref name="isInput" scoped="" ref="0xb7a90150"/>
        <function-ref name="toggle" scoped="" ref="0xb7a90230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a90310"/>
        <function-ref name="get" scoped="" ref="0xb7a903f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a904d0"/>
        <function-ref name="set" scoped="" ref="0xb7a905b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a90690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7aa86c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7aa86c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa88a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa8980"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa8a60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa8b40"/>
        <function-ref name="get" scoped="" ref="0xb7aa8c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa8d00"/>
        <function-ref name="set" scoped="" ref="0xb7aa8de0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa8ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7a92b00" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7a92b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a92cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a92db8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a92e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a91010"/>
        <function-ref name="get" scoped="" ref="0xb7a910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a911d0"/>
        <function-ref name="set" scoped="" ref="0xb7a912b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7aa79d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7aa79d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa7bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa7c90"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa7d70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa7e50"/>
        <function-ref name="get" scoped="" ref="0xb7aa6010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa60f0"/>
        <function-ref name="set" scoped="" ref="0xb7aa61d0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7aa1b00" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7aa1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa1cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa1db8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa1e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa0010"/>
        <function-ref name="get" scoped="" ref="0xb7aa00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa01d0"/>
        <function-ref name="set" scoped="" ref="0xb7aa02b0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7a9bcb8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7a9bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9be90"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9a010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9a1d0"/>
        <function-ref name="get" scoped="" ref="0xb7a9a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9a390"/>
        <function-ref name="set" scoped="" ref="0xb7a9a470"/>
        <function-ref name="clr" scoped="" ref="0xb7a9a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7a94e78" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7a94e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a93070"/>
        <function-ref name="isInput" scoped="" ref="0xb7a93150"/>
        <function-ref name="toggle" scoped="" ref="0xb7a93230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a93310"/>
        <function-ref name="get" scoped="" ref="0xb7a933f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a934d0"/>
        <function-ref name="set" scoped="" ref="0xb7a935b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7aab5f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7aab5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aab7c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aab8a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aab988"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aaba68"/>
        <function-ref name="get" scoped="" ref="0xb7aabb48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aabc28"/>
        <function-ref name="set" scoped="" ref="0xb7aabd08"/>
        <function-ref name="clr" scoped="" ref="0xb7aabde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7aa57a8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7aa57a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa5980"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa5a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa5b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa5c20"/>
        <function-ref name="get" scoped="" ref="0xb7aa5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa5de0"/>
        <function-ref name="set" scoped="" ref="0xb7aa5ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7a9f808" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7a9f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9f9e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9fac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9fba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9fc80"/>
        <function-ref name="get" scoped="" ref="0xb7a9fd60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9fe40"/>
        <function-ref name="set" scoped="" ref="0xb7a9ff20"/>
        <function-ref name="clr" scoped="" ref="0xb7a9e018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7a999d8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7a999d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a99bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a99c90"/>
        <function-ref name="toggle" scoped="" ref="0xb7a99d70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a99e50"/>
        <function-ref name="get" scoped="" ref="0xb7a98010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a980f0"/>
        <function-ref name="set" scoped="" ref="0xb7a981d0"/>
        <function-ref name="clr" scoped="" ref="0xb7a982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7a8fb00" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7a8fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8fcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8fdb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8fe98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8e010"/>
        <function-ref name="get" scoped="" ref="0xb7a8e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8e1d0"/>
        <function-ref name="set" scoped="" ref="0xb7a8e2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a8e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7a8cd98" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7a8cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8b010"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8b2b0"/>
        <function-ref name="get" scoped="" ref="0xb7a8b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8b470"/>
        <function-ref name="set" scoped="" ref="0xb7a8b550"/>
        <function-ref name="clr" scoped="" ref="0xb7a8b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7a98d98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7a98d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a96010"/>
        <function-ref name="isInput" scoped="" ref="0xb7a960f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a961d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a962b0"/>
        <function-ref name="get" scoped="" ref="0xb7a96390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a96470"/>
        <function-ref name="set" scoped="" ref="0xb7a96550"/>
        <function-ref name="clr" scoped="" ref="0xb7a96630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7aa9348" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7aa9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa9520"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa9600"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa96e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa97c0"/>
        <function-ref name="get" scoped="" ref="0xb7aa98a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa9980"/>
        <function-ref name="set" scoped="" ref="0xb7aa9a60"/>
        <function-ref name="clr" scoped="" ref="0xb7aa9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7aa3508" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7aa3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa36e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa37c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa38a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa3980"/>
        <function-ref name="get" scoped="" ref="0xb7aa3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa3b40"/>
        <function-ref name="set" scoped="" ref="0xb7aa3c20"/>
        <function-ref name="clr" scoped="" ref="0xb7aa3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7a8daa0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7a8daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8dc78"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8dd58"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8de38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8df18"/>
        <function-ref name="get" scoped="" ref="0xb7a8c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8c0f0"/>
        <function-ref name="set" scoped="" ref="0xb7a8c1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7a8c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7aa2808" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7aa2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa29e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa2ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa2c80"/>
        <function-ref name="get" scoped="" ref="0xb7aa2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa2e40"/>
        <function-ref name="set" scoped="" ref="0xb7aa2f20"/>
        <function-ref name="clr" scoped="" ref="0xb7aa1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7a9c980" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7a9c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9cb58"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9cc38"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9cd18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9cdf8"/>
        <function-ref name="get" scoped="" ref="0xb7a9ced8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9b010"/>
        <function-ref name="set" scoped="" ref="0xb7a9b0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a9b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7a95af8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7a95af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a95cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a95db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a95e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a94010"/>
        <function-ref name="get" scoped="" ref="0xb7a940f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a941d0"/>
        <function-ref name="set" scoped="" ref="0xb7a942b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a94390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7a90808" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7a90808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a909e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a90ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a90ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a90c80"/>
        <function-ref name="get" scoped="" ref="0xb7a90d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a90e40"/>
        <function-ref name="set" scoped="" ref="0xb7a90f20"/>
        <function-ref name="clr" scoped="" ref="0xb7a8f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7aa7068" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7aa7068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa7240"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa7320"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa7400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa74e0"/>
        <function-ref name="get" scoped="" ref="0xb7aa75c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa76a0"/>
        <function-ref name="set" scoped="" ref="0xb7aa7780"/>
        <function-ref name="clr" scoped="" ref="0xb7aa7860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7aa6428" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7aa6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa6600"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa66e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa67c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa68a0"/>
        <function-ref name="get" scoped="" ref="0xb7aa6980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa6a60"/>
        <function-ref name="set" scoped="" ref="0xb7aa6b40"/>
        <function-ref name="clr" scoped="" ref="0xb7aa6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7aa0508" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7aa0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa06e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa07c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa08a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa0980"/>
        <function-ref name="get" scoped="" ref="0xb7aa0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa0b40"/>
        <function-ref name="set" scoped="" ref="0xb7aa0c20"/>
        <function-ref name="clr" scoped="" ref="0xb7aa0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7a9a6c8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7a9a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9a8a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9a980"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9aa60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9ab40"/>
        <function-ref name="get" scoped="" ref="0xb7a9ac20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9ad00"/>
        <function-ref name="set" scoped="" ref="0xb7a9ade0"/>
        <function-ref name="clr" scoped="" ref="0xb7a9aec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7a93808" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7a93808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a939e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a93ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a93ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a93c80"/>
        <function-ref name="get" scoped="" ref="0xb7a93d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a93e40"/>
        <function-ref name="set" scoped="" ref="0xb7a93f20"/>
        <function-ref name="clr" scoped="" ref="0xb7a92018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7aaa010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7aaa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aaa1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aaa2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aaa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aaa488"/>
        <function-ref name="get" scoped="" ref="0xb7aaa568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aaa648"/>
        <function-ref name="set" scoped="" ref="0xb7aaa728"/>
        <function-ref name="clr" scoped="" ref="0xb7aaa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7aa4188" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7aa4188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa43e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa44c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa45a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa4680"/>
        <function-ref name="get" scoped="" ref="0xb7aa4760"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa4840"/>
        <function-ref name="set" scoped="" ref="0xb7aa4920"/>
        <function-ref name="clr" scoped="" ref="0xb7aa4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7a9e190" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7a9e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9e368"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9e448"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9e528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9e608"/>
        <function-ref name="get" scoped="" ref="0xb7a9e6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9e7c8"/>
        <function-ref name="set" scoped="" ref="0xb7a9e8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7a9e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7a8e508" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7a8e508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8e6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8e7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8e8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8e980"/>
        <function-ref name="get" scoped="" ref="0xb7a8ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8eb40"/>
        <function-ref name="set" scoped="" ref="0xb7a8ec20"/>
        <function-ref name="clr" scoped="" ref="0xb7a8ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7a9d508" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7a9d508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9d7e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9d8c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9d9a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9da80"/>
        <function-ref name="get" scoped="" ref="0xb7a9db60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9dc40"/>
        <function-ref name="set" scoped="" ref="0xb7a9dd20"/>
        <function-ref name="clr" scoped="" ref="0xb7a9de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7a967a8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7a967a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a96980"/>
        <function-ref name="isInput" scoped="" ref="0xb7a96a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a96b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a96c20"/>
        <function-ref name="get" scoped="" ref="0xb7a96d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a96de0"/>
        <function-ref name="set" scoped="" ref="0xb7a96ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7a95010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7a91508" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7a91508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a916e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a917c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a918a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a91980"/>
        <function-ref name="get" scoped="" ref="0xb7a91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a91b40"/>
        <function-ref name="set" scoped="" ref="0xb7a91c20"/>
        <function-ref name="clr" scoped="" ref="0xb7a91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7a8b7a8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7a8b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8b980"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8ba60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8bb40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8bc20"/>
        <function-ref name="get" scoped="" ref="0xb7a8bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8bde0"/>
        <function-ref name="set" scoped="" ref="0xb7a8bec0"/>
        <function-ref name="clr" scoped="" ref="0xb7a8a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7aa9cb8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7aa9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa9e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa8010"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa80f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa81d0"/>
        <function-ref name="get" scoped="" ref="0xb7aa82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa8390"/>
        <function-ref name="set" scoped="" ref="0xb7aa8470"/>
        <function-ref name="clr" scoped="" ref="0xb7aa8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7aa3e78" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7aa3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa2070"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa2150"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa2230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa2310"/>
        <function-ref name="get" scoped="" ref="0xb7aa23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa24d0"/>
        <function-ref name="set" scoped="" ref="0xb7aa25b0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7a92190" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7a92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a92368"/>
        <function-ref name="isInput" scoped="" ref="0xb7a92448"/>
        <function-ref name="toggle" scoped="" ref="0xb7a92528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a92608"/>
        <function-ref name="get" scoped="" ref="0xb7a926e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a927c8"/>
        <function-ref name="set" scoped="" ref="0xb7a928a8"/>
        <function-ref name="clr" scoped="" ref="0xb7a92988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7aa1190" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7aa1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa1368"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa1448"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa1528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa1608"/>
        <function-ref name="get" scoped="" ref="0xb7aa16e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa17c8"/>
        <function-ref name="set" scoped="" ref="0xb7aa18a8"/>
        <function-ref name="clr" scoped="" ref="0xb7aa1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7a9b348" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7a9b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9b520"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9b600"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9b6e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9b7c0"/>
        <function-ref name="get" scoped="" ref="0xb7a9b8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9b980"/>
        <function-ref name="set" scoped="" ref="0xb7a9ba60"/>
        <function-ref name="clr" scoped="" ref="0xb7a9bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7a94508" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7a94508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a946e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a947c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a948a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a94980"/>
        <function-ref name="get" scoped="" ref="0xb7a94a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a94b40"/>
        <function-ref name="set" scoped="" ref="0xb7a94c20"/>
        <function-ref name="clr" scoped="" ref="0xb7a94d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7a8f190" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7a8f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8f368"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8f448"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8f528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8f608"/>
        <function-ref name="get" scoped="" ref="0xb7a8f6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8f7c8"/>
        <function-ref name="set" scoped="" ref="0xb7a8f8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7a8f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7aacc70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7aacc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aace48"/>
        <function-ref name="isInput" scoped="" ref="0xb7aacf28"/>
        <function-ref name="toggle" scoped="" ref="0xb7aab018"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aab0f8"/>
        <function-ref name="get" scoped="" ref="0xb7aab1d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aab2b8"/>
        <function-ref name="set" scoped="" ref="0xb7aab398"/>
        <function-ref name="clr" scoped="" ref="0xb7aab478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7aa6d98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7aa6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa5010"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa50f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa51d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa52b0"/>
        <function-ref name="get" scoped="" ref="0xb7aa5390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa5470"/>
        <function-ref name="set" scoped="" ref="0xb7aa5550"/>
        <function-ref name="clr" scoped="" ref="0xb7aa5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7aa0e78" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7aa0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9f070"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9f150"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9f230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9f310"/>
        <function-ref name="get" scoped="" ref="0xb7a9f3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9f4d0"/>
        <function-ref name="set" scoped="" ref="0xb7a9f5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a9f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7a99068" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7a99068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a99240"/>
        <function-ref name="isInput" scoped="" ref="0xb7a99320"/>
        <function-ref name="toggle" scoped="" ref="0xb7a99400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a994e0"/>
        <function-ref name="get" scoped="" ref="0xb7a995c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a996a0"/>
        <function-ref name="set" scoped="" ref="0xb7a99780"/>
        <function-ref name="clr" scoped="" ref="0xb7a99860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7a8c428" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7a8c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a8c600"/>
        <function-ref name="isInput" scoped="" ref="0xb7a8c6e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a8c7c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a8c8a0"/>
        <function-ref name="get" scoped="" ref="0xb7a8c980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a8ca60"/>
        <function-ref name="set" scoped="" ref="0xb7a8cb40"/>
        <function-ref name="clr" scoped="" ref="0xb7a8cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7a98428" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7a98428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a98600"/>
        <function-ref name="isInput" scoped="" ref="0xb7a986e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a987c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a988a0"/>
        <function-ref name="get" scoped="" ref="0xb7a98980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a98a60"/>
        <function-ref name="set" scoped="" ref="0xb7a98b40"/>
        <function-ref name="clr" scoped="" ref="0xb7a98c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7a9eb00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7a9eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a9ecd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a9edb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a9ee98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a9d010"/>
        <function-ref name="get" scoped="" ref="0xb7a9d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a9d1d0"/>
        <function-ref name="set" scoped="" ref="0xb7a9d2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a9d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7aaa980" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7aaa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aaab58"/>
        <function-ref name="isInput" scoped="" ref="0xb7aaac38"/>
        <function-ref name="toggle" scoped="" ref="0xb7aaad18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aaadf8"/>
        <function-ref name="get" scoped="" ref="0xb7aaaed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa9010"/>
        <function-ref name="set" scoped="" ref="0xb7aa90f0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7aa4b78" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7aa4b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa4d50"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa4e30"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa4f10"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa3010"/>
        <function-ref name="get" scoped="" ref="0xb7aa30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa31d0"/>
        <function-ref name="set" scoped="" ref="0xb7aa32b0"/>
        <function-ref name="clr" scoped="" ref="0xb7aa3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a63250" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a63250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a63428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a63508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a635e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a636c8"/>
        <function-ref name="get" scoped="" ref="0xb7a637a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a63888"/>
        <function-ref name="set" scoped="" ref="0xb7a63968"/>
        <function-ref name="clr" scoped="" ref="0xb7a63a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a62f28" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a62f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a61110"/>
        <function-ref name="isInput" scoped="" ref="0xb7a611f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a612d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a613b0"/>
        <function-ref name="get" scoped="" ref="0xb7a61490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a61570"/>
        <function-ref name="set" scoped="" ref="0xb7a61650"/>
        <function-ref name="clr" scoped="" ref="0xb7a61730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a65ed8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a65ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a640c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a641a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a64280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a64360"/>
        <function-ref name="get" scoped="" ref="0xb7a64440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a64520"/>
        <function-ref name="set" scoped="" ref="0xb7a64600"/>
        <function-ref name="clr" scoped="" ref="0xb7a646e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a63ba8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a63ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a63d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a63e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a62010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a620f0"/>
        <function-ref name="get" scoped="" ref="0xb7a621d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a622b0"/>
        <function-ref name="set" scoped="" ref="0xb7a62390"/>
        <function-ref name="clr" scoped="" ref="0xb7a62470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a61890" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a61890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a61a68"/>
        <function-ref name="isInput" scoped="" ref="0xb7a61b48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a61c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a61d08"/>
        <function-ref name="get" scoped="" ref="0xb7a61de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a61ec8"/>
        <function-ref name="set" scoped="" ref="0xb7a60010"/>
        <function-ref name="clr" scoped="" ref="0xb7a600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a64840" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a64840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a64a18"/>
        <function-ref name="isInput" scoped="" ref="0xb7a64af8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a64bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a64cb8"/>
        <function-ref name="get" scoped="" ref="0xb7a64d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a64e78"/>
        <function-ref name="set" scoped="" ref="0xb7a63010"/>
        <function-ref name="clr" scoped="" ref="0xb7a630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a625d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a625d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a627a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a62888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a62968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a62a48"/>
        <function-ref name="get" scoped="" ref="0xb7a62b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a62c08"/>
        <function-ref name="set" scoped="" ref="0xb7a62ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a62dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a60250" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a60250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a60428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a60508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a605e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a606c8"/>
        <function-ref name="get" scoped="" ref="0xb7a607a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a60888"/>
        <function-ref name="set" scoped="" ref="0xb7a60968"/>
        <function-ref name="clr" scoped="" ref="0xb7a60a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7905308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7905308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79054e0"/>
        <function-ref name="isInput" scoped="" ref="0xb79055c0"/>
        <function-ref name="toggle" scoped="" ref="0xb79056a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7905780"/>
        <function-ref name="get" scoped="" ref="0xb7905860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7905940"/>
        <function-ref name="set" scoped="" ref="0xb7905a20"/>
        <function-ref name="clr" scoped="" ref="0xb7905b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7904da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7904da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7903010"/>
        <function-ref name="isInput" scoped="" ref="0xb79030f0"/>
        <function-ref name="toggle" scoped="" ref="0xb79031d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb79032b0"/>
        <function-ref name="get" scoped="" ref="0xb7903390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7903470"/>
        <function-ref name="set" scoped="" ref="0xb7903550"/>
        <function-ref name="clr" scoped="" ref="0xb7903630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb79028d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb79028d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7902ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7902b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7902c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7902d50"/>
        <function-ref name="get" scoped="" ref="0xb7902e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7902f10"/>
        <function-ref name="set" scoped="" ref="0xb7901010"/>
        <function-ref name="clr" scoped="" ref="0xb79010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb79003b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb79003b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7900588"/>
        <function-ref name="isInput" scoped="" ref="0xb7900668"/>
        <function-ref name="toggle" scoped="" ref="0xb7900748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7900828"/>
        <function-ref name="get" scoped="" ref="0xb7900908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79009e8"/>
        <function-ref name="set" scoped="" ref="0xb7900ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7900ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78ffe50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78fe050"/>
        <function-ref name="isInput" scoped="" ref="0xb78fe130"/>
        <function-ref name="toggle" scoped="" ref="0xb78fe210"/>
        <function-ref name="isOutput" scoped="" ref="0xb78fe2f0"/>
        <function-ref name="get" scoped="" ref="0xb78fe3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78fe4b0"/>
        <function-ref name="set" scoped="" ref="0xb78fe590"/>
        <function-ref name="clr" scoped="" ref="0xb78fe670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78fd920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78fd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78fdaf8"/>
        <function-ref name="isInput" scoped="" ref="0xb78fdbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb78fdcb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb78fdd98"/>
        <function-ref name="get" scoped="" ref="0xb78fde78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78fc010"/>
        <function-ref name="set" scoped="" ref="0xb78fc0f0"/>
        <function-ref name="clr" scoped="" ref="0xb78fc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78fb490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78fb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78fb668"/>
        <function-ref name="isInput" scoped="" ref="0xb78fb748"/>
        <function-ref name="toggle" scoped="" ref="0xb78fb828"/>
        <function-ref name="isOutput" scoped="" ref="0xb78fb908"/>
        <function-ref name="get" scoped="" ref="0xb78fb9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78fbac8"/>
        <function-ref name="set" scoped="" ref="0xb78fbba8"/>
        <function-ref name="clr" scoped="" ref="0xb78fbc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78f9010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78f91e8"/>
        <function-ref name="isInput" scoped="" ref="0xb78f92c8"/>
        <function-ref name="toggle" scoped="" ref="0xb78f93a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb78f9488"/>
        <function-ref name="get" scoped="" ref="0xb78f9568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78f9648"/>
        <function-ref name="set" scoped="" ref="0xb78f9728"/>
        <function-ref name="clr" scoped="" ref="0xb78f9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a5c840" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a5c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5ca18"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5caf8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5cbd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5ccb8"/>
        <function-ref name="get" scoped="" ref="0xb7a5cd98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5ce78"/>
        <function-ref name="set" scoped="" ref="0xb7a5b010"/>
        <function-ref name="clr" scoped="" ref="0xb7a5b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a595d0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a595d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a597a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a59888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a59968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a59a48"/>
        <function-ref name="get" scoped="" ref="0xb7a59b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a59c08"/>
        <function-ref name="set" scoped="" ref="0xb7a59ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a59dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a5d550" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a5d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5d728"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5d808"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5d8e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5d9c8"/>
        <function-ref name="get" scoped="" ref="0xb7a5daa8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5db88"/>
        <function-ref name="set" scoped="" ref="0xb7a5dc68"/>
        <function-ref name="clr" scoped="" ref="0xb7a5dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a5b250" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a5b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5b428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5b508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5b5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5b6c8"/>
        <function-ref name="get" scoped="" ref="0xb7a5b7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5b888"/>
        <function-ref name="set" scoped="" ref="0xb7a5b968"/>
        <function-ref name="clr" scoped="" ref="0xb7a5ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a59f28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a59f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a58110"/>
        <function-ref name="isInput" scoped="" ref="0xb7a581f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a582d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a583b0"/>
        <function-ref name="get" scoped="" ref="0xb7a58490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a58570"/>
        <function-ref name="set" scoped="" ref="0xb7a58650"/>
        <function-ref name="clr" scoped="" ref="0xb7a58730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a5dea8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a5dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5c0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5c1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5c280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5c360"/>
        <function-ref name="get" scoped="" ref="0xb7a5c440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5c520"/>
        <function-ref name="set" scoped="" ref="0xb7a5c600"/>
        <function-ref name="clr" scoped="" ref="0xb7a5c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a5bba8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a5bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5bd80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5be60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a59010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a590f0"/>
        <function-ref name="get" scoped="" ref="0xb7a591d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a592b0"/>
        <function-ref name="set" scoped="" ref="0xb7a59390"/>
        <function-ref name="clr" scoped="" ref="0xb7a59470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a58890" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a58890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a58a68"/>
        <function-ref name="isInput" scoped="" ref="0xb7a58b48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a58c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a58d08"/>
        <function-ref name="get" scoped="" ref="0xb7a58de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a58ec8"/>
        <function-ref name="set" scoped="" ref="0xb7a57010"/>
        <function-ref name="clr" scoped="" ref="0xb7a570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78d4de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78d4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78d1010"/>
        <function-ref name="isInput" scoped="" ref="0xb78d10f0"/>
        <function-ref name="toggle" scoped="" ref="0xb78d11d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb78d12b0"/>
        <function-ref name="get" scoped="" ref="0xb78d1390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78d1470"/>
        <function-ref name="set" scoped="" ref="0xb78d1550"/>
        <function-ref name="clr" scoped="" ref="0xb78d1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78d08d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78d08d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78d0ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb78d0b90"/>
        <function-ref name="toggle" scoped="" ref="0xb78d0c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb78d0d50"/>
        <function-ref name="get" scoped="" ref="0xb78d0e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78d0f10"/>
        <function-ref name="set" scoped="" ref="0xb78cf010"/>
        <function-ref name="clr" scoped="" ref="0xb78cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78ce3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78ce3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78ce588"/>
        <function-ref name="isInput" scoped="" ref="0xb78ce668"/>
        <function-ref name="toggle" scoped="" ref="0xb78ce748"/>
        <function-ref name="isOutput" scoped="" ref="0xb78ce828"/>
        <function-ref name="get" scoped="" ref="0xb78ce908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78ce9e8"/>
        <function-ref name="set" scoped="" ref="0xb78ceac8"/>
        <function-ref name="clr" scoped="" ref="0xb78ceba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78cde50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78cc050"/>
        <function-ref name="isInput" scoped="" ref="0xb78cc130"/>
        <function-ref name="toggle" scoped="" ref="0xb78cc210"/>
        <function-ref name="isOutput" scoped="" ref="0xb78cc2f0"/>
        <function-ref name="get" scoped="" ref="0xb78cc3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78cc4b0"/>
        <function-ref name="set" scoped="" ref="0xb78cc590"/>
        <function-ref name="clr" scoped="" ref="0xb78cc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78cb920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78cb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78cbaf8"/>
        <function-ref name="isInput" scoped="" ref="0xb78cbbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb78cbcb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb78cbd98"/>
        <function-ref name="get" scoped="" ref="0xb78cbe78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78ca010"/>
        <function-ref name="set" scoped="" ref="0xb78ca0f0"/>
        <function-ref name="clr" scoped="" ref="0xb78ca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78c9490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78c9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78c9668"/>
        <function-ref name="isInput" scoped="" ref="0xb78c9748"/>
        <function-ref name="toggle" scoped="" ref="0xb78c9828"/>
        <function-ref name="isOutput" scoped="" ref="0xb78c9908"/>
        <function-ref name="get" scoped="" ref="0xb78c99e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78c9ac8"/>
        <function-ref name="set" scoped="" ref="0xb78c9ba8"/>
        <function-ref name="clr" scoped="" ref="0xb78c9c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78c7010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78c71e8"/>
        <function-ref name="isInput" scoped="" ref="0xb78c72c8"/>
        <function-ref name="toggle" scoped="" ref="0xb78c73a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb78c7488"/>
        <function-ref name="get" scoped="" ref="0xb78c7568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78c7648"/>
        <function-ref name="set" scoped="" ref="0xb78c7728"/>
        <function-ref name="clr" scoped="" ref="0xb78c7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78c6ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78c6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78c6ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb78c6d80"/>
        <function-ref name="toggle" scoped="" ref="0xb78c6e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb78c5010"/>
        <function-ref name="get" scoped="" ref="0xb78c50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78c51d0"/>
        <function-ref name="set" scoped="" ref="0xb78c52b0"/>
        <function-ref name="clr" scoped="" ref="0xb78c5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a54f28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a54f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a53110"/>
        <function-ref name="isInput" scoped="" ref="0xb7a531f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a532d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a533b0"/>
        <function-ref name="get" scoped="" ref="0xb7a53490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a53570"/>
        <function-ref name="set" scoped="" ref="0xb7a53650"/>
        <function-ref name="clr" scoped="" ref="0xb7a53730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a52ba8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a52ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a52d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a52e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a51010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a510f0"/>
        <function-ref name="get" scoped="" ref="0xb7a511d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a512b0"/>
        <function-ref name="set" scoped="" ref="0xb7a51390"/>
        <function-ref name="clr" scoped="" ref="0xb7a51470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a55bf8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a55bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a55dd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a55eb0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a54010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a540f0"/>
        <function-ref name="get" scoped="" ref="0xb7a541d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a542b0"/>
        <function-ref name="set" scoped="" ref="0xb7a54390"/>
        <function-ref name="clr" scoped="" ref="0xb7a54470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a53890" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a53890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a53a68"/>
        <function-ref name="isInput" scoped="" ref="0xb7a53b48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a53c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a53d08"/>
        <function-ref name="get" scoped="" ref="0xb7a53de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a53ec8"/>
        <function-ref name="set" scoped="" ref="0xb7a52010"/>
        <function-ref name="clr" scoped="" ref="0xb7a520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a515d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a517a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a51888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a51968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a51a48"/>
        <function-ref name="get" scoped="" ref="0xb7a51b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a51c08"/>
        <function-ref name="set" scoped="" ref="0xb7a51ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a51dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a545d0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a545d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a547a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a54888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a54968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a54a48"/>
        <function-ref name="get" scoped="" ref="0xb7a54b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a54c08"/>
        <function-ref name="set" scoped="" ref="0xb7a54ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a54dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a52250" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a52250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a52428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a52508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a525e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a526c8"/>
        <function-ref name="get" scoped="" ref="0xb7a527a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a52888"/>
        <function-ref name="set" scoped="" ref="0xb7a52968"/>
        <function-ref name="clr" scoped="" ref="0xb7a52a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a51f28" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a51f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a50110"/>
        <function-ref name="isInput" scoped="" ref="0xb7a501f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a502d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a503b0"/>
        <function-ref name="get" scoped="" ref="0xb7a50490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a50570"/>
        <function-ref name="set" scoped="" ref="0xb7a50650"/>
        <function-ref name="clr" scoped="" ref="0xb7a50730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78a0da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78a0da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb789e010"/>
        <function-ref name="isInput" scoped="" ref="0xb789e0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb789e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb789e2b0"/>
        <function-ref name="get" scoped="" ref="0xb789e390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb789e470"/>
        <function-ref name="set" scoped="" ref="0xb789e550"/>
        <function-ref name="clr" scoped="" ref="0xb789e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb789d8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb789d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb789dab0"/>
        <function-ref name="isInput" scoped="" ref="0xb789db90"/>
        <function-ref name="toggle" scoped="" ref="0xb789dc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb789dd50"/>
        <function-ref name="get" scoped="" ref="0xb789de30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb789df10"/>
        <function-ref name="set" scoped="" ref="0xb789c010"/>
        <function-ref name="clr" scoped="" ref="0xb789c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb789b3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb789b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb789b588"/>
        <function-ref name="isInput" scoped="" ref="0xb789b668"/>
        <function-ref name="toggle" scoped="" ref="0xb789b748"/>
        <function-ref name="isOutput" scoped="" ref="0xb789b828"/>
        <function-ref name="get" scoped="" ref="0xb789b908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb789b9e8"/>
        <function-ref name="set" scoped="" ref="0xb789bac8"/>
        <function-ref name="clr" scoped="" ref="0xb789bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb789ae50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb789ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7899050"/>
        <function-ref name="isInput" scoped="" ref="0xb7899130"/>
        <function-ref name="toggle" scoped="" ref="0xb7899210"/>
        <function-ref name="isOutput" scoped="" ref="0xb78992f0"/>
        <function-ref name="get" scoped="" ref="0xb78993d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78994b0"/>
        <function-ref name="set" scoped="" ref="0xb7899590"/>
        <function-ref name="clr" scoped="" ref="0xb7899670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7898920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7898920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7898af8"/>
        <function-ref name="isInput" scoped="" ref="0xb7898bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb7898cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7898d98"/>
        <function-ref name="get" scoped="" ref="0xb7898e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7897010"/>
        <function-ref name="set" scoped="" ref="0xb78970f0"/>
        <function-ref name="clr" scoped="" ref="0xb78971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7896490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7896490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7896668"/>
        <function-ref name="isInput" scoped="" ref="0xb7896748"/>
        <function-ref name="toggle" scoped="" ref="0xb7896828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7896908"/>
        <function-ref name="get" scoped="" ref="0xb78969e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7896ac8"/>
        <function-ref name="set" scoped="" ref="0xb7896ba8"/>
        <function-ref name="clr" scoped="" ref="0xb7896c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7894010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7894010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78941e8"/>
        <function-ref name="isInput" scoped="" ref="0xb78942c8"/>
        <function-ref name="toggle" scoped="" ref="0xb78943a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7894488"/>
        <function-ref name="get" scoped="" ref="0xb7894568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7894648"/>
        <function-ref name="set" scoped="" ref="0xb7894728"/>
        <function-ref name="clr" scoped="" ref="0xb7894808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7893ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7893ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7893ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7893d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7893e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7891010"/>
        <function-ref name="get" scoped="" ref="0xb78910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78911d0"/>
        <function-ref name="set" scoped="" ref="0xb78912b0"/>
        <function-ref name="clr" scoped="" ref="0xb7891390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a4b5d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a4b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a4b7a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a4b888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a4b968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a4ba48"/>
        <function-ref name="get" scoped="" ref="0xb7a4bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a4bc08"/>
        <function-ref name="set" scoped="" ref="0xb7a4bce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a4bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a49250" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a49250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a49428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a49508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a495e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a496c8"/>
        <function-ref name="get" scoped="" ref="0xb7a497a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a49888"/>
        <function-ref name="set" scoped="" ref="0xb7a49968"/>
        <function-ref name="clr" scoped="" ref="0xb7a49a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a4c260" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a4c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a4c438"/>
        <function-ref name="isInput" scoped="" ref="0xb7a4c518"/>
        <function-ref name="toggle" scoped="" ref="0xb7a4c5f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a4c6d8"/>
        <function-ref name="get" scoped="" ref="0xb7a4c7b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a4c898"/>
        <function-ref name="set" scoped="" ref="0xb7a4c978"/>
        <function-ref name="clr" scoped="" ref="0xb7a4ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a4bf28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a4bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a4a110"/>
        <function-ref name="isInput" scoped="" ref="0xb7a4a1f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a4a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a4a3b0"/>
        <function-ref name="get" scoped="" ref="0xb7a4a490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a4a570"/>
        <function-ref name="set" scoped="" ref="0xb7a4a650"/>
        <function-ref name="clr" scoped="" ref="0xb7a4a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a49ba8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a49ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a49d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a49e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a48010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a480f0"/>
        <function-ref name="get" scoped="" ref="0xb7a481d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a482b0"/>
        <function-ref name="set" scoped="" ref="0xb7a48390"/>
        <function-ref name="clr" scoped="" ref="0xb7a48470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a4cbb8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a4cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a4cd90"/>
        <function-ref name="isInput" scoped="" ref="0xb7a4ce70"/>
        <function-ref name="toggle" scoped="" ref="0xb7a4b010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a4b0f0"/>
        <function-ref name="get" scoped="" ref="0xb7a4b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a4b2b0"/>
        <function-ref name="set" scoped="" ref="0xb7a4b390"/>
        <function-ref name="clr" scoped="" ref="0xb7a4b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a4a890" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a4a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a4aa68"/>
        <function-ref name="isInput" scoped="" ref="0xb7a4ab48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a4ac28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a4ad08"/>
        <function-ref name="get" scoped="" ref="0xb7a4ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a4aec8"/>
        <function-ref name="set" scoped="" ref="0xb7a49010"/>
        <function-ref name="clr" scoped="" ref="0xb7a490f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a485d0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a485d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a487a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a48888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a48968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a48a48"/>
        <function-ref name="get" scoped="" ref="0xb7a48b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a48c08"/>
        <function-ref name="set" scoped="" ref="0xb7a48ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a48dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb786a540" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb786a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb786a718"/>
        <function-ref name="isInput" scoped="" ref="0xb786a7f8"/>
        <function-ref name="toggle" scoped="" ref="0xb786a8d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb786a9b8"/>
        <function-ref name="get" scoped="" ref="0xb786aa98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb786ab78"/>
        <function-ref name="set" scoped="" ref="0xb786ac58"/>
        <function-ref name="clr" scoped="" ref="0xb786ad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7868050" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7868050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7868228"/>
        <function-ref name="isInput" scoped="" ref="0xb7868308"/>
        <function-ref name="toggle" scoped="" ref="0xb78683e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb78684c8"/>
        <function-ref name="get" scoped="" ref="0xb78685a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7868688"/>
        <function-ref name="set" scoped="" ref="0xb7868768"/>
        <function-ref name="clr" scoped="" ref="0xb7868848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7867ae8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7867ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7867cc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7867da0"/>
        <function-ref name="toggle" scoped="" ref="0xb7867e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7866010"/>
        <function-ref name="get" scoped="" ref="0xb78660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78661d0"/>
        <function-ref name="set" scoped="" ref="0xb78662b0"/>
        <function-ref name="clr" scoped="" ref="0xb7866390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7865650" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7865650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7865828"/>
        <function-ref name="isInput" scoped="" ref="0xb7865908"/>
        <function-ref name="toggle" scoped="" ref="0xb78659e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7865ac8"/>
        <function-ref name="get" scoped="" ref="0xb7865ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7865c88"/>
        <function-ref name="set" scoped="" ref="0xb7865d68"/>
        <function-ref name="clr" scoped="" ref="0xb7865e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78631b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78631b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7863388"/>
        <function-ref name="isInput" scoped="" ref="0xb7863468"/>
        <function-ref name="toggle" scoped="" ref="0xb7863548"/>
        <function-ref name="isOutput" scoped="" ref="0xb7863628"/>
        <function-ref name="get" scoped="" ref="0xb7863708"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78637e8"/>
        <function-ref name="set" scoped="" ref="0xb78638c8"/>
        <function-ref name="clr" scoped="" ref="0xb78639a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7862c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7862c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7862e70"/>
        <function-ref name="isInput" scoped="" ref="0xb7861010"/>
        <function-ref name="toggle" scoped="" ref="0xb78610f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb78611d0"/>
        <function-ref name="get" scoped="" ref="0xb78612b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7861390"/>
        <function-ref name="set" scoped="" ref="0xb7861470"/>
        <function-ref name="clr" scoped="" ref="0xb7861550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78607f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78607f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78609d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7860ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7860b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7860c70"/>
        <function-ref name="get" scoped="" ref="0xb7860d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7860e30"/>
        <function-ref name="set" scoped="" ref="0xb7860f10"/>
        <function-ref name="clr" scoped="" ref="0xb785f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb785e308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb785e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb785e4e0"/>
        <function-ref name="isInput" scoped="" ref="0xb785e5c0"/>
        <function-ref name="toggle" scoped="" ref="0xb785e6a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb785e780"/>
        <function-ref name="get" scoped="" ref="0xb785e860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb785e940"/>
        <function-ref name="set" scoped="" ref="0xb785ea20"/>
        <function-ref name="clr" scoped="" ref="0xb785eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a43ba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a43ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a43d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a43e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a42010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a420f0"/>
        <function-ref name="get" scoped="" ref="0xb7a421d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a422b0"/>
        <function-ref name="set" scoped="" ref="0xb7a42390"/>
        <function-ref name="clr" scoped="" ref="0xb7a42470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a41890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a41890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a41a68"/>
        <function-ref name="isInput" scoped="" ref="0xb7a41b48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a41c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a41d08"/>
        <function-ref name="get" scoped="" ref="0xb7a41de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a41ec8"/>
        <function-ref name="set" scoped="" ref="0xb7a40010"/>
        <function-ref name="clr" scoped="" ref="0xb7a400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a448e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a448e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a44ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a44b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7a44c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a44d58"/>
        <function-ref name="get" scoped="" ref="0xb7a44e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a44f18"/>
        <function-ref name="set" scoped="" ref="0xb7a43010"/>
        <function-ref name="clr" scoped="" ref="0xb7a430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a425d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a427a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a42888"/>
        <function-ref name="toggle" scoped="" ref="0xb7a42968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a42a48"/>
        <function-ref name="get" scoped="" ref="0xb7a42b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a42c08"/>
        <function-ref name="set" scoped="" ref="0xb7a42ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7a42dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a40250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a40250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a40428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a40508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a405e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a406c8"/>
        <function-ref name="get" scoped="" ref="0xb7a407a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a40888"/>
        <function-ref name="set" scoped="" ref="0xb7a40968"/>
        <function-ref name="clr" scoped="" ref="0xb7a40a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a43250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a43250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a43428"/>
        <function-ref name="isInput" scoped="" ref="0xb7a43508"/>
        <function-ref name="toggle" scoped="" ref="0xb7a435e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a436c8"/>
        <function-ref name="get" scoped="" ref="0xb7a437a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a43888"/>
        <function-ref name="set" scoped="" ref="0xb7a43968"/>
        <function-ref name="clr" scoped="" ref="0xb7a43a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a42f28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a42f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a41110"/>
        <function-ref name="isInput" scoped="" ref="0xb7a411f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a412d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a413b0"/>
        <function-ref name="get" scoped="" ref="0xb7a41490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a41570"/>
        <function-ref name="set" scoped="" ref="0xb7a41650"/>
        <function-ref name="clr" scoped="" ref="0xb7a41730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a40ba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a40ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a40d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a40e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3f010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3f0f0"/>
        <function-ref name="get" scoped="" ref="0xb7a3f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3f2b0"/>
        <function-ref name="set" scoped="" ref="0xb7a3f390"/>
        <function-ref name="clr" scoped="" ref="0xb7a3f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78371f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78371f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78373d0"/>
        <function-ref name="isInput" scoped="" ref="0xb78374b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7837590"/>
        <function-ref name="isOutput" scoped="" ref="0xb7837670"/>
        <function-ref name="get" scoped="" ref="0xb7837750"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7837830"/>
        <function-ref name="set" scoped="" ref="0xb7837910"/>
        <function-ref name="clr" scoped="" ref="0xb78379f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7836c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7836c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7836e70"/>
        <function-ref name="isInput" scoped="" ref="0xb7835010"/>
        <function-ref name="toggle" scoped="" ref="0xb78350f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb78351d0"/>
        <function-ref name="get" scoped="" ref="0xb78352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7835390"/>
        <function-ref name="set" scoped="" ref="0xb7835470"/>
        <function-ref name="clr" scoped="" ref="0xb7835550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78347f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78347f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78349d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7834ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7834b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7834c70"/>
        <function-ref name="get" scoped="" ref="0xb7834d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7834e30"/>
        <function-ref name="set" scoped="" ref="0xb7834f10"/>
        <function-ref name="clr" scoped="" ref="0xb7833010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7832308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7832308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb78324e0"/>
        <function-ref name="isInput" scoped="" ref="0xb78325c0"/>
        <function-ref name="toggle" scoped="" ref="0xb78326a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7832780"/>
        <function-ref name="get" scoped="" ref="0xb7832860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7832940"/>
        <function-ref name="set" scoped="" ref="0xb7832a20"/>
        <function-ref name="clr" scoped="" ref="0xb7832b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7831da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7831da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7830010"/>
        <function-ref name="isInput" scoped="" ref="0xb78300f0"/>
        <function-ref name="toggle" scoped="" ref="0xb78301d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb78302b0"/>
        <function-ref name="get" scoped="" ref="0xb7830390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7830470"/>
        <function-ref name="set" scoped="" ref="0xb7830550"/>
        <function-ref name="clr" scoped="" ref="0xb7830630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb782f8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb782f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb782fab0"/>
        <function-ref name="isInput" scoped="" ref="0xb782fb90"/>
        <function-ref name="toggle" scoped="" ref="0xb782fc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb782fd50"/>
        <function-ref name="get" scoped="" ref="0xb782fe30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb782ff10"/>
        <function-ref name="set" scoped="" ref="0xb782d010"/>
        <function-ref name="clr" scoped="" ref="0xb782d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb782c3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb782c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb782c588"/>
        <function-ref name="isInput" scoped="" ref="0xb782c668"/>
        <function-ref name="toggle" scoped="" ref="0xb782c748"/>
        <function-ref name="isOutput" scoped="" ref="0xb782c828"/>
        <function-ref name="get" scoped="" ref="0xb782c908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb782c9e8"/>
        <function-ref name="set" scoped="" ref="0xb782cac8"/>
        <function-ref name="clr" scoped="" ref="0xb782cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb782be50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb782be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb782a050"/>
        <function-ref name="isInput" scoped="" ref="0xb782a130"/>
        <function-ref name="toggle" scoped="" ref="0xb782a210"/>
        <function-ref name="isOutput" scoped="" ref="0xb782a2f0"/>
        <function-ref name="get" scoped="" ref="0xb782a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb782a4b0"/>
        <function-ref name="set" scoped="" ref="0xb782a590"/>
        <function-ref name="clr" scoped="" ref="0xb782a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a3b330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a3b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3b508"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3b5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3b6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3b7a8"/>
        <function-ref name="get" scoped="" ref="0xb7a3b888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3b968"/>
        <function-ref name="set" scoped="" ref="0xb7a3ba48"/>
        <function-ref name="clr" scoped="" ref="0xb7a3bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a38030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a38030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a38208"/>
        <function-ref name="isInput" scoped="" ref="0xb7a382e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a383c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a384a8"/>
        <function-ref name="get" scoped="" ref="0xb7a38588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a38668"/>
        <function-ref name="set" scoped="" ref="0xb7a38748"/>
        <function-ref name="clr" scoped="" ref="0xb7a38828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a3c010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a3c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3c488"/>
        <function-ref name="get" scoped="" ref="0xb7a3c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3c648"/>
        <function-ref name="set" scoped="" ref="0xb7a3c728"/>
        <function-ref name="clr" scoped="" ref="0xb7a3c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a3bc88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a3bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3be60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3a010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3a1d0"/>
        <function-ref name="get" scoped="" ref="0xb7a3a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3a390"/>
        <function-ref name="set" scoped="" ref="0xb7a3a470"/>
        <function-ref name="clr" scoped="" ref="0xb7a3a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a38988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a38988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a38b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a38c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7a38d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a38e00"/>
        <function-ref name="get" scoped="" ref="0xb7a38ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a37010"/>
        <function-ref name="set" scoped="" ref="0xb7a370f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a371d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a3c968" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a3c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3cb40"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3cc20"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3cd00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3cde0"/>
        <function-ref name="get" scoped="" ref="0xb7a3cec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3b010"/>
        <function-ref name="set" scoped="" ref="0xb7a3b0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a3b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a3a6b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a3a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3a888"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3a968"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3aa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3ab28"/>
        <function-ref name="get" scoped="" ref="0xb7a3ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3ace8"/>
        <function-ref name="set" scoped="" ref="0xb7a3adc8"/>
        <function-ref name="clr" scoped="" ref="0xb7a3aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a37330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a37330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a37508"/>
        <function-ref name="isInput" scoped="" ref="0xb7a375e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a376c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a377a8"/>
        <function-ref name="get" scoped="" ref="0xb7a37888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a37968"/>
        <function-ref name="set" scoped="" ref="0xb7a37a48"/>
        <function-ref name="clr" scoped="" ref="0xb7a37b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7806da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7806da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7803010"/>
        <function-ref name="isInput" scoped="" ref="0xb78030f0"/>
        <function-ref name="toggle" scoped="" ref="0xb78031d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb78032b0"/>
        <function-ref name="get" scoped="" ref="0xb7803390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7803470"/>
        <function-ref name="set" scoped="" ref="0xb7803550"/>
        <function-ref name="clr" scoped="" ref="0xb7803630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78028d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78028d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7802ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7802b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7802c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7802d50"/>
        <function-ref name="get" scoped="" ref="0xb7802e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7802f10"/>
        <function-ref name="set" scoped="" ref="0xb7801010"/>
        <function-ref name="clr" scoped="" ref="0xb78010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb78003b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb78003b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7800588"/>
        <function-ref name="isInput" scoped="" ref="0xb7800668"/>
        <function-ref name="toggle" scoped="" ref="0xb7800748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7800828"/>
        <function-ref name="get" scoped="" ref="0xb7800908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb78009e8"/>
        <function-ref name="set" scoped="" ref="0xb7800ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7800ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb77ffe50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb77ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77fe050"/>
        <function-ref name="isInput" scoped="" ref="0xb77fe130"/>
        <function-ref name="toggle" scoped="" ref="0xb77fe210"/>
        <function-ref name="isOutput" scoped="" ref="0xb77fe2f0"/>
        <function-ref name="get" scoped="" ref="0xb77fe3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77fe4b0"/>
        <function-ref name="set" scoped="" ref="0xb77fe590"/>
        <function-ref name="clr" scoped="" ref="0xb77fe670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb77fd920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb77fd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77fdaf8"/>
        <function-ref name="isInput" scoped="" ref="0xb77fdbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb77fdcb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb77fdd98"/>
        <function-ref name="get" scoped="" ref="0xb77fde78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77fc010"/>
        <function-ref name="set" scoped="" ref="0xb77fc0f0"/>
        <function-ref name="clr" scoped="" ref="0xb77fc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb77fb490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb77fb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77fb668"/>
        <function-ref name="isInput" scoped="" ref="0xb77fb748"/>
        <function-ref name="toggle" scoped="" ref="0xb77fb828"/>
        <function-ref name="isOutput" scoped="" ref="0xb77fb908"/>
        <function-ref name="get" scoped="" ref="0xb77fb9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77fbac8"/>
        <function-ref name="set" scoped="" ref="0xb77fbba8"/>
        <function-ref name="clr" scoped="" ref="0xb77fbc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb77f9010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb77f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77f91e8"/>
        <function-ref name="isInput" scoped="" ref="0xb77f92c8"/>
        <function-ref name="toggle" scoped="" ref="0xb77f93a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb77f9488"/>
        <function-ref name="get" scoped="" ref="0xb77f9568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77f9648"/>
        <function-ref name="set" scoped="" ref="0xb77f9728"/>
        <function-ref name="clr" scoped="" ref="0xb77f9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb77f8ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb77f8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77f8ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb77f8d80"/>
        <function-ref name="toggle" scoped="" ref="0xb77f8e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb77f7010"/>
        <function-ref name="get" scoped="" ref="0xb77f70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77f71d0"/>
        <function-ref name="set" scoped="" ref="0xb77f72b0"/>
        <function-ref name="clr" scoped="" ref="0xb77f7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a32010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a321e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a322c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a323a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a32488"/>
        <function-ref name="get" scoped="" ref="0xb7a32568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a32648"/>
        <function-ref name="set" scoped="" ref="0xb7a32728"/>
        <function-ref name="clr" scoped="" ref="0xb7a32808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a26618" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a26618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a267f0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a268d0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a269b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a26a90"/>
        <function-ref name="get" scoped="" ref="0xb7a26b70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a26c50"/>
        <function-ref name="set" scoped="" ref="0xb7a26d30"/>
        <function-ref name="clr" scoped="" ref="0xb7a26e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a24d10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a24d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a24ee8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a23010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a230f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a231d0"/>
        <function-ref name="get" scoped="" ref="0xb7a232b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a23390"/>
        <function-ref name="set" scoped="" ref="0xb7a23470"/>
        <function-ref name="clr" scoped="" ref="0xb7a23550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a20360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a20360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a20538"/>
        <function-ref name="isInput" scoped="" ref="0xb7a20618"/>
        <function-ref name="toggle" scoped="" ref="0xb7a206f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a207d8"/>
        <function-ref name="get" scoped="" ref="0xb7a208b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a20998"/>
        <function-ref name="set" scoped="" ref="0xb7a20a78"/>
        <function-ref name="clr" scoped="" ref="0xb7a20b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a1e960" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a1e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a1eb38"/>
        <function-ref name="isInput" scoped="" ref="0xb7a1ec18"/>
        <function-ref name="toggle" scoped="" ref="0xb7a1ecf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a1edd8"/>
        <function-ref name="get" scoped="" ref="0xb7a1eeb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a1d010"/>
        <function-ref name="set" scoped="" ref="0xb7a1d0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a1d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a1b010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a1b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a1b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a1b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a1b488"/>
        <function-ref name="get" scoped="" ref="0xb7a1b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a1b648"/>
        <function-ref name="set" scoped="" ref="0xb7a1b728"/>
        <function-ref name="clr" scoped="" ref="0xb7a1b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a186a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a186a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a18878"/>
        <function-ref name="isInput" scoped="" ref="0xb7a18958"/>
        <function-ref name="toggle" scoped="" ref="0xb7a18a38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a18b18"/>
        <function-ref name="get" scoped="" ref="0xb7a18bf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a18cd8"/>
        <function-ref name="set" scoped="" ref="0xb7a18db8"/>
        <function-ref name="clr" scoped="" ref="0xb7a18e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a16d10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a16d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a16ee8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a15010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a150f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a151d0"/>
        <function-ref name="get" scoped="" ref="0xb7a152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a15390"/>
        <function-ref name="set" scoped="" ref="0xb7a15470"/>
        <function-ref name="clr" scoped="" ref="0xb7a15550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a13360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a13360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a13538"/>
        <function-ref name="isInput" scoped="" ref="0xb7a13618"/>
        <function-ref name="toggle" scoped="" ref="0xb7a136f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a137d8"/>
        <function-ref name="get" scoped="" ref="0xb7a138b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a13998"/>
        <function-ref name="set" scoped="" ref="0xb7a13a78"/>
        <function-ref name="clr" scoped="" ref="0xb7a13b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a10960" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a10960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a10b38"/>
        <function-ref name="isInput" scoped="" ref="0xb7a10c18"/>
        <function-ref name="toggle" scoped="" ref="0xb7a10cf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a10dd8"/>
        <function-ref name="get" scoped="" ref="0xb7a10eb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a0f010"/>
        <function-ref name="set" scoped="" ref="0xb7a0f0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a0f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a0d010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a0d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a0d1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a0d2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a0d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a0d488"/>
        <function-ref name="get" scoped="" ref="0xb7a0d568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a0d648"/>
        <function-ref name="set" scoped="" ref="0xb7a0d728"/>
        <function-ref name="clr" scoped="" ref="0xb7a0d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a0a618" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a0a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a0a7f0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a0a8d0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a0a9b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a0aa90"/>
        <function-ref name="get" scoped="" ref="0xb7a0ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a0ac50"/>
        <function-ref name="set" scoped="" ref="0xb7a0ad30"/>
        <function-ref name="clr" scoped="" ref="0xb7a0ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a08d10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a08d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a08ee8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a07010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a070f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a071d0"/>
        <function-ref name="get" scoped="" ref="0xb7a072b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a07390"/>
        <function-ref name="set" scoped="" ref="0xb7a07470"/>
        <function-ref name="clr" scoped="" ref="0xb7a07550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb79e3c40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb79e3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79e3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79e88d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79e88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79e8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb79e3548" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb79e3548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb79e3720"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb79e3800"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb79e38e0"/>
        <function-ref name="actualMicro" scoped="" ref="0xb79e39c0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb79e3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb79df070" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb79df070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79df248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79e0ce8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79e0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79e0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb79df3e0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb79df3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79df5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb79e6f28" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb79e6f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79db110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb79e6bc0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb79e6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79e6d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb79d7068" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb79d7068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79d7240"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb79d86b8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb79d86b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79d8890"/>
        <function-ref name="isInput" scoped="" ref="0xb79d8970"/>
        <function-ref name="toggle" scoped="" ref="0xb79d8a50"/>
        <function-ref name="isOutput" scoped="" ref="0xb79d8b30"/>
        <function-ref name="get" scoped="" ref="0xb79d8c10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79d8cf0"/>
        <function-ref name="set" scoped="" ref="0xb79d8dd0"/>
        <function-ref name="clr" scoped="" ref="0xb79d8eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb79d8340" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb79d8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79d8518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79d1760" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79d1760"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7ce91d8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7ce91d8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79d1938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb79d1a88" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb79d1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb79d1c60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb79d1d40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb79d1e20"/>
        <function-ref name="actualMicro" scoped="" ref="0xb79d1f00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb79d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb79c1010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb79c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7c9e808"/>
            <typename><typedef-ref name="TMicro" ref="0xb7c9e9d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb79c1760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb79bf410" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb79bf410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb79bf5e8"/>
        <function-ref name="configure" scoped="" ref="0xb79bf6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb79c2cd0" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb79c2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb79c2ea8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb79bf010"/>
        <function-ref name="request" scoped="" ref="0xb79bf0f0"/>
        <function-ref name="granted" scoped="" ref="0xb79bf1d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb79bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0xb79bf848" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0xb79bf848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb79bfa20"/>
        <function-ref name="runTask" scoped="" ref="0xb79bfb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb79b1c30" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb79b1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79b1e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb79b18c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb79b18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb79b1a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb79adc88" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb79adc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79ade60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb79ad0a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb79ad0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb79ad278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb79ad918" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb79ad918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79adaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb79ad3e8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb79ad3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79ad5c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb79ad6a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb79ad780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7cdde18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7cdde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7ce6010"/>
        <function-ref name="runTask" scoped="" ref="0xb7ce60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7ce7010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7ce7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ce71e8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7ce72c8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7ce73a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7c7a2a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7c7a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7c7a478"/>
        <function-ref name="runTask" scoped="" ref="0xb7c7a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7c77810" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7c77810"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7c779e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7c7bae8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7c7bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c7bcc0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7c7bda0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7c7be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7c65df0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7c65df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7c69010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7c6b360" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7c6b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7c6b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7c68930" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7c68930"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7c68b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb79afc20" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb79afc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb79afe08"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb79afee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb7968b88" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb7968b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb7968d70"/>
        <function-ref name="configure" scoped="" ref="0xb7968e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb7968040" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7968040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7968218"/>
        <function-ref name="requested" scoped="" ref="0xb79682f8"/>
        <function-ref name="granted" scoped="" ref="0xb79683d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb79684b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb7968598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb79af4e0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb79af4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb79af6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb79af7a8"/>
        <function-ref name="request" scoped="" ref="0xb79af888"/>
        <function-ref name="granted" scoped="" ref="0xb79af968"/>
        <function-ref name="isOwner" scoped="" ref="0xb79afa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb79686d8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb79686d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb79688b0"/>
        <function-ref name="userId" scoped="" ref="0xb7968990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7797918" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7797918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7797af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb7797c50" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb7797c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb7797e28"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7797f08"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb7795010"/>
        <function-ref name="dequeue" scoped="" ref="0xb77950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb7794618" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb7794618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb7794800"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb77948e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb7793610" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb7793610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb77937f8"/>
        <function-ref name="configure" scoped="" ref="0xb77938d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb7793a38" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb7793a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb7793c10"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7793cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb7793dd0"/>
        <function-ref name="dequeue" scoped="" ref="0xb7793eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb7794a20" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb7794a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7794bf8"/>
        <function-ref name="requested" scoped="" ref="0xb7794cd8"/>
        <function-ref name="granted" scoped="" ref="0xb7794db8"/>
        <function-ref name="isOwner" scoped="" ref="0xb7794e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb7793010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7792010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7792010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb77921e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb77922c8"/>
        <function-ref name="led1On" scoped="" ref="0xb77923a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7792488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7792568"/>
        <function-ref name="get" scoped="" ref="0xb7792648"/>
        <function-ref name="led1Off" scoped="" ref="0xb7792728"/>
        <function-ref name="led0On" scoped="" ref="0xb7792aa8"/>
        <function-ref name="set" scoped="" ref="0xb77928e8"/>
        <function-ref name="led2On" scoped="" ref="0xb7792808"/>
        <function-ref name="led2Off" scoped="" ref="0xb77929c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7795ea8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7795ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb77940c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb77941a0"/>
        <function-ref name="request" scoped="" ref="0xb7794280"/>
        <function-ref name="granted" scoped="" ref="0xb7794360"/>
        <function-ref name="isOwner" scoped="" ref="0xb7794440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb7793150" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb7793150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb7793328"/>
        <function-ref name="userId" scoped="" ref="0xb7793408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb7792c28" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb7792c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7792e00"/>
        <function-ref name="runTask" scoped="" ref="0xb7792ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0xb79628a0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0xb79628a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0xb7c4a130"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0xb7962a78"/>
        <function-ref name="remap" scoped="" ref="0xb7962b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb795ad00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb795ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb795aed8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7957010"/>
        <function-ref name="led1On" scoped="" ref="0xb79570f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb79571d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb79572b0"/>
        <function-ref name="get" scoped="" ref="0xb7957390"/>
        <function-ref name="led1Off" scoped="" ref="0xb7957470"/>
        <function-ref name="led2Off" scoped="" ref="0xb79577f0"/>
        <function-ref name="set" scoped="" ref="0xb7957550"/>
        <function-ref name="led0On" scoped="" ref="0xb7957630"/>
        <function-ref name="led2On" scoped="" ref="0xb7957710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb79538c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb79538c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7953aa0"/>
        <function-ref name="isInput" scoped="" ref="0xb7953b80"/>
        <function-ref name="toggle" scoped="" ref="0xb7953c60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7953d40"/>
        <function-ref name="get" scoped="" ref="0xb7953e20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7953f00"/>
        <function-ref name="set" scoped="" ref="0xb7952010"/>
        <function-ref name="clr" scoped="" ref="0xb79520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79548d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79548d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7954ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb7952268" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7952268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7952440"/>
        <function-ref name="isInput" scoped="" ref="0xb7952520"/>
        <function-ref name="toggle" scoped="" ref="0xb7952600"/>
        <function-ref name="isOutput" scoped="" ref="0xb79526e0"/>
        <function-ref name="get" scoped="" ref="0xb79527c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79528a0"/>
        <function-ref name="set" scoped="" ref="0xb7952980"/>
        <function-ref name="clr" scoped="" ref="0xb7952a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7954bf8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7954bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7954dd0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7954eb0"/>
        <function-ref name="led1On" scoped="" ref="0xb7953010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb79530f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb79531d0"/>
        <function-ref name="get" scoped="" ref="0xb79532b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb7953390"/>
        <function-ref name="led2Off" scoped="" ref="0xb7953710"/>
        <function-ref name="set" scoped="" ref="0xb7953470"/>
        <function-ref name="led0On" scoped="" ref="0xb7953550"/>
        <function-ref name="led2On" scoped="" ref="0xb7953630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb7952bd8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7952bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7952db0"/>
        <function-ref name="isInput" scoped="" ref="0xb7952e90"/>
        <function-ref name="toggle" scoped="" ref="0xb7951010"/>
        <function-ref name="isOutput" scoped="" ref="0xb79510f0"/>
        <function-ref name="get" scoped="" ref="0xb79511d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79512b0"/>
        <function-ref name="set" scoped="" ref="0xb7951390"/>
        <function-ref name="clr" scoped="" ref="0xb7951470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb79439b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb79439b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7943b88"/>
        <function-ref name="isInput" scoped="" ref="0xb7943c68"/>
        <function-ref name="toggle" scoped="" ref="0xb7943d48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7943e28"/>
        <function-ref name="get" scoped="" ref="0xb7943f08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7942010"/>
        <function-ref name="set" scoped="" ref="0xb79420f0"/>
        <function-ref name="clr" scoped="" ref="0xb79421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb7942368" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7942368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7942540"/>
        <function-ref name="isInput" scoped="" ref="0xb7942620"/>
        <function-ref name="toggle" scoped="" ref="0xb7942700"/>
        <function-ref name="isOutput" scoped="" ref="0xb79427e0"/>
        <function-ref name="get" scoped="" ref="0xb79428c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79429a0"/>
        <function-ref name="set" scoped="" ref="0xb7942a80"/>
        <function-ref name="clr" scoped="" ref="0xb7942b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb79416b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79416b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7941890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb7942cf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7942cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7942ed0"/>
        <function-ref name="isInput" scoped="" ref="0xb7941010"/>
        <function-ref name="toggle" scoped="" ref="0xb79410f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb79411d0"/>
        <function-ref name="get" scoped="" ref="0xb79412b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7941390"/>
        <function-ref name="set" scoped="" ref="0xb7941470"/>
        <function-ref name="clr" scoped="" ref="0xb7941550"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Mount" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
      <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
        <short>&#10; Mount a volume.&#10;&#10;</short>
        <long>&#10; Mount a volume.&#10;&#10; @author David Gay&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="mount" ref="0xb7c3ebe0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
        <documentation loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
          <short>&#10; Mount a particular volume.</short>
          <long>&#10; Mount a particular volume. This must be done before the volume's&#10; first use. &#60;code>mountDone&#60;/code> will be signaled if SUCCESS is&#10; returned.&#10; @return SUCCESS if mount request is accepted, FAIL if mount has&#10;   already been attempted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mount"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="mountDone" ref="0xb7c3d238" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
          <short>&#10; Report success or failure of mount operation.</short>
          <long>&#10; Report success or failure of mount operation. If the mount failed,&#10; no operation should be perfomed on the volume. Note that success&#10; should not be used to indicate that the volume contains valid data,&#10; rather failure indicates some major internal problem that prevents&#10; the volume from being used.&#10;&#10; @param error SUCCESS if the mount succeeded, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mount"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c3ef00" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Mount.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7c53950" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb7c50b50" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb7c50f28" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb7c4e2a8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb7c4e9f0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb7c4d4c8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7c4da10" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb7c4e618" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7c4c268" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb7c4dd48" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7c507e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb7c4ed60" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb7c4d0f0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ConfigStorage" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
      <function command="" provided="0" name="read" ref="0xb7c45da8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation. The data read is the contents of the config volume&#10; as of the last commit operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EOFF if the volume has not been mounted&#10;   &#60;li>EBUSY if a request is already being processed.&#10;   &#60;li>FAIL if the volume does not contain valid data &#10;       (see &#60;code>valid&#60;/code>)&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c45638" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c457d8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c45968" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7c42db8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a commit operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c425c0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c42760" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c428f0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7c42a88" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="commit" ref="0xb7c412d0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Initiate a commit operation and finialize any additional writes to the&#10; volume.</short>
          <long>&#10; Initiate a commit operation and finialize any additional writes to the&#10; volume. A commit operation must be issued to ensure that data is&#10; stored in non-volatile storage. On SUCCES, the &#60;code>commitDone&#60;/code>&#10; event will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;   &#60;li>EOFF if the volume has not been mounted&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="valid" ref="0xb7c3f188" loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Report whether this config volume contains valid data.</short>
          <long>&#10; Report whether this config volume contains valid data. Committing&#10; a volume makes it valid.&#10;&#10; @return TRUE if the volume contains valid data, FALSE otherwise. The&#10;    result is undefined if the volume hasn't been mounted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="write" ref="0xb7c42298" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EOFF if the volume has not been mounted&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c43ba8" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c43d48" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c43ed8" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0xb7c41d28" loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Report the usable volume size in bytes (this may be significantly&#10; different from the actual volume size, e.g., it's approximately&#10; half the volume size on the AT45DB implementation).&#10;&#10;</short>
          <long>&#10; Report the usable volume size in bytes (this may be significantly&#10; different from the actual volume size, e.g., it's approximately&#10; half the volume size on the AT45DB implementation).&#10;&#10; @return Volume size. The result is undefined if the volume hasn't&#10;    been mounted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="commitDone" ref="0xb7c41850" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Signals the completion of a commit operation.</short>
          <long>&#10; Signals the completion of a commit operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c415f0" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb7c43880" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConfigStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c43100" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c432a0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c43430" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7c435c8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ConfigStorage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0xb7c0a398" loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c0a168" loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xb7c0c2c8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation. &#10;</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c0c0b0" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0xb7c0b238" loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation. &#10;</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c0b010" loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb7c0bd88" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c0b558" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7c0b6f0" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7c0b8a0" loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0xb7c0ba38" loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7c107c0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c10588" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0xb7c0f010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0xb7c10ae8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0xb7c10c78" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0xb7c0fe40" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c0f858" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0xb7c0f9e8" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0xb7c0d390" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation. &#10;</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c0d188" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0xb7c08710" loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.&#10;</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c08330" loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0xb7c084c0" loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb7c0c8a0" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c0c5e8" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0xb7c0dd70" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flushAll" ref="0xb7c0cc40" loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="write" ref="0xb7c10268" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c11a28" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7c11bc0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7c11d70" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0xb7c11f08" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb7c0d9a0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c0d6b0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0xb7c08010" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c0a6c0" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7c0a858" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0xb7c0aa00" loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0xb7c0ab90" loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0xb7c0f538" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation. &#10;</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c0f330" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10;</short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0xb7c14110" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10;</short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flipped" ref="0xb7c153c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10;</short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isConfig" ref="0xb7c15010" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10;</short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeHook" ref="0xb7c157b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10;</short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="remap" ref="0xb7c146d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10;</short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0xb7c14440" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0xb7c15d50" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10;</short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7c15ad8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <short>&#10; Read interface for the block storage abstraction described in&#10; TEP103.&#10;&#10;</short>
        <long>&#10; Read interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:25 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb7c05508" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c06e38" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c05010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c051a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0xb7c03448" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c04cc0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0xb7c04e50" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0xb7c03010" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7c03198" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0xb7c04998" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c04340" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0xb7c044d0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0xb7c04670" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0xb7c03860" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10;</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb7c04010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c05830" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c059d0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c05b60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7c05cf8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10;</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008/06/04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0xb7bfee90" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7bfec30" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7bffb28" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7bff338" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7bff4d8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7bff668" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7bff800" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0xb7bfff28" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0xb7bfe478" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7bfe258" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7bff010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7c00898" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0xb7c4a308"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7c00a38" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7c00bc8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0xb7c4a4e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb7bfe910" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.&#10;&#10;</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0xb7baa840" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10;</short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="remap" ref="0xb7baa4d0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10;</short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0xb7baa280" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7ba5068" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb7ba6700" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0xb7ba62d0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0xb7ba6a20" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb7ba5470" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7b60e08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0xb7b5e6f0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0xb7b609d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb7b5e238" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb7b5ebc8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb7b5c648" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0xb7b5ca48" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10;</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0xb7b4b818" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0xb7b51858" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="crcDone" ref="0xb7b4aaf8" loc="163:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.&#10;</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0xb7b4a920" loc="163:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0xb7b4f580" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="read" ref="0xb7b4b490" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b4ca48" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b4cbd8" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7b4cd70" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7b4cf28" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0xb7b4b0d0" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0xb7b4d780" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b4d3c8" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b4d558" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7b48ca8" loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0xb7b514c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0xb7b51da8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.&#10;</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0xb7b51b80" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0xb7b4dad8" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0xb7b511a0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flush" ref="0xb7b4f228" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b50b78" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b50d08" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7b48920" loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10;</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b4ae10" loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b48010" loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7b481a8" loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7b48360" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0xb7b484f8" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0xb7b4d0b0" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compare" ref="0xb7b4fcc0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b4f898" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b4fa28" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0xb7b4a5f8" loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10;</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b4bb30" loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b4bcc0" loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7b4be58" loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0xb7b4a030" loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0xb7b4a1c0" loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0xb7b4c6b0" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b4ddf8" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0xb7b4c010" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0xb7c49e78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7b4c1c8" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0xb7b4c358" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0xb7b50860" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="fill" ref="0xb7b50508" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb7b500f8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0xb7b50288" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0xb7c49c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10;</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7b45750" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b45750"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7b45868" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b45868"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb7b45ec8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b45868"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7b45c90" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b45868"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7cdd5f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7cdda00" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7b55468" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10;</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0xb7af4d08" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0xb7af45e0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="idle" ref="0xb7af4900" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="select" ref="0xb7af3050" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="deselect" ref="0xb7af3370" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb7afaed8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb7afaca0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7ac6b30" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7ac6e48" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7ac6500" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7ac5490" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7ac6818" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7ac5170" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7acaec0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7ac61f0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb79e33d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb79e3178" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb79e5e28" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f432a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb79e4408" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb79e4190" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb79e49e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb79e4760" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f43818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb79e4dc8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f45cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb79bbdf8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0xb79bba20" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7ce35e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7ce3dc8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7ce39f8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7c77698" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7c65c78" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7caf368"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7c687b8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb79a2b78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb79a10e0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb7995138" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7cdf0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb799d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7999ee8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb799d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb79991a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb7999788" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7cea468"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb799d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7999500" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb799d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb7999b98" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb799d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
