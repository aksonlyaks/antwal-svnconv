<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="55:TestDisseminationAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4038a4a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4037feb8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4037feb8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4048f2b8"/></to>
    </wire>
    <wire loc="58:TestDisseminationAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40387a30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404b1040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404b1040"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40504d08"/></to>
    </wire>
    <wire loc="61:TestDisseminationAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x4038e298"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40acf528"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40acf528"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40acc0d8"/></to>
    </wire>
    <wire loc="64:TestDisseminationAppC.nc">
      <from><interface-ref name="Value32" scoped="" ref="0x4038de58"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40b6ad98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x40b6ad98"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40e7d010"/></to>
    </wire>
    <wire loc="65:TestDisseminationAppC.nc">
      <from><interface-ref name="Update32" scoped="" ref="0x40394e88"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bfabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bfabd8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x40e7de30"/></to>
    </wire>
    <wire loc="68:TestDisseminationAppC.nc">
      <from><interface-ref name="Value16" scoped="" ref="0x4038ca38"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40bf8950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x40bf8950"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40ece0c0"/></to>
    </wire>
    <wire loc="69:TestDisseminationAppC.nc">
      <from><interface-ref name="Update16" scoped="" ref="0x4038ba10"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bf77e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bf77e8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x40eceee0"/></to>
    </wire>
    <wire loc="72:TestDisseminationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4039e3f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc45b0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bc45b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc1cb8"/></to>
    </wire>
    <wire loc="75:TestDisseminationAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x403a2ba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40bf44c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40bf44c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408caab0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ea1ae8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e10ec8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40927e60"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408f88b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406d5968"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40882a00"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40861cb0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4083e010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4048f650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402dc7d0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402dc7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403613f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048fc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409bdec0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048fc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40927800"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048fc18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403afb50"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403afb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403b4d98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a8030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403bbb20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4069c860"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403bb3c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4048d880"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403b9620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4048d4d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403b9218"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bd5e48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403b9218"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403b39c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403b39c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403be9c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b3d90"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403bbb20"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403c50a0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403cf4b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403cf4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40413988"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403c5a90"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403b3d90"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403ee750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40468880"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403dfd08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042ca80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cbf3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403e22f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce0538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403e74b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d34228"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403ce8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041ec88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041ec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c29570"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403e80a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40440d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40440d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d38de0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403cdce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4041adc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4041adc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c52418"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403d94b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404289e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404289e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6f228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403ddc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40436790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40436790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cba228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403e0210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404384f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404384f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d08538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403c7590"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40415cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40415cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c032d0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403d5c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40424ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40424ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4d228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403d72f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40426790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40426790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c960b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403dba98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404344f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404344f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb50b0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403e52f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40448c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40448c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2f0b0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403eb830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404770b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403e4ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40413988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2c0f8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403d2b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404217d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404217d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c480b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403ed3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404710b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403da010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404296f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404296f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c76de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403de750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042b410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cbed70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403e2ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40439170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40439170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d0c010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403e7ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4043e988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4043e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d33c08"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403cd2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041d6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c27010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403cc750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40419790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40419790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c51de0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403d9ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40427410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40427410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9ac08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403dc670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40435170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40435170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb9c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403e0c08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40438e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40438e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d06010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403d0010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404146b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404146b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c02c90"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403d3670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404224f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404224f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4cc08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403d7ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40425170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40425170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c95a88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403e5ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404476b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404476b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2ea88"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403df210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042c128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042c128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc1938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403e38e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043be48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce29e8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403e8a98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d367f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403ea2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40475880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403cfea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041e330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041e330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2bac8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403d1590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40420170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40420170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c47a88"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403e9670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404403d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404403d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d39418"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403daa08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40428090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40428090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c717f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403dd210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042bd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cbc7f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403e1750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40439ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40439ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d0b9e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403e68e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40448330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40448330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d316c0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403bdad0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404153a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404153a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c05880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403d5210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40424170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40424170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4f7f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403d88e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40427d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40427d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c986c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403db0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40435ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40435ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb76c0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403eddc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046e880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403e44b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043cb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043cb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce5538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403d6750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40425ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40425ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c93538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403d0a08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40413030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40413030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c00718"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403d2120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40422e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40422e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4a6c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40361c28"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403608a8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40370470"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40374e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4073d7b8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40504d08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40815600"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x404e62e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40512780"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40512780"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058cea8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x404c1ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40503630"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40503630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407cb6a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x404af798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405026a8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405026a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407db798"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40502a00"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40502a00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4051d4f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x404e89b8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40500400"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40500400"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40820628"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404af100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40502010"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40502010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407db100"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404e2a90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40501e60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40501e60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577930"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405011a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405011a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4051dbe8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x404e4920"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40515d98"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40515d98"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4058d500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40815600"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4082edb8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405078a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40583798"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40583798"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40592658"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4051d4f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40596658"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4050b530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40584408"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40584408"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405932f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40820628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40822dc8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4058d500"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4059e3a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4050c0e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40585030"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40585030"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40596f08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40596140"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4051dbe8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405db1a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058cea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4059cd68"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40540db8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40587330"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40587330"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x405da340"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40529c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4051d4f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4054be20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x407c8e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407d9510"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40532740"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407da750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405db1a8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405db1a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405d61a8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407eeb98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407f6420"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407f6420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407f3710"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407da3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407f6b00"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407f6b00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407f3df0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407f4660"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40828cc8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40828cc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40861170"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407f4dc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40820310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40820310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4082dac8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40864640"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x4051f198"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40865950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40815bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40815bb8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4082d410"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4082edb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4082aa60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4082aa60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40841920"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4082d410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40827060"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40827060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4083e358"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4082dac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40827740"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40827740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4083ea38"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40842c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4051d4f8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40842290"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4089e1f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4089e1f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4089b760"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408427e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40865470"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40865470"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40861888"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40827b10"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4089eba8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4089eba8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408981b8"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40864168"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4089e748"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4089e748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4089bcb8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4089c6d0"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4052aac8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4089d428"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408da1f8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408da1f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408d83d0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4089da08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408da750"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408da750"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408d8928"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x4089dee0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40929128"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40929128"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409241f8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408d9788"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405273d0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408dac60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408dcdf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408dcdf0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409072c0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408d9258"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40909390"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40909390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40907818"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409083a0"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40523a78"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409098a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40911010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40911010"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40910748"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40909e80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40929d78"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40929d78"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40924e48"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4092d588"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405311c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40910748"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40929820"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40929820"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409248f0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x4090f090"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40928288"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40928288"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409232c8"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x40928720"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x40518558"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0x40581b68"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0x40590ac0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4057e010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4058fe90"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x4059a4e0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40587330"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405971c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405ddd28"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405ddd28"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406c83d0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40597bf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40633a60"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40633a60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406e4470"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405e4790"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40628060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406c8d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4062f490"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x406c46f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4062bd08"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4062bd08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4069e470"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406b3630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406361b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406361b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4064bac8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40643c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4065bdb0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4063ea28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4065ab28"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4064c628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40657a80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4064c628"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x406546a0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4064c628"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40652340"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4069cc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406361b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x406e4470"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x407b4970"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x406d1158"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40793ea8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406d5968"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406e3b08"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406e3b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406ecbb8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x407b8220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e0f08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4077f248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x406df258"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x406df258"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4076a010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407b3360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x406f0e60"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x406f0e60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40769a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40769a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40dd1b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x406ecbb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dd4c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4076a010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40dd20a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dd0d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4071ee78"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4071ee78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4072dde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40dcc010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407301a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407301a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4073f1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40dcc9f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40730cc0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40730cc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4073fcc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40dc94b8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4072e858"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4072e858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4073dc18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4077ebd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x407b54b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x407c8e58"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x407c3b50"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407c59c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40992810"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407bf470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407c59c8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x407d3740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x407c1b10"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407dde18"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x407f4010"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4080a970"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407f4660"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40809130"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407f4dc8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x408094d0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40587330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4082f150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x4082e920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40830150"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4082f8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x4082f568"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4082de00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40830cc0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x4082e508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408307e8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x4082e010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4083ee08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40827b10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4083d518"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x407c1b10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4083db30"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40842290"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4083c0e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408427e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4083c518"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40842c20"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40836430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x4084dae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40856e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408769c8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40863de0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40863de0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40882d98"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40874a00"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40883848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40883848"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4087f860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408600c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40865950"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40860868"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40864168"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40860ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40864640"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408974b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4089d428"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40897a98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4089da08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x408b4010"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4089dee0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40898970"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4089c6d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408b4808"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408cf918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x408cf918"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408caab0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408b2a70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40863de0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408b01f8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e0850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e0850"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4087f860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408b07f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x407c1b10"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0x408b5a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x408caab0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406d1158"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408d8e38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408dac60"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408f0198"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408d9788"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408d4458"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408d9258"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408d48b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x407c8e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x408d3c08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x408f6c40"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x408f6c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x408f36e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x408ec1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x408f6380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x408f8dd0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408f9010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408f88b0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40907d28"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409098a0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40904338"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40909e80"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40904ee0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409083a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40904798"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x407c8e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408dbda8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4090f528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409118e0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x4090f090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40912930"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40910090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4090a3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4090fb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4090ada0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40822dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40911cf8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4092d588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409114e8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40910c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4090aa88"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4092d250"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x4094b328"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x40928720"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40938300"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40585030"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409356d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40584408"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40932a58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40583798"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40931e28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4057e010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4094e2b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4058d500"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4094da48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405ddd28"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4094a298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x407c8e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40992810"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a7ec88"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409237c0"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40925538"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40925538"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403cdce8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4093e310"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40994010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40994010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409c9190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4093c3a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409946f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409946f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409ca5e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x4093ab20"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40990278"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x40990278"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x409bc258"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409212f0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40994ac8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40994ac8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403d1590"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40921cd8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40993580"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40993580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403ce8e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40937e70"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40992010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40992010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x409bd838"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4094bbc8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x407c1b10"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40934748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40aa3e40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409ca5e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409e3628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40a7ec88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e33db0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x409ba950"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403db0a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x409b93d8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403ddc08"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x409bcb38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4063ea28"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x409c4a28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x409e39a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409ca268"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409e32c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409c9190"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409e2100"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x409e0010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a29760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a29760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e0c218"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x409f4640"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40a4c2e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a4c2e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e0cd60"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x409d6320"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a130c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a130c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a0f4a0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x409f4ac0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40375148"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x409e8860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a09c00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40375148"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a0d338"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403cdce8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a0dd10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403cc750"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a0a740"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403d5210"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a09200"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403d5c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a29ea0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e0c958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e0b2f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a4c790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40e0b720"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40e0d220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e0bd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x40e317b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406361b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x40e2ea60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4064c628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40acc0d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ac68a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40ac1100"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40ac8e00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40ac1bf0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40aca210"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40ac0748"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x40acace0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ac0b80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b03cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40b03cc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e54c30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40abf278"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b326a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40b326a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404af100"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x40abf660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b540d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40b540d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e8c0c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x40abfde0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b505c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40b505c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404af100"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40abe180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4eef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b353f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b35a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40b346b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404e2a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40e50340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b17220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e509d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b17220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b3c348"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b3cab8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x404c1ac0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b3b230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40b3be08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40b39510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40b39948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b329b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b31070"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b54770"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b54e08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40b53a30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404e2a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40e8c790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b17220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e8ce28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b508d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b4f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40ac8e00"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40e7b7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40acace0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e7eab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40aca210"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40b73810"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40e7a010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc45b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x40e7ac28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40b73810"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40bfcbb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40bfcbb8"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40ea1e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e9f640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e99648"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e99648"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408caab0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x40e9cb88"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x408f6c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x40e9c250"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x40e94e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x40e9d850"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x40e95658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40e9b010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc45b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x40e9bc28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bd5e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bc1970"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40bbea20"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40bd6010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40bd6010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403d0010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40be74a0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40bd6a18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40bd6a18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403c7590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40be7e88"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40bd54c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40bd54c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403bdad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40ac8e00"/>
      <arguments>
        <value cst="I:9029">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40ecc8b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40acace0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ed0bf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40aca210"/>
      <arguments>
        <value cst="I:9029">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40b73810"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40ecb060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc45b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x40ecbc78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TestDisseminationC" loc="49:TestDisseminationC.nc">
      <documentation loc="33:TestDisseminationC.nc">
        <short>&#10; TestDisseminationC exercises the dissemination layer, by causing&#10; the node with ID 1 to inject 2 new values into the network every 4&#10; seconds.</short>
        <long>&#10; TestDisseminationC exercises the dissemination layer, by causing&#10; the node with ID 1 to inject 2 new values into the network every 4&#10; seconds. For the 32-bit object with key 0x1234, node 1 toggles LED&#10; 0 when it sends, and every other node toggles LED 0 when it&#10; receives the correct value. For the 16-bit object with key 0x2345,&#10; node 1 toggles LED 1 when it sends, and every other node toggles&#10; LED 1 when it receives the correct value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007/04/18 04:02:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.h">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TOne" ref="0x40358b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406ee9d0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TOne" ref="0x40358b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="39(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="35(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="39(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="35(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestDisseminationAppC.Object32C" loc="49(TestDisseminationAppC.Object32C):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
          <value cst="I:4660">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDisseminationAppC.Object32C.DisseminatorP" loc="45(TestDisseminationAppC.Object32C.DisseminatorP):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aaa9b8"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="36(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TestDisseminationAppC.Object16C" loc="49(TestDisseminationAppC.Object16C):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <value cst="I:9029">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDisseminationAppC.Object16C.DisseminatorP" loc="45(TestDisseminationAppC.Object16C.DisseminatorP):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aaa9b8"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestDisseminationAppC.TimerMilliC" loc="36(TestDisseminationAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f00e8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f0300" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f0518" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f44e0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f4708" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f4930" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403f4b20" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40444a30" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40444c58" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40444e80" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4044d088" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4069a010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4069a010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x4069a230" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4069fa60" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4069fa60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4069fea8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4069fea8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40630ba0" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40630ba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406c3010" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406c3010"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406c3278" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406c3278"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406c36e8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406c36e8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406c3950" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406c3dd8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406c3dd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406c63b8" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406c63b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x406ee9d0" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406ee9d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x406eeb90" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x406e7c80" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406e7c80"/></type-var>
        </typedef>
        <constant name="divider" ref="0x406e7e40" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406e19c0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406e19c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40791010" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40791010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x407911f0" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a2ae48" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40a49d88" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40a7ba48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40a7ba48"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40a7be90" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a7be90"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40a77068" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ac2528" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40afe030" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40b166c8" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b33ec0" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40aaa9b8" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aaa9b8"/></type-var>
        </typedef>
        <constant name="key" ref="0x40aaaba8" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40b66640" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b66640"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40b70a00" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40b70c10" loc="44:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40b70df0" loc="45:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40b6d010" loc="46:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40b93518" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40b93728" loc="44:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40b93908" loc="45:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40b93b10" loc="46:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x40b93d18" loc="47:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40bad658" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x4038a4a0" loc="50:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4038a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4038a678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40387a30" loc="52:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40387a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40387c08"/>
        <function-ref name="stopDone" scoped="" ref="0x40387ce8"/>
        <function-ref name="start" scoped="" ref="0x40387dc8"/>
        <function-ref name="stop" scoped="" ref="0x40387ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x4038e298" loc="54:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x4038e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4038e470"/>
        <function-ref name="stop" scoped="" ref="0x4038e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Update32" ref="0x40394e88" loc="57:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update32" scoped="" ref="0x40394e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4038c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Value32" ref="0x4038de58" loc="56:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value32" scoped="" ref="0x4038de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x403839f0"/>
        <function-ref name="get" scoped="" ref="0x403834d8"/>
        <function-ref name="set" scoped="" ref="0x40383750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Value16" ref="0x4038ca38" loc="59:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value16" scoped="" ref="0x4038ca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x4038b5c0"/>
        <function-ref name="get" scoped="" ref="0x4038b0a8"/>
        <function-ref name="set" scoped="" ref="0x4038b320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Update16" ref="0x4038ba10" loc="60:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update16" scoped="" ref="0x4038ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40392048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4039e3f8" loc="62:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4039e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4039e5d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4039e6b0"/>
        <function-ref name="led1On" scoped="" ref="0x4039e790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4039e870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4039e950"/>
        <function-ref name="get" scoped="" ref="0x4039ea30"/>
        <function-ref name="led1Off" scoped="" ref="0x4039eb10"/>
        <function-ref name="led2Off" scoped="" ref="0x4039ee90"/>
        <function-ref name="set" scoped="" ref="0x4039ebf0"/>
        <function-ref name="led0On" scoped="" ref="0x4039ecd0"/>
        <function-ref name="led2On" scoped="" ref="0x4039edb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x403a2ba8" loc="64:TestDisseminationC.nc">
      <component-ref qname="TestDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x403a2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4039d6a8"/>
        <function-ref name="fired" scoped="" ref="0x40390948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4039d068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40390df8"/>
        <function-ref name="getdt" scoped="" ref="0x4039db58"/>
        <function-ref name="gett0" scoped="" ref="0x4039d900"/>
        <function-ref name="isRunning" scoped="" ref="0x40390ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403901f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4039d388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40390470"/>
        <function-ref name="stop" scoped="" ref="0x403906f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x403b0b08" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403b0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4037feb8" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4037feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403b00c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403bbb20" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403bbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bbcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403afb50" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403afb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403afd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403bb3c0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403bb3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403bb598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403bb678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403bb758"/>
        <function-ref name="actualMicro" scoped="" ref="0x403bb838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403bb918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403b9218" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403b9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403b4d98" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403b4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403b9620" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403b9620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b97f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403b3d90" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403b3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403b39c0" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403b39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b3b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403c5a90" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403c5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c5c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403c50a0" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c5278"/>
        <function-ref name="isInput" scoped="" ref="0x403c5358"/>
        <function-ref name="toggle" scoped="" ref="0x403c5438"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5518"/>
        <function-ref name="get" scoped="" ref="0x403c55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c56d8"/>
        <function-ref name="set" scoped="" ref="0x403c57b8"/>
        <function-ref name="clr" scoped="" ref="0x403c5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403be9c0" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403be9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403beb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403ee750" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403ee750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eeb28"/>
        <function-ref name="isInput" scoped="" ref="0x403eec08"/>
        <function-ref name="toggle" scoped="" ref="0x403eece8"/>
        <function-ref name="isOutput" scoped="" ref="0x403eedc8"/>
        <function-ref name="get" scoped="" ref="0x403eeea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed010"/>
        <function-ref name="set" scoped="" ref="0x403ed0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403dfd08" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403dfd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfee0"/>
        <function-ref name="isInput" scoped="" ref="0x403de010"/>
        <function-ref name="toggle" scoped="" ref="0x403de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403de1d0"/>
        <function-ref name="get" scoped="" ref="0x403de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de390"/>
        <function-ref name="set" scoped="" ref="0x403de470"/>
        <function-ref name="clr" scoped="" ref="0x403de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403e22f0" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2768"/>
        <function-ref name="get" scoped="" ref="0x403e2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2928"/>
        <function-ref name="set" scoped="" ref="0x403e2a08"/>
        <function-ref name="clr" scoped="" ref="0x403e2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403e74b0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403e74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7688"/>
        <function-ref name="isInput" scoped="" ref="0x403e7768"/>
        <function-ref name="toggle" scoped="" ref="0x403e7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7928"/>
        <function-ref name="get" scoped="" ref="0x403e7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e7ae8"/>
        <function-ref name="set" scoped="" ref="0x403e7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403ce8e0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403ce8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ceab8"/>
        <function-ref name="isInput" scoped="" ref="0x403ceb98"/>
        <function-ref name="toggle" scoped="" ref="0x403cec78"/>
        <function-ref name="isOutput" scoped="" ref="0x403ced58"/>
        <function-ref name="get" scoped="" ref="0x403cee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cef18"/>
        <function-ref name="set" scoped="" ref="0x403cd010"/>
        <function-ref name="clr" scoped="" ref="0x403cd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403e80a0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403e80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8278"/>
        <function-ref name="isInput" scoped="" ref="0x403e8358"/>
        <function-ref name="toggle" scoped="" ref="0x403e8438"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8518"/>
        <function-ref name="get" scoped="" ref="0x403e85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e86d8"/>
        <function-ref name="set" scoped="" ref="0x403e87b8"/>
        <function-ref name="clr" scoped="" ref="0x403e8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403cdce8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403cdce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cdec0"/>
        <function-ref name="isInput" scoped="" ref="0x403cc010"/>
        <function-ref name="toggle" scoped="" ref="0x403cc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc1d0"/>
        <function-ref name="get" scoped="" ref="0x403cc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc390"/>
        <function-ref name="set" scoped="" ref="0x403cc470"/>
        <function-ref name="clr" scoped="" ref="0x403cc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403d94b0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403d94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9688"/>
        <function-ref name="isInput" scoped="" ref="0x403d9768"/>
        <function-ref name="toggle" scoped="" ref="0x403d9848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9928"/>
        <function-ref name="get" scoped="" ref="0x403d9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9ae8"/>
        <function-ref name="set" scoped="" ref="0x403d9bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403ddc08" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x403ddec0"/>
        <function-ref name="toggle" scoped="" ref="0x403dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc0f0"/>
        <function-ref name="get" scoped="" ref="0x403dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc2b0"/>
        <function-ref name="set" scoped="" ref="0x403dc390"/>
        <function-ref name="clr" scoped="" ref="0x403dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403e0210" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403e0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e03e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e04c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0688"/>
        <function-ref name="get" scoped="" ref="0x403e0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0848"/>
        <function-ref name="set" scoped="" ref="0x403e0928"/>
        <function-ref name="clr" scoped="" ref="0x403e0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403c7590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403c7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c7768"/>
        <function-ref name="isInput" scoped="" ref="0x403c7848"/>
        <function-ref name="toggle" scoped="" ref="0x403c7928"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7a08"/>
        <function-ref name="get" scoped="" ref="0x403c7ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7bc8"/>
        <function-ref name="set" scoped="" ref="0x403c7ca8"/>
        <function-ref name="clr" scoped="" ref="0x403c7d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403d5c08" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403d5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d3010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d30f0"/>
        <function-ref name="get" scoped="" ref="0x403d31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d32b0"/>
        <function-ref name="set" scoped="" ref="0x403d3390"/>
        <function-ref name="clr" scoped="" ref="0x403d3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403d72f0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d74c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d75a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d7688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7768"/>
        <function-ref name="get" scoped="" ref="0x403d7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7928"/>
        <function-ref name="set" scoped="" ref="0x403d7a08"/>
        <function-ref name="clr" scoped="" ref="0x403d7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403dba98" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403dba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dbc70"/>
        <function-ref name="isInput" scoped="" ref="0x403dbd50"/>
        <function-ref name="toggle" scoped="" ref="0x403dbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403dbf10"/>
        <function-ref name="get" scoped="" ref="0x403e4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e40f0"/>
        <function-ref name="set" scoped="" ref="0x403e41d0"/>
        <function-ref name="clr" scoped="" ref="0x403e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403e52f0" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e54c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e55a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e5688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5768"/>
        <function-ref name="get" scoped="" ref="0x403e5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5928"/>
        <function-ref name="set" scoped="" ref="0x403e5a08"/>
        <function-ref name="clr" scoped="" ref="0x403e5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403eb830" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403eb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eba08"/>
        <function-ref name="isInput" scoped="" ref="0x403ebae8"/>
        <function-ref name="toggle" scoped="" ref="0x403ebbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ebca8"/>
        <function-ref name="get" scoped="" ref="0x403ebd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ebe68"/>
        <function-ref name="set" scoped="" ref="0x403ea010"/>
        <function-ref name="clr" scoped="" ref="0x403ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403e4ea8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403e4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3360"/>
        <function-ref name="get" scoped="" ref="0x403e3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3520"/>
        <function-ref name="set" scoped="" ref="0x403e3600"/>
        <function-ref name="clr" scoped="" ref="0x403e36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403cf4b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403cf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cf688"/>
        <function-ref name="isInput" scoped="" ref="0x403cf768"/>
        <function-ref name="toggle" scoped="" ref="0x403cf848"/>
        <function-ref name="isOutput" scoped="" ref="0x403cf928"/>
        <function-ref name="get" scoped="" ref="0x403cfa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cfae8"/>
        <function-ref name="set" scoped="" ref="0x403cfbc8"/>
        <function-ref name="clr" scoped="" ref="0x403cfca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403d2b18" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403d2b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403d2dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403d2eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1010"/>
        <function-ref name="get" scoped="" ref="0x403d10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d11d0"/>
        <function-ref name="set" scoped="" ref="0x403d12b0"/>
        <function-ref name="clr" scoped="" ref="0x403d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403ed3d0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403ed3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed5a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ed688"/>
        <function-ref name="toggle" scoped="" ref="0x403ed768"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed848"/>
        <function-ref name="get" scoped="" ref="0x403ed928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eda08"/>
        <function-ref name="set" scoped="" ref="0x403edae8"/>
        <function-ref name="clr" scoped="" ref="0x403edbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403da010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403da2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403da3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403da488"/>
        <function-ref name="get" scoped="" ref="0x403da568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da648"/>
        <function-ref name="set" scoped="" ref="0x403da728"/>
        <function-ref name="clr" scoped="" ref="0x403da808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403de750" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de928"/>
        <function-ref name="isInput" scoped="" ref="0x403dea08"/>
        <function-ref name="toggle" scoped="" ref="0x403deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403debc8"/>
        <function-ref name="get" scoped="" ref="0x403deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ded88"/>
        <function-ref name="set" scoped="" ref="0x403dee68"/>
        <function-ref name="clr" scoped="" ref="0x403dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403e2ce8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403e2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e1010"/>
        <function-ref name="toggle" scoped="" ref="0x403e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e11d0"/>
        <function-ref name="get" scoped="" ref="0x403e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1390"/>
        <function-ref name="set" scoped="" ref="0x403e1470"/>
        <function-ref name="clr" scoped="" ref="0x403e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403e7ea8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403e7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e60c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e61a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e6280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6360"/>
        <function-ref name="get" scoped="" ref="0x403e6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6520"/>
        <function-ref name="set" scoped="" ref="0x403e6600"/>
        <function-ref name="clr" scoped="" ref="0x403e66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403cd2f0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403cd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403cd5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403cd688"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd768"/>
        <function-ref name="get" scoped="" ref="0x403cd848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd928"/>
        <function-ref name="set" scoped="" ref="0x403cda08"/>
        <function-ref name="clr" scoped="" ref="0x403cdae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403cc750" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403cc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc928"/>
        <function-ref name="isInput" scoped="" ref="0x403cca08"/>
        <function-ref name="toggle" scoped="" ref="0x403ccae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ccbc8"/>
        <function-ref name="get" scoped="" ref="0x403ccca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ccd88"/>
        <function-ref name="set" scoped="" ref="0x403cce68"/>
        <function-ref name="clr" scoped="" ref="0x403d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403d9ea8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403d9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d80c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d81a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d8280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8360"/>
        <function-ref name="get" scoped="" ref="0x403d8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8520"/>
        <function-ref name="set" scoped="" ref="0x403d8600"/>
        <function-ref name="clr" scoped="" ref="0x403d86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403dc670" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc848"/>
        <function-ref name="isInput" scoped="" ref="0x403dc928"/>
        <function-ref name="toggle" scoped="" ref="0x403dca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcae8"/>
        <function-ref name="get" scoped="" ref="0x403dcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dcca8"/>
        <function-ref name="set" scoped="" ref="0x403dcd88"/>
        <function-ref name="clr" scoped="" ref="0x403dce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403e0c08" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403e0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0de0"/>
        <function-ref name="isInput" scoped="" ref="0x403e0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403e9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e90f0"/>
        <function-ref name="get" scoped="" ref="0x403e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e92b0"/>
        <function-ref name="set" scoped="" ref="0x403e9390"/>
        <function-ref name="clr" scoped="" ref="0x403e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403d0010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403d0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d01e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d02c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0488"/>
        <function-ref name="get" scoped="" ref="0x403d0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0648"/>
        <function-ref name="set" scoped="" ref="0x403d0728"/>
        <function-ref name="clr" scoped="" ref="0x403d0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403d3670" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d38c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d39a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d3a88"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3b68"/>
        <function-ref name="get" scoped="" ref="0x403d3c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3d28"/>
        <function-ref name="set" scoped="" ref="0x403d3e08"/>
        <function-ref name="clr" scoped="" ref="0x403d3ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403d7ce8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403d7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d6010"/>
        <function-ref name="toggle" scoped="" ref="0x403d60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d61d0"/>
        <function-ref name="get" scoped="" ref="0x403d62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6390"/>
        <function-ref name="set" scoped="" ref="0x403d6470"/>
        <function-ref name="clr" scoped="" ref="0x403d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403e5ce8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403e5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ee010"/>
        <function-ref name="toggle" scoped="" ref="0x403ee0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee1d0"/>
        <function-ref name="get" scoped="" ref="0x403ee2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee390"/>
        <function-ref name="set" scoped="" ref="0x403ee470"/>
        <function-ref name="clr" scoped="" ref="0x403ee550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403df210" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403df210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df4e8"/>
        <function-ref name="isInput" scoped="" ref="0x403df5c8"/>
        <function-ref name="toggle" scoped="" ref="0x403df6a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403df788"/>
        <function-ref name="get" scoped="" ref="0x403df868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df948"/>
        <function-ref name="set" scoped="" ref="0x403dfa28"/>
        <function-ref name="clr" scoped="" ref="0x403dfb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403e38e0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403e38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3d58"/>
        <function-ref name="get" scoped="" ref="0x403e3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3f18"/>
        <function-ref name="set" scoped="" ref="0x403e2010"/>
        <function-ref name="clr" scoped="" ref="0x403e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403e8a98" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403e8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8c70"/>
        <function-ref name="isInput" scoped="" ref="0x403e8d50"/>
        <function-ref name="toggle" scoped="" ref="0x403e8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8f10"/>
        <function-ref name="get" scoped="" ref="0x403e7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e70f0"/>
        <function-ref name="set" scoped="" ref="0x403e71d0"/>
        <function-ref name="clr" scoped="" ref="0x403e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403ea2f0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ea5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea768"/>
        <function-ref name="get" scoped="" ref="0x403ea848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea928"/>
        <function-ref name="set" scoped="" ref="0x403eaa08"/>
        <function-ref name="clr" scoped="" ref="0x403eaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403cfea8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403cfea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ce0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ce1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ce280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ce360"/>
        <function-ref name="get" scoped="" ref="0x403ce440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ce520"/>
        <function-ref name="set" scoped="" ref="0x403ce600"/>
        <function-ref name="clr" scoped="" ref="0x403ce6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403d1590" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403d1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1768"/>
        <function-ref name="isInput" scoped="" ref="0x403d1848"/>
        <function-ref name="toggle" scoped="" ref="0x403d1928"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1a08"/>
        <function-ref name="get" scoped="" ref="0x403d1ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1bc8"/>
        <function-ref name="set" scoped="" ref="0x403d1ca8"/>
        <function-ref name="clr" scoped="" ref="0x403d1d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403e9670" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9848"/>
        <function-ref name="isInput" scoped="" ref="0x403e9928"/>
        <function-ref name="toggle" scoped="" ref="0x403e9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9ae8"/>
        <function-ref name="get" scoped="" ref="0x403e9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9ca8"/>
        <function-ref name="set" scoped="" ref="0x403e9d88"/>
        <function-ref name="clr" scoped="" ref="0x403e9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403daa08" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403daa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dabe0"/>
        <function-ref name="isInput" scoped="" ref="0x403dacc0"/>
        <function-ref name="toggle" scoped="" ref="0x403dada0"/>
        <function-ref name="isOutput" scoped="" ref="0x403dae80"/>
        <function-ref name="get" scoped="" ref="0x403d9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d90f0"/>
        <function-ref name="set" scoped="" ref="0x403d91d0"/>
        <function-ref name="clr" scoped="" ref="0x403d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403dd210" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403dd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403dd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd688"/>
        <function-ref name="get" scoped="" ref="0x403dd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd848"/>
        <function-ref name="set" scoped="" ref="0x403dd928"/>
        <function-ref name="clr" scoped="" ref="0x403dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403e1750" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403e1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1928"/>
        <function-ref name="isInput" scoped="" ref="0x403e1a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1bc8"/>
        <function-ref name="get" scoped="" ref="0x403e1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1d88"/>
        <function-ref name="set" scoped="" ref="0x403e1e68"/>
        <function-ref name="clr" scoped="" ref="0x403e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403e68e0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403e68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e6b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6d58"/>
        <function-ref name="get" scoped="" ref="0x403e6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6f18"/>
        <function-ref name="set" scoped="" ref="0x403e5010"/>
        <function-ref name="clr" scoped="" ref="0x403e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403bdad0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bdca8"/>
        <function-ref name="isInput" scoped="" ref="0x403bdd88"/>
        <function-ref name="toggle" scoped="" ref="0x403bde68"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7010"/>
        <function-ref name="get" scoped="" ref="0x403c70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c71d0"/>
        <function-ref name="set" scoped="" ref="0x403c72b0"/>
        <function-ref name="clr" scoped="" ref="0x403c7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403d5210" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d53e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d54c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5688"/>
        <function-ref name="get" scoped="" ref="0x403d5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5848"/>
        <function-ref name="set" scoped="" ref="0x403d5928"/>
        <function-ref name="clr" scoped="" ref="0x403d5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403d88e0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403d88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d8b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8d58"/>
        <function-ref name="get" scoped="" ref="0x403d8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8f18"/>
        <function-ref name="set" scoped="" ref="0x403d7010"/>
        <function-ref name="clr" scoped="" ref="0x403d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403db0a0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db278"/>
        <function-ref name="isInput" scoped="" ref="0x403db358"/>
        <function-ref name="toggle" scoped="" ref="0x403db438"/>
        <function-ref name="isOutput" scoped="" ref="0x403db518"/>
        <function-ref name="get" scoped="" ref="0x403db5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db6d8"/>
        <function-ref name="set" scoped="" ref="0x403db7b8"/>
        <function-ref name="clr" scoped="" ref="0x403db898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403eddc8" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403eddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb010"/>
        <function-ref name="isInput" scoped="" ref="0x403eb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403eb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb2b0"/>
        <function-ref name="get" scoped="" ref="0x403eb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb470"/>
        <function-ref name="set" scoped="" ref="0x403eb550"/>
        <function-ref name="clr" scoped="" ref="0x403eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403e44b0" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403e44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4688"/>
        <function-ref name="isInput" scoped="" ref="0x403e4768"/>
        <function-ref name="toggle" scoped="" ref="0x403e4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4928"/>
        <function-ref name="get" scoped="" ref="0x403e4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4ae8"/>
        <function-ref name="set" scoped="" ref="0x403e4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403d6750" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403d6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6928"/>
        <function-ref name="isInput" scoped="" ref="0x403d6a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6bc8"/>
        <function-ref name="get" scoped="" ref="0x403d6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6d88"/>
        <function-ref name="set" scoped="" ref="0x403d6e68"/>
        <function-ref name="clr" scoped="" ref="0x403df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403d0a08" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403d0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0be0"/>
        <function-ref name="isInput" scoped="" ref="0x403d0cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403d0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0e80"/>
        <function-ref name="get" scoped="" ref="0x403cf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cf0f0"/>
        <function-ref name="set" scoped="" ref="0x403cf1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403d2120" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403d2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d22f8"/>
        <function-ref name="isInput" scoped="" ref="0x403d23d8"/>
        <function-ref name="toggle" scoped="" ref="0x403d24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2598"/>
        <function-ref name="get" scoped="" ref="0x403d2678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2758"/>
        <function-ref name="set" scoped="" ref="0x403d2838"/>
        <function-ref name="clr" scoped="" ref="0x403d2918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404146b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404146b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414888"/>
        <function-ref name="isInput" scoped="" ref="0x40414968"/>
        <function-ref name="toggle" scoped="" ref="0x40414a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40414b28"/>
        <function-ref name="get" scoped="" ref="0x40414c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414ce8"/>
        <function-ref name="set" scoped="" ref="0x40414dc8"/>
        <function-ref name="clr" scoped="" ref="0x40414ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041e330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e508"/>
        <function-ref name="isInput" scoped="" ref="0x4041e5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4041e6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e7a8"/>
        <function-ref name="get" scoped="" ref="0x4041e888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e968"/>
        <function-ref name="set" scoped="" ref="0x4041ea48"/>
        <function-ref name="clr" scoped="" ref="0x4041eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404153a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404153a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415578"/>
        <function-ref name="isInput" scoped="" ref="0x40415658"/>
        <function-ref name="toggle" scoped="" ref="0x40415738"/>
        <function-ref name="isOutput" scoped="" ref="0x40415818"/>
        <function-ref name="get" scoped="" ref="0x404158f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404159d8"/>
        <function-ref name="set" scoped="" ref="0x40415ab8"/>
        <function-ref name="clr" scoped="" ref="0x40415b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40413030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40413030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413208"/>
        <function-ref name="isInput" scoped="" ref="0x404132e8"/>
        <function-ref name="toggle" scoped="" ref="0x404133c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404134a8"/>
        <function-ref name="get" scoped="" ref="0x40413588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413668"/>
        <function-ref name="set" scoped="" ref="0x40413748"/>
        <function-ref name="clr" scoped="" ref="0x40413828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041ec88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ee60"/>
        <function-ref name="isInput" scoped="" ref="0x4041d010"/>
        <function-ref name="toggle" scoped="" ref="0x4041d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d1d0"/>
        <function-ref name="get" scoped="" ref="0x4041d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d390"/>
        <function-ref name="set" scoped="" ref="0x4041d470"/>
        <function-ref name="clr" scoped="" ref="0x4041d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40415cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40415cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415ed0"/>
        <function-ref name="isInput" scoped="" ref="0x40414010"/>
        <function-ref name="toggle" scoped="" ref="0x404140f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404141d0"/>
        <function-ref name="get" scoped="" ref="0x404142b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414390"/>
        <function-ref name="set" scoped="" ref="0x40414470"/>
        <function-ref name="clr" scoped="" ref="0x40414550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40413988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40413988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413b60"/>
        <function-ref name="isInput" scoped="" ref="0x40413c40"/>
        <function-ref name="toggle" scoped="" ref="0x40413d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40413e00"/>
        <function-ref name="get" scoped="" ref="0x40413ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e010"/>
        <function-ref name="set" scoped="" ref="0x4041e0f0"/>
        <function-ref name="clr" scoped="" ref="0x4041e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041d6b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d888"/>
        <function-ref name="isInput" scoped="" ref="0x4041d968"/>
        <function-ref name="toggle" scoped="" ref="0x4041da48"/>
        <function-ref name="isOutput" scoped="" ref="0x4041db28"/>
        <function-ref name="get" scoped="" ref="0x4041dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041dce8"/>
        <function-ref name="set" scoped="" ref="0x4041ddc8"/>
        <function-ref name="clr" scoped="" ref="0x4041dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c05880" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c05880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c05a58"/>
        <function-ref name="isInput" scoped="" ref="0x40c05b38"/>
        <function-ref name="toggle" scoped="" ref="0x40c05c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40c05cf8"/>
        <function-ref name="get" scoped="" ref="0x40c05dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c05eb8"/>
        <function-ref name="set" scoped="" ref="0x40c04010"/>
        <function-ref name="clr" scoped="" ref="0x40c040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c032d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c032d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c034a8"/>
        <function-ref name="isInput" scoped="" ref="0x40c03588"/>
        <function-ref name="toggle" scoped="" ref="0x40c03668"/>
        <function-ref name="isOutput" scoped="" ref="0x40c03748"/>
        <function-ref name="get" scoped="" ref="0x40c03828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c03908"/>
        <function-ref name="set" scoped="" ref="0x40c039e8"/>
        <function-ref name="clr" scoped="" ref="0x40c03ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c02c90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c02c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c02e68"/>
        <function-ref name="isInput" scoped="" ref="0x40c01010"/>
        <function-ref name="toggle" scoped="" ref="0x40c010f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c011d0"/>
        <function-ref name="get" scoped="" ref="0x40c012b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c01390"/>
        <function-ref name="set" scoped="" ref="0x40c01470"/>
        <function-ref name="clr" scoped="" ref="0x40c01550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c00718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c00718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c008f0"/>
        <function-ref name="isInput" scoped="" ref="0x40c009d0"/>
        <function-ref name="toggle" scoped="" ref="0x40c00ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c00b90"/>
        <function-ref name="get" scoped="" ref="0x40c00c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c00d50"/>
        <function-ref name="set" scoped="" ref="0x40c00e30"/>
        <function-ref name="clr" scoped="" ref="0x40c00f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2c0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2c0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2c2d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c2c3b0"/>
        <function-ref name="toggle" scoped="" ref="0x40c2c490"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2c570"/>
        <function-ref name="get" scoped="" ref="0x40c2c650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2c730"/>
        <function-ref name="set" scoped="" ref="0x40c2c810"/>
        <function-ref name="clr" scoped="" ref="0x40c2c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2bac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2bca0"/>
        <function-ref name="isInput" scoped="" ref="0x40c2bd80"/>
        <function-ref name="toggle" scoped="" ref="0x40c2be60"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2a010"/>
        <function-ref name="get" scoped="" ref="0x40c2a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2a1d0"/>
        <function-ref name="set" scoped="" ref="0x40c2a2b0"/>
        <function-ref name="clr" scoped="" ref="0x40c2a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c29570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c29570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c29748"/>
        <function-ref name="isInput" scoped="" ref="0x40c29828"/>
        <function-ref name="toggle" scoped="" ref="0x40c29908"/>
        <function-ref name="isOutput" scoped="" ref="0x40c299e8"/>
        <function-ref name="get" scoped="" ref="0x40c29ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c29ba8"/>
        <function-ref name="set" scoped="" ref="0x40c29c88"/>
        <function-ref name="clr" scoped="" ref="0x40c29d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c27010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c27010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c271e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c272c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c273a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c27488"/>
        <function-ref name="get" scoped="" ref="0x40c27568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c27648"/>
        <function-ref name="set" scoped="" ref="0x40c27728"/>
        <function-ref name="clr" scoped="" ref="0x40c27808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40424170" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40424170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424348"/>
        <function-ref name="isInput" scoped="" ref="0x40424428"/>
        <function-ref name="toggle" scoped="" ref="0x40424508"/>
        <function-ref name="isOutput" scoped="" ref="0x404245e8"/>
        <function-ref name="get" scoped="" ref="0x404246c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404247a8"/>
        <function-ref name="set" scoped="" ref="0x40424888"/>
        <function-ref name="clr" scoped="" ref="0x40424968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40422e48" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40422e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421050"/>
        <function-ref name="isInput" scoped="" ref="0x40421130"/>
        <function-ref name="toggle" scoped="" ref="0x40421210"/>
        <function-ref name="isOutput" scoped="" ref="0x404212f0"/>
        <function-ref name="get" scoped="" ref="0x404213d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404214b0"/>
        <function-ref name="set" scoped="" ref="0x40421590"/>
        <function-ref name="clr" scoped="" ref="0x40421670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4041adc8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4041adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419010"/>
        <function-ref name="isInput" scoped="" ref="0x404190f0"/>
        <function-ref name="toggle" scoped="" ref="0x404191d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404192b0"/>
        <function-ref name="get" scoped="" ref="0x40419390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419470"/>
        <function-ref name="set" scoped="" ref="0x40419550"/>
        <function-ref name="clr" scoped="" ref="0x40419630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40424ac8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40424ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40424d80"/>
        <function-ref name="toggle" scoped="" ref="0x40424e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40422010"/>
        <function-ref name="get" scoped="" ref="0x404220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404221d0"/>
        <function-ref name="set" scoped="" ref="0x404222b0"/>
        <function-ref name="clr" scoped="" ref="0x40422390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404217d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404217d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404219a8"/>
        <function-ref name="isInput" scoped="" ref="0x40421a88"/>
        <function-ref name="toggle" scoped="" ref="0x40421b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40421c48"/>
        <function-ref name="get" scoped="" ref="0x40421d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421e08"/>
        <function-ref name="set" scoped="" ref="0x40421ee8"/>
        <function-ref name="clr" scoped="" ref="0x40420010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40419790" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40419790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419968"/>
        <function-ref name="isInput" scoped="" ref="0x40419a48"/>
        <function-ref name="toggle" scoped="" ref="0x40419b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40419c08"/>
        <function-ref name="get" scoped="" ref="0x40419ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419dc8"/>
        <function-ref name="set" scoped="" ref="0x40419ea8"/>
        <function-ref name="clr" scoped="" ref="0x40424010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404224f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404224f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404226c8"/>
        <function-ref name="isInput" scoped="" ref="0x404227a8"/>
        <function-ref name="toggle" scoped="" ref="0x40422888"/>
        <function-ref name="isOutput" scoped="" ref="0x40422968"/>
        <function-ref name="get" scoped="" ref="0x40422a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422b28"/>
        <function-ref name="set" scoped="" ref="0x40422c08"/>
        <function-ref name="clr" scoped="" ref="0x40422ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40420170" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40420170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420348"/>
        <function-ref name="isInput" scoped="" ref="0x40420428"/>
        <function-ref name="toggle" scoped="" ref="0x40420508"/>
        <function-ref name="isOutput" scoped="" ref="0x404205e8"/>
        <function-ref name="get" scoped="" ref="0x404206c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404207a8"/>
        <function-ref name="set" scoped="" ref="0x40420888"/>
        <function-ref name="clr" scoped="" ref="0x40420968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c52418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c52418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c525f0"/>
        <function-ref name="isInput" scoped="" ref="0x40c526d0"/>
        <function-ref name="toggle" scoped="" ref="0x40c527b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c52890"/>
        <function-ref name="get" scoped="" ref="0x40c52970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c52a50"/>
        <function-ref name="set" scoped="" ref="0x40c52b30"/>
        <function-ref name="clr" scoped="" ref="0x40c52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c51de0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c51de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c50010"/>
        <function-ref name="isInput" scoped="" ref="0x40c500f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c501d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c502b0"/>
        <function-ref name="get" scoped="" ref="0x40c50390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c50470"/>
        <function-ref name="set" scoped="" ref="0x40c50550"/>
        <function-ref name="clr" scoped="" ref="0x40c50630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4f7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c4fab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4fc70"/>
        <function-ref name="get" scoped="" ref="0x40c4fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4fe30"/>
        <function-ref name="set" scoped="" ref="0x40c4ff10"/>
        <function-ref name="clr" scoped="" ref="0x40c4e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4d228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4d400"/>
        <function-ref name="isInput" scoped="" ref="0x40c4d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4d6a0"/>
        <function-ref name="get" scoped="" ref="0x40c4d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4d860"/>
        <function-ref name="set" scoped="" ref="0x40c4d940"/>
        <function-ref name="clr" scoped="" ref="0x40c4da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4cc08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4cde0"/>
        <function-ref name="isInput" scoped="" ref="0x40c4cec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4b010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4b0f0"/>
        <function-ref name="get" scoped="" ref="0x40c4b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4b2b0"/>
        <function-ref name="set" scoped="" ref="0x40c4b390"/>
        <function-ref name="clr" scoped="" ref="0x40c4b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4a6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4a898"/>
        <function-ref name="isInput" scoped="" ref="0x40c4a978"/>
        <function-ref name="toggle" scoped="" ref="0x40c4aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4ab38"/>
        <function-ref name="get" scoped="" ref="0x40c4ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4acf8"/>
        <function-ref name="set" scoped="" ref="0x40c4add8"/>
        <function-ref name="clr" scoped="" ref="0x40c4aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c480b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c480b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c48288"/>
        <function-ref name="isInput" scoped="" ref="0x40c48368"/>
        <function-ref name="toggle" scoped="" ref="0x40c48448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c48528"/>
        <function-ref name="get" scoped="" ref="0x40c48608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c486e8"/>
        <function-ref name="set" scoped="" ref="0x40c487c8"/>
        <function-ref name="clr" scoped="" ref="0x40c488a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c47a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c47a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c47c60"/>
        <function-ref name="isInput" scoped="" ref="0x40c47d40"/>
        <function-ref name="toggle" scoped="" ref="0x40c47e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c47f00"/>
        <function-ref name="get" scoped="" ref="0x40c46010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c460f0"/>
        <function-ref name="set" scoped="" ref="0x40c461d0"/>
        <function-ref name="clr" scoped="" ref="0x40c462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404289e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404289e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40428ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40428d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40428e60"/>
        <function-ref name="get" scoped="" ref="0x40427010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404270f0"/>
        <function-ref name="set" scoped="" ref="0x404271d0"/>
        <function-ref name="clr" scoped="" ref="0x404272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40426790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40426790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426968"/>
        <function-ref name="isInput" scoped="" ref="0x40426a48"/>
        <function-ref name="toggle" scoped="" ref="0x40426b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40426c08"/>
        <function-ref name="get" scoped="" ref="0x40426ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426dc8"/>
        <function-ref name="set" scoped="" ref="0x40426ea8"/>
        <function-ref name="clr" scoped="" ref="0x40425010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404296f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404296f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404298d0"/>
        <function-ref name="isInput" scoped="" ref="0x404299b0"/>
        <function-ref name="toggle" scoped="" ref="0x40429a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40429b70"/>
        <function-ref name="get" scoped="" ref="0x40429c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429d30"/>
        <function-ref name="set" scoped="" ref="0x40429e10"/>
        <function-ref name="clr" scoped="" ref="0x40429ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40427410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40427410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404275e8"/>
        <function-ref name="isInput" scoped="" ref="0x404276c8"/>
        <function-ref name="toggle" scoped="" ref="0x404277a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40427888"/>
        <function-ref name="get" scoped="" ref="0x40427968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427a48"/>
        <function-ref name="set" scoped="" ref="0x40427b28"/>
        <function-ref name="clr" scoped="" ref="0x40427c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40425170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40425170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425348"/>
        <function-ref name="isInput" scoped="" ref="0x40425428"/>
        <function-ref name="toggle" scoped="" ref="0x40425508"/>
        <function-ref name="isOutput" scoped="" ref="0x404255e8"/>
        <function-ref name="get" scoped="" ref="0x404256c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404257a8"/>
        <function-ref name="set" scoped="" ref="0x40425888"/>
        <function-ref name="clr" scoped="" ref="0x40425968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40428090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40428090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428268"/>
        <function-ref name="isInput" scoped="" ref="0x40428348"/>
        <function-ref name="toggle" scoped="" ref="0x40428428"/>
        <function-ref name="isOutput" scoped="" ref="0x40428508"/>
        <function-ref name="get" scoped="" ref="0x404285e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404286c8"/>
        <function-ref name="set" scoped="" ref="0x404287a8"/>
        <function-ref name="clr" scoped="" ref="0x40428888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40427d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40427d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426010"/>
        <function-ref name="isInput" scoped="" ref="0x404260f0"/>
        <function-ref name="toggle" scoped="" ref="0x404261d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404262b0"/>
        <function-ref name="get" scoped="" ref="0x40426390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426470"/>
        <function-ref name="set" scoped="" ref="0x40426550"/>
        <function-ref name="clr" scoped="" ref="0x40426630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40425ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40425ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40425d80"/>
        <function-ref name="toggle" scoped="" ref="0x40425e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40430010"/>
        <function-ref name="get" scoped="" ref="0x404300f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404301d0"/>
        <function-ref name="set" scoped="" ref="0x404302b0"/>
        <function-ref name="clr" scoped="" ref="0x40430390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c76de8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c76de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c72010"/>
        <function-ref name="isInput" scoped="" ref="0x40c720f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c722b0"/>
        <function-ref name="get" scoped="" ref="0x40c72390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c72470"/>
        <function-ref name="set" scoped="" ref="0x40c72550"/>
        <function-ref name="clr" scoped="" ref="0x40c72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c717f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c717f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c719d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c71ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c71b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c71c70"/>
        <function-ref name="get" scoped="" ref="0x40c71d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c71e30"/>
        <function-ref name="set" scoped="" ref="0x40c71f10"/>
        <function-ref name="clr" scoped="" ref="0x40c70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6f228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6f400"/>
        <function-ref name="isInput" scoped="" ref="0x40c6f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c6f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6f6a0"/>
        <function-ref name="get" scoped="" ref="0x40c6f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6f860"/>
        <function-ref name="set" scoped="" ref="0x40c6f940"/>
        <function-ref name="clr" scoped="" ref="0x40c6fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9ac08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9ade0"/>
        <function-ref name="isInput" scoped="" ref="0x40c9aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c99010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c990f0"/>
        <function-ref name="get" scoped="" ref="0x40c991d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c992b0"/>
        <function-ref name="set" scoped="" ref="0x40c99390"/>
        <function-ref name="clr" scoped="" ref="0x40c99470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c986c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c986c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c98898"/>
        <function-ref name="isInput" scoped="" ref="0x40c98978"/>
        <function-ref name="toggle" scoped="" ref="0x40c98a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c98b38"/>
        <function-ref name="get" scoped="" ref="0x40c98c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c98cf8"/>
        <function-ref name="set" scoped="" ref="0x40c98dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c98eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c960b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c960b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c96288"/>
        <function-ref name="isInput" scoped="" ref="0x40c96368"/>
        <function-ref name="toggle" scoped="" ref="0x40c96448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c96528"/>
        <function-ref name="get" scoped="" ref="0x40c96608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c966e8"/>
        <function-ref name="set" scoped="" ref="0x40c967c8"/>
        <function-ref name="clr" scoped="" ref="0x40c968a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c95a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c95a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c95c60"/>
        <function-ref name="isInput" scoped="" ref="0x40c95d40"/>
        <function-ref name="toggle" scoped="" ref="0x40c95e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c95f00"/>
        <function-ref name="get" scoped="" ref="0x40c94010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c940f0"/>
        <function-ref name="set" scoped="" ref="0x40c941d0"/>
        <function-ref name="clr" scoped="" ref="0x40c942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c93538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c93538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c93710"/>
        <function-ref name="isInput" scoped="" ref="0x40c937f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c938d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c939b0"/>
        <function-ref name="get" scoped="" ref="0x40c93a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c93b70"/>
        <function-ref name="set" scoped="" ref="0x40c93c50"/>
        <function-ref name="clr" scoped="" ref="0x40c93d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042b410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b888"/>
        <function-ref name="get" scoped="" ref="0x4042b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ba48"/>
        <function-ref name="set" scoped="" ref="0x4042bb28"/>
        <function-ref name="clr" scoped="" ref="0x4042bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40435170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40435170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435348"/>
        <function-ref name="isInput" scoped="" ref="0x40435428"/>
        <function-ref name="toggle" scoped="" ref="0x40435508"/>
        <function-ref name="isOutput" scoped="" ref="0x404355e8"/>
        <function-ref name="get" scoped="" ref="0x404356c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404357a8"/>
        <function-ref name="set" scoped="" ref="0x40435888"/>
        <function-ref name="clr" scoped="" ref="0x40435968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042c128" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c300"/>
        <function-ref name="isInput" scoped="" ref="0x4042c3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4042c4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c5a0"/>
        <function-ref name="get" scoped="" ref="0x4042c680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c760"/>
        <function-ref name="set" scoped="" ref="0x4042c840"/>
        <function-ref name="clr" scoped="" ref="0x4042c920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042bd68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436010"/>
        <function-ref name="isInput" scoped="" ref="0x404360f0"/>
        <function-ref name="toggle" scoped="" ref="0x404361d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404362b0"/>
        <function-ref name="get" scoped="" ref="0x40436390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436470"/>
        <function-ref name="set" scoped="" ref="0x40436550"/>
        <function-ref name="clr" scoped="" ref="0x40436630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40435ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40435ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40435d80"/>
        <function-ref name="toggle" scoped="" ref="0x40435e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40434010"/>
        <function-ref name="get" scoped="" ref="0x404340f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404341d0"/>
        <function-ref name="set" scoped="" ref="0x404342b0"/>
        <function-ref name="clr" scoped="" ref="0x40434390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042ca80" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042cc58"/>
        <function-ref name="isInput" scoped="" ref="0x4042cd38"/>
        <function-ref name="toggle" scoped="" ref="0x4042ce18"/>
        <function-ref name="isOutput" scoped="" ref="0x4042cef8"/>
        <function-ref name="get" scoped="" ref="0x4042b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b0f0"/>
        <function-ref name="set" scoped="" ref="0x4042b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40436790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40436790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436968"/>
        <function-ref name="isInput" scoped="" ref="0x40436a48"/>
        <function-ref name="toggle" scoped="" ref="0x40436b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40436c08"/>
        <function-ref name="get" scoped="" ref="0x40436ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436dc8"/>
        <function-ref name="set" scoped="" ref="0x40436ea8"/>
        <function-ref name="clr" scoped="" ref="0x40435010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404344f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404344f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404346c8"/>
        <function-ref name="isInput" scoped="" ref="0x404347a8"/>
        <function-ref name="toggle" scoped="" ref="0x40434888"/>
        <function-ref name="isOutput" scoped="" ref="0x40434968"/>
        <function-ref name="get" scoped="" ref="0x40434a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40434b28"/>
        <function-ref name="set" scoped="" ref="0x40434c08"/>
        <function-ref name="clr" scoped="" ref="0x40434ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc1938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc1938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc1b10"/>
        <function-ref name="isInput" scoped="" ref="0x40cc1bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40cc1cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc1db0"/>
        <function-ref name="get" scoped="" ref="0x40cc1e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc0010"/>
        <function-ref name="set" scoped="" ref="0x40cc00f0"/>
        <function-ref name="clr" scoped="" ref="0x40cc01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cbf3b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cbf3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cbf588"/>
        <function-ref name="isInput" scoped="" ref="0x40cbf668"/>
        <function-ref name="toggle" scoped="" ref="0x40cbf748"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbf828"/>
        <function-ref name="get" scoped="" ref="0x40cbf908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbf9e8"/>
        <function-ref name="set" scoped="" ref="0x40cbfac8"/>
        <function-ref name="clr" scoped="" ref="0x40cbfba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cbed70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cbed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cbd010"/>
        <function-ref name="isInput" scoped="" ref="0x40cbd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cbd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbd2b0"/>
        <function-ref name="get" scoped="" ref="0x40cbd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbd470"/>
        <function-ref name="set" scoped="" ref="0x40cbd550"/>
        <function-ref name="clr" scoped="" ref="0x40cbd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cbc7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cbc7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cbc9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cbcab0"/>
        <function-ref name="toggle" scoped="" ref="0x40cbcb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbcc70"/>
        <function-ref name="get" scoped="" ref="0x40cbcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbce30"/>
        <function-ref name="set" scoped="" ref="0x40cbcf10"/>
        <function-ref name="clr" scoped="" ref="0x40cbb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cba228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cba228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cba400"/>
        <function-ref name="isInput" scoped="" ref="0x40cba4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40cba5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cba6a0"/>
        <function-ref name="get" scoped="" ref="0x40cba780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cba860"/>
        <function-ref name="set" scoped="" ref="0x40cba940"/>
        <function-ref name="clr" scoped="" ref="0x40cbaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb9c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb9de0"/>
        <function-ref name="isInput" scoped="" ref="0x40cb9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb8010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb80f0"/>
        <function-ref name="get" scoped="" ref="0x40cb81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb82b0"/>
        <function-ref name="set" scoped="" ref="0x40cb8390"/>
        <function-ref name="clr" scoped="" ref="0x40cb8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb76c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb7898"/>
        <function-ref name="isInput" scoped="" ref="0x40cb7978"/>
        <function-ref name="toggle" scoped="" ref="0x40cb7a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb7b38"/>
        <function-ref name="get" scoped="" ref="0x40cb7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb7cf8"/>
        <function-ref name="set" scoped="" ref="0x40cb7dd8"/>
        <function-ref name="clr" scoped="" ref="0x40cb7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb50b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb5288"/>
        <function-ref name="isInput" scoped="" ref="0x40cb5368"/>
        <function-ref name="toggle" scoped="" ref="0x40cb5448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb5528"/>
        <function-ref name="get" scoped="" ref="0x40cb5608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb56e8"/>
        <function-ref name="set" scoped="" ref="0x40cb57c8"/>
        <function-ref name="clr" scoped="" ref="0x40cb58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043be48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a050"/>
        <function-ref name="isInput" scoped="" ref="0x4043a130"/>
        <function-ref name="toggle" scoped="" ref="0x4043a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a2f0"/>
        <function-ref name="get" scoped="" ref="0x4043a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a4b0"/>
        <function-ref name="set" scoped="" ref="0x4043a590"/>
        <function-ref name="clr" scoped="" ref="0x4043a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40439ac8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40439ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40439d80"/>
        <function-ref name="toggle" scoped="" ref="0x40439e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40438010"/>
        <function-ref name="get" scoped="" ref="0x404380f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404381d0"/>
        <function-ref name="set" scoped="" ref="0x404382b0"/>
        <function-ref name="clr" scoped="" ref="0x40438390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043cb00" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043ccd8"/>
        <function-ref name="isInput" scoped="" ref="0x4043cdb8"/>
        <function-ref name="toggle" scoped="" ref="0x4043ce98"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b010"/>
        <function-ref name="get" scoped="" ref="0x4043b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b1d0"/>
        <function-ref name="set" scoped="" ref="0x4043b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4043b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043a7d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4043aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4043ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ac48"/>
        <function-ref name="get" scoped="" ref="0x4043ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ae08"/>
        <function-ref name="set" scoped="" ref="0x4043aee8"/>
        <function-ref name="clr" scoped="" ref="0x40439010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404384f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404384f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404386c8"/>
        <function-ref name="isInput" scoped="" ref="0x404387a8"/>
        <function-ref name="toggle" scoped="" ref="0x40438888"/>
        <function-ref name="isOutput" scoped="" ref="0x40438968"/>
        <function-ref name="get" scoped="" ref="0x40438a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438b28"/>
        <function-ref name="set" scoped="" ref="0x40438c08"/>
        <function-ref name="clr" scoped="" ref="0x40438ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043b4f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4043b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4043b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b968"/>
        <function-ref name="get" scoped="" ref="0x4043ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043bb28"/>
        <function-ref name="set" scoped="" ref="0x4043bc08"/>
        <function-ref name="clr" scoped="" ref="0x4043bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40439170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40439170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439348"/>
        <function-ref name="isInput" scoped="" ref="0x40439428"/>
        <function-ref name="toggle" scoped="" ref="0x40439508"/>
        <function-ref name="isOutput" scoped="" ref="0x404395e8"/>
        <function-ref name="get" scoped="" ref="0x404396c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404397a8"/>
        <function-ref name="set" scoped="" ref="0x40439888"/>
        <function-ref name="clr" scoped="" ref="0x40439968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40438e48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40438e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437050"/>
        <function-ref name="isInput" scoped="" ref="0x40437130"/>
        <function-ref name="toggle" scoped="" ref="0x40437210"/>
        <function-ref name="isOutput" scoped="" ref="0x404372f0"/>
        <function-ref name="get" scoped="" ref="0x404373d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404374b0"/>
        <function-ref name="set" scoped="" ref="0x40437590"/>
        <function-ref name="clr" scoped="" ref="0x40437670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce5538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce5710"/>
        <function-ref name="isInput" scoped="" ref="0x40ce57f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce59b0"/>
        <function-ref name="get" scoped="" ref="0x40ce5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce5b70"/>
        <function-ref name="set" scoped="" ref="0x40ce5c50"/>
        <function-ref name="clr" scoped="" ref="0x40ce5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce3010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce31e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ce32c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ce33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce3488"/>
        <function-ref name="get" scoped="" ref="0x40ce3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce3648"/>
        <function-ref name="set" scoped="" ref="0x40ce3728"/>
        <function-ref name="clr" scoped="" ref="0x40ce3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce29e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce2bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ce2ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce2e60"/>
        <function-ref name="get" scoped="" ref="0x40ce1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce10f0"/>
        <function-ref name="set" scoped="" ref="0x40ce11d0"/>
        <function-ref name="clr" scoped="" ref="0x40ce12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce0538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce0710"/>
        <function-ref name="isInput" scoped="" ref="0x40ce07f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce08d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce09b0"/>
        <function-ref name="get" scoped="" ref="0x40ce0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce0b70"/>
        <function-ref name="set" scoped="" ref="0x40ce0c50"/>
        <function-ref name="clr" scoped="" ref="0x40ce0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d0c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d0c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d0c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d0c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d0c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d0c488"/>
        <function-ref name="get" scoped="" ref="0x40d0c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d0c648"/>
        <function-ref name="set" scoped="" ref="0x40d0c728"/>
        <function-ref name="clr" scoped="" ref="0x40d0c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d0b9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d0b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d0bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d0bca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d0bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d0be60"/>
        <function-ref name="get" scoped="" ref="0x40d09010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d090f0"/>
        <function-ref name="set" scoped="" ref="0x40d091d0"/>
        <function-ref name="clr" scoped="" ref="0x40d092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d08538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d08538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d08710"/>
        <function-ref name="isInput" scoped="" ref="0x40d087f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d088d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d089b0"/>
        <function-ref name="get" scoped="" ref="0x40d08a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d08b70"/>
        <function-ref name="set" scoped="" ref="0x40d08c50"/>
        <function-ref name="clr" scoped="" ref="0x40d08d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d06010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d061e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d062c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d063a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d06488"/>
        <function-ref name="get" scoped="" ref="0x40d06568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d06648"/>
        <function-ref name="set" scoped="" ref="0x40d06728"/>
        <function-ref name="clr" scoped="" ref="0x40d06808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043f6b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f888"/>
        <function-ref name="isInput" scoped="" ref="0x4043f968"/>
        <function-ref name="toggle" scoped="" ref="0x4043fa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4043fb28"/>
        <function-ref name="get" scoped="" ref="0x4043fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043fce8"/>
        <function-ref name="set" scoped="" ref="0x4043fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4043fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40448330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40448330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448508"/>
        <function-ref name="isInput" scoped="" ref="0x404485e8"/>
        <function-ref name="toggle" scoped="" ref="0x404486c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404487a8"/>
        <function-ref name="get" scoped="" ref="0x40448888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448968"/>
        <function-ref name="set" scoped="" ref="0x40448a48"/>
        <function-ref name="clr" scoped="" ref="0x40448b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404403d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404403d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404405b0"/>
        <function-ref name="isInput" scoped="" ref="0x40440690"/>
        <function-ref name="toggle" scoped="" ref="0x40440770"/>
        <function-ref name="isOutput" scoped="" ref="0x40440850"/>
        <function-ref name="get" scoped="" ref="0x40440930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440a10"/>
        <function-ref name="set" scoped="" ref="0x40440af0"/>
        <function-ref name="clr" scoped="" ref="0x40440bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043e030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e208"/>
        <function-ref name="isInput" scoped="" ref="0x4043e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4043e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e4a8"/>
        <function-ref name="get" scoped="" ref="0x4043e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e668"/>
        <function-ref name="set" scoped="" ref="0x4043e748"/>
        <function-ref name="clr" scoped="" ref="0x4043e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40448c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40448c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448e60"/>
        <function-ref name="isInput" scoped="" ref="0x40447010"/>
        <function-ref name="toggle" scoped="" ref="0x404470f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404471d0"/>
        <function-ref name="get" scoped="" ref="0x404472b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447390"/>
        <function-ref name="set" scoped="" ref="0x40447470"/>
        <function-ref name="clr" scoped="" ref="0x40447550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40440d30" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40440d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440f08"/>
        <function-ref name="isInput" scoped="" ref="0x4043f010"/>
        <function-ref name="toggle" scoped="" ref="0x4043f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f1d0"/>
        <function-ref name="get" scoped="" ref="0x4043f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f390"/>
        <function-ref name="set" scoped="" ref="0x4043f470"/>
        <function-ref name="clr" scoped="" ref="0x4043f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4043e988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4043e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043eb60"/>
        <function-ref name="isInput" scoped="" ref="0x4043ec40"/>
        <function-ref name="toggle" scoped="" ref="0x4043ed20"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ee00"/>
        <function-ref name="get" scoped="" ref="0x4043eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448010"/>
        <function-ref name="set" scoped="" ref="0x404480f0"/>
        <function-ref name="clr" scoped="" ref="0x404481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404476b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447888"/>
        <function-ref name="isInput" scoped="" ref="0x40447968"/>
        <function-ref name="toggle" scoped="" ref="0x40447a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40447b28"/>
        <function-ref name="get" scoped="" ref="0x40447c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447ce8"/>
        <function-ref name="set" scoped="" ref="0x40447dc8"/>
        <function-ref name="clr" scoped="" ref="0x40447ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d39418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d39418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d395f0"/>
        <function-ref name="isInput" scoped="" ref="0x40d396d0"/>
        <function-ref name="toggle" scoped="" ref="0x40d397b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d39890"/>
        <function-ref name="get" scoped="" ref="0x40d39970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d39a50"/>
        <function-ref name="set" scoped="" ref="0x40d39b30"/>
        <function-ref name="clr" scoped="" ref="0x40d39c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d38de0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d38de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d37010"/>
        <function-ref name="isInput" scoped="" ref="0x40d370f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d371d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d372b0"/>
        <function-ref name="get" scoped="" ref="0x40d37390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d37470"/>
        <function-ref name="set" scoped="" ref="0x40d37550"/>
        <function-ref name="clr" scoped="" ref="0x40d37630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d367f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d367f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d369d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d36ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d36b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d36c70"/>
        <function-ref name="get" scoped="" ref="0x40d36d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d36e30"/>
        <function-ref name="set" scoped="" ref="0x40d36f10"/>
        <function-ref name="clr" scoped="" ref="0x40d35010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d34228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d34228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d34400"/>
        <function-ref name="isInput" scoped="" ref="0x40d344e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d345c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d346a0"/>
        <function-ref name="get" scoped="" ref="0x40d34780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d34860"/>
        <function-ref name="set" scoped="" ref="0x40d34940"/>
        <function-ref name="clr" scoped="" ref="0x40d34a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d33c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d33c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d33de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d33ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d32010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d320f0"/>
        <function-ref name="get" scoped="" ref="0x40d321d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d322b0"/>
        <function-ref name="set" scoped="" ref="0x40d32390"/>
        <function-ref name="clr" scoped="" ref="0x40d32470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d316c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d316c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d31898"/>
        <function-ref name="isInput" scoped="" ref="0x40d31978"/>
        <function-ref name="toggle" scoped="" ref="0x40d31a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d31b38"/>
        <function-ref name="get" scoped="" ref="0x40d31c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d31cf8"/>
        <function-ref name="set" scoped="" ref="0x40d31dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d31eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2f0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2f288"/>
        <function-ref name="isInput" scoped="" ref="0x40d2f368"/>
        <function-ref name="toggle" scoped="" ref="0x40d2f448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2f528"/>
        <function-ref name="get" scoped="" ref="0x40d2f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2f6e8"/>
        <function-ref name="set" scoped="" ref="0x40d2f7c8"/>
        <function-ref name="clr" scoped="" ref="0x40d2f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2ea88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2ec60"/>
        <function-ref name="isInput" scoped="" ref="0x40d2ed40"/>
        <function-ref name="toggle" scoped="" ref="0x40d2ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2ef00"/>
        <function-ref name="get" scoped="" ref="0x40d2d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2d0f0"/>
        <function-ref name="set" scoped="" ref="0x40d2d1d0"/>
        <function-ref name="clr" scoped="" ref="0x40d2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40443880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40443880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443a58"/>
        <function-ref name="isInput" scoped="" ref="0x40443b38"/>
        <function-ref name="toggle" scoped="" ref="0x40443c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40443cf8"/>
        <function-ref name="get" scoped="" ref="0x40443dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40443eb8"/>
        <function-ref name="set" scoped="" ref="0x4044e010"/>
        <function-ref name="clr" scoped="" ref="0x4044e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404580b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404580b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458288"/>
        <function-ref name="isInput" scoped="" ref="0x40458368"/>
        <function-ref name="toggle" scoped="" ref="0x40458448"/>
        <function-ref name="isOutput" scoped="" ref="0x40458528"/>
        <function-ref name="get" scoped="" ref="0x40458608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404586e8"/>
        <function-ref name="set" scoped="" ref="0x404587c8"/>
        <function-ref name="clr" scoped="" ref="0x404588a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40455880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40455880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455a58"/>
        <function-ref name="isInput" scoped="" ref="0x40455b38"/>
        <function-ref name="toggle" scoped="" ref="0x40455c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40455cf8"/>
        <function-ref name="get" scoped="" ref="0x40455dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455eb8"/>
        <function-ref name="set" scoped="" ref="0x40460010"/>
        <function-ref name="clr" scoped="" ref="0x404600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045e0b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e288"/>
        <function-ref name="isInput" scoped="" ref="0x4045e368"/>
        <function-ref name="toggle" scoped="" ref="0x4045e448"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e528"/>
        <function-ref name="get" scoped="" ref="0x4045e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e6e8"/>
        <function-ref name="set" scoped="" ref="0x4045e7c8"/>
        <function-ref name="clr" scoped="" ref="0x4045e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045c880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ca58"/>
        <function-ref name="isInput" scoped="" ref="0x4045cb38"/>
        <function-ref name="toggle" scoped="" ref="0x4045cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ccf8"/>
        <function-ref name="get" scoped="" ref="0x4045cdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ceb8"/>
        <function-ref name="set" scoped="" ref="0x4045b010"/>
        <function-ref name="clr" scoped="" ref="0x4045b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404640b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404640b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464288"/>
        <function-ref name="isInput" scoped="" ref="0x40464368"/>
        <function-ref name="toggle" scoped="" ref="0x40464448"/>
        <function-ref name="isOutput" scoped="" ref="0x40464528"/>
        <function-ref name="get" scoped="" ref="0x40464608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404646e8"/>
        <function-ref name="set" scoped="" ref="0x404647c8"/>
        <function-ref name="clr" scoped="" ref="0x404648a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404628f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404628f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40462ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40462c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40462d68"/>
        <function-ref name="get" scoped="" ref="0x40462e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462f28"/>
        <function-ref name="set" scoped="" ref="0x40461018"/>
        <function-ref name="clr" scoped="" ref="0x404610f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046b0b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b288"/>
        <function-ref name="isInput" scoped="" ref="0x4046b368"/>
        <function-ref name="toggle" scoped="" ref="0x4046b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b528"/>
        <function-ref name="get" scoped="" ref="0x4046b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b6e8"/>
        <function-ref name="set" scoped="" ref="0x4046b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4046b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40468880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40468880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468a58"/>
        <function-ref name="isInput" scoped="" ref="0x40468b38"/>
        <function-ref name="toggle" scoped="" ref="0x40468c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40468cf8"/>
        <function-ref name="get" scoped="" ref="0x40468dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468eb8"/>
        <function-ref name="set" scoped="" ref="0x40467010"/>
        <function-ref name="clr" scoped="" ref="0x404670f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404710b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404710b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471288"/>
        <function-ref name="isInput" scoped="" ref="0x40471368"/>
        <function-ref name="toggle" scoped="" ref="0x40471448"/>
        <function-ref name="isOutput" scoped="" ref="0x40471528"/>
        <function-ref name="get" scoped="" ref="0x40471608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404716e8"/>
        <function-ref name="set" scoped="" ref="0x404717c8"/>
        <function-ref name="clr" scoped="" ref="0x404718a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046e880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ea58"/>
        <function-ref name="isInput" scoped="" ref="0x4046eb38"/>
        <function-ref name="toggle" scoped="" ref="0x4046ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ecf8"/>
        <function-ref name="get" scoped="" ref="0x4046edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046eeb8"/>
        <function-ref name="set" scoped="" ref="0x4046d010"/>
        <function-ref name="clr" scoped="" ref="0x4046d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404770b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404770b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477288"/>
        <function-ref name="isInput" scoped="" ref="0x40477368"/>
        <function-ref name="toggle" scoped="" ref="0x40477448"/>
        <function-ref name="isOutput" scoped="" ref="0x40477528"/>
        <function-ref name="get" scoped="" ref="0x40477608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404776e8"/>
        <function-ref name="set" scoped="" ref="0x404777c8"/>
        <function-ref name="clr" scoped="" ref="0x404778a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40475880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40475880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475a58"/>
        <function-ref name="isInput" scoped="" ref="0x40475b38"/>
        <function-ref name="toggle" scoped="" ref="0x40475c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40475cf8"/>
        <function-ref name="get" scoped="" ref="0x40475dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475eb8"/>
        <function-ref name="set" scoped="" ref="0x40474010"/>
        <function-ref name="clr" scoped="" ref="0x404740f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4048d4d0" loc="50:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4048d4d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402d90d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402d90d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4048d880" loc="51:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4048d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4048da58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4048db38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4048dc18"/>
        <function-ref name="actualMicro" scoped="" ref="0x4048dcf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4048ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404a8030" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404a8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a8208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4048f2b8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4048f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4048f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4048fc18" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4048fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4048f650" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4048f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048f828"/>
        <function-ref name="taskLoop" scoped="" ref="0x4048f908"/>
        <function-ref name="runNextTask" scoped="" ref="0x4048f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402de010" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402de1e8"/>
        <function-ref name="runTask" scoped="" ref="0x402de2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402dc7d0" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402dc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402dc9a8"/>
        <function-ref name="taskLoop" scoped="" ref="0x402dca88"/>
        <function-ref name="runNextTask" scoped="" ref="0x402dcb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40361c28" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40361c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40361e00"/>
        <function-ref name="runTask" scoped="" ref="0x40361ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403608a8" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403608a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40360a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403613f0" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403615c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403616a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40361788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40374e88" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40374e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4036f070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40370470" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40370470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40370648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40375148" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40375148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40375320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404b1040" loc="28:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404b1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404b1218"/>
        <function-ref name="stopDone" scoped="" ref="0x404b12f8"/>
        <function-ref name="start" scoped="" ref="0x404b13d8"/>
        <function-ref name="stop" scoped="" ref="0x404b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x404e62e8" loc="40:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x404e62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x404e6de8"/>
        <function-ref name="clear" scoped="" ref="0x404f01b8"/>
        <function-ref name="isValid" scoped="" ref="0x404e6a38"/>
        <function-ref name="set" scoped="" ref="0x404f0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x404c1ac0" loc="30:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x404c1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404c1c98"/>
        <function-ref name="getPayload" scoped="" ref="0x404c1d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404c1e58"/>
        <function-ref name="cancel" scoped="" ref="0x404b0010"/>
        <function-ref name="sendDone" scoped="" ref="0x404b00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x404af798" loc="32:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x404af798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404af970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x404d49d0" loc="33:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404d49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404d4ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x404d4c88"/>
        <function-ref name="getPayload" scoped="" ref="0x404d4d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404d4e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404d4f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x404e89b8" loc="37:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x404e89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x404e8b90"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x404e8c70"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x404e8d50"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x404e8e30"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x404e8f10"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x404d8010"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x404d80f0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x404d81d0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x404d82b0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x404d8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404af100" loc="31:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404af2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x404e2a90" loc="36:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404e2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x404e2c68"/>
        <function-ref name="noAck" scoped="" ref="0x404e2d48"/>
        <function-ref name="wasAcked" scoped="" ref="0x404e2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x404d77b0" loc="34:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404d77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404d7988"/>
        <function-ref name="source" scoped="" ref="0x404d7a68"/>
        <function-ref name="address" scoped="" ref="0x404d7b48"/>
        <function-ref name="destination" scoped="" ref="0x404d7c28"/>
        <function-ref name="setSource" scoped="" ref="0x404d7d08"/>
        <function-ref name="setDestination" scoped="" ref="0x404d7de8"/>
        <function-ref name="type" scoped="" ref="0x404d7ec8"/>
        <function-ref name="setType" scoped="" ref="0x404cc010"/>
        <function-ref name="isForMe" scoped="" ref="0x404cc0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x404cc1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x404cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x404e4920" loc="39:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x404e4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x404e7438"/>
        <function-ref name="clear" scoped="" ref="0x404e77e8"/>
        <function-ref name="isValid" scoped="" ref="0x404e7088"/>
        <function-ref name="set" scoped="" ref="0x404e7b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40504d08" loc="30:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40504d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40504ee0"/>
        <function-ref name="stopDone" scoped="" ref="0x40503010"/>
        <function-ref name="start" scoped="" ref="0x405030f0"/>
        <function-ref name="stop" scoped="" ref="0x405031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405078a0" loc="43:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405154a0"/>
        <function-ref name="get" scoped="" ref="0x405151e0"/>
        <function-ref name="isSet" scoped="" ref="0x40507ee8"/>
        <function-ref name="set" scoped="" ref="0x40515760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40502a00" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40502a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40502bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40502cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40502d98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40502e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40501010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40503630" loc="32:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40503630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40503808"/>
        <function-ref name="getPayload" scoped="" ref="0x405038e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405039c8"/>
        <function-ref name="cancel" scoped="" ref="0x40503aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x40503b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405026a8" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405026a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40502880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4050b530" loc="42:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4050b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40507118"/>
        <function-ref name="get" scoped="" ref="0x4050be38"/>
        <function-ref name="isSet" scoped="" ref="0x4050bb78"/>
        <function-ref name="set" scoped="" ref="0x405073d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40500400" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40500400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x405005d8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x405006b8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40500798"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40500878"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40500958"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40500a38"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40500b18"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40500bf8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40500cd8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40500db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40502010" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40502010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405021e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40515d98" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40515d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405148b8"/>
        <function-ref name="clear" scoped="" ref="0x40514c68"/>
        <function-ref name="isValid" scoped="" ref="0x40514508"/>
        <function-ref name="set" scoped="" ref="0x40512048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4050c0e0" loc="41:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4050c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4050cca8"/>
        <function-ref name="get" scoped="" ref="0x4050c9e8"/>
        <function-ref name="isSet" scoped="" ref="0x4050c728"/>
        <function-ref name="set" scoped="" ref="0x4050b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40501e60" loc="38:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40501e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40500050"/>
        <function-ref name="noAck" scoped="" ref="0x40500130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40500210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405011a8" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405011a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40501380"/>
        <function-ref name="source" scoped="" ref="0x40501460"/>
        <function-ref name="address" scoped="" ref="0x40501540"/>
        <function-ref name="destination" scoped="" ref="0x40501620"/>
        <function-ref name="setSource" scoped="" ref="0x40501700"/>
        <function-ref name="setDestination" scoped="" ref="0x405017e0"/>
        <function-ref name="type" scoped="" ref="0x405018c0"/>
        <function-ref name="setType" scoped="" ref="0x405019a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40501a80"/>
        <function-ref name="setGroup" scoped="" ref="0x40501b60"/>
        <function-ref name="localGroup" scoped="" ref="0x40501c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40512780" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40512780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405113c0"/>
        <function-ref name="clear" scoped="" ref="0x40511770"/>
        <function-ref name="isValid" scoped="" ref="0x40511010"/>
        <function-ref name="set" scoped="" ref="0x40511b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4052aac8" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4052aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4051b470"/>
        <function-ref name="channelError" scoped="" ref="0x4052ad80"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4052ae60"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4051b010"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4051b0f0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4051b1d0"/>
        <function-ref name="timerTick" scoped="" ref="0x4051b2b0"/>
        <function-ref name="getSender" scoped="" ref="0x4051b390"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4052aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40533530" loc="38:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40533530"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40533708"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405337e8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405338c8"/>
        <function-ref name="timerTick" scoped="" ref="0x405339a8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40533a88"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40533b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40532740" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40532740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x40532918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405311c0" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405311c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40531398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4051e188" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4051e188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4051e360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40523a78" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40523a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40523c50"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40523d30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40523e10"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40523ef0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4051c010"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4051c0f0"/>
        <function-ref name="setAckReceived" scoped="" ref="0x4051c1d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4051c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x40540db8" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40540db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40522010"/>
        <function-ref name="getDSN" scoped="" ref="0x405220f0"/>
        <function-ref name="setFCF" scoped="" ref="0x405221d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405222b0"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40522390"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40522470"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40522550"/>
        <function-ref name="setDSN" scoped="" ref="0x40522630"/>
        <function-ref name="createAckReply" scoped="" ref="0x40522710"/>
        <function-ref name="getHeader" scoped="" ref="0x405227f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405228d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405229b0"/>
        <function-ref name="setType" scoped="" ref="0x40522a90"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40522bf0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40522cd0"/>
        <function-ref name="setLength" scoped="" ref="0x40522db0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x40522e90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40529010"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405290f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405291d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405292b0"/>
        <function-ref name="getLength" scoped="" ref="0x40529390"/>
        <function-ref name="setDestPan" scoped="" ref="0x40529470"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40529550"/>
        <function-ref name="getFCF" scoped="" ref="0x40529630"/>
        <function-ref name="getType" scoped="" ref="0x40529810"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405298f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405299d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40529ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40529c30" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40529c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40529e08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40529ee8"/>
        <function-ref name="getPayload" scoped="" ref="0x4053f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4053f0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4053f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4054be20" loc="47:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4054be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4053e010"/>
        <function-ref name="wait" scoped="" ref="0x4053e0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4053e1d0"/>
        <function-ref name="isFree" scoped="" ref="0x4053e2b0"/>
        <function-ref name="getNow" scoped="" ref="0x4053e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x4051f198" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4051f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4051f370"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4051f450"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4051f530"/>
        <function-ref name="getSender" scoped="" ref="0x4051f610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405273d0" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405273d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405275a8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40527688"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40527768"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40527848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0x40518558" loc="32:/opt/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x40518558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x40518730"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x40518c70"/>
        <function-ref name="getPayload" scoped="" ref="0x405188f0"/>
        <function-ref name="setLength" scoped="" ref="0x405189d0"/>
        <function-ref name="getLength" scoped="" ref="0x40518ab0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x40518b90"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40518810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40583798" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40583798"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40581378"/>
        <function-ref name="get" scoped="" ref="0x405810b8"/>
        <function-ref name="isSet" scoped="" ref="0x40583de0"/>
        <function-ref name="set" scoped="" ref="0x40581638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4051d4f8" loc="30:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4051d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4051d6d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4051d7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x4051d890"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4051d970"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4051da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40584408" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40584408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40583010"/>
        <function-ref name="get" scoped="" ref="0x40584d10"/>
        <function-ref name="isSet" scoped="" ref="0x40584a50"/>
        <function-ref name="set" scoped="" ref="0x405832d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x40581b68" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x40581b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40580780"/>
        <function-ref name="get" scoped="" ref="0x405804c0"/>
        <function-ref name="isSet" scoped="" ref="0x40580200"/>
        <function-ref name="set" scoped="" ref="0x40580a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4057e010" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4057e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057ebd8"/>
        <function-ref name="get" scoped="" ref="0x4057e918"/>
        <function-ref name="isSet" scoped="" ref="0x4057e658"/>
        <function-ref name="set" scoped="" ref="0x4057ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4058d500" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4058d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058c010"/>
        <function-ref name="clear" scoped="" ref="0x4058c3c0"/>
        <function-ref name="isValid" scoped="" ref="0x4058dc50"/>
        <function-ref name="set" scoped="" ref="0x4058c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40577930" loc="32:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40577b08"/>
        <function-ref name="noAck" scoped="" ref="0x40577be8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40577cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40585030" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40585030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40585bf8"/>
        <function-ref name="get" scoped="" ref="0x40585938"/>
        <function-ref name="isSet" scoped="" ref="0x40585678"/>
        <function-ref name="set" scoped="" ref="0x40585eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4051dbe8" loc="31:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4051dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4051ddc0"/>
        <function-ref name="source" scoped="" ref="0x4051dea0"/>
        <function-ref name="address" scoped="" ref="0x40577010"/>
        <function-ref name="destination" scoped="" ref="0x405770f0"/>
        <function-ref name="setSource" scoped="" ref="0x405771d0"/>
        <function-ref name="setDestination" scoped="" ref="0x405772b0"/>
        <function-ref name="type" scoped="" ref="0x40577390"/>
        <function-ref name="setType" scoped="" ref="0x40577470"/>
        <function-ref name="isForMe" scoped="" ref="0x40577550"/>
        <function-ref name="setGroup" scoped="" ref="0x40577630"/>
        <function-ref name="localGroup" scoped="" ref="0x40577710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4058cea8" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058a9c0"/>
        <function-ref name="clear" scoped="" ref="0x4058ad70"/>
        <function-ref name="isValid" scoped="" ref="0x4058a610"/>
        <function-ref name="set" scoped="" ref="0x40589150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40592658" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40592658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405902d0"/>
        <function-ref name="get" scoped="" ref="0x40590010"/>
        <function-ref name="isSet" scoped="" ref="0x40592ca0"/>
        <function-ref name="set" scoped="" ref="0x40590590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40596658" loc="32:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40596658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40596830"/>
        <function-ref name="payloadLength" scoped="" ref="0x40596910"/>
        <function-ref name="getPayload" scoped="" ref="0x405969f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40596ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40596bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405932f0" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40593eb8"/>
        <function-ref name="get" scoped="" ref="0x40593bf8"/>
        <function-ref name="isSet" scoped="" ref="0x40593938"/>
        <function-ref name="set" scoped="" ref="0x40592190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x40590ac0" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x40590ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058f6a0"/>
        <function-ref name="get" scoped="" ref="0x4058f3e0"/>
        <function-ref name="isSet" scoped="" ref="0x4058f120"/>
        <function-ref name="set" scoped="" ref="0x4058f960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x4059a4e0" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4059a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4059a6b8"/>
        <function-ref name="getDSN" scoped="" ref="0x4059a798"/>
        <function-ref name="setFCF" scoped="" ref="0x4059a878"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4059a958"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4059aa38"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4059ab18"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4059abf8"/>
        <function-ref name="setDSN" scoped="" ref="0x4059acd8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4059adb8"/>
        <function-ref name="getHeader" scoped="" ref="0x4059ae98"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40599010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405990f0"/>
        <function-ref name="setType" scoped="" ref="0x405991d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40599330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40599410"/>
        <function-ref name="setLength" scoped="" ref="0x405994f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405995d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405996b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40599790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40599870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40599950"/>
        <function-ref name="getLength" scoped="" ref="0x40599a30"/>
        <function-ref name="setDestPan" scoped="" ref="0x40599b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40599bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40599cd0"/>
        <function-ref name="getType" scoped="" ref="0x40599eb0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40598010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405980f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x405981d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4058fe90" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4058fe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4059fa78"/>
        <function-ref name="get" scoped="" ref="0x4059f7b8"/>
        <function-ref name="isSet" scoped="" ref="0x4059f4f8"/>
        <function-ref name="set" scoped="" ref="0x4059fd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4059e3a0" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4059e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4059eea0"/>
        <function-ref name="clear" scoped="" ref="0x4059c280"/>
        <function-ref name="isValid" scoped="" ref="0x4059eaf0"/>
        <function-ref name="set" scoped="" ref="0x4059c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x405971c0" loc="47:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405971c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40597808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40596140" loc="31:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40596140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40596318"/>
        <function-ref name="noAck" scoped="" ref="0x405963f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405964d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40596f08" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40596f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40594af8"/>
        <function-ref name="get" scoped="" ref="0x40594838"/>
        <function-ref name="isSet" scoped="" ref="0x40594578"/>
        <function-ref name="set" scoped="" ref="0x40594db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40597bf8" loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40597bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405a8278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4059cd68" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4059cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4059b898"/>
        <function-ref name="clear" scoped="" ref="0x4059bc48"/>
        <function-ref name="isValid" scoped="" ref="0x4059b4e8"/>
        <function-ref name="set" scoped="" ref="0x4059a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x40587330" loc="28:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40587330"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40587508"/>
        <function-ref name="getDSN" scoped="" ref="0x405875e8"/>
        <function-ref name="setFCF" scoped="" ref="0x405876c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405877a8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40587888"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40587968"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40587a48"/>
        <function-ref name="setDSN" scoped="" ref="0x40587b28"/>
        <function-ref name="createAckReply" scoped="" ref="0x40587c08"/>
        <function-ref name="getHeader" scoped="" ref="0x40587ce8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40587dc8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40587ea8"/>
        <function-ref name="setType" scoped="" ref="0x405dc010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405dc170"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405dc250"/>
        <function-ref name="setLength" scoped="" ref="0x405dc330"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405dc410"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405dc4f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405dc5d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405dc6b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405dc790"/>
        <function-ref name="getLength" scoped="" ref="0x405dc870"/>
        <function-ref name="setDestPan" scoped="" ref="0x405dc950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405dca30"/>
        <function-ref name="getFCF" scoped="" ref="0x405dcb10"/>
        <function-ref name="getType" scoped="" ref="0x405dccf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405dcdd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405dceb0"/>
        <function-ref name="getFramePending" scoped="" ref="0x405db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405db1a8" loc="29:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405db1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405db380"/>
        <function-ref name="source" scoped="" ref="0x405db460"/>
        <function-ref name="address" scoped="" ref="0x405db540"/>
        <function-ref name="destination" scoped="" ref="0x405db620"/>
        <function-ref name="setSource" scoped="" ref="0x405db700"/>
        <function-ref name="setDestination" scoped="" ref="0x405db7e0"/>
        <function-ref name="type" scoped="" ref="0x405db8c0"/>
        <function-ref name="setType" scoped="" ref="0x405db9a0"/>
        <function-ref name="isForMe" scoped="" ref="0x405dba80"/>
        <function-ref name="setGroup" scoped="" ref="0x405dbb60"/>
        <function-ref name="localGroup" scoped="" ref="0x405dbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x405da340" loc="30:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x405da340"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405da518"/>
        <function-ref name="getDSN" scoped="" ref="0x405da5f8"/>
        <function-ref name="setFCF" scoped="" ref="0x405da6d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405da7b8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x405da898"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405da978"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405daa58"/>
        <function-ref name="setDSN" scoped="" ref="0x405dab38"/>
        <function-ref name="createAckReply" scoped="" ref="0x405dac18"/>
        <function-ref name="getHeader" scoped="" ref="0x405dacf8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405dadd8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405daeb8"/>
        <function-ref name="setType" scoped="" ref="0x405d7010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405d7170"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405d7250"/>
        <function-ref name="setLength" scoped="" ref="0x405d7330"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405d7410"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405d74f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405d75d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405d76b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405d7790"/>
        <function-ref name="getLength" scoped="" ref="0x405d7870"/>
        <function-ref name="setDestPan" scoped="" ref="0x405d7950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405d7a30"/>
        <function-ref name="getFCF" scoped="" ref="0x405d7b10"/>
        <function-ref name="getType" scoped="" ref="0x405d7cf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405d7dd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405d7eb0"/>
        <function-ref name="getFramePending" scoped="" ref="0x405d6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x405e4790" loc="34:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405e4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x405e4968"/>
        <function-ref name="changed" scoped="" ref="0x405e4a48"/>
        <function-ref name="amGroup" scoped="" ref="0x405e4b28"/>
        <function-ref name="setAddress" scoped="" ref="0x405e4c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405d61a8" loc="31:/opt/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405d61a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405d6380"/>
        <function-ref name="source" scoped="" ref="0x405d6460"/>
        <function-ref name="address" scoped="" ref="0x405d6540"/>
        <function-ref name="destination" scoped="" ref="0x405d6620"/>
        <function-ref name="setSource" scoped="" ref="0x405d6700"/>
        <function-ref name="setDestination" scoped="" ref="0x405d67e0"/>
        <function-ref name="type" scoped="" ref="0x405d68c0"/>
        <function-ref name="setType" scoped="" ref="0x405d69a0"/>
        <function-ref name="isForMe" scoped="" ref="0x405d6a80"/>
        <function-ref name="setGroup" scoped="" ref="0x405d6b60"/>
        <function-ref name="localGroup" scoped="" ref="0x405d6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40628060" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40628060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40628238"/>
        <function-ref name="changed" scoped="" ref="0x40628318"/>
        <function-ref name="amGroup" scoped="" ref="0x406283f8"/>
        <function-ref name="setAddress" scoped="" ref="0x406284d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405ddd28" loc="28:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405ddd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40631390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4062bd08" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TOne" ref="0x40358b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062e478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4062e968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4062e6f0"/>
        <function-ref name="overflow" scoped="" ref="0x4062ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40643c40" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40643c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40643e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40643ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x40634010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406340f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406341d0"/>
        <function-ref name="setControlB" scoped="" ref="0x406342b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40634390"/>
        <function-ref name="getControlB" scoped="" ref="0x40634470"/>
        <function-ref name="setControlC" scoped="" ref="0x40634550"/>
        <function-ref name="setControlA" scoped="" ref="0x40634630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4063ea28" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4063ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40642500"/>
        <function-ref name="test" scoped="" ref="0x40642010"/>
        <function-ref name="get" scoped="" ref="0x40647088"/>
        <function-ref name="captured" scoped="" ref="0x406475a0"/>
        <function-ref name="reset" scoped="" ref="0x40647840"/>
        <function-ref name="isOn" scoped="" ref="0x40642288"/>
        <function-ref name="set" scoped="" ref="0x40647300"/>
        <function-ref name="start" scoped="" ref="0x40647ab8"/>
        <function-ref name="stop" scoped="" ref="0x40647d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4064c628" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4064c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40651ba0"/>
        <function-ref name="fired" scoped="" ref="0x406511c0"/>
        <function-ref name="get" scoped="" ref="0x4064cc70"/>
        <function-ref name="reset" scoped="" ref="0x40651438"/>
        <function-ref name="isOn" scoped="" ref="0x40651e18"/>
        <function-ref name="set" scoped="" ref="0x4064cee8"/>
        <function-ref name="start" scoped="" ref="0x406516b0"/>
        <function-ref name="stop" scoped="" ref="0x40651928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406361b8" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406361b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4063bc68"/>
        <function-ref name="test" scoped="" ref="0x4063b778"/>
        <function-ref name="get" scoped="" ref="0x40636800"/>
        <function-ref name="setScale" scoped="" ref="0x4063bee0"/>
        <function-ref name="getScale" scoped="" ref="0x406351c0"/>
        <function-ref name="reset" scoped="" ref="0x4063b010"/>
        <function-ref name="overflow" scoped="" ref="0x40636d18"/>
        <function-ref name="isOn" scoped="" ref="0x4063b9f0"/>
        <function-ref name="set" scoped="" ref="0x40636a78"/>
        <function-ref name="start" scoped="" ref="0x4063b288"/>
        <function-ref name="stop" scoped="" ref="0x4063b500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4065bdb0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4065bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x4065a010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4065a0f0"/>
        <function-ref name="getControlA" scoped="" ref="0x4065a1d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4065a2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4065a390"/>
        <function-ref name="setControlB" scoped="" ref="0x4065a470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4065a550"/>
        <function-ref name="getControlB" scoped="" ref="0x4065a630"/>
        <function-ref name="setControlC" scoped="" ref="0x4065a710"/>
        <function-ref name="setControlA" scoped="" ref="0x4065a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40657a80" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40657a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40654010"/>
        <function-ref name="fired" scoped="" ref="0x40656610"/>
        <function-ref name="get" scoped="" ref="0x406560f8"/>
        <function-ref name="reset" scoped="" ref="0x40656888"/>
        <function-ref name="isOn" scoped="" ref="0x40654288"/>
        <function-ref name="set" scoped="" ref="0x40656370"/>
        <function-ref name="start" scoped="" ref="0x40656b00"/>
        <function-ref name="stop" scoped="" ref="0x40656d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4065ab28" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4065ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40657640"/>
        <function-ref name="test" scoped="" ref="0x40657150"/>
        <function-ref name="get" scoped="" ref="0x40658200"/>
        <function-ref name="captured" scoped="" ref="0x40658718"/>
        <function-ref name="reset" scoped="" ref="0x406589b8"/>
        <function-ref name="isOn" scoped="" ref="0x406573c8"/>
        <function-ref name="set" scoped="" ref="0x40658478"/>
        <function-ref name="start" scoped="" ref="0x40658c30"/>
        <function-ref name="stop" scoped="" ref="0x40658ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x406546a0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x406546a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40653c90"/>
        <function-ref name="fired" scoped="" ref="0x406532b0"/>
        <function-ref name="get" scoped="" ref="0x40654ce8"/>
        <function-ref name="reset" scoped="" ref="0x40653528"/>
        <function-ref name="isOn" scoped="" ref="0x40653f08"/>
        <function-ref name="set" scoped="" ref="0x40653010"/>
        <function-ref name="start" scoped="" ref="0x406537a0"/>
        <function-ref name="stop" scoped="" ref="0x40653a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40652340" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40652340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40665898"/>
        <function-ref name="fired" scoped="" ref="0x40652ea0"/>
        <function-ref name="get" scoped="" ref="0x40652988"/>
        <function-ref name="reset" scoped="" ref="0x40665130"/>
        <function-ref name="isOn" scoped="" ref="0x40665b10"/>
        <function-ref name="set" scoped="" ref="0x40652c00"/>
        <function-ref name="start" scoped="" ref="0x406653a8"/>
        <function-ref name="stop" scoped="" ref="0x40665620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4064bac8" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4064bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4065b538"/>
        <function-ref name="test" scoped="" ref="0x4065b048"/>
        <function-ref name="get" scoped="" ref="0x40648128"/>
        <function-ref name="setScale" scoped="" ref="0x4065b7b0"/>
        <function-ref name="getScale" scoped="" ref="0x4065ba50"/>
        <function-ref name="reset" scoped="" ref="0x406488b8"/>
        <function-ref name="overflow" scoped="" ref="0x40648640"/>
        <function-ref name="isOn" scoped="" ref="0x4065b2c0"/>
        <function-ref name="set" scoped="" ref="0x406483a0"/>
        <function-ref name="start" scoped="" ref="0x40648b30"/>
        <function-ref name="stop" scoped="" ref="0x40648da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4069c860" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4069c860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402dae98"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402dae98"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4069ca38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4069cc48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4069cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406a96a0"/>
        <function-ref name="test" scoped="" ref="0x406a91b0"/>
        <function-ref name="get" scoped="" ref="0x406aa2a8"/>
        <function-ref name="setScale" scoped="" ref="0x406a9918"/>
        <function-ref name="getScale" scoped="" ref="0x406a9bb8"/>
        <function-ref name="reset" scoped="" ref="0x406aaa38"/>
        <function-ref name="overflow" scoped="" ref="0x406aa7c0"/>
        <function-ref name="isOn" scoped="" ref="0x406a9428"/>
        <function-ref name="set" scoped="" ref="0x406aa520"/>
        <function-ref name="start" scoped="" ref="0x406aacb0"/>
        <function-ref name="stop" scoped="" ref="0x406aaf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4069e470" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4069e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TOne" ref="0x40358b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4069ebc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b30d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4069ee38"/>
        <function-ref name="overflow" scoped="" ref="0x406b3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406b3630" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406b10a8"/>
        <function-ref name="test" scoped="" ref="0x406b2ba0"/>
        <function-ref name="get" scoped="" ref="0x406b3c78"/>
        <function-ref name="setScale" scoped="" ref="0x406b1320"/>
        <function-ref name="getScale" scoped="" ref="0x406b15c0"/>
        <function-ref name="reset" scoped="" ref="0x406b2438"/>
        <function-ref name="overflow" scoped="" ref="0x406b21c0"/>
        <function-ref name="isOn" scoped="" ref="0x406b2e18"/>
        <function-ref name="set" scoped="" ref="0x406b3ef0"/>
        <function-ref name="start" scoped="" ref="0x406b26b0"/>
        <function-ref name="stop" scoped="" ref="0x406b2928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x406c46f8" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x406c46f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c4e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ca350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ca0d8"/>
        <function-ref name="overflow" scoped="" ref="0x406ca5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4062f490" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062fbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c4110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4062fe58"/>
        <function-ref name="overflow" scoped="" ref="0x406c4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406c83d0" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406c83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c8a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406c8d68" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406c8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c74e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c79d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c7760"/>
        <function-ref name="overflow" scoped="" ref="0x406c7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40633a60" loc="20:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40633a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406d50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x406d1158" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x406d1158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406e5c40"/>
        <function-ref name="fired" scoped="" ref="0x406d1ed8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406e5600"/>
        <function-ref name="isOneShot" scoped="" ref="0x406e53a8"/>
        <function-ref name="getdt" scoped="" ref="0x406e4110"/>
        <function-ref name="gett0" scoped="" ref="0x406e5e98"/>
        <function-ref name="isRunning" scoped="" ref="0x406e5150"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406d1780"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406e5920"/>
        <function-ref name="startOneShot" scoped="" ref="0x406d1a00"/>
        <function-ref name="stop" scoped="" ref="0x406d1c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406e4470" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406e4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406e4ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406d5968" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406d5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406d5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x406f0e60" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x406f0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ef5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406efad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ef858"/>
        <function-ref name="overflow" scoped="" ref="0x406efd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406e3b08" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406e3b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x406df258" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x406df258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406f0708"/>
        <function-ref name="fired" scoped="" ref="0x406dfec0"/>
        <function-ref name="startAt" scoped="" ref="0x406f03c8"/>
        <function-ref name="isRunning" scoped="" ref="0x406f0150"/>
        <function-ref name="getAlarm" scoped="" ref="0x406f0980"/>
        <function-ref name="start" scoped="" ref="0x406df9a8"/>
        <function-ref name="stop" scoped="" ref="0x406dfc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4076a010" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4076a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407694e0"/>
        <function-ref name="fired" scoped="" ref="0x4076ac78"/>
        <function-ref name="startAt" scoped="" ref="0x407691a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4076aef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40769758"/>
        <function-ref name="start" scoped="" ref="0x4076a760"/>
        <function-ref name="stop" scoped="" ref="0x4076aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406ecbb8" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406ecbb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402dae98"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402dae98"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ecd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40769a88" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40769a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40768200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407686f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40768478"/>
        <function-ref name="overflow" scoped="" ref="0x40768968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40dcc010" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40dcc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40dcc1e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40dcc2c8"/>
        <function-ref name="getControlA" scoped="" ref="0x40dcc3a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40dcc488"/>
        <function-ref name="setControlB" scoped="" ref="0x40dcc568"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40dcc648"/>
        <function-ref name="getControlB" scoped="" ref="0x40dcc728"/>
        <function-ref name="setControlA" scoped="" ref="0x40dcc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40dd20a0" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40dd20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dd15c8"/>
        <function-ref name="fired" scoped="" ref="0x40dd2d08"/>
        <function-ref name="startAt" scoped="" ref="0x40dd1288"/>
        <function-ref name="isRunning" scoped="" ref="0x40dd1010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40dd1840"/>
        <function-ref name="start" scoped="" ref="0x40dd27f0"/>
        <function-ref name="stop" scoped="" ref="0x40dd2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dd4c18" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dd4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40dd1b70" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40dd1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dd0308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dd07f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dd0580"/>
        <function-ref name="overflow" scoped="" ref="0x40dd0a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40dc94b8" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40dc94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40dc9690"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40dc9770"/>
        <function-ref name="controlABusy" scoped="" ref="0x40dc9850"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40dc9930"/>
        <function-ref name="countBusy" scoped="" ref="0x40dc9a10"/>
        <function-ref name="compareABusy" scoped="" ref="0x40dc9af0"/>
        <function-ref name="getAssr" scoped="" ref="0x40dc9bd0"/>
        <function-ref name="setAssr" scoped="" ref="0x40dc9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40dcc9f8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40dcc9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dc9010"/>
        <function-ref name="fired" scoped="" ref="0x40dcb580"/>
        <function-ref name="get" scoped="" ref="0x40dcb068"/>
        <function-ref name="reset" scoped="" ref="0x40dcb7f8"/>
        <function-ref name="isOn" scoped="" ref="0x40dc9288"/>
        <function-ref name="set" scoped="" ref="0x40dcb2e0"/>
        <function-ref name="start" scoped="" ref="0x40dcba70"/>
        <function-ref name="stop" scoped="" ref="0x40dcbce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40dd0d60" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dd0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dcd7f0"/>
        <function-ref name="test" scoped="" ref="0x40dcd300"/>
        <function-ref name="get" scoped="" ref="0x40dce3e0"/>
        <function-ref name="setScale" scoped="" ref="0x40dcda68"/>
        <function-ref name="getScale" scoped="" ref="0x40dcdd08"/>
        <function-ref name="reset" scoped="" ref="0x40dceb70"/>
        <function-ref name="overflow" scoped="" ref="0x40dce8f8"/>
        <function-ref name="isOn" scoped="" ref="0x40dcd578"/>
        <function-ref name="set" scoped="" ref="0x40dce658"/>
        <function-ref name="start" scoped="" ref="0x40dcede8"/>
        <function-ref name="stop" scoped="" ref="0x40dcd088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407301a0" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407301a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40730378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40730458"/>
        <function-ref name="getControlA" scoped="" ref="0x40730538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40730618"/>
        <function-ref name="setControlB" scoped="" ref="0x407306f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407307d8"/>
        <function-ref name="getControlB" scoped="" ref="0x407308b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40730998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4072e858" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4072e858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4072ea30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4072eb10"/>
        <function-ref name="controlABusy" scoped="" ref="0x4072ebf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4072ecd0"/>
        <function-ref name="countBusy" scoped="" ref="0x4072edb0"/>
        <function-ref name="compareABusy" scoped="" ref="0x4072ee90"/>
        <function-ref name="getAssr" scoped="" ref="0x4072d010"/>
        <function-ref name="setAssr" scoped="" ref="0x4072d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40730cc0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40730cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4072e288"/>
        <function-ref name="fired" scoped="" ref="0x4072f830"/>
        <function-ref name="get" scoped="" ref="0x4072f318"/>
        <function-ref name="reset" scoped="" ref="0x4072faa8"/>
        <function-ref name="isOn" scoped="" ref="0x4072e500"/>
        <function-ref name="set" scoped="" ref="0x4072f590"/>
        <function-ref name="start" scoped="" ref="0x4072fd20"/>
        <function-ref name="stop" scoped="" ref="0x4072e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4071ee78" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4071ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407328d8"/>
        <function-ref name="test" scoped="" ref="0x407323e8"/>
        <function-ref name="get" scoped="" ref="0x407334d8"/>
        <function-ref name="setScale" scoped="" ref="0x40732b50"/>
        <function-ref name="getScale" scoped="" ref="0x40732df0"/>
        <function-ref name="reset" scoped="" ref="0x40733c68"/>
        <function-ref name="overflow" scoped="" ref="0x407339f0"/>
        <function-ref name="isOn" scoped="" ref="0x40732660"/>
        <function-ref name="set" scoped="" ref="0x40733750"/>
        <function-ref name="start" scoped="" ref="0x40733ee0"/>
        <function-ref name="stop" scoped="" ref="0x40732170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4073f1a0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4073f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4073f378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4073f458"/>
        <function-ref name="getControlA" scoped="" ref="0x4073f538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4073f618"/>
        <function-ref name="setControlB" scoped="" ref="0x4073f6f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4073f7d8"/>
        <function-ref name="getControlB" scoped="" ref="0x4073f8b8"/>
        <function-ref name="setControlA" scoped="" ref="0x4073f998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4073d7b8" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4073d7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4073d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4073dc18" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4073dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4073ddf0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4073ded0"/>
        <function-ref name="controlABusy" scoped="" ref="0x4073b010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4073b0f0"/>
        <function-ref name="countBusy" scoped="" ref="0x4073b1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x4073b2b0"/>
        <function-ref name="getAssr" scoped="" ref="0x4073b390"/>
        <function-ref name="setAssr" scoped="" ref="0x4073b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4073fcc0" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4073fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4073d288"/>
        <function-ref name="fired" scoped="" ref="0x4073e830"/>
        <function-ref name="get" scoped="" ref="0x4073e318"/>
        <function-ref name="reset" scoped="" ref="0x4073eaa8"/>
        <function-ref name="isOn" scoped="" ref="0x4073d500"/>
        <function-ref name="set" scoped="" ref="0x4073e590"/>
        <function-ref name="start" scoped="" ref="0x4073ed20"/>
        <function-ref name="stop" scoped="" ref="0x4073d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4072dde0" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4072dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40740878"/>
        <function-ref name="test" scoped="" ref="0x40740388"/>
        <function-ref name="get" scoped="" ref="0x4072a468"/>
        <function-ref name="setScale" scoped="" ref="0x40740af0"/>
        <function-ref name="getScale" scoped="" ref="0x40740d90"/>
        <function-ref name="reset" scoped="" ref="0x4072abf8"/>
        <function-ref name="overflow" scoped="" ref="0x4072a980"/>
        <function-ref name="isOn" scoped="" ref="0x40740600"/>
        <function-ref name="set" scoped="" ref="0x4072a6e0"/>
        <function-ref name="start" scoped="" ref="0x4072ae70"/>
        <function-ref name="stop" scoped="" ref="0x40740110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4077ebd0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4077ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4077eda8"/>
        <function-ref name="runTask" scoped="" ref="0x4077ee88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4077f248" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4077f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4077e708"/>
        <function-ref name="fired" scoped="" ref="0x4077feb0"/>
        <function-ref name="startAt" scoped="" ref="0x4077e3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4077e150"/>
        <function-ref name="getAlarm" scoped="" ref="0x4077e980"/>
        <function-ref name="start" scoped="" ref="0x4077f998"/>
        <function-ref name="stop" scoped="" ref="0x4077fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e0f08" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e0f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40780a18"/>
        <function-ref name="fired" scoped="" ref="0x40766cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407803d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40780180"/>
        <function-ref name="getdt" scoped="" ref="0x40780ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40780c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40766f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40766558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407806f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x407667d8"/>
        <function-ref name="stop" scoped="" ref="0x40766a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x407b54b8" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x407b54b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407b5690"/>
        <function-ref name="runTask" scoped="" ref="0x407b5770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x407b8220" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x407b8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407b7d58"/>
        <function-ref name="fired" scoped="" ref="0x407b7010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407b7718"/>
        <function-ref name="isOneShot" scoped="" ref="0x407b74c0"/>
        <function-ref name="getdt" scoped="" ref="0x407b5268"/>
        <function-ref name="gett0" scoped="" ref="0x407b5010"/>
        <function-ref name="isRunning" scoped="" ref="0x407b7268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407b8848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407b7a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x407b8ac8"/>
        <function-ref name="stop" scoped="" ref="0x407b8d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40793ea8" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40793ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407b9a48"/>
        <function-ref name="fired" scoped="" ref="0x40792c88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407b93e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x407b9180"/>
        <function-ref name="getdt" scoped="" ref="0x407b9f18"/>
        <function-ref name="gett0" scoped="" ref="0x407b9cb0"/>
        <function-ref name="isRunning" scoped="" ref="0x40792ef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40792500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407b9718"/>
        <function-ref name="startOneShot" scoped="" ref="0x40792790"/>
        <function-ref name="stop" scoped="" ref="0x40792a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x407b4970" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x407b4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x407b3360" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b3ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b2010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b3d28"/>
        <function-ref name="overflow" scoped="" ref="0x407b2288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x407c8e58" loc="28:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x407c8e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407c5050"/>
        <function-ref name="wait" scoped="" ref="0x407c5130"/>
        <function-ref name="cancel" scoped="" ref="0x407c5210"/>
        <function-ref name="isFree" scoped="" ref="0x407c52f0"/>
        <function-ref name="getNow" scoped="" ref="0x407c53d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x407c59c8" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407c59c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402d90d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402d90d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c4e70"/>
        <function-ref name="fired" scoped="" ref="0x407c4640"/>
        <function-ref name="startAt" scoped="" ref="0x407c4b30"/>
        <function-ref name="isRunning" scoped="" ref="0x407c48b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x407c3110"/>
        <function-ref name="start" scoped="" ref="0x407c4128"/>
        <function-ref name="stop" scoped="" ref="0x407c43c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x407c3b50" loc="31:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x407c3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407c3d28"/>
        <function-ref name="wait" scoped="" ref="0x407c3e08"/>
        <function-ref name="cancel" scoped="" ref="0x407c3ee8"/>
        <function-ref name="isFree" scoped="" ref="0x407bf010"/>
        <function-ref name="getNow" scoped="" ref="0x407bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x407bf470" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407bf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407be940"/>
        <function-ref name="fired" scoped="" ref="0x407be110"/>
        <function-ref name="startAt" scoped="" ref="0x407be600"/>
        <function-ref name="isRunning" scoped="" ref="0x407be388"/>
        <function-ref name="getAlarm" scoped="" ref="0x407bebb8"/>
        <function-ref name="start" scoped="" ref="0x407bfbc0"/>
        <function-ref name="stop" scoped="" ref="0x407bfe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x407d3740" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x407d3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x407d3918"/>
        <function-ref name="suspend" scoped="" ref="0x407d39f8"/>
        <function-ref name="resume" scoped="" ref="0x407d3ad8"/>
        <function-ref name="run" scoped="" ref="0x407d3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x407c1b10" loc="29:/opt/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x407c1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x407c1ce8"/>
        <function-ref name="suspend" scoped="" ref="0x407c1dc8"/>
        <function-ref name="resume" scoped="" ref="0x407c1ea8"/>
        <function-ref name="run" scoped="" ref="0x407ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407eeb98" loc="34:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407eeb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407eed70"/>
        <function-ref name="getPayload" scoped="" ref="0x407eee50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407da010"/>
        <function-ref name="cancel" scoped="" ref="0x407da0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407da1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407da3e0" loc="35:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407da3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407da5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407cb6a0" loc="28:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407cb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407cb878"/>
        <function-ref name="getPayload" scoped="" ref="0x407cb958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407cba38"/>
        <function-ref name="cancel" scoped="" ref="0x407cbb18"/>
        <function-ref name="sendDone" scoped="" ref="0x407cbbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407db798" loc="30:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407db798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407db970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407d9510" loc="37:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407d9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x407d96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407db100" loc="29:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407db2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x407da750" loc="36:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407da750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407da928"/>
        <function-ref name="source" scoped="" ref="0x407daa08"/>
        <function-ref name="address" scoped="" ref="0x407daae8"/>
        <function-ref name="destination" scoped="" ref="0x407dabc8"/>
        <function-ref name="setSource" scoped="" ref="0x407daca8"/>
        <function-ref name="setDestination" scoped="" ref="0x407dad88"/>
        <function-ref name="type" scoped="" ref="0x407dae68"/>
        <function-ref name="setType" scoped="" ref="0x407d9010"/>
        <function-ref name="isForMe" scoped="" ref="0x407d90f0"/>
        <function-ref name="setGroup" scoped="" ref="0x407d91d0"/>
        <function-ref name="localGroup" scoped="" ref="0x407d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407dde18" loc="28:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407dde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407f6010"/>
        <function-ref name="stopDone" scoped="" ref="0x407f60f0"/>
        <function-ref name="start" scoped="" ref="0x407f61d0"/>
        <function-ref name="stop" scoped="" ref="0x407f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407f4660" loc="35:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407f4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f4838"/>
        <function-ref name="getPayload" scoped="" ref="0x407f4918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407f49f8"/>
        <function-ref name="cancel" scoped="" ref="0x407f4ad8"/>
        <function-ref name="sendDone" scoped="" ref="0x407f4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407f4dc8" loc="36:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407f4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407f6420" loc="29:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407f6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f65f8"/>
        <function-ref name="getPayload" scoped="" ref="0x407f66d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407f67b8"/>
        <function-ref name="cancel" scoped="" ref="0x407f6898"/>
        <function-ref name="sendDone" scoped="" ref="0x407f6978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x407f4010" loc="34:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x407f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407f41e8"/>
        <function-ref name="stopDone" scoped="" ref="0x407f42c8"/>
        <function-ref name="start" scoped="" ref="0x407f43a8"/>
        <function-ref name="stop" scoped="" ref="0x407f4488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407f6b00" loc="30:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407f6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407f6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4080a970" loc="35:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4080a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080ab48"/>
        <function-ref name="getPayload" scoped="" ref="0x4080ac28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4080ad08"/>
        <function-ref name="cancel" scoped="" ref="0x4080ade8"/>
        <function-ref name="sendDone" scoped="" ref="0x4080aec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40809130" loc="36:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40809130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40809308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407f3710" loc="28:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407f3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f38e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407f39c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407f3aa8"/>
        <function-ref name="cancel" scoped="" ref="0x407f3b88"/>
        <function-ref name="sendDone" scoped="" ref="0x407f3c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x4080a570" loc="30:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x4080a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080a748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x408094d0" loc="38:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x408094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408096a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40809788"/>
        <function-ref name="setFCF" scoped="" ref="0x40809868"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40809948"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40809a28"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40809b08"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40809be8"/>
        <function-ref name="setDSN" scoped="" ref="0x40809cc8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40809da8"/>
        <function-ref name="getHeader" scoped="" ref="0x40809e88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40808010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408080f0"/>
        <function-ref name="setType" scoped="" ref="0x408081d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40808330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40808410"/>
        <function-ref name="setLength" scoped="" ref="0x408084f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x408085d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408086b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40808790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40808870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40808950"/>
        <function-ref name="getLength" scoped="" ref="0x40808a30"/>
        <function-ref name="setDestPan" scoped="" ref="0x40808b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40808bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40808cd0"/>
        <function-ref name="getType" scoped="" ref="0x40808eb0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40807010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408070f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408071d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407f3df0" loc="29:/opt/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407f3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40815600" loc="28:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40815600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408157d8"/>
        <function-ref name="stopDone" scoped="" ref="0x408158b8"/>
        <function-ref name="start" scoped="" ref="0x40815998"/>
        <function-ref name="stop" scoped="" ref="0x40815a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4082f150" loc="36:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4082f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4082f328"/>
        <function-ref name="request" scoped="" ref="0x4082f408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x4082e010" loc="44:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x4082e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082e1e8"/>
        <function-ref name="ready" scoped="" ref="0x4082e2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4082e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4082d410" loc="48:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4082d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082d5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4082d6c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4082d7a8"/>
        <function-ref name="cancel" scoped="" ref="0x4082d888"/>
        <function-ref name="sendDone" scoped="" ref="0x4082d968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4082dac8" loc="49:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4082dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40830150" loc="33:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40830150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40830328"/>
        <function-ref name="turnOn" scoped="" ref="0x40830408"/>
        <function-ref name="setChannel" scoped="" ref="0x408304e8"/>
        <function-ref name="done" scoped="" ref="0x408305c8"/>
        <function-ref name="standby" scoped="" ref="0x408306a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40815bb8" loc="29:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40815bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40815d90"/>
        <function-ref name="getPayload" scoped="" ref="0x40815e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40820010"/>
        <function-ref name="cancel" scoped="" ref="0x408200f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40820628" loc="31:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40820628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40820800"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408208e0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408209c0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40820aa0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40820b80"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40820c60"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40820d40"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40820e20"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40820f00"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40830010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x4082f568" loc="38:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x4082f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4082f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40830cc0" loc="35:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40830cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40830e98"/>
        <function-ref name="header" scoped="" ref="0x4082f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4082f8d0" loc="43:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4082f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4082faa8"/>
        <function-ref name="turnOn" scoped="" ref="0x4082fb88"/>
        <function-ref name="setChannel" scoped="" ref="0x4082fc68"/>
        <function-ref name="done" scoped="" ref="0x4082fd48"/>
        <function-ref name="standby" scoped="" ref="0x4082fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4082edb8" loc="47:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4082edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4082d010"/>
        <function-ref name="stopDone" scoped="" ref="0x4082d0f0"/>
        <function-ref name="start" scoped="" ref="0x4082d1d0"/>
        <function-ref name="stop" scoped="" ref="0x4082d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4082de00" loc="51:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4082de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4082b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40820310" loc="30:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40820310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408204e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x4082e508" loc="45:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x4082e508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082e6e0"/>
        <function-ref name="header" scoped="" ref="0x4082e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408307e8" loc="34:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408307e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408309c0"/>
        <function-ref name="ready" scoped="" ref="0x40830aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40830b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x4082e920" loc="46:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x4082e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4082eb78"/>
        <function-ref name="request" scoped="" ref="0x4082ec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40822dc8" loc="26:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40822dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4081f010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4081f0f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4081f1d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4081f2b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4081f390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4081f470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4081f550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4081f630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4081f710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4081f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4082aa60" loc="28:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4082aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4082ac38"/>
        <function-ref name="stopDone" scoped="" ref="0x4082ad18"/>
        <function-ref name="start" scoped="" ref="0x4082adf8"/>
        <function-ref name="stop" scoped="" ref="0x4082aed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40827b10" loc="34:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40827b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40827ce8"/>
        <function-ref name="turnOn" scoped="" ref="0x40827dc8"/>
        <function-ref name="setChannel" scoped="" ref="0x40827ea8"/>
        <function-ref name="done" scoped="" ref="0x40842010"/>
        <function-ref name="standby" scoped="" ref="0x408420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40827060" loc="29:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40827060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40827238"/>
        <function-ref name="getPayload" scoped="" ref="0x40827318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408273f8"/>
        <function-ref name="cancel" scoped="" ref="0x408274d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408275b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40842c20" loc="38:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40842c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40842df8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40842ed8"/>
        <function-ref name="getPayload" scoped="" ref="0x40841010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408410f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408411d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408427e8" loc="36:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408427e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408429c0"/>
        <function-ref name="header" scoped="" ref="0x40842aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40827740" loc="30:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40827740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40827918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40842290" loc="35:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40842290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40842468"/>
        <function-ref name="ready" scoped="" ref="0x40842548"/>
        <function-ref name="sendDone" scoped="" ref="0x40842628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40841920" loc="31:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40841920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40841af8"/>
        <function-ref name="stopDone" scoped="" ref="0x40841bd8"/>
        <function-ref name="start" scoped="" ref="0x40841cb8"/>
        <function-ref name="stop" scoped="" ref="0x40841d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4083e010" loc="32:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4083e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4083e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4083ee08" loc="39:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4083ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4083d010"/>
        <function-ref name="turnOn" scoped="" ref="0x4083d0f0"/>
        <function-ref name="setChannel" scoped="" ref="0x4083d1d0"/>
        <function-ref name="done" scoped="" ref="0x4083d2b0"/>
        <function-ref name="standby" scoped="" ref="0x4083d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4083e358" loc="34:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4083e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4083e530"/>
        <function-ref name="getPayload" scoped="" ref="0x4083e610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4083e6f0"/>
        <function-ref name="cancel" scoped="" ref="0x4083e7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4083e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4083c518" loc="44:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4083c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4083c6f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4083c7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4083c8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4083c990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4083ca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4083c0e0" loc="42:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4083c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083c2b8"/>
        <function-ref name="header" scoped="" ref="0x4083c398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40836430" loc="101:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40836430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40836608"/>
        <function-ref name="runTask" scoped="" ref="0x408366e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4083ea38" loc="35:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4083ea38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x4084dae0" loc="139:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x4084dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4084dcb8"/>
        <function-ref name="runTask" scoped="" ref="0x4084dd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40856e08" loc="267:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40856e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40855010"/>
        <function-ref name="runTask" scoped="" ref="0x408550f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4083db30" loc="41:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4083db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4083dd08"/>
        <function-ref name="ready" scoped="" ref="0x4083dde8"/>
        <function-ref name="sendDone" scoped="" ref="0x4083dec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4083d518" loc="40:/opt/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4083d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4083d6f0"/>
        <function-ref name="suspend" scoped="" ref="0x4083d7d0"/>
        <function-ref name="resume" scoped="" ref="0x4083d8b0"/>
        <function-ref name="run" scoped="" ref="0x4083d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40865950" loc="34:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40865950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40865b28"/>
        <function-ref name="getPayload" scoped="" ref="0x40865c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40865ce8"/>
        <function-ref name="cancel" scoped="" ref="0x40865dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40865ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40864168" loc="35:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40864168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40864340"/>
        <function-ref name="header" scoped="" ref="0x40864420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40828cc8" loc="29:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40828cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40828ea0"/>
        <function-ref name="getPayload" scoped="" ref="0x40865010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408650f0"/>
        <function-ref name="cancel" scoped="" ref="0x408651d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408652b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40864640" loc="37:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40864640"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40864818"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408648f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408649d8"/>
        <function-ref name="getSender" scoped="" ref="0x40864ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40865470" loc="30:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40865470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40865648"/>
        <function-ref name="header" scoped="" ref="0x40865728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408600c8" loc="39:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408600c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408602a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40860380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40860460"/>
        <function-ref name="cancel" scoped="" ref="0x40860540"/>
        <function-ref name="sendDone" scoped="" ref="0x40860620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40860868" loc="40:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40860868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40860a40"/>
        <function-ref name="header" scoped="" ref="0x40860b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40874a00" loc="44:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40874a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40874bd8"/>
        <function-ref name="clearAll" scoped="" ref="0x40874cb8"/>
        <function-ref name="get" scoped="" ref="0x40874d98"/>
        <function-ref name="set" scoped="" ref="0x40874e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40861170" loc="31:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40861170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40861348"/>
        <function-ref name="getPayload" scoped="" ref="0x40861428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40861508"/>
        <function-ref name="cancel" scoped="" ref="0x408615e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408616c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x408769c8" loc="43:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408769c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40876ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x40876c80"/>
        <function-ref name="getNode" scoped="" ref="0x40876d60"/>
        <function-ref name="evicted" scoped="" ref="0x40876e40"/>
        <function-ref name="getIndex" scoped="" ref="0x40876f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40861888" loc="32:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40861888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40861a60"/>
        <function-ref name="header" scoped="" ref="0x40861b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40861cb0" loc="34:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40861cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40861e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40860ce0" loc="42:/opt/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40860ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40860eb8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4085f010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4085f0f0"/>
        <function-ref name="getSender" scoped="" ref="0x4085f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40863de0" loc="26:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40863de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40882010"/>
        <function-ref name="insertNode" scoped="" ref="0x408820f0"/>
        <function-ref name="getNode" scoped="" ref="0x408821d0"/>
        <function-ref name="evicted" scoped="" ref="0x408822b0"/>
        <function-ref name="getIndex" scoped="" ref="0x40882390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4087f860" loc="32:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4087f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4087fa38"/>
        <function-ref name="clearAll" scoped="" ref="0x4087fb18"/>
        <function-ref name="get" scoped="" ref="0x4087fbf8"/>
        <function-ref name="set" scoped="" ref="0x4087fcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40882d98" loc="31:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40882d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4087f010"/>
        <function-ref name="insertNode" scoped="" ref="0x4087f0f0"/>
        <function-ref name="getNode" scoped="" ref="0x4087f1d0"/>
        <function-ref name="evicted" scoped="" ref="0x4087f2b0"/>
        <function-ref name="getIndex" scoped="" ref="0x4087f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40882a00" loc="30:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40882a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40882bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40883848" loc="26:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40883848"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40883a20"/>
        <function-ref name="clearAll" scoped="" ref="0x40883b00"/>
        <function-ref name="get" scoped="" ref="0x40883be0"/>
        <function-ref name="set" scoped="" ref="0x40883cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4089d428" loc="34:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4089d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089d600"/>
        <function-ref name="ready" scoped="" ref="0x4089d6e0"/>
        <function-ref name="sendDone" scoped="" ref="0x4089d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4089da08" loc="35:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4089da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089dbe0"/>
        <function-ref name="header" scoped="" ref="0x4089dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4089eba8" loc="30:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4089eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4089ed80"/>
        <function-ref name="turnOn" scoped="" ref="0x4089ee60"/>
        <function-ref name="setChannel" scoped="" ref="0x4089d010"/>
        <function-ref name="done" scoped="" ref="0x4089d0f0"/>
        <function-ref name="standby" scoped="" ref="0x4089d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4089dee0" loc="36:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4089dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4089c0e0"/>
        <function-ref name="turnOn" scoped="" ref="0x4089c1c0"/>
        <function-ref name="setChannel" scoped="" ref="0x4089c2a0"/>
        <function-ref name="done" scoped="" ref="0x4089c380"/>
        <function-ref name="standby" scoped="" ref="0x4089c460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4089c6d0" loc="38:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4089c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4089b010"/>
        <function-ref name="channelError" scoped="" ref="0x4089c988"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4089ca68"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4089cb48"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4089cc28"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4089cd08"/>
        <function-ref name="timerTick" scoped="" ref="0x4089cde8"/>
        <function-ref name="getSender" scoped="" ref="0x4089cec8"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4089c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4089e748" loc="29:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4089e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089e920"/>
        <function-ref name="header" scoped="" ref="0x4089ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4089e1f0" loc="28:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4089e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089e3c8"/>
        <function-ref name="ready" scoped="" ref="0x4089e4a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089e588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408974b8" loc="46:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408974b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40897690"/>
        <function-ref name="ready" scoped="" ref="0x40897770"/>
        <function-ref name="sendDone" scoped="" ref="0x40897850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0x40898970" loc="45:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40898970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x408972b0"/>
        <function-ref name="channelError" scoped="" ref="0x40898c28"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x40898d08"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40898de8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40898ec8"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40897010"/>
        <function-ref name="timerTick" scoped="" ref="0x408970f0"/>
        <function-ref name="getSender" scoped="" ref="0x408971d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x40898b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40897a98" loc="47:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40897a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40897c70"/>
        <function-ref name="header" scoped="" ref="0x40897d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408981b8" loc="40:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408981b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40898390"/>
        <function-ref name="turnOn" scoped="" ref="0x40898470"/>
        <function-ref name="setChannel" scoped="" ref="0x40898550"/>
        <function-ref name="done" scoped="" ref="0x40898630"/>
        <function-ref name="standby" scoped="" ref="0x40898710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408b4010" loc="48:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408b41e8"/>
        <function-ref name="turnOn" scoped="" ref="0x408b42c8"/>
        <function-ref name="setChannel" scoped="" ref="0x408b43a8"/>
        <function-ref name="done" scoped="" ref="0x408b4488"/>
        <function-ref name="standby" scoped="" ref="0x408b4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x408b2a70" loc="50:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408b2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408b2c48"/>
        <function-ref name="insertNode" scoped="" ref="0x408b2d28"/>
        <function-ref name="getNode" scoped="" ref="0x408b2e08"/>
        <function-ref name="evicted" scoped="" ref="0x408b2ee8"/>
        <function-ref name="getIndex" scoped="" ref="0x408b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4089bcb8" loc="39:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4089bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089be90"/>
        <function-ref name="header" scoped="" ref="0x40898010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x408b01f8" loc="51:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408b01f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408b03d0"/>
        <function-ref name="clearAll" scoped="" ref="0x408b04b0"/>
        <function-ref name="get" scoped="" ref="0x408b0590"/>
        <function-ref name="set" scoped="" ref="0x408b0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408b07f8" loc="52:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408b07f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408b09d0"/>
        <function-ref name="suspend" scoped="" ref="0x408b0ab0"/>
        <function-ref name="resume" scoped="" ref="0x408b0b90"/>
        <function-ref name="run" scoped="" ref="0x408b0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4089b760" loc="38:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4089b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089b938"/>
        <function-ref name="ready" scoped="" ref="0x4089ba18"/>
        <function-ref name="sendDone" scoped="" ref="0x4089baf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0x408b5a50" loc="229:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0x408b5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408b5c28"/>
        <function-ref name="runTask" scoped="" ref="0x408b5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x408b4808" loc="49:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408b4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b2330"/>
        <function-ref name="fired" scoped="" ref="0x408b35b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b3cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x408b3a60"/>
        <function-ref name="getdt" scoped="" ref="0x408b27e0"/>
        <function-ref name="gett0" scoped="" ref="0x408b2588"/>
        <function-ref name="isRunning" scoped="" ref="0x408b3808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408b4e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408b2010"/>
        <function-ref name="startOneShot" scoped="" ref="0x408b30d8"/>
        <function-ref name="stop" scoped="" ref="0x408b3358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408cf918" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408cf918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408c84c8"/>
        <function-ref name="fired" scoped="" ref="0x408ce768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408cee70"/>
        <function-ref name="isOneShot" scoped="" ref="0x408cec18"/>
        <function-ref name="getdt" scoped="" ref="0x408c8978"/>
        <function-ref name="gett0" scoped="" ref="0x408c8720"/>
        <function-ref name="isRunning" scoped="" ref="0x408ce9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408ce010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408c81a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x408ce290"/>
        <function-ref name="stop" scoped="" ref="0x408ce510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x408caab0" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x408caab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408c6650"/>
        <function-ref name="fired" scoped="" ref="0x408c7858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408c6010"/>
        <function-ref name="isOneShot" scoped="" ref="0x408c7d08"/>
        <function-ref name="getdt" scoped="" ref="0x408c6b00"/>
        <function-ref name="gett0" scoped="" ref="0x408c68a8"/>
        <function-ref name="isRunning" scoped="" ref="0x408c7ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408c7100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408c6330"/>
        <function-ref name="startOneShot" scoped="" ref="0x408c7380"/>
        <function-ref name="stop" scoped="" ref="0x408c7600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408e0850" loc="26:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e0a28"/>
        <function-ref name="clearAll" scoped="" ref="0x408e0b08"/>
        <function-ref name="get" scoped="" ref="0x408e0be8"/>
        <function-ref name="set" scoped="" ref="0x408e0cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408dac60" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408dae38"/>
        <function-ref name="ready" scoped="" ref="0x408daf18"/>
        <function-ref name="sendDone" scoped="" ref="0x408d9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408d9258" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408d9258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d9430"/>
        <function-ref name="header" scoped="" ref="0x408d9510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408d9788" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408d9788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408d9960"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408d9a40"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408d9b20"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408d9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408da750" loc="29:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408da750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408da928"/>
        <function-ref name="header" scoped="" ref="0x408daa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408da1f8" loc="28:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408da1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408da3d0"/>
        <function-ref name="ready" scoped="" ref="0x408da4b0"/>
        <function-ref name="sendDone" scoped="" ref="0x408da590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408d8e38" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408d8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d4050"/>
        <function-ref name="ready" scoped="" ref="0x408d4130"/>
        <function-ref name="sendDone" scoped="" ref="0x408d4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408d4458" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408d4458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d4630"/>
        <function-ref name="header" scoped="" ref="0x408d4710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408d48b8" loc="38:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408d48b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408d4a90"/>
        <function-ref name="wait" scoped="" ref="0x408d4b70"/>
        <function-ref name="cancel" scoped="" ref="0x408d4c50"/>
        <function-ref name="isFree" scoped="" ref="0x408d4d30"/>
        <function-ref name="getNow" scoped="" ref="0x408d4e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x408d3c08" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408d3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408d3de0"/>
        <function-ref name="rand32" scoped="" ref="0x408d3ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408f0198" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408f0198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408f0370"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408f0450"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408f0530"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408f0610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408d8928" loc="32:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408d8928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d8b00"/>
        <function-ref name="header" scoped="" ref="0x408d8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408d83d0" loc="31:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408d83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d85a8"/>
        <function-ref name="ready" scoped="" ref="0x408d8688"/>
        <function-ref name="sendDone" scoped="" ref="0x408d8768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x408ec1e0" loc="67:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x408ec1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408ec3b8"/>
        <function-ref name="runTask" scoped="" ref="0x408ec498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x408f6c40" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408f6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408f6e18"/>
        <function-ref name="rand32" scoped="" ref="0x408f6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x408f6380" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x408f6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f69a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408f9010" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x408f36e0" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408f36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408f38b8"/>
        <function-ref name="rand32" scoped="" ref="0x408f3998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x408f8dd0" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x408f8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408f88b0" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408f88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f8a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409098a0" loc="33:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40909a78"/>
        <function-ref name="ready" scoped="" ref="0x40909b58"/>
        <function-ref name="sendDone" scoped="" ref="0x40909c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40909e80" loc="34:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40909e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40908070"/>
        <function-ref name="header" scoped="" ref="0x40908150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409083a0" loc="36:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40908578"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40908658"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40908738"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40908818"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409088f8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409089d8"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40908ab8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40908b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40909390" loc="29:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40909390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40909568"/>
        <function-ref name="header" scoped="" ref="0x40909648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408dcdf0" loc="28:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408dcdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40909010"/>
        <function-ref name="ready" scoped="" ref="0x409090f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409091d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40907d28" loc="36:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40907d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40907f00"/>
        <function-ref name="ready" scoped="" ref="0x40904010"/>
        <function-ref name="sendDone" scoped="" ref="0x409040f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40904338" loc="37:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40904338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40904510"/>
        <function-ref name="header" scoped="" ref="0x409045f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40904798" loc="38:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40904798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40904970"/>
        <function-ref name="wait" scoped="" ref="0x40904a50"/>
        <function-ref name="cancel" scoped="" ref="0x40904b30"/>
        <function-ref name="isFree" scoped="" ref="0x40904c10"/>
        <function-ref name="getNow" scoped="" ref="0x40904cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40907818" loc="32:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40907818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409079f0"/>
        <function-ref name="header" scoped="" ref="0x40907ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x40904ee0" loc="40:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40904ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409030e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409031c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409032a0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40903380"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40903460"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40903540"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40903620"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40903700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409072c0" loc="31:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409072c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40907498"/>
        <function-ref name="ready" scoped="" ref="0x40907578"/>
        <function-ref name="sendDone" scoped="" ref="0x40907658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408dbda8" loc="28:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408dbda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090a010"/>
        <function-ref name="stopDone" scoped="" ref="0x4090a0f0"/>
        <function-ref name="start" scoped="" ref="0x4090a1d0"/>
        <function-ref name="stop" scoped="" ref="0x4090a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409118e0" loc="36:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409118e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40911ab8"/>
        <function-ref name="request" scoped="" ref="0x40911b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40910748" loc="44:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40910748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40910920"/>
        <function-ref name="ready" scoped="" ref="0x40910a00"/>
        <function-ref name="sendDone" scoped="" ref="0x40910ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4090fb00" loc="48:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4090fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090fcd8"/>
        <function-ref name="getPayload" scoped="" ref="0x4090fdb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090fe98"/>
        <function-ref name="cancel" scoped="" ref="0x4092d010"/>
        <function-ref name="sendDone" scoped="" ref="0x4092d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4092d250" loc="49:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4092d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092d428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40912930" loc="33:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40912930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40912b08"/>
        <function-ref name="turnOn" scoped="" ref="0x40912be8"/>
        <function-ref name="setChannel" scoped="" ref="0x40912cc8"/>
        <function-ref name="done" scoped="" ref="0x40912da8"/>
        <function-ref name="standby" scoped="" ref="0x40912e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4090a3f0" loc="29:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4090a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090a5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4090a6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090a788"/>
        <function-ref name="cancel" scoped="" ref="0x4090a868"/>
        <function-ref name="sendDone" scoped="" ref="0x4090a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4090ada0" loc="31:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4090ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40912010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409120f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409121d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409122b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40912390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40912470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40912550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40912630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40912710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40911cf8" loc="38:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40911cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40911ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409114e8" loc="35:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409114e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409116c0"/>
        <function-ref name="header" scoped="" ref="0x409117a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40910090" loc="43:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40910090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40910268"/>
        <function-ref name="turnOn" scoped="" ref="0x40910348"/>
        <function-ref name="setChannel" scoped="" ref="0x40910428"/>
        <function-ref name="done" scoped="" ref="0x40910508"/>
        <function-ref name="standby" scoped="" ref="0x409105e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4090f528" loc="47:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4090f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090f700"/>
        <function-ref name="stopDone" scoped="" ref="0x4090f7e0"/>
        <function-ref name="start" scoped="" ref="0x4090f8c0"/>
        <function-ref name="stop" scoped="" ref="0x4090f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4092d588" loc="51:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4092d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4092d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090aa88" loc="30:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40910c40" loc="45:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40910c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40910e18"/>
        <function-ref name="header" scoped="" ref="0x40910ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40911010" loc="34:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40911010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409111e8"/>
        <function-ref name="ready" scoped="" ref="0x409112c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409113a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x4090f090" loc="46:/opt/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x4090f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4090f2e8"/>
        <function-ref name="request" scoped="" ref="0x4090f3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40928288" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40928288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40928460"/>
        <function-ref name="request" scoped="" ref="0x40928540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40929128" loc="30:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40929128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40929300"/>
        <function-ref name="turnOn" scoped="" ref="0x409293e0"/>
        <function-ref name="setChannel" scoped="" ref="0x409294c0"/>
        <function-ref name="done" scoped="" ref="0x409295a0"/>
        <function-ref name="standby" scoped="" ref="0x40929680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40929d78" loc="32:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40929d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40928010"/>
        <function-ref name="header" scoped="" ref="0x409280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40929820" loc="31:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40929820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409299f8"/>
        <function-ref name="ready" scoped="" ref="0x40929ad8"/>
        <function-ref name="sendDone" scoped="" ref="0x40929bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x40928720" loc="36:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x40928720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409288f8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x40928e38"/>
        <function-ref name="getPayload" scoped="" ref="0x40928ab8"/>
        <function-ref name="setLength" scoped="" ref="0x40928b98"/>
        <function-ref name="getLength" scoped="" ref="0x40928c78"/>
        <function-ref name="getMaxLength" scoped="" ref="0x40928d58"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409289d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409232c8" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409232c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409234a0"/>
        <function-ref name="request" scoped="" ref="0x40923580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40934748" loc="56:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40934748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40934e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x40932a58" loc="60:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40932a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40931638"/>
        <function-ref name="get" scoped="" ref="0x40931378"/>
        <function-ref name="isSet" scoped="" ref="0x409310b8"/>
        <function-ref name="set" scoped="" ref="0x409318f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40927e60" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40927e60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402d90d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402d90d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40924050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4094e2b0" loc="63:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4094e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4094edb0"/>
        <function-ref name="clear" scoped="" ref="0x4094d170"/>
        <function-ref name="isValid" scoped="" ref="0x4094ea00"/>
        <function-ref name="set" scoped="" ref="0x4094d520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0x4093ab20" loc="49:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x4093ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x4093acf8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x4093add8"/>
        <function-ref name="spiWrite" scoped="" ref="0x4093aeb8"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40921010"/>
        <function-ref name="crcByte" scoped="" ref="0x409210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409241f8" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409241f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409243d0"/>
        <function-ref name="turnOn" scoped="" ref="0x409244b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40924590"/>
        <function-ref name="done" scoped="" ref="0x40924670"/>
        <function-ref name="standby" scoped="" ref="0x40924750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40921cd8" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40921cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40921eb0"/>
        <function-ref name="isInput" scoped="" ref="0x40920010"/>
        <function-ref name="toggle" scoped="" ref="0x409200f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409201d0"/>
        <function-ref name="get" scoped="" ref="0x409202b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40920390"/>
        <function-ref name="set" scoped="" ref="0x40920470"/>
        <function-ref name="clr" scoped="" ref="0x40920550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0x409356d0" loc="59:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409322d0"/>
        <function-ref name="get" scoped="" ref="0x40932010"/>
        <function-ref name="isSet" scoped="" ref="0x40935d18"/>
        <function-ref name="set" scoped="" ref="0x40932590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x4094da48" loc="64:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4094da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4094b0a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4093c3a0" loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4093c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4093c578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409212f0" loc="51:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409214c8"/>
        <function-ref name="isInput" scoped="" ref="0x409215a8"/>
        <function-ref name="toggle" scoped="" ref="0x40921688"/>
        <function-ref name="isOutput" scoped="" ref="0x40921768"/>
        <function-ref name="get" scoped="" ref="0x40921848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40921928"/>
        <function-ref name="set" scoped="" ref="0x40921a08"/>
        <function-ref name="clr" scoped="" ref="0x40921ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40924e48" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40924e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40923050"/>
        <function-ref name="header" scoped="" ref="0x40923130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4094a298" loc="68:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4094a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4094a470"/>
        <function-ref name="wait" scoped="" ref="0x4094a550"/>
        <function-ref name="cancel" scoped="" ref="0x4094a630"/>
        <function-ref name="isFree" scoped="" ref="0x4094a710"/>
        <function-ref name="getNow" scoped="" ref="0x4094a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40931e28" loc="61:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40931e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092fa08"/>
        <function-ref name="get" scoped="" ref="0x4092f748"/>
        <function-ref name="isSet" scoped="" ref="0x4092f488"/>
        <function-ref name="set" scoped="" ref="0x4092fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40927800" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40927800"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402d90d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402d90d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409279d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4093e310" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4093e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4093e4e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4093e5c8"/>
        <function-ref name="request" scoped="" ref="0x4093e6a8"/>
        <function-ref name="granted" scoped="" ref="0x4093e788"/>
        <function-ref name="isOwner" scoped="" ref="0x4093e868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409237c0" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40923998"/>
        <function-ref name="isInput" scoped="" ref="0x40923a78"/>
        <function-ref name="toggle" scoped="" ref="0x40923b58"/>
        <function-ref name="isOutput" scoped="" ref="0x40923c38"/>
        <function-ref name="get" scoped="" ref="0x40923d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40923df8"/>
        <function-ref name="set" scoped="" ref="0x40923ed8"/>
        <function-ref name="clr" scoped="" ref="0x40922010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409248f0" loc="38:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409248f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40924ac8"/>
        <function-ref name="ready" scoped="" ref="0x40924ba8"/>
        <function-ref name="sendDone" scoped="" ref="0x40924c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40937e70" loc="54:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40937e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409390e0"/>
        <function-ref name="disable" scoped="" ref="0x409391c0"/>
        <function-ref name="captured" scoped="" ref="0x409392a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40939380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x40938300" loc="58:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40938300"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40938ec8"/>
        <function-ref name="get" scoped="" ref="0x40938c08"/>
        <function-ref name="isSet" scoped="" ref="0x40938948"/>
        <function-ref name="set" scoped="" ref="0x409351b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4094bbc8" loc="67:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4094bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4094bda0"/>
        <function-ref name="suspend" scoped="" ref="0x4094be80"/>
        <function-ref name="resume" scoped="" ref="0x4094a010"/>
        <function-ref name="run" scoped="" ref="0x4094a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x4094b328" loc="66:/opt/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x4094b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x4094b500"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x4094ba40"/>
        <function-ref name="getPayload" scoped="" ref="0x4094b6c0"/>
        <function-ref name="setLength" scoped="" ref="0x4094b7a0"/>
        <function-ref name="getLength" scoped="" ref="0x4094b880"/>
        <function-ref name="getMaxLength" scoped="" ref="0x4094b960"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4094b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40993580" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40993580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40993758"/>
        <function-ref name="isInput" scoped="" ref="0x40993838"/>
        <function-ref name="toggle" scoped="" ref="0x40993918"/>
        <function-ref name="isOutput" scoped="" ref="0x409939f8"/>
        <function-ref name="get" scoped="" ref="0x40993ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40993bb8"/>
        <function-ref name="set" scoped="" ref="0x40993c98"/>
        <function-ref name="clr" scoped="" ref="0x40993d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40990278" loc="40:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40990278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40990450"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40990530"/>
        <function-ref name="spiWrite" scoped="" ref="0x40990610"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x409906f0"/>
        <function-ref name="crcByte" scoped="" ref="0x409907d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409946f0" loc="32:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409946f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409948c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40994ac8" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40994ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40994ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40994d80"/>
        <function-ref name="toggle" scoped="" ref="0x40994e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40993010"/>
        <function-ref name="get" scoped="" ref="0x409930f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409931d0"/>
        <function-ref name="set" scoped="" ref="0x409932b0"/>
        <function-ref name="clr" scoped="" ref="0x40993390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40992810" loc="38:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40992810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TRF230" ref="0x40504950"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40991d58"/>
        <function-ref name="fired" scoped="" ref="0x40991528"/>
        <function-ref name="startAt" scoped="" ref="0x40991a18"/>
        <function-ref name="isRunning" scoped="" ref="0x409917a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40990010"/>
        <function-ref name="start" scoped="" ref="0x40991010"/>
        <function-ref name="stop" scoped="" ref="0x409912b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40994010" loc="31:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40994010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409941e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409942c8"/>
        <function-ref name="request" scoped="" ref="0x409943a8"/>
        <function-ref name="granted" scoped="" ref="0x40994488"/>
        <function-ref name="isOwner" scoped="" ref="0x40994568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40925538" loc="30:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40925538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40925710"/>
        <function-ref name="isInput" scoped="" ref="0x409257f0"/>
        <function-ref name="toggle" scoped="" ref="0x409258d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409259b0"/>
        <function-ref name="get" scoped="" ref="0x40925a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40925b70"/>
        <function-ref name="set" scoped="" ref="0x40925c50"/>
        <function-ref name="clr" scoped="" ref="0x40925d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40992010" loc="37:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40992010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409921e8"/>
        <function-ref name="disable" scoped="" ref="0x409922c8"/>
        <function-ref name="captured" scoped="" ref="0x409923a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40992488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x409ba950" loc="40:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x409ba950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409bab28"/>
        <function-ref name="isInput" scoped="" ref="0x409bac08"/>
        <function-ref name="toggle" scoped="" ref="0x409bace8"/>
        <function-ref name="isOutput" scoped="" ref="0x409badc8"/>
        <function-ref name="get" scoped="" ref="0x409baea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409b9010"/>
        <function-ref name="set" scoped="" ref="0x409b90f0"/>
        <function-ref name="clr" scoped="" ref="0x409b91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x409bc258" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x409bc258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x409bc430"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x409bc510"/>
        <function-ref name="spiWrite" scoped="" ref="0x409bc5f0"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x409bc6d0"/>
        <function-ref name="crcByte" scoped="" ref="0x409bc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x409bcb38" loc="39:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409bcb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409ba640"/>
        <function-ref name="test" scoped="" ref="0x409ba150"/>
        <function-ref name="get" scoped="" ref="0x409bb200"/>
        <function-ref name="captured" scoped="" ref="0x409bb718"/>
        <function-ref name="reset" scoped="" ref="0x409bb9b8"/>
        <function-ref name="isOn" scoped="" ref="0x409ba3c8"/>
        <function-ref name="set" scoped="" ref="0x409bb478"/>
        <function-ref name="start" scoped="" ref="0x409bbc30"/>
        <function-ref name="stop" scoped="" ref="0x409bbea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x409b93d8" loc="41:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x409b93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409b95b0"/>
        <function-ref name="isInput" scoped="" ref="0x409b9690"/>
        <function-ref name="toggle" scoped="" ref="0x409b9770"/>
        <function-ref name="isOutput" scoped="" ref="0x409b9850"/>
        <function-ref name="get" scoped="" ref="0x409b9930"/>
        <function-ref name="makeOutput" scoped="" ref="0x409b9a10"/>
        <function-ref name="set" scoped="" ref="0x409b9af0"/>
        <function-ref name="clr" scoped="" ref="0x409b9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409bdec0" loc="32:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409bdec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409bc0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x409bd838" loc="31:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409bd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409bda10"/>
        <function-ref name="disable" scoped="" ref="0x409bdaf0"/>
        <function-ref name="captured" scoped="" ref="0x409bdbd0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409bdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x409c4a28" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x409c4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c4c00"/>
        <function-ref name="sendDone" scoped="" ref="0x409c4ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409ca5e8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409ca5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409ca268" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409ca268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ca440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409c9190" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409c9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409c9368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409c9448"/>
        <function-ref name="request" scoped="" ref="0x409c9528"/>
        <function-ref name="granted" scoped="" ref="0x409c9608"/>
        <function-ref name="isOwner" scoped="" ref="0x409c96e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x409e8860" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x409e8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409e8a38"/>
        <function-ref name="runTask" scoped="" ref="0x409e8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x409e39a0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x409e39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e3b78"/>
        <function-ref name="sendDone" scoped="" ref="0x409e3c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x409e0010" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x409e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e01e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409e02c8"/>
        <function-ref name="request" scoped="" ref="0x409e03a8"/>
        <function-ref name="granted" scoped="" ref="0x409e0488"/>
        <function-ref name="isOwner" scoped="" ref="0x409e0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409e3628" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409e3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409e3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409e32c8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409e32c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409e34a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x409d6320" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x409d6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x409d64f8"/>
        <function-ref name="sleep" scoped="" ref="0x409e1950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x409d66b8"/>
        <function-ref name="dataReady" scoped="" ref="0x409e1a30"/>
        <function-ref name="initMaster" scoped="" ref="0x409d6878"/>
        <function-ref name="setMasterBit" scoped="" ref="0x409d6958"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x409d6a38"/>
        <function-ref name="read" scoped="" ref="0x409d6b18"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x409d6bf8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x409d6cd8"/>
        <function-ref name="setClock" scoped="" ref="0x409d6db8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x409d6e98"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x409e1010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x409e1170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x409e1250"/>
        <function-ref name="write" scoped="" ref="0x409e1330"/>
        <function-ref name="enableSpi" scoped="" ref="0x409e1410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x409e14f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x409e15d0"/>
        <function-ref name="getClock" scoped="" ref="0x409e16b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x409e1790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x409d65d8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x409d6798"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x409e1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409e2100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e22d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409e23b8"/>
        <function-ref name="request" scoped="" ref="0x409e2498"/>
        <function-ref name="granted" scoped="" ref="0x409e2578"/>
        <function-ref name="isOwner" scoped="" ref="0x409e2658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x409f4ac0" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x409f4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x409f4c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x409f4640" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409f4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409f4818"/>
        <function-ref name="userId" scoped="" ref="0x409f48f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a130c0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a13298"/>
        <function-ref name="sleep" scoped="" ref="0x40a12710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a13458"/>
        <function-ref name="dataReady" scoped="" ref="0x40a127f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a13618"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a136f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a137d8"/>
        <function-ref name="read" scoped="" ref="0x40a138b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a13998"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a13a78"/>
        <function-ref name="setClock" scoped="" ref="0x40a13b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a13c38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a13d18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a13e78"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a12010"/>
        <function-ref name="write" scoped="" ref="0x40a120f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a121d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a122b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a12390"/>
        <function-ref name="getClock" scoped="" ref="0x40a12470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a12550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a13378"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a13538"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a12630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a09200" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a09200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a093d8"/>
        <function-ref name="isInput" scoped="" ref="0x40a094b8"/>
        <function-ref name="toggle" scoped="" ref="0x40a09598"/>
        <function-ref name="isOutput" scoped="" ref="0x40a09678"/>
        <function-ref name="get" scoped="" ref="0x40a09758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a09838"/>
        <function-ref name="set" scoped="" ref="0x40a09918"/>
        <function-ref name="clr" scoped="" ref="0x40a099f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a0dd10" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a0dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a0dee8"/>
        <function-ref name="isInput" scoped="" ref="0x40a0a010"/>
        <function-ref name="toggle" scoped="" ref="0x40a0a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a0a1d0"/>
        <function-ref name="get" scoped="" ref="0x40a0a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a0a390"/>
        <function-ref name="set" scoped="" ref="0x40a0a470"/>
        <function-ref name="clr" scoped="" ref="0x40a0a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a0d338" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a0d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a0d510"/>
        <function-ref name="isInput" scoped="" ref="0x40a0d5f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a0d6d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a0d7b0"/>
        <function-ref name="get" scoped="" ref="0x40a0d890"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a0d970"/>
        <function-ref name="set" scoped="" ref="0x40a0da50"/>
        <function-ref name="clr" scoped="" ref="0x40a0db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a0be30" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a0be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0d050"/>
        <function-ref name="stop" scoped="" ref="0x40a0d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a09c00" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a09c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a09dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a0f4a0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a0f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a0f678"/>
        <function-ref name="sleep" scoped="" ref="0x40a0eb10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a0f838"/>
        <function-ref name="dataReady" scoped="" ref="0x40a0ebf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a0f9f8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a0fad8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a0fbb8"/>
        <function-ref name="read" scoped="" ref="0x40a0fc98"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a0fd78"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a0fe58"/>
        <function-ref name="setClock" scoped="" ref="0x40a0e010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a0e0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a0e1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a0e330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a0e410"/>
        <function-ref name="write" scoped="" ref="0x40a0e4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a0e5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a0e6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a0e790"/>
        <function-ref name="getClock" scoped="" ref="0x40a0e870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a0e950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a0f758"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a0f918"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a0ea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a0a740" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a0a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a0a918"/>
        <function-ref name="isInput" scoped="" ref="0x40a0a9f8"/>
        <function-ref name="toggle" scoped="" ref="0x40a0aad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a0abb8"/>
        <function-ref name="get" scoped="" ref="0x40a0ac98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a0ad78"/>
        <function-ref name="set" scoped="" ref="0x40a0ae58"/>
        <function-ref name="clr" scoped="" ref="0x40a09010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a29ea0" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a29ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a4c0c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a4c1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a4c790" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a4c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a4c978"/>
        <function-ref name="configure" scoped="" ref="0x40a4ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a29760" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a29760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a29948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a29a28"/>
        <function-ref name="request" scoped="" ref="0x40a29b08"/>
        <function-ref name="granted" scoped="" ref="0x40a29be8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a29cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a4c2e0" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a4c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a4c4b8"/>
        <function-ref name="userId" scoped="" ref="0x40a4c598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e10ec8" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e10ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40e0d220" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40e0d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e0d3f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e0d4d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e0d5b8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e0d698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e0c958" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e0c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e0cb40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e0cc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e0b2f8" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e0b2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e0b4e0"/>
        <function-ref name="configure" scoped="" ref="0x40e0b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e0b720" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e0b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e0b8f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e0b9d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e0bab8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e0bb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e0c218" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e0c218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e0c400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e0c4e0"/>
        <function-ref name="request" scoped="" ref="0x40e0c5c0"/>
        <function-ref name="granted" scoped="" ref="0x40e0c6a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e0c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e0cd60" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e0cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e0b010"/>
        <function-ref name="userId" scoped="" ref="0x40e0b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e0bd18" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e0bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e0bef0"/>
        <function-ref name="runTask" scoped="" ref="0x40e0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a7ec88" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a7ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TOne" ref="0x40358b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aa5150"/>
        <function-ref name="fired" scoped="" ref="0x40aa6908"/>
        <function-ref name="startAt" scoped="" ref="0x40aa6df8"/>
        <function-ref name="isRunning" scoped="" ref="0x40aa6b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40aa53c8"/>
        <function-ref name="start" scoped="" ref="0x40aa63f0"/>
        <function-ref name="stop" scoped="" ref="0x40aa6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e33db0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e33db0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402dac98"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402dac98"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TOne" ref="0x40358b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e31278"/>
        <function-ref name="fired" scoped="" ref="0x40e32a30"/>
        <function-ref name="startAt" scoped="" ref="0x40e32f20"/>
        <function-ref name="isRunning" scoped="" ref="0x40e32ca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e314f0"/>
        <function-ref name="start" scoped="" ref="0x40e32518"/>
        <function-ref name="stop" scoped="" ref="0x40e327b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x40e2ea60" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x40e2ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e2c010"/>
        <function-ref name="fired" scoped="" ref="0x40e2d5f0"/>
        <function-ref name="get" scoped="" ref="0x40e2d0d8"/>
        <function-ref name="reset" scoped="" ref="0x40e2d868"/>
        <function-ref name="isOn" scoped="" ref="0x40e2c288"/>
        <function-ref name="set" scoped="" ref="0x40e2d350"/>
        <function-ref name="start" scoped="" ref="0x40e2dae0"/>
        <function-ref name="stop" scoped="" ref="0x40e2dd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x40e317b0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x40e317b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e2e288"/>
        <function-ref name="test" scoped="" ref="0x40e30d08"/>
        <function-ref name="get" scoped="" ref="0x40e31df8"/>
        <function-ref name="setScale" scoped="" ref="0x40e2e500"/>
        <function-ref name="getScale" scoped="" ref="0x40e2e7a0"/>
        <function-ref name="reset" scoped="" ref="0x40e305a0"/>
        <function-ref name="overflow" scoped="" ref="0x40e30328"/>
        <function-ref name="isOn" scoped="" ref="0x40e2e010"/>
        <function-ref name="set" scoped="" ref="0x40e30088"/>
        <function-ref name="start" scoped="" ref="0x40e30818"/>
        <function-ref name="stop" scoped="" ref="0x40e30a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40aa3e40" loc="31:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40aa3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032f780"/>
            <typename><typedef-ref name="TMicro" ref="0x4032fb48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40aa05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40acf528" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40acf528"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40acf700"/>
        <function-ref name="stop" scoped="" ref="0x40acf7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40aca210" loc="52:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40aca210"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40aca3e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40aca4c8"/>
        <function-ref name="reset" scoped="" ref="0x40aca5a8"/>
        <function-ref name="start" scoped="" ref="0x40aca688"/>
        <function-ref name="stop" scoped="" ref="0x40aca768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40ac8e00" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40ac8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40acb0f0"/>
        <function-ref name="stop" scoped="" ref="0x40acb470"/>
        <function-ref name="newData" scoped="" ref="0x40acb1d0"/>
        <function-ref name="start" scoped="" ref="0x40acb2b0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40acb390"/>
        <function-ref name="requestData" scoped="" ref="0x40acb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40acc0d8" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40acc0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40acc2b0"/>
        <function-ref name="stop" scoped="" ref="0x40acc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40acace0" loc="53:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40acace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40acaeb8"/>
        <function-ref name="stop" scoped="" ref="0x40ac6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x40abfde0" loc="57:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x40abfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40abe010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x40abf660" loc="56:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x40abf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40abf838"/>
        <function-ref name="getPayload" scoped="" ref="0x40abf918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40abf9f8"/>
        <function-ref name="cancel" scoped="" ref="0x40abfad8"/>
        <function-ref name="sendDone" scoped="" ref="0x40abfbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40ac0b80" loc="53:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ac0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ac0d58"/>
        <function-ref name="getPayload" scoped="" ref="0x40ac0e38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ac0f18"/>
        <function-ref name="cancel" scoped="" ref="0x40abf010"/>
        <function-ref name="sendDone" scoped="" ref="0x40abf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40ac1bf0" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40ac1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ac1dc8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40ac1ea8"/>
        <function-ref name="reset" scoped="" ref="0x40ac0010"/>
        <function-ref name="start" scoped="" ref="0x40ac00f0"/>
        <function-ref name="stop" scoped="" ref="0x40ac01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40ac1100" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40ac1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40ac13b8"/>
        <function-ref name="stop" scoped="" ref="0x40ac1738"/>
        <function-ref name="newData" scoped="" ref="0x40ac1498"/>
        <function-ref name="start" scoped="" ref="0x40ac1578"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40ac1658"/>
        <function-ref name="requestData" scoped="" ref="0x40ac12d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40abf278" loc="54:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40abf278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40abf450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40abe180" loc="59:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40abe180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40abe358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40abe438"/>
        <function-ref name="led1On" scoped="" ref="0x40abe518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40abe5f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40abe6d8"/>
        <function-ref name="get" scoped="" ref="0x40abe7b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40abe898"/>
        <function-ref name="led2Off" scoped="" ref="0x40abec18"/>
        <function-ref name="set" scoped="" ref="0x40abe978"/>
        <function-ref name="led0On" scoped="" ref="0x40abea58"/>
        <function-ref name="led2On" scoped="" ref="0x40abeb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ac68a0" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ac68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ac6a78"/>
        <function-ref name="stop" scoped="" ref="0x40ac6b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40ac0748" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40ac0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ac0920"/>
        <function-ref name="stop" scoped="" ref="0x40ac0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b03cc0" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b03cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b03e98"/>
        <function-ref name="getPayload" scoped="" ref="0x40b35010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b350f0"/>
        <function-ref name="cancel" scoped="" ref="0x40b351d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b353f0" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b353f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b355c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b356a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40b35788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b35868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b35948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b35a88" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b35a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b35c60"/>
        <function-ref name="source" scoped="" ref="0x40b35d40"/>
        <function-ref name="address" scoped="" ref="0x40b35e20"/>
        <function-ref name="destination" scoped="" ref="0x40b35f00"/>
        <function-ref name="setSource" scoped="" ref="0x40b34010"/>
        <function-ref name="setDestination" scoped="" ref="0x40b340f0"/>
        <function-ref name="type" scoped="" ref="0x40b341d0"/>
        <function-ref name="setType" scoped="" ref="0x40b342b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40b34390"/>
        <function-ref name="setGroup" scoped="" ref="0x40b34470"/>
        <function-ref name="localGroup" scoped="" ref="0x40b34550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40b346b0" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40b346b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b34888"/>
        <function-ref name="noAck" scoped="" ref="0x40b34968"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b34a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e54c30" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e54c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e54e08"/>
        <function-ref name="getPayload" scoped="" ref="0x40e54ee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e50010"/>
        <function-ref name="cancel" scoped="" ref="0x40e500f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e501d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40e50340" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e50340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e50518"/>
        <function-ref name="getPayload" scoped="" ref="0x40e505f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e506d8"/>
        <function-ref name="cancel" scoped="" ref="0x40e507b8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e50898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e509d8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e50bb0"/>
        <function-ref name="source" scoped="" ref="0x40e50c90"/>
        <function-ref name="address" scoped="" ref="0x40e50d70"/>
        <function-ref name="destination" scoped="" ref="0x40e50e50"/>
        <function-ref name="setSource" scoped="" ref="0x40e4f010"/>
        <function-ref name="setDestination" scoped="" ref="0x40e4f0f0"/>
        <function-ref name="type" scoped="" ref="0x40e4f1d0"/>
        <function-ref name="setType" scoped="" ref="0x40e4f2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e4f390"/>
        <function-ref name="setGroup" scoped="" ref="0x40e4f470"/>
        <function-ref name="localGroup" scoped="" ref="0x40e4f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b17220" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b17220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b173f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40b174d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b175b8"/>
        <function-ref name="cancel" scoped="" ref="0x40b17698"/>
        <function-ref name="sendDone" scoped="" ref="0x40b17778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40b3cab8" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b3cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b3cca0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b3cd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b3ce60"/>
        <function-ref name="cancel" scoped="" ref="0x40b3b010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b3b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b3c348" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b3c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b3c530"/>
        <function-ref name="getPayload" scoped="" ref="0x40b3c610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b3c6f0"/>
        <function-ref name="cancel" scoped="" ref="0x40b3c7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b3c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40b3be08" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b3be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b39010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b390f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b391d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b392b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b39390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40b39510" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40b39510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b396e8"/>
        <function-ref name="runTask" scoped="" ref="0x40b397c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40b39948" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40b39948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b39b20"/>
        <function-ref name="runTask" scoped="" ref="0x40b39c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40b3b230" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b3b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b3b408"/>
        <function-ref name="source" scoped="" ref="0x40b3b4e8"/>
        <function-ref name="address" scoped="" ref="0x40b3b5c8"/>
        <function-ref name="destination" scoped="" ref="0x40b3b6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40b3b788"/>
        <function-ref name="setDestination" scoped="" ref="0x40b3b868"/>
        <function-ref name="type" scoped="" ref="0x40b3b948"/>
        <function-ref name="setType" scoped="" ref="0x40b3ba28"/>
        <function-ref name="isForMe" scoped="" ref="0x40b3bb08"/>
        <function-ref name="setGroup" scoped="" ref="0x40b3bbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40b3bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b329b8" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b329b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b32b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b32c70"/>
        <function-ref name="getPayload" scoped="" ref="0x40b32d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b32e30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b32f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b326a0" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b326a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b32878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b31070" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b31070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b31248"/>
        <function-ref name="source" scoped="" ref="0x40b31328"/>
        <function-ref name="address" scoped="" ref="0x40b31408"/>
        <function-ref name="destination" scoped="" ref="0x40b314e8"/>
        <function-ref name="setSource" scoped="" ref="0x40b315c8"/>
        <function-ref name="setDestination" scoped="" ref="0x40b316a8"/>
        <function-ref name="type" scoped="" ref="0x40b31788"/>
        <function-ref name="setType" scoped="" ref="0x40b31868"/>
        <function-ref name="isForMe" scoped="" ref="0x40b31948"/>
        <function-ref name="setGroup" scoped="" ref="0x40b31a28"/>
        <function-ref name="localGroup" scoped="" ref="0x40b31b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b540d8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b540d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b542b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b54390"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b54470"/>
        <function-ref name="cancel" scoped="" ref="0x40b54550"/>
        <function-ref name="sendDone" scoped="" ref="0x40b54630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b54770" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b54770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b54948"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b54a28"/>
        <function-ref name="getPayload" scoped="" ref="0x40b54b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b54be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b54cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b54e08" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b54e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b53010"/>
        <function-ref name="source" scoped="" ref="0x40b530f0"/>
        <function-ref name="address" scoped="" ref="0x40b531d0"/>
        <function-ref name="destination" scoped="" ref="0x40b532b0"/>
        <function-ref name="setSource" scoped="" ref="0x40b53390"/>
        <function-ref name="setDestination" scoped="" ref="0x40b53470"/>
        <function-ref name="type" scoped="" ref="0x40b53550"/>
        <function-ref name="setType" scoped="" ref="0x40b53630"/>
        <function-ref name="isForMe" scoped="" ref="0x40b53710"/>
        <function-ref name="setGroup" scoped="" ref="0x40b537f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40b538d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40b53a30" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40b53a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b53c08"/>
        <function-ref name="noAck" scoped="" ref="0x40b53ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b53dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e8c0c8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e8c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e8c2a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e8c380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e8c460"/>
        <function-ref name="cancel" scoped="" ref="0x40e8c540"/>
        <function-ref name="sendDone" scoped="" ref="0x40e8c620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40e8c790" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e8c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e8c968"/>
        <function-ref name="getPayload" scoped="" ref="0x40e8ca48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e8cb28"/>
        <function-ref name="cancel" scoped="" ref="0x40e8cc08"/>
        <function-ref name="sendDone" scoped="" ref="0x40e8cce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e8ce28" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e8ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e8b050"/>
        <function-ref name="source" scoped="" ref="0x40e8b130"/>
        <function-ref name="address" scoped="" ref="0x40e8b210"/>
        <function-ref name="destination" scoped="" ref="0x40e8b2f0"/>
        <function-ref name="setSource" scoped="" ref="0x40e8b3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e8b4b0"/>
        <function-ref name="type" scoped="" ref="0x40e8b590"/>
        <function-ref name="setType" scoped="" ref="0x40e8b670"/>
        <function-ref name="isForMe" scoped="" ref="0x40e8b750"/>
        <function-ref name="setGroup" scoped="" ref="0x40e8b830"/>
        <function-ref name="localGroup" scoped="" ref="0x40e8b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b508d8" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b508d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b50ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b50b90"/>
        <function-ref name="getPayload" scoped="" ref="0x40b50c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b50d50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b50e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b505c0" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b505c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b50798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b4f010" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b4f1e8"/>
        <function-ref name="source" scoped="" ref="0x40b4f2c8"/>
        <function-ref name="address" scoped="" ref="0x40b4f3a8"/>
        <function-ref name="destination" scoped="" ref="0x40b4f488"/>
        <function-ref name="setSource" scoped="" ref="0x40b4f568"/>
        <function-ref name="setDestination" scoped="" ref="0x40b4f648"/>
        <function-ref name="type" scoped="" ref="0x40b4f728"/>
        <function-ref name="setType" scoped="" ref="0x40b4f808"/>
        <function-ref name="isForMe" scoped="" ref="0x40b4f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40b4f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40b4faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b4eb90" loc="35:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b4eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b4ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b4eef8" loc="36:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b4eef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b4b0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b4b1c0"/>
        <function-ref name="led1On" scoped="" ref="0x40b4b2a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b4b380"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b4b460"/>
        <function-ref name="get" scoped="" ref="0x40b4b540"/>
        <function-ref name="led1Off" scoped="" ref="0x40b4b620"/>
        <function-ref name="led2Off" scoped="" ref="0x40b4b9a0"/>
        <function-ref name="set" scoped="" ref="0x40b4b700"/>
        <function-ref name="led0On" scoped="" ref="0x40b4b7e0"/>
        <function-ref name="led2On" scoped="" ref="0x40b4b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40bfabd8" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestDisseminationAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bfabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40bf9218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40b6ad98" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestDisseminationAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40b6ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40bfa918"/>
        <function-ref name="get" scoped="" ref="0x40bfa400"/>
        <function-ref name="set" scoped="" ref="0x40bfa678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x40e7ac28" loc="62:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x40e7ac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e7ae00"/>
        <function-ref name="runTask" scoped="" ref="0x40e7aee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x40e7b7c0" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40e7b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x40e7ba78"/>
        <function-ref name="storeData" scoped="" ref="0x40e7bdf8"/>
        <function-ref name="newData" scoped="" ref="0x40e7bb58"/>
        <function-ref name="start" scoped="" ref="0x40e7bc38"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40e7bd18"/>
        <function-ref name="stop" scoped="" ref="0x40e7b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40e7de30" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40e7de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40e7b468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e7a010" loc="52:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e7a1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e7a2c8"/>
        <function-ref name="led1On" scoped="" ref="0x40e7a3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e7a488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e7a568"/>
        <function-ref name="get" scoped="" ref="0x40e7a648"/>
        <function-ref name="led1Off" scoped="" ref="0x40e7a728"/>
        <function-ref name="led0On" scoped="" ref="0x40e7aaa8"/>
        <function-ref name="set" scoped="" ref="0x40e7a8e8"/>
        <function-ref name="led2On" scoped="" ref="0x40e7a808"/>
        <function-ref name="led2Off" scoped="" ref="0x40e7a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40e7d010" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40e7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:27" alignment="I:1"><struct-ref name="DissmnCtrlMsg" ref="0x4002d2f8"/>
            <typename><typedef-ref name="ctrl_data_t" ref="0x4002dc40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40e7db70"/>
        <function-ref name="get" scoped="" ref="0x40e7d658"/>
        <function-ref name="set" scoped="" ref="0x40e7d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e7eab8" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e7eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e7ec90"/>
        <function-ref name="stop" scoped="" ref="0x40e7ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40b73810" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40b73810"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b739e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40b73ac8"/>
        <function-ref name="reset" scoped="" ref="0x40b73ba8"/>
        <function-ref name="start" scoped="" ref="0x40b73c88"/>
        <function-ref name="stop" scoped="" ref="0x40b73d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40bfcbb8" loc="47:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40bfcbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40bfcda0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40bfce80"/>
        <function-ref name="reset" scoped="" ref="0x40bfb010"/>
        <function-ref name="start" scoped="" ref="0x40bfb0f0"/>
        <function-ref name="stop" scoped="" ref="0x40bfb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x40e9d850" loc="54:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x40e9d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40e9da28"/>
        <function-ref name="clear" scoped="" ref="0x40e9db08"/>
        <function-ref name="toggle" scoped="" ref="0x40e9dbe8"/>
        <function-ref name="get" scoped="" ref="0x40e9dcc8"/>
        <function-ref name="assign" scoped="" ref="0x40e9dda8"/>
        <function-ref name="setAll" scoped="" ref="0x40e9de88"/>
        <function-ref name="set" scoped="" ref="0x40e9c010"/>
        <function-ref name="size" scoped="" ref="0x40e9c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x40e9c250" loc="55:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x40e9c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40e9c428"/>
        <function-ref name="clear" scoped="" ref="0x40e9c508"/>
        <function-ref name="toggle" scoped="" ref="0x40e9c5e8"/>
        <function-ref name="get" scoped="" ref="0x40e9c6c8"/>
        <function-ref name="assign" scoped="" ref="0x40e9c7a8"/>
        <function-ref name="setAll" scoped="" ref="0x40e9c888"/>
        <function-ref name="set" scoped="" ref="0x40e9c968"/>
        <function-ref name="size" scoped="" ref="0x40e9ca48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e9cb88" loc="56:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e9cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e9cd60"/>
        <function-ref name="rand32" scoped="" ref="0x40e9ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40ea1e98" loc="50:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40ea1e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40e9f0c0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40e9f1a0"/>
        <function-ref name="reset" scoped="" ref="0x40e9f280"/>
        <function-ref name="start" scoped="" ref="0x40e9f360"/>
        <function-ref name="stop" scoped="" ref="0x40e9f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ea1ae8" loc="49:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ea1ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ea1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x40e9bc28" loc="146:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x40e9bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e9be00"/>
        <function-ref name="runTask" scoped="" ref="0x40e9bee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e9b010" loc="57:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e9b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e9b1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e9b2c8"/>
        <function-ref name="led1On" scoped="" ref="0x40e9b3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e9b488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e9b568"/>
        <function-ref name="get" scoped="" ref="0x40e9b648"/>
        <function-ref name="led1Off" scoped="" ref="0x40e9b728"/>
        <function-ref name="led0On" scoped="" ref="0x40e9baa8"/>
        <function-ref name="set" scoped="" ref="0x40e9b8e8"/>
        <function-ref name="led2On" scoped="" ref="0x40e9b808"/>
        <function-ref name="led2Off" scoped="" ref="0x40e9b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e9f640" loc="53:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e9f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e9d170"/>
        <function-ref name="fired" scoped="" ref="0x40e9e3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e9eb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e9e8a8"/>
        <function-ref name="getdt" scoped="" ref="0x40e9d620"/>
        <function-ref name="gett0" scoped="" ref="0x40e9d3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e9e650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e9fc68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e9ee20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e9fee8"/>
        <function-ref name="stop" scoped="" ref="0x40e9e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e99648" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e99648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e96170"/>
        <function-ref name="fired" scoped="" ref="0x40e973f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e97b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e978a8"/>
        <function-ref name="getdt" scoped="" ref="0x40e96620"/>
        <function-ref name="gett0" scoped="" ref="0x40e963c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e97650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e99c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e97e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e99ef0"/>
        <function-ref name="stop" scoped="" ref="0x40e971a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e95320" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e95320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e954f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x40e95658" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x40e95658"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40e95830"/>
        <function-ref name="clear" scoped="" ref="0x40e95910"/>
        <function-ref name="toggle" scoped="" ref="0x40e959f0"/>
        <function-ref name="get" scoped="" ref="0x40e95ad0"/>
        <function-ref name="assign" scoped="" ref="0x40e95bb0"/>
        <function-ref name="setAll" scoped="" ref="0x40e95c90"/>
        <function-ref name="set" scoped="" ref="0x40e95d70"/>
        <function-ref name="size" scoped="" ref="0x40e95e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e94b40" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e94b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e94d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x40e94e78" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x40e94e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40e93070"/>
        <function-ref name="clear" scoped="" ref="0x40e93150"/>
        <function-ref name="toggle" scoped="" ref="0x40e93230"/>
        <function-ref name="get" scoped="" ref="0x40e93310"/>
        <function-ref name="assign" scoped="" ref="0x40e933f0"/>
        <function-ref name="setAll" scoped="" ref="0x40e934d0"/>
        <function-ref name="set" scoped="" ref="0x40e935b0"/>
        <function-ref name="size" scoped="" ref="0x40e93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40bc45b0" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bc45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bc4788"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bc4868"/>
        <function-ref name="led1On" scoped="" ref="0x40bc4948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bc4a28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bc4b08"/>
        <function-ref name="get" scoped="" ref="0x40bc4be8"/>
        <function-ref name="led1Off" scoped="" ref="0x40bc4cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40bc10f0"/>
        <function-ref name="set" scoped="" ref="0x40bc4da8"/>
        <function-ref name="led0On" scoped="" ref="0x40bc4e88"/>
        <function-ref name="led2On" scoped="" ref="0x40bc1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40bbea20" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40bbea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbebf8"/>
        <function-ref name="isInput" scoped="" ref="0x40bbecd8"/>
        <function-ref name="toggle" scoped="" ref="0x40bbedb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbee98"/>
        <function-ref name="get" scoped="" ref="0x40be7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be70f0"/>
        <function-ref name="set" scoped="" ref="0x40be71d0"/>
        <function-ref name="clr" scoped="" ref="0x40be72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bc1970" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bc1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bc1b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40be74a0" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40be74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be7678"/>
        <function-ref name="isInput" scoped="" ref="0x40be7758"/>
        <function-ref name="toggle" scoped="" ref="0x40be7838"/>
        <function-ref name="isOutput" scoped="" ref="0x40be7918"/>
        <function-ref name="get" scoped="" ref="0x40be79f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be7ad8"/>
        <function-ref name="set" scoped="" ref="0x40be7bb8"/>
        <function-ref name="clr" scoped="" ref="0x40be7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40bc1cb8" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bc1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bc1e90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bbe010"/>
        <function-ref name="led1On" scoped="" ref="0x40bbe0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bbe1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bbe2b0"/>
        <function-ref name="get" scoped="" ref="0x40bbe390"/>
        <function-ref name="led1Off" scoped="" ref="0x40bbe470"/>
        <function-ref name="led2Off" scoped="" ref="0x40bbe7f0"/>
        <function-ref name="set" scoped="" ref="0x40bbe550"/>
        <function-ref name="led0On" scoped="" ref="0x40bbe630"/>
        <function-ref name="led2On" scoped="" ref="0x40bbe710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40be7e88" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40be7e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be6070"/>
        <function-ref name="isInput" scoped="" ref="0x40be6150"/>
        <function-ref name="toggle" scoped="" ref="0x40be6230"/>
        <function-ref name="isOutput" scoped="" ref="0x40be6310"/>
        <function-ref name="get" scoped="" ref="0x40be63f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be64d0"/>
        <function-ref name="set" scoped="" ref="0x40be65b0"/>
        <function-ref name="clr" scoped="" ref="0x40be6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40bd6010" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40bd6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bd61e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bd62c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bd63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bd6488"/>
        <function-ref name="get" scoped="" ref="0x40bd6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bd6648"/>
        <function-ref name="set" scoped="" ref="0x40bd6728"/>
        <function-ref name="clr" scoped="" ref="0x40bd6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40bd6a18" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40bd6a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bd6bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40bd6cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40bd6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bd6e90"/>
        <function-ref name="get" scoped="" ref="0x40bd5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bd50f0"/>
        <function-ref name="set" scoped="" ref="0x40bd51d0"/>
        <function-ref name="clr" scoped="" ref="0x40bd52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40bd5e48" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bd5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40bd54c0" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40bd54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bd5698"/>
        <function-ref name="isInput" scoped="" ref="0x40bd5778"/>
        <function-ref name="toggle" scoped="" ref="0x40bd5858"/>
        <function-ref name="isOutput" scoped="" ref="0x40bd5938"/>
        <function-ref name="get" scoped="" ref="0x40bd5a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bd5af8"/>
        <function-ref name="set" scoped="" ref="0x40bd5bd8"/>
        <function-ref name="clr" scoped="" ref="0x40bd5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40bf77e8" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestDisseminationAppC.Object16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bf77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40bf7e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40bf8950" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestDisseminationAppC.Object16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40bf8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40bf7528"/>
        <function-ref name="get" scoped="" ref="0x40bf7010"/>
        <function-ref name="set" scoped="" ref="0x40bf7288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x40ecbc78" loc="62:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object16C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x40ecbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ecbe50"/>
        <function-ref name="runTask" scoped="" ref="0x40eca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x40ecc8b0" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object16C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40ecc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x40eccb68"/>
        <function-ref name="storeData" scoped="" ref="0x40eccee8"/>
        <function-ref name="newData" scoped="" ref="0x40eccc48"/>
        <function-ref name="start" scoped="" ref="0x40eccd28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40ecce08"/>
        <function-ref name="stop" scoped="" ref="0x40ecca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40eceee0" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object16C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40eceee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40ecc558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ecb060" loc="52:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object16C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ecb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ecb238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ecb318"/>
        <function-ref name="led1On" scoped="" ref="0x40ecb3f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ecb4d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ecb5b8"/>
        <function-ref name="get" scoped="" ref="0x40ecb698"/>
        <function-ref name="led1Off" scoped="" ref="0x40ecb778"/>
        <function-ref name="led0On" scoped="" ref="0x40ecbaf8"/>
        <function-ref name="set" scoped="" ref="0x40ecb938"/>
        <function-ref name="led2On" scoped="" ref="0x40ecb858"/>
        <function-ref name="led2Off" scoped="" ref="0x40ecba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40ece0c0" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object16C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40ece0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40ecec20"/>
        <function-ref name="get" scoped="" ref="0x40ece708"/>
        <function-ref name="set" scoped="" ref="0x40ece980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ed0bf0" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestDisseminationAppC.Object16C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ed0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ed0dc8"/>
        <function-ref name="stop" scoped="" ref="0x40ed0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bf44c8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TestDisseminationAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bf44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4032aea0"/>
            <typename><typedef-ref name="TMilli" ref="0x4032f0c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bf1010"/>
        <function-ref name="fired" scoped="" ref="0x40bf3268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bf3970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bf3718"/>
        <function-ref name="getdt" scoped="" ref="0x40bf14c0"/>
        <function-ref name="gett0" scoped="" ref="0x40bf1268"/>
        <function-ref name="isRunning" scoped="" ref="0x40bf34c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bf4af0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bf3c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bf4d70"/>
        <function-ref name="stop" scoped="" ref="0x40bf3010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4038a210" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403888b0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40388758" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40387730" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403875d8" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40388070" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40388dc0" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40384908" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40384dd0" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40394210" loc="40:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40394210"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x403949b8" loc="52:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40394210"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40394860" loc="52:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40394210"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4038eaf8" loc="36:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038eaf8"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x4038db10" loc="61:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4038d010" loc="47:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038eaf8"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4038d650" loc="56:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038eaf8"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x4038d4f8" loc="56:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038eaf8"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40398560" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403989a8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40398e28" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403976c0" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40396458" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40396900" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40397278" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4039e058" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40396ee8" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40398138" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40397b40" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40396010" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40391598" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40391598"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4039af00" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4039cb48" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4039bcc0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4039b978" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4039bb60" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4039b4d0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x403a2888" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x403a2358" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4039b010" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40391bf0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40391a98" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4039a8e0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4039a598" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4039a780" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4039c2b0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4039c158" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4039c780" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403b07c0" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403bb168" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403bb010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403b57b0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403b5de8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403b5c90" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403bc4c8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403bc370" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403bca20" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403c2270" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403c2658" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403c3a90" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403c2e28" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403c3e50" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403c2a30" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403c3350" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403c36e0" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402d9c70" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402dc590" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402dc0c8" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402e5550" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402e5a68" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403606d0" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40374b28" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40319520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40370ea0" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x404d8850" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404d8850"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404d89b8" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404d89b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x404e5ba8" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404d89b8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e5a50" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x404f1650" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f14f8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x404e5058" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d8ee8" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404e4170" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404d89b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f1da0" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x404e4010" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404d89b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x404c51f0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404c7c60" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404c7e78" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c5088" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404c2dd0" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c2a70" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c2c50" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404c2510" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404c5e90" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c5d38" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404c4bf8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c48a0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404c4a98" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404b0dd0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
              <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b0888" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404b0a68" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404b0c48" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404ca2a0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ca148" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x404cac70" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404cab18" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404c9c00" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c98a0" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c9a80" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404c92b8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x404c88f8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c85b8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c8798" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x404d3e78" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x404dd4e0" loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404dd388" loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x404e8720" loc="130:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x404e85c8" loc="130:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x404dfaf8" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x404de3d8" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404de010" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x404de278" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x404df4a0" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404df348" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x404e99f0" loc="107:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e9660" loc="107:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x404e9890" loc="107:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x404ddee0" loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404ddd88" loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x404dee68" loc="96:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ded10" loc="96:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x404d3848" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x404d36f0" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x404ccd68" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ccc10" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x404d69c8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d6870" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x404e2460" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e2308" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x404d9088" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404dbf08" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404d2930" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d27d8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404ce858" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404ceef0" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ced98" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404cf238" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d1eb0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404cf0d8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404d1530" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d11c8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404d13d0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404dca28" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404dc8d0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404db580" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404db250" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404db420" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404cfdd8" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404cfc80" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404d9d08" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d99a8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404d9ba8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404d75a0" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4050d238" loc="24:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4050d238"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4050a510" loc="40:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050a3b8" loc="40:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4050ded0" loc="35:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4050d238"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050dd78" loc="35:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4050d8b0" loc="29:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050d758" loc="29:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4050acb8" loc="46:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4050d238"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050a940" loc="46:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4050ab58" loc="46:/opt/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4050d238"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x4052bf08" loc="68:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x4052de28" loc="50:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x4051eb70" loc="32:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x4052d2a0" loc="37:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052d148" loc="37:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x4052a4a0" loc="73:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x4052b480" loc="56:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="timerTick" ref="0x4052a900" loc="79:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x4052d918" loc="43:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052d7c0" loc="43:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x4052b9c8" loc="62:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405262a8" loc="31:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405268b0" loc="38:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40534eb0" loc="54:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40534d58" loc="54:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0x40533358" loc="60:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40534010" loc="43:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40526ea0" loc="43:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40534708" loc="49:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405345b0" loc="49:/opt/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0x405324b0" loc="31:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40532358" loc="31:/opt/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40531010" loc="29:/opt/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4051fee0" loc="30:/opt/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051fd88" loc="30:/opt/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40523860" loc="74:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405233a8" loc="68:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40523030" loc="68:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40523248" loc="68:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40517b28" loc="38:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405179d0" loc="38:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40525a40" loc="50:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405258e8" loc="50:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405243a8" loc="57:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40524030" loc="57:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40524248" loc="57:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40517450" loc="32:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0x405253e8" loc="43:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.</short>
          <long>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405250a8" loc="43:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0x40525288" loc="43:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40524ac0" loc="63:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40524968" loc="63:/opt/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40536bf0" loc="135:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40536a98" loc="135:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40538e58" loc="124:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40538d00" loc="124:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4052ec78" loc="61:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052e928" loc="61:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4052eb18" loc="61:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4053c058" loc="79:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053dee0" loc="79:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0x40542e48" loc="172:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.</short>
          <long>&#10; Sets the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40542ae0" loc="172:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0x40542ce8" loc="172:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40542028" loc="160:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40544cb8" loc="160:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40544eb8" loc="160:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4053d9a0" loc="73:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053d848" loc="73:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405365e0" loc="129:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405362a0" loc="129:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40536480" loc="129:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4053a010" loc="92:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4053cc48" loc="92:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4053ce60" loc="92:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x40530010" loc="39:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.</short>
          <long>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x404b1978"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0x404aede0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40531db8" loc="39:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40544840" loc="155:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405446e8" loc="155:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4053d300" loc="67:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053d1a8" loc="67:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40541de8" loc="184:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40541a98" loc="184:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x40541c88" loc="184:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40539010" loc="103:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053ae70" loc="103:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4053a918" loc="98:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4053a5a0" loc="98:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4053a7b8" loc="98:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x40530e30" loc="49:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40530ad0" loc="49:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40530cd0" loc="49:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0x40542638" loc="167:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.</short>
          <long>&#10; Returns the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405424e0" loc="167:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40540450" loc="190:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405402f8" loc="190:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40544218" loc="150:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40545ea8" loc="150:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405440b8" loc="150:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4053c708" loc="85:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053c5b0" loc="85:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40538848" loc="119:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405384f8" loc="119:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405386e8" loc="119:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x40530660" loc="44:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40530508" loc="44:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405453f8" loc="140:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405450a8" loc="140:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40545298" loc="140:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40539818" loc="109:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405394f0" loc="109:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405396b8" loc="109:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4052e470" loc="55:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052e318" loc="55:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40541648" loc="179:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404b44e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405414f0" loc="179:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40540b60" loc="196:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40540a08" loc="196:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40545a28" loc="145:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405458d0" loc="145:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40538010" loc="114:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40539df0" loc="114:/opt/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x4054b790" loc="48:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x4053ff00" loc="38:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x4053fda8" loc="38:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4054b378" loc="43:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x4053f888" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x4054bc38" loc="53:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40520a50" loc="41:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405206f0" loc="41:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405208f0" loc="41:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40520ee8" loc="47:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4051cbc8" loc="31:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051ca70" loc="31:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40520220" loc="36:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405200c8" loc="36:/opt/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40528540" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405283e8" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4051be48" loc="29:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051bcf0" loc="29:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40528a38" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40527168" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40527010" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.</short>
        <long>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x40519138" loc="55:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405182e0" loc="72:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40518188" loc="72:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4051aba0" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051aa28" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x4051a558" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.</short>
          <long>&#10; Sets the length of the PHY payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051a218" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4051a3f8" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x4050fd18" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050fbc0" loc="34:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0x40519730" loc="60:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0x40519bf8" loc="66:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40598900" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40598900"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40598de0" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x405e5ce8" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x405e45a8" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x405e41a8" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x405e57f8" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x405e5490" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404b4738"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x405e5698" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4062c3c8" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4062c3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4062c530" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062c530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4062ca18" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062c530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4062b510" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4062b010" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4062b938" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40646440" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406459f8" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40635bb0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40643480" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40643010" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40645e60" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40645010" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40646dd8" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40643a48" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406438f0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40646018" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40645588" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40645430" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x406469b8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40646860" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40634bd8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40634bd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x4063e6e0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x4063e588" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40640ce8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406410f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40634bd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40641c48" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40634bd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40641af0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40634bd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406400c8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4063e158" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40641670" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40634bd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40641518" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40634bd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406404d0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406408c8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40642b98" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40642b98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x4064dad8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4064fa90" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4064f0c8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40642b98"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4064fe98" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4064c010" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4064f650" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40642b98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4064f4f8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40642b98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4064d2b8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4064d6b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4062dbc8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062dbc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40637438" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40638b08" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4063a0f8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062dbc8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406379c8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40637870" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40637e58" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4063aec0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4063aaa0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40637010" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4063a670" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062dbc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4063a518" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062dbc8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406382e8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406386e0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406dd4a8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406dd4a8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406dd610" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x406db8c8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406dc598" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406db280" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406dcf10" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          </variable>
          <variable name="dt" ref="0x406db120" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x406dca08" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x406dbd58" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406ddc40" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406ddae8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406dd610"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406dc138" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40705ec0" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40705490" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x407060c8" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40705a50" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407058f8" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40705020" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40706eb0" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407034a0" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40703348" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40706518" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40706a90" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40706938" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x406fd1f0" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40700ee0" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x406fe330" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x406fe810" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406fd6b0" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x406fecf0" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40700408" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40340618"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40340840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40700a00" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40340618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40340840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x407008a8" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40340618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40340840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x407d58a8" loc="48:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x407d5e78" loc="61:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x407d34f8" loc="68:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x407d5480" loc="37:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407d8488" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d8148" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407d8328" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x407ee190" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f0d78" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407ee010" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407f0818" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407d7168" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d7010" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407d7e00" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d7aa8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407d7ca0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40825020" loc="41:/opt/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40826eb8" loc="41:/opt/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408269d8" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40812a18" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408128c0" loc="37:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x4080c6d8" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4080c1c0" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4080c068" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40810010" loc="33:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40810a48" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4080f168" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4080f010" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x4080f5d8" loc="58:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40810550" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40811da8" loc="42:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
              <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40811c30" loc="42:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408115b8" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40811460" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404baa30"/>
                <typename><typedef-ref name="message_t" ref="0x404c77d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408743f0" loc="46:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40874298" loc="46:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40874870" loc="51:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4087a900" loc="35:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4087a7a8" loc="35:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4087ae60" loc="40:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4087ad08" loc="40:/opt/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40878238" loc="46:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408780e0" loc="46:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40876010" loc="60:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40878de0" loc="60:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40878920" loc="51:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408787c8" loc="51:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x408766e0" loc="69:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40876588" loc="69:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x4085fb78" loc="38:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4085fa20" loc="38:/opt/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404b4998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x408d3a08" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408d3560" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x408f9750" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408f9750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x408f9da0" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408f9750"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x408f9c48" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408f9750"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40939ba0" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40939ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40939d08" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40939d08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40934348" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40939d08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409341f0" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40939d08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0x4093bb88" loc="47:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0x4093a2b8" loc="53:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4093a160" loc="53:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0x4093a8b8" loc="59:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4093a760" loc="59:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0x4093b628" loc="41:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4093b4d0" loc="41:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0x4093b020" loc="33:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0x4093ccb8" loc="33:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4093cea8" loc="33:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x4093c168" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x4093c010" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4091f858" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40922f20" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40922920" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4091f3e8" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4093e010" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409372c8" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40937c78" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40937830" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409376d8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40920d58" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x409c7788" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x409c7218" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x409c7430" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409c7620" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409c5dd0" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x409c5650" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x409c5868" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409c5a58" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409c5c60" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0x409df348" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x409d9a38" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x409dcb80" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x409d8058" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x409d9ec8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x409e2ed8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x409dbb30" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x409db9d8" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x409ddd98" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x409ddc40" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x409dfbd8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x409d6168" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x409d6010" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x409dc210" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x409d89e0" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x409d8888" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x409d72c8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x409d95f0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x409d9498" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x409d7b90" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x409db168" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x409db010" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409dd188" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409dd030" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x409dc760" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x409dc608" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x409d9010" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x409d8480" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x409d8df0" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x409d7720" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x409db5a0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x409df770" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x409dd750" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409dd5f8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409e0ee8" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x409f43f8" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a0b660" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a0bb48" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40a48458" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a48a30" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40a46750" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a46290" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40a3f058" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a49a18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a40ed8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a49a18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a43cc8" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40a40398" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a49a18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a40240" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a49a18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a40948" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40a49a18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x40ac5d20" loc="82:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x40ac5920" loc="77:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40ac5478" loc="72:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40acbb48" loc="60:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac5070" loc="66:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x40ac95f0" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40ac9478" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x40ac81d0" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ac9c30" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40ac9e20" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40033708"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x40ac8068" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x40ac8990" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x40accc70" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x40ac85f8" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40034400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x40ac9070" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402e1010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x40b8c630" loc="34:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40b89b70" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40b89a18" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40b88168" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40b88010" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b89010" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40b8ce90" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x40b88910" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40b885d0" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40b887b0" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402da010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40b8ca38" loc="39:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b895c0" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40b89468" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40b88d90" loc="77:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40033d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
